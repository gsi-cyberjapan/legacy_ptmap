// Merged JavaScript generated on 2014-10-31
//
// @source = deprecated.js
//
/**
 * @requires OpenLayers/BaseTypes/Class.js
 * @requires OpenLayers/Util.js
 * @requires OpenLayers/Control.js
 * @requires OpenLayers/Format.js
 * @requires OpenLayers/Request.js
 * @requires OpenLayers/Layer/WMS.js
 * @requires OpenLayers/Layer/MapServer.js
 * @requires OpenLayers/Tile.js
 * @requires OpenLayers/Request/XMLHttpRequest.js
 * @requires OpenLayers/Layer/Vector.js
 * @requires OpenLayers/Layer/Markers.js
 * @requires OpenLayers/Console.js
 * @requires OpenLayers/Lang.js
 * @requires OpenLayers/Feature.js
 * @requires OpenLayers/Layer/EventPane.js
 * @requires OpenLayers/Layer/FixedZoomLevels.js
 * @requires OpenLayers/Layer/SphericalMercator.js
 * @requires OpenLayers/Protocol.js
 * @requires OpenLayers/Format/JSON.js
 * @requires OpenLayers/Format/WKT.js
 * @requires OpenLayers/Format/XML.js
 * @requires OpenLayers/Geometry.js
 * @requires OpenLayers/Renderer/Elements.js
 * @requires OpenLayers/Popup/Anchored.js
 * @requires Rico/Corner.js
 */

/**
 * About: Deprecated
 * The deprecated.js script includes all methods, properties, and constructors
 * that are not supported as part of the long-term API.  If you use any of
 * these, you have to explicitly include this script in your application.
 *
 * For example:
 * (code)
 *     <script src="deprecated.js" type="text/javascript"></script>
 * (end)
 *
 * You are strongly encouraged to avoid using deprecated functionality.  The
 * documentation here should point you to the supported alternatives.
 */

/**
 * Namespace: OpenLayers.Class
 */

/**
 * Property: isPrototype
 * *Deprecated*.  This is no longer needed and will be removed at 3.0.
 */
OpenLayers.Class.isPrototype = function () {};

/**
 * APIFunction: OpenLayers.create
 * *Deprecated*.  Old method to create an OpenLayers style class.  Use the
 *     <OpenLayers.Class> constructor instead.
 *
 * Returns:
 * An OpenLayers class
 */
OpenLayers.Class.create = function() {
    return function() {
        if (arguments && arguments[0] != OpenLayers.Class.isPrototype) {
            this.initialize.apply(this, arguments);
        }
    };
};

/**
 * APIFunction: inherit
 * *Deprecated*.  Old method to inherit from one or more OpenLayers style
 *     classes.  Use the <OpenLayers.Class> constructor instead.
 *
 * Parameters:
 * class - One or more classes can be provided as arguments
 *
 * Returns:
 * An object prototype
 */
OpenLayers.Class.inherit = function (P) {
    var C = function() {
       P.call(this);
    };
    var newArgs = [C].concat(Array.prototype.slice.call(arguments));
    OpenLayers.inherit.apply(null, newArgs);
    return C.prototype;
};

/**
 * Namespace: OpenLayers.Util
 */

/**
 * Function: clearArray
 * *Deprecated*. This function will disappear in 3.0.
 * Please use "array.length = 0" instead.
 * 
 * Parameters:
 * array - {Array}
 */
OpenLayers.Util.clearArray = function(array) {
    OpenLayers.Console.warn(
        OpenLayers.i18n(
            "methodDeprecated", {'newMethod': 'array = []'}
        )
    );
    array.length = 0;
};

/**
 * Function: setOpacity
 * *Deprecated*.  This function has been deprecated. Instead, please use 
 *     <OpenLayers.Util.modifyDOMElement> 
 *     or 
 *     <OpenLayers.Util.modifyAlphaImageDiv>
 * 
 * Set the opacity of a DOM Element
 *     Note that for this function to work in IE, elements must "have layout"
 *     according to:
 *     http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/haslayout.asp
 *
 * Parameters:
 * element - {DOMElement} Set the opacity on this DOM element
 * opacity - {Float} Opacity value (0.0 - 1.0)
 */
OpenLayers.Util.setOpacity = function(element, opacity) {
    OpenLayers.Util.modifyDOMElement(element, null, null, null,
                                     null, null, null, opacity);
};

/**
 * Function: safeStopPropagation
 * *Deprecated*. This function has been deprecated. Please use directly 
 *     <OpenLayers.Event.stop> passing 'true' as the 2nd 
 *     argument (preventDefault)
 * 
 * Safely stop the propagation of an event *without* preventing
 *   the default browser action from occurring.
 * 
 * Parameters:
 * evt - {Event}
 */
OpenLayers.Util.safeStopPropagation = function(evt) {
    OpenLayers.Event.stop(evt, true);
};

/**
 * Function: getArgs
 * *Deprecated*.  Will be removed in 3.0.  Please use instead
 *     <OpenLayers.Util.getParameters>
 * 
 * Parameters:
 * url - {String} Optional url used to extract the query string.
 *                If null, query string is taken from page location.
 * 
 * Returns:
 * {Object} An object of key/value pairs from the query string.
 */
OpenLayers.Util.getArgs = function(url) {
    OpenLayers.Console.warn(
        OpenLayers.i18n(
            "methodDeprecated", {'newMethod': 'OpenLayers.Util.getParameters'}
        )
    );
    return OpenLayers.Util.getParameters(url);
};

/** 
 * Maintain existing definition of $.
 * 
 * The use of our $-method is deprecated and the mapping of 
 * OpenLayers.Util.getElement will eventually be removed. Do not depend on 
 * window.$ being defined by OpenLayers.
 */
if(typeof window.$  === "undefined") {
    window.$ = OpenLayers.Util.getElement;
}

/**
 * Namespace: OpenLayers.Ajax
 */

/**
 * Function: OpenLayers.nullHandler
 * @param {} request
 */
OpenLayers.nullHandler = function(request) {
    OpenLayers.Console.userError(OpenLayers.i18n("unhandledRequest", {'statusText':request.statusText}));
};

/** 
 * APIFunction: OpenLayers.loadURL
 * Background load a document.
 * *Deprecated*.  Use <OpenLayers.Request.GET> method instead.
 *
 * Parameters:
 * uri - {String} URI of source doc
 * params - {String} or {Object} GET params. Either a string in the form
 *     "?hello=world&foo=bar" (do not forget the leading question mark)
 *     or an object in the form {'hello': 'world', 'foo': 'bar}
 * caller - {Object} object which gets callbacks
 * onComplete - {Function} Optional callback for success.  The callback
 *     will be called with this set to caller and will receive the request
 *     object as an argument.  Note that if you do not specify an onComplete
 *     function, <OpenLayers.nullHandler> will be called (which pops up a 
 *     user friendly error message dialog).
 * onFailure - {Function} Optional callback for failure.  In the event of
 *     a failure, the callback will be called with this set to caller and will
 *     receive the request object as an argument.  Note that if you do not
 *     specify an onComplete function, <OpenLayers.nullHandler> will be called
 *     (which pops up a user friendly error message dialog).
 *
 * Returns:
 * {<OpenLayers.Request.XMLHttpRequest>}  The request object. To abort loading,
 *     call request.abort().
 */
OpenLayers.loadURL = function(uri, params, caller,
                                  onComplete, onFailure) {
    
    if(typeof params == 'string') {
        params = OpenLayers.Util.getParameters(params);
    }
    var success = (onComplete) ? onComplete : OpenLayers.nullHandler;
    var failure = (onFailure) ? onFailure : OpenLayers.nullHandler;
    
    return OpenLayers.Request.GET({
        url: uri, params: params,
        success: success, failure: failure, scope: caller
    });
};

/** 
 * Function: OpenLayers.parseXMLString
 * Parse XML into a doc structure
 * 
 * Parameters:
 * text - {String} 
 * 
 * Returns:
 * {?} Parsed AJAX Responsev
 */
OpenLayers.parseXMLString = function(text) {

    //MS sucks, if the server is bad it dies
    var index = text.indexOf('<');
    if (index > 0) {
        text = text.substring(index);
    }

    var ajaxResponse = OpenLayers.Util.Try(
        function() {
            var xmldom = new ActiveXObject('Microsoft.XMLDOM');
            xmldom.loadXML(text);
            return xmldom;
        },
        function() {
            return new DOMParser().parseFromString(text, 'text/xml');
        },
        function() {
            var req = new XMLHttpRequest();
            req.open("GET", "data:" + "text/xml" +
                     ";charset=utf-8," + encodeURIComponent(text), false);
            if (req.overrideMimeType) {
                req.overrideMimeType("text/xml");
            }
            req.send(null);
            return req.responseXML;
        }
    );

    return ajaxResponse;
};

OpenLayers.Ajax = {

    /**
     * Method: emptyFunction
     */
    emptyFunction: function () {},

    /**
     * Method: getTransport
     * 
     * Returns: 
     * {Object} Transport mechanism for whichever browser we're in, or false if
     *          none available.
     */
    getTransport: function() {
        return OpenLayers.Util.Try(
            function() {return new XMLHttpRequest();},
            function() {return new ActiveXObject('Msxml2.XMLHTTP');},
            function() {return new ActiveXObject('Microsoft.XMLHTTP');}
        ) || false;
    },

    /**
     * Property: activeRequestCount
     * {Integer}
     */
    activeRequestCount: 0
};

/**
 * Namespace: OpenLayers.Ajax.Responders
 * {Object}
 */
OpenLayers.Ajax.Responders = {
  
    /**
     * Property: responders
     * {Array}
     */
    responders: [],

    /**
     * Method: register
     *  
     * Parameters:
     * responderToAdd - {?}
     */
    register: function(responderToAdd) {
        for (var i = 0; i < this.responders.length; i++){
            if (responderToAdd == this.responders[i]){
                return;
            }
        }
        this.responders.push(responderToAdd);
    },

    /**
     * Method: unregister
     *  
     * Parameters:
     * responderToRemove - {?}
     */
    unregister: function(responderToRemove) {
        OpenLayers.Util.removeItem(this.reponders, responderToRemove);
    },

    /**
     * Method: dispatch
     * 
     * Parameters:
     * callback - {?}
     * request - {?}
     * transport - {?}
     */
    dispatch: function(callback, request, transport) {
        var responder;
        for (var i = 0; i < this.responders.length; i++) {
            responder = this.responders[i];
     
            if (responder[callback] && 
                typeof responder[callback] == 'function') {
                try {
                    responder[callback].apply(responder, 
                                              [request, transport]);
                } catch (e) {}
            }
        }
    }
};

OpenLayers.Ajax.Responders.register({
    /** 
     * Function: onCreate
     */
    onCreate: function() {
        OpenLayers.Ajax.activeRequestCount++;
    },

    /**
     * Function: onComplete
     */
     onComplete: function() {
         OpenLayers.Ajax.activeRequestCount--;
     }
});

/**
 * Class: OpenLayers.Ajax.Base
 */
OpenLayers.Ajax.Base = OpenLayers.Class({
      
    /**
     * Constructor: OpenLayers.Ajax.Base
     * 
     * Parameters: 
     * options - {Object}
     */
    initialize: function(options) {
        this.options = {
            method:       'post',
            asynchronous: true,
            contentType:  'application/xml',
            parameters:   ''
        };
        OpenLayers.Util.extend(this.options, options || {});
        
        this.options.method = this.options.method.toLowerCase();
        
        if (typeof this.options.parameters == 'string') {
            this.options.parameters = 
                OpenLayers.Util.getParameters(this.options.parameters);
        }
    }
});

/**
 * Class: OpenLayers.Ajax.Request
 * *Deprecated*.  Use <OpenLayers.Request> method instead.
 *
 * Inherit:
 *  - <OpenLayers.Ajax.Base>
 */
OpenLayers.Ajax.Request = OpenLayers.Class(OpenLayers.Ajax.Base, {

    /**
     * Property: _complete
     *
     * {Boolean}
     */
    _complete: false,
      
    /**
     * Constructor: OpenLayers.Ajax.Request
     * 
     * Parameters: 
     * url - {String}
     * options - {Object}
     */
    initialize: function(url, options) {
        OpenLayers.Ajax.Base.prototype.initialize.apply(this, [options]);
        
        if (OpenLayers.ProxyHost && OpenLayers.String.startsWith(url, "http")) {
            url = OpenLayers.ProxyHost + encodeURIComponent(url);
        }
        
        this.transport = OpenLayers.Ajax.getTransport();
        this.request(url);
    },

    /**
     * Method: request
     * 
     * Parameters:
     * url - {String}
     */
    request: function(url) {
        this.url = url;
        this.method = this.options.method;
        var params = OpenLayers.Util.extend({}, this.options.parameters);
        
        if (this.method != 'get' && this.method != 'post') {
            // simulate other verbs over post
            params['_method'] = this.method;
            this.method = 'post';
        }

        this.parameters = params;        
        
        if (params = OpenLayers.Util.getParameterString(params)) {
            // when GET, append parameters to URL
            if (this.method == 'get') {
                this.url += ((this.url.indexOf('?') > -1) ? '&' : '?') + params;
            } else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent)) {
                params += '&_=';
            }
        }
        try {
            var response = new OpenLayers.Ajax.Response(this);
            if (this.options.onCreate) {
                this.options.onCreate(response);
            }
            
            OpenLayers.Ajax.Responders.dispatch('onCreate', 
                                                this, 
                                                response);
    
            this.transport.open(this.method.toUpperCase(), 
                                this.url,
                                this.options.asynchronous);
    
            if (this.options.asynchronous) {
                window.setTimeout(
                    OpenLayers.Function.bind(this.respondToReadyState, this, 1),
                    10);
            }
            
            this.transport.onreadystatechange = 
                OpenLayers.Function.bind(this.onStateChange, this);    
            this.setRequestHeaders();
    
            this.body =  this.method == 'post' ?
                (this.options.postBody || params) : null;
            this.transport.send(this.body);
    
            // Force Firefox to handle ready state 4 for synchronous requests
            if (!this.options.asynchronous && 
                this.transport.overrideMimeType) {
                this.onStateChange();
            }
        } catch (e) {
            this.dispatchException(e);
        }
    },

    /**
     * Method: onStateChange
     */
    onStateChange: function() {
        var readyState = this.transport.readyState;
        if (readyState > 1 && !((readyState == 4) && this._complete)) {
            this.respondToReadyState(this.transport.readyState);
        }
    },
     
    /**
     * Method: setRequestHeaders
     */
    setRequestHeaders: function() {
        var headers = {
            'X-Requested-With': 'XMLHttpRequest',
            'Accept': 'text/javascript, text/html, application/xml, text/xml, */*',
            'OpenLayers': true
        };

        if (this.method == 'post') {
            headers['Content-type'] = this.options.contentType +
                (this.options.encoding ? '; charset=' + this.options.encoding : '');
    
            /* Force "Connection: close" for older Mozilla browsers to work
             * around a bug where XMLHttpRequest sends an incorrect
             * Content-length header. See Mozilla Bugzilla #246651.
             */
            if (this.transport.overrideMimeType &&
                (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < 2005) {
                headers['Connection'] = 'close';
            }
        }
        // user-defined headers
        if (typeof this.options.requestHeaders == 'object') {    
            var extras = this.options.requestHeaders;
            
            if (typeof extras.push == 'function') {
                for (var i = 0, length = extras.length; i < length; i += 2) {
                    headers[extras[i]] = extras[i+1];
                }
            } else {
                for (var i in extras) {
                    headers[i] = extras[i];
                }
            }
        }
        
        for (var name in headers) {
            this.transport.setRequestHeader(name, headers[name]);
        }
    },
    
    /**
     * Method: success
     *
     * Returns:
     * {Boolean} - 
     */
    success: function() {
        var status = this.getStatus();
        return !status || (status >=200 && status < 300);
    },
    
    /**
     * Method: getStatus
     *
     * Returns:
     * {Integer} - Status
     */
    getStatus: function() {
        try {
            return this.transport.status || 0;
        } catch (e) {
            return 0;
        }
    },

    /**
     * Method: respondToReadyState
     *
     * Parameters:
     * readyState - {?}
     */
    respondToReadyState: function(readyState) {
        var state = OpenLayers.Ajax.Request.Events[readyState];
        var response = new OpenLayers.Ajax.Response(this);
    
        if (state == 'Complete') {
            try {
                this._complete = true;
                (this.options['on' + response.status] ||
                    this.options['on' + (this.success() ? 'Success' : 'Failure')] ||
                    OpenLayers.Ajax.emptyFunction)(response);
            } catch (e) {
                this.dispatchException(e);
            }
    
            var contentType = response.getHeader('Content-type');
        }
    
        try {
            (this.options['on' + state] || 
             OpenLayers.Ajax.emptyFunction)(response);
             OpenLayers.Ajax.Responders.dispatch('on' + state, 
                                                 this, 
                                                 response);
        } catch (e) {
            this.dispatchException(e);
        }
    
        if (state == 'Complete') {
            // avoid memory leak in MSIE: clean up
            this.transport.onreadystatechange = OpenLayers.Ajax.emptyFunction;
        }
    },
    
    /**
     * Method: getHeader
     * 
     * Parameters:
     * name - {String} Header name
     *
     * Returns:
     * {?} - response header for the given name
     */
    getHeader: function(name) {
        try {
            return this.transport.getResponseHeader(name);
        } catch (e) {
            return null;
        }
    },

    /**
     * Method: dispatchException
     * If the optional onException function is set, execute it
     * and then dispatch the call to any other listener registered
     * for onException.
     * 
     * If no optional onException function is set, we suspect that
     * the user may have also not used
     * OpenLayers.Ajax.Responders.register to register a listener
     * for the onException call.  To make sure that something
     * gets done with this exception, only dispatch the call if there
     * are listeners.
     *
     * If you explicitly want to swallow exceptions, set
     * request.options.onException to an empty function (function(){})
     * or register an empty function with <OpenLayers.Ajax.Responders>
     * for onException.
     * 
     * Parameters:
     * exception - {?}
     */
    dispatchException: function(exception) {
        var handler = this.options.onException;
        if(handler) {
            // call options.onException and alert any other listeners
            handler(this, exception);
            OpenLayers.Ajax.Responders.dispatch('onException', this, exception);
        } else {
            // check if there are any other listeners
            var listener = false;
            var responders = OpenLayers.Ajax.Responders.responders;
            for (var i = 0; i < responders.length; i++) {
                if(responders[i].onException) {
                    listener = true;
                    break;
                }
            }
            if(listener) {
                // call all listeners
                OpenLayers.Ajax.Responders.dispatch('onException', this, exception);
            } else {
                // let the exception through
                throw exception;
            }
        }
    }
});

/** 
 * Property: Events
 * {Array(String)}
 */
OpenLayers.Ajax.Request.Events =
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];

/**
 * Class: OpenLayers.Ajax.Response
 */
OpenLayers.Ajax.Response = OpenLayers.Class({

    /**
     * Property: status
     *
     * {Integer}
     */
    status: 0,
    

    /**
     * Property: statusText
     *
     * {String}
     */
    statusText: '',
      
    /**
     * Constructor: OpenLayers.Ajax.Response
     * 
     * Parameters: 
     * request - {Object}
     */
    initialize: function(request) {
        this.request = request;
        var transport = this.transport = request.transport,
            readyState = this.readyState = transport.readyState;
        
        if ((readyState > 2 &&
            !(!!(window.attachEvent && !window.opera))) ||
            readyState == 4) {
            this.status       = this.getStatus();
            this.statusText   = this.getStatusText();
            this.responseText = transport.responseText == null ?
                '' : String(transport.responseText);
        }
        
        if(readyState == 4) {
            var xml = transport.responseXML;
            this.responseXML  = xml === undefined ? null : xml;
        }
    },
    
    /**
     * Method: getStatus
     */
    getStatus: OpenLayers.Ajax.Request.prototype.getStatus,
    
    /**
     * Method: getStatustext
     *
     * Returns:
     * {String} - statusText
     */
    getStatusText: function() {
        try {
            return this.transport.statusText || '';
        } catch (e) {
            return '';
        }
    },
    
    /**
     * Method: getHeader
     */
    getHeader: OpenLayers.Ajax.Request.prototype.getHeader,
    
    /** 
     * Method: getResponseHeader
     *
     * Returns:
     * {?} - response header for given name
     */
    getResponseHeader: function(name) {
        return this.transport.getResponseHeader(name);
    }
});


/**
 * Function: getElementsByTagNameNS
 * 
 * Parameters:
 * parentnode - {?}
 * nsuri - {?}
 * nsprefix - {?}
 * tagname - {?}
 * 
 * Returns:
 * {?}
 */
OpenLayers.Ajax.getElementsByTagNameNS  = function(parentnode, nsuri, 
                                                   nsprefix, tagname) {
    var elem = null;
    if (parentnode.getElementsByTagNameNS) {
        elem = parentnode.getElementsByTagNameNS(nsuri, tagname);
    } else {
        elem = parentnode.getElementsByTagName(nsprefix + ':' + tagname);
    }
    return elem;
};


/**
 * Function: serializeXMLToString
 * Wrapper function around XMLSerializer, which doesn't exist/work in
 *     IE/Safari. We need to come up with a way to serialize in those browser:
 *     for now, these browsers will just fail. #535, #536
 *
 * Parameters: 
 * xmldom {XMLNode} xml dom to serialize
 * 
 * Returns:
 * {?}
 */
OpenLayers.Ajax.serializeXMLToString = function(xmldom) {
    var serializer = new XMLSerializer();
    var data = serializer.serializeToString(xmldom);
    return data;
};

/**
 * Namespace: OpenLayers.Element
 */
OpenLayers.Util.extend(OpenLayers.Element, {

    /**
     * APIFunction: hide
     * *Deprecated*. Hide element(s) passed in
     * 
     * Parameters:
     * element - {DOMElement} Actually user can pass any number of elements
     */
    hide: function() {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated", {
            newMethod: "element.style.display = 'none';"
        }));

        for (var i=0, len=arguments.length; i<len; i++) {
            var element = OpenLayers.Util.getElement(arguments[i]);
            if (element) {
                element.style.display = 'none';
            }
        }
    },

    /**
     * APIFunction: show
     * *Deprecated*. Show element(s) passed in
     * 
     * Parameters:
     * element - {DOMElement} Actually user can pass any number of elements
     */
    show: function() {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated", {
            newMethod: "element.style.display = '';"
        }));

        for (var i=0, len=arguments.length; i<len; i++) {
            var element = OpenLayers.Util.getElement(arguments[i]);
            if (element) {
                element.style.display = '';
            }
        }
    },

    /**
     * APIFunction: getDimensions
     * *Deprecated*. Returns dimensions of the element passed in.
     *  
     * Parameters:
     * element - {DOMElement}
     * 
     * Returns:
     * {Object} Object with 'width' and 'height' properties which are the 
     *          dimensions of the element passed in.
     */
    getDimensions: function(element) {
        element = OpenLayers.Util.getElement(element);
        if (OpenLayers.Element.getStyle(element, 'display') != 'none') {
            return {width: element.offsetWidth, height: element.offsetHeight};
        }
    
        // All *Width and *Height properties give 0 on elements with display none,
        // so enable the element temporarily
        var els = element.style;
        var originalVisibility = els.visibility;
        var originalPosition = els.position;
        var originalDisplay = els.display;
        els.visibility = 'hidden';
        els.position = 'absolute';
        els.display = '';
        var originalWidth = element.clientWidth;
        var originalHeight = element.clientHeight;
        els.display = originalDisplay;
        els.position = originalPosition;
        els.visibility = originalVisibility;
        return {width: originalWidth, height: originalHeight};
    }
    
});

if (!String.prototype.startsWith) {
    /**
     * APIMethod: String.startsWith
     * *Deprecated*. Whether or not a string starts with another string. 
     * 
     * Parameters:
     * sStart - {String} The string we're testing for.
     *  
     * Returns:
     * {Boolean} Whether or not this string starts with the string passed in.
     */
    String.prototype.startsWith = function(sStart) {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",
                                {'newMethod':'OpenLayers.String.startsWith'}));
        return OpenLayers.String.startsWith(this, sStart);
    };
}

if (!String.prototype.contains) {
    /**
     * APIMethod: String.contains
     * *Deprecated*. Whether or not a string contains another string.
     * 
     * Parameters:
     * str - {String} The string that we're testing for.
     * 
     * Returns:
     * {Boolean} Whether or not this string contains with the string passed in.
     */
    String.prototype.contains = function(str) {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",
                                  {'newMethod':'OpenLayers.String.contains'}));
        return OpenLayers.String.contains(this, str);
    };
}

if (!String.prototype.trim) {
    /**
     * APIMethod: String.trim
     * *Deprecated*. Removes leading and trailing whitespace characters from a string.
     * 
     * Returns:
     * {String} A trimmed version of the string - all leading and 
     *          trailing spaces removed
     */
    String.prototype.trim = function() {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",
                                      {'newMethod':'OpenLayers.String.trim'}));
        return OpenLayers.String.trim(this);
    };
}

if (!String.prototype.camelize) {
    /**
     * APIMethod: String.camelize
     * *Deprecated*. Camel-case a hyphenated string. 
     *     Ex. "chicken-head" becomes "chickenHead", and
     *     "-chicken-head" becomes "ChickenHead".
     * 
     * Returns:
     * {String} The string, camelized
     */
    String.prototype.camelize = function() {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",
                                  {'newMethod':'OpenLayers.String.camelize'}));
        return OpenLayers.String.camelize(this);
    };
}

if (!Function.prototype.bind) {
    /**
     * APIMethod: Function.bind
     * *Deprecated*. Bind a function to an object. 
     * Method to easily create closures with 'this' altered.
     * 
     * Parameters:
     * object - {Object} the this parameter
     * 
     * Returns:
     * {Function} A closure with 'this' altered to the first
     *            argument.
     */
    Function.prototype.bind = function() {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",
                                {'newMethod':'OpenLayers.Function.bind'}));
        // new function takes the same arguments with this function up front
        Array.prototype.unshift.apply(arguments, [this]);
        return OpenLayers.Function.bind.apply(null, arguments);
    };
}

if (!Function.prototype.bindAsEventListener) {
    /**
     * APIMethod: Function.bindAsEventListener
     * *Deprecated*. Bind a function to an object, and configure it to receive the
     *     event object as first parameter when called. 
     * 
     * Parameters:
     * object - {Object} A reference to this.
     * 
     * Returns:
     * {Function}
     */
    Function.prototype.bindAsEventListener = function(object) {
        OpenLayers.Console.warn(OpenLayers.i18n("methodDeprecated",
                        {'newMethod':'OpenLayers.Function.bindAsEventListener'}));
        return OpenLayers.Function.bindAsEventListener(this, object);
    };
}

// FIXME: Remove this in 3.0. In 3.0, Event.stop will no longer be provided
// by OpenLayers.
if (window.Event) {
    OpenLayers.Util.applyDefaults(window.Event, OpenLayers.Event);
} else {
    var Event = OpenLayers.Event;
}

/**
 * Namespace: OpenLayers.Tile
 */
OpenLayers.Util.extend(OpenLayers.Tile.prototype, {
    /**   
     * Method: getBoundsFromBaseLayer
     * Take the pixel locations of the corner of the tile, and pass them to 
     *     the base layer and ask for the location of those pixels, so that 
     *     displaying tiles over Google works fine.
     *
     * Parameters:
     * position - {<OpenLayers.Pixel>}
     *
     * Returns:
     * bounds - {<OpenLayers.Bounds>} 
     */
    getBoundsFromBaseLayer: function(position) {
        var msg = OpenLayers.i18n('reprojectDeprecated',
                                              {'layerName':this.layer.name});
        OpenLayers.Console.warn(msg);
        var topLeft = this.layer.map.getLonLatFromLayerPx(position); 
        var bottomRightPx = position.clone();
        bottomRightPx.x += this.size.w;
        bottomRightPx.y += this.size.h;
        var bottomRight = this.layer.map.getLonLatFromLayerPx(bottomRightPx); 
        // Handle the case where the base layer wraps around the date line.
        // Google does this, and it breaks WMS servers to request bounds in 
        // that fashion.  
        if (topLeft.lon > bottomRight.lon) {
            if (topLeft.lon < 0) {
                topLeft.lon = -180 - (topLeft.lon+180);
            } else {
                bottomRight.lon = 180+bottomRight.lon+180;
            }        
        }
        var bounds = new OpenLayers.Bounds(topLeft.lon, 
                                       bottomRight.lat, 
                                       bottomRight.lon, 
                                       topLeft.lat);  
        return bounds;
    }    
});

/**
 * Class: OpenLayers.Control.MouseDefaults
 * This class is DEPRECATED in 2.4 and will be removed by 3.0.
 * If you need this functionality, use <OpenLayers.Control.Navigation> 
 * instead!!!
 *
 * Inherits from:
 *  - <OpenLayers.Control>
 */
OpenLayers.Control.MouseDefaults = OpenLayers.Class(OpenLayers.Control, {

    /** WARNING WARNING WARNING!!!
        This class is DEPRECATED in 2.4 and will be removed by 3.0.
        If you need this functionality, use Control.Navigation instead!!! */

    /** 
     * Property: performedDrag
     * {Boolean}
     */
    performedDrag: false,

    /** 
     * Property: wheelObserver 
     * {Function}
     */
    wheelObserver: null,

    /** 
     * Constructor: OpenLayers.Control.MouseDefaults
     */
    initialize: function() {
        OpenLayers.Control.prototype.initialize.apply(this, arguments);
    },

    /**
     * APIMethod: destroy
     */    
    destroy: function() {
        
        if (this.handler) {
            this.handler.destroy();
        }
        this.handler = null;

        this.map.events.un({
            "click": this.defaultClick,
            "dblclick": this.defaultDblClick,
            "mousedown": this.defaultMouseDown,
            "mouseup": this.defaultMouseUp,
            "mousemove": this.defaultMouseMove,
            "mouseout": this.defaultMouseOut,
            scope: this
        });

        //unregister mousewheel events specifically on the window and document
        OpenLayers.Event.stopObserving(window, "DOMMouseScroll", 
                                        this.wheelObserver);
        OpenLayers.Event.stopObserving(window, "mousewheel", 
                                        this.wheelObserver);
        OpenLayers.Event.stopObserving(document, "mousewheel", 
                                        this.wheelObserver);
        this.wheelObserver = null;
                      
        OpenLayers.Control.prototype.destroy.apply(this, arguments);        
    },

    /**
     * Method: draw
     */
    draw: function() {
        this.map.events.on({
            "click": this.defaultClick,
            "dblclick": this.defaultDblClick,
            "mousedown": this.defaultMouseDown,
            "mouseup": this.defaultMouseUp,
            "mousemove": this.defaultMouseMove,
            "mouseout": this.defaultMouseOut,
            scope: this
        });

        this.registerWheelEvents();

    },

    /**
     * Method: registerWheelEvents
     */
    registerWheelEvents: function() {

        this.wheelObserver = OpenLayers.Function.bindAsEventListener(
            this.onWheelEvent, this
        );
        
        //register mousewheel events specifically on the window and document
        OpenLayers.Event.observe(window, "DOMMouseScroll", this.wheelObserver);
        OpenLayers.Event.observe(window, "mousewheel", this.wheelObserver);
        OpenLayers.Event.observe(document, "mousewheel", this.wheelObserver);
    },

    /**
     * Method: defaultClick
     * 
     * Parameters:
     * evt - {Event} 
     *
     * Returns:
     * {Boolean}
     */
    defaultClick: function (evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        var notAfterDrag = !this.performedDrag;
        this.performedDrag = false;
        return notAfterDrag;
    },

    /**
     * Method: defaultDblClick
     * 
     * Parameters:
     * evt - {Event} 
     */
    defaultDblClick: function (evt) {
        var newCenter = this.map.getLonLatFromViewPortPx( evt.xy ); 
        this.map.setCenter(newCenter, this.map.zoom + 1);
        OpenLayers.Event.stop(evt);
        return false;
    },

    /**
     * Method: defaultMouseDown
     * 
     * Parameters:
     * evt - {Event} 
     */
    defaultMouseDown: function (evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        this.mouseDragStart = evt.xy.clone();
        this.performedDrag  = false;
        if (evt.shiftKey) {
            this.map.div.style.cursor = "crosshair";
            this.zoomBox = OpenLayers.Util.createDiv('zoomBox',
                                                     this.mouseDragStart,
                                                     null,
                                                     null,
                                                     "absolute",
                                                     "2px solid red");
            this.zoomBox.style.backgroundColor = "white";
            this.zoomBox.style.filter = "alpha(opacity=50)"; // IE
            this.zoomBox.style.opacity = "0.50";
            this.zoomBox.style.fontSize = "1px";
            this.zoomBox.style.zIndex = this.map.Z_INDEX_BASE["Popup"] - 1;
            this.map.viewPortDiv.appendChild(this.zoomBox);
        }
        document.onselectstart = OpenLayers.Function.False;
        OpenLayers.Event.stop(evt);
    },

    /**
     * Method: defaultMouseMove
     *
     * Parameters:
     * evt - {Event} 
     */
    defaultMouseMove: function (evt) {
        // record the mouse position, used in onWheelEvent
        this.mousePosition = evt.xy.clone();

        if (this.mouseDragStart != null) {
            if (this.zoomBox) {
                var deltaX = Math.abs(this.mouseDragStart.x - evt.xy.x);
                var deltaY = Math.abs(this.mouseDragStart.y - evt.xy.y);
                this.zoomBox.style.width = Math.max(1, deltaX) + "px";
                this.zoomBox.style.height = Math.max(1, deltaY) + "px";
                if (evt.xy.x < this.mouseDragStart.x) {
                    this.zoomBox.style.left = evt.xy.x+"px";
                }
                if (evt.xy.y < this.mouseDragStart.y) {
                    this.zoomBox.style.top = evt.xy.y+"px";
                }
            } else {
                var deltaX = this.mouseDragStart.x - evt.xy.x;
                var deltaY = this.mouseDragStart.y - evt.xy.y;
                var size = this.map.getSize();
                var newXY = new OpenLayers.Pixel(size.w / 2 + deltaX,
                                                 size.h / 2 + deltaY);
                var newCenter = this.map.getLonLatFromViewPortPx( newXY ); 
                this.map.setCenter(newCenter, null, true);
                this.mouseDragStart = evt.xy.clone();
                this.map.div.style.cursor = "move";
            }
            this.performedDrag = true;
        }
    },

    /**
     * Method: defaultMouseUp
     * 
     * Parameters:
     * evt - {<OpenLayers.Event>} 
     */
    defaultMouseUp: function (evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        if (this.zoomBox) {
            this.zoomBoxEnd(evt);    
        } else {
            if (this.performedDrag) {
                this.map.setCenter(this.map.center);
            }
        }
        document.onselectstart=null;
        this.mouseDragStart = null;
        this.map.div.style.cursor = "";
    },

    /**
     * Method: defaultMouseOut
     * 
     * Parameters:
     * evt - {Event} 
     */
    defaultMouseOut: function (evt) {
        if (this.mouseDragStart != null && 
            OpenLayers.Util.mouseLeft(evt, this.map.viewPortDiv)) {
            if (this.zoomBox) {
                this.removeZoomBox();
            }
            this.mouseDragStart = null;
        }
    },


    /** 
     * Method: defaultWheelUp
     * User spun scroll wheel up
     * 
     */
    defaultWheelUp: function(evt) {
        if (this.map.getZoom() <= this.map.getNumZoomLevels()) {
            this.map.setCenter(this.map.getLonLatFromPixel(evt.xy),
                               this.map.getZoom() + 1);
        }
    },

    /**
     * Method: defaultWheelDown
     * User spun scroll wheel down
     */
    defaultWheelDown: function(evt) {
        if (this.map.getZoom() > 0) {
            this.map.setCenter(this.map.getLonLatFromPixel(evt.xy),
                               this.map.getZoom() - 1);
        }
    },

    /**
     * Method: zoomBoxEnd
     * Zoombox function. 
     */
    zoomBoxEnd: function(evt) {
        if (this.mouseDragStart != null) {
            if (Math.abs(this.mouseDragStart.x - evt.xy.x) > 5 ||    
                Math.abs(this.mouseDragStart.y - evt.xy.y) > 5) {   
                var start = this.map.getLonLatFromViewPortPx( this.mouseDragStart ); 
                var end = this.map.getLonLatFromViewPortPx( evt.xy );
                var top = Math.max(start.lat, end.lat);
                var bottom = Math.min(start.lat, end.lat);
                var left = Math.min(start.lon, end.lon);
                var right = Math.max(start.lon, end.lon);
                var bounds = new OpenLayers.Bounds(left, bottom, right, top);
                this.map.zoomToExtent(bounds);
            } else {
                var end = this.map.getLonLatFromViewPortPx( evt.xy );
                this.map.setCenter(new OpenLayers.LonLat(
                  (end.lon),
                  (end.lat)
                 ), this.map.getZoom() + 1);
            }    
            this.removeZoomBox();
       }
    },

    /**
     * Method: removeZoomBox
     * Remove the zoombox from the screen and nullify our reference to it.
     */
    removeZoomBox: function() {
        this.map.viewPortDiv.removeChild(this.zoomBox);
        this.zoomBox = null;
    },


/**
 *  Mouse ScrollWheel code thanks to http://adomas.org/javascript-mouse-wheel/
 */


    /**
     * Method: onWheelEvent
     * Catch the wheel event and handle it xbrowserly
     *
     * Parameters: 
     * e - {Event} 
     */
    onWheelEvent: function(e){
    
        // first determine whether or not the wheeling was inside the map
        var inMap = false;
        var elem = OpenLayers.Event.element(e);
        while(elem != null) {
            if (this.map && elem == this.map.div) {
                inMap = true;
                break;
            }
            elem = elem.parentNode;
        }
        
        if (inMap) {
            
            var delta = 0;
            if (!e) {
                e = window.event;
            }
            if (e.wheelDelta) {
                delta = e.wheelDelta/120; 
                if (window.opera && window.opera.version() < 9.2) {
                    delta = -delta;
                }
            } else if (e.detail) {
                delta = -e.detail / 3;
            }
            if (delta) {
                // add the mouse position to the event because mozilla has a bug
                // with clientX and clientY (see https://bugzilla.mozilla.org/show_bug.cgi?id=352179)
                // getLonLatFromViewPortPx(e) returns wrong values
                e.xy = this.mousePosition;

                if (delta < 0) {
                   this.defaultWheelDown(e);
                } else {
                   this.defaultWheelUp(e);
                }
            }
            
            //only wheel the map, not the window
            OpenLayers.Event.stop(e);
        }
    },

    CLASS_NAME: "OpenLayers.Control.MouseDefaults"
});

/**
 * Class: OpenLayers.Control.MouseToolbar
 * This class is DEPRECATED in 2.4 and will be removed by 3.0.
 * If you need this functionality, use <OpenLayers.Control.NavToolbar>
 * instead!!! 
 */
OpenLayers.Control.MouseToolbar = OpenLayers.Class(
                                            OpenLayers.Control.MouseDefaults, {
    
    /**
     * Property: mode
     */ 
    mode: null,
    /**
     * Property: buttons
     */
    buttons: null,
    
    /**
     * APIProperty: direction
     * {String} 'vertical' or 'horizontal'
     */
    direction: "vertical",
    
    /**
     * Property: buttonClicked
     * {String}
     */
    buttonClicked: null,
    
    /**
     * Constructor: OpenLayers.Control.MouseToolbar
     *
     * Parameters:
     * position - {<OpenLayers.Pixel>}
     * direction - {String}
     */
    initialize: function(position, direction) {
        OpenLayers.Control.prototype.initialize.apply(this, arguments);
        this.position = new OpenLayers.Pixel(OpenLayers.Control.MouseToolbar.X,
                                             OpenLayers.Control.MouseToolbar.Y);
        if (position) {
            this.position = position;
        }
        if (direction) {
            this.direction = direction; 
        }
        this.measureDivs = [];
    },
    
    /**
     * APIMethod: destroy 
     */
    destroy: function() {
        for( var btnId in this.buttons) {
            var btn = this.buttons[btnId];
            btn.map = null;
            btn.events.destroy();
        }
        OpenLayers.Control.MouseDefaults.prototype.destroy.apply(this, 
                                                                 arguments);
    },
    
    /**
     * Method: draw
     */
    draw: function() {
        OpenLayers.Control.prototype.draw.apply(this, arguments); 
        OpenLayers.Control.MouseDefaults.prototype.draw.apply(this, arguments);
        this.buttons = {};
        var sz = new OpenLayers.Size(28,28);
        var centered = new OpenLayers.Pixel(OpenLayers.Control.MouseToolbar.X,0);
        this._addButton("zoombox", "drag-rectangle-off.png", "drag-rectangle-on.png", centered, sz, "Shift->Drag to zoom to area");
        centered = centered.add((this.direction == "vertical" ? 0 : sz.w), (this.direction == "vertical" ? sz.h : 0));
        this._addButton("pan", "panning-hand-off.png", "panning-hand-on.png", centered, sz, "Drag the map to pan.");
        centered = centered.add((this.direction == "vertical" ? 0 : sz.w), (this.direction == "vertical" ? sz.h : 0));
        this.switchModeTo("pan");

        return this.div;
    },
    
    /**
     * Method: _addButton
     */
    _addButton:function(id, img, activeImg, xy, sz, title) {
        var imgLocation = OpenLayers.Util.getImageLocation(img);
        var activeImgLocation = OpenLayers.Util.getImageLocation(activeImg);
        // var btn = new ol.AlphaImage("_"+id, imgLocation, xy, sz);
        var btn = OpenLayers.Util.createAlphaImageDiv(
                                    "OpenLayers_Control_MouseToolbar_" + id, 
                                    xy, sz, imgLocation, "absolute");

        //we want to add the outer div
        this.div.appendChild(btn);
        btn.imgLocation = imgLocation;
        btn.activeImgLocation = activeImgLocation;
        
        btn.events = new OpenLayers.Events(this, btn, null, true);
        btn.events.on({
            "mousedown": this.buttonDown,
            "mouseup": this.buttonUp,
            "dblclick": OpenLayers.Event.stop,
            scope: this
        });
        btn.action = id;
        btn.title = title;
        btn.alt = title;
        btn.map = this.map;

        //we want to remember/reference the outer div
        this.buttons[id] = btn;
        return btn;
    },

    /**
     * Method: buttonDown
     *
     * Parameters:
     * evt - {Event} 
     */
    buttonDown: function(evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        this.buttonClicked = evt.element.action;
        OpenLayers.Event.stop(evt);
    },

    /**
     * Method: buttonUp
     *
     * Parameters:
     * evt - {Event} 
     */
    buttonUp: function(evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        if (this.buttonClicked != null) {
            if (this.buttonClicked == evt.element.action) {
                this.switchModeTo(evt.element.action);
            }
            OpenLayers.Event.stop(evt);
            this.buttonClicked = null;
        }
    },
    
    /**
     * Method: defaultDblClick 
     *
     * Parameters:
     * evt - {Event} 
     */
    defaultDblClick: function (evt) {
        this.switchModeTo("pan");
        this.performedDrag = false;
        var newCenter = this.map.getLonLatFromViewPortPx( evt.xy ); 
        this.map.setCenter(newCenter, this.map.zoom + 1);
        OpenLayers.Event.stop(evt);
        return false;
    },

    /**
     * Method: defaultMouseDown
     *
     * Parameters:
     * evt - {Event} 
     */
    defaultMouseDown: function (evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        this.mouseDragStart = evt.xy.clone();
        this.performedDrag = false;
        this.startViaKeyboard = false;
        if (evt.shiftKey && this.mode !="zoombox") {
            this.switchModeTo("zoombox");
            this.startViaKeyboard = true;
        } else if (evt.altKey && this.mode !="measure") {
            this.switchModeTo("measure");
        } else if (!this.mode) {
            this.switchModeTo("pan");
        }
        
        switch (this.mode) {
            case "zoombox":
                this.map.div.style.cursor = "crosshair";
                this.zoomBox = OpenLayers.Util.createDiv('zoomBox',
                                                         this.mouseDragStart,
                                                         null,
                                                         null,
                                                         "absolute",
                                                         "2px solid red");
                this.zoomBox.style.backgroundColor = "white";
                this.zoomBox.style.filter = "alpha(opacity=50)"; // IE
                this.zoomBox.style.opacity = "0.50";
                this.zoomBox.style.fontSize = "1px";
                this.zoomBox.style.zIndex = this.map.Z_INDEX_BASE["Popup"] - 1;
                this.map.viewPortDiv.appendChild(this.zoomBox);
                this.performedDrag = true;
                break;
            case "measure":
                var distance = "";
                if (this.measureStart) {
                    var measureEnd = this.map.getLonLatFromViewPortPx(this.mouseDragStart);
                    distance = OpenLayers.Util.distVincenty(this.measureStart, measureEnd);
                    distance = Math.round(distance * 100) / 100;
                    distance = distance + "km";
                    this.measureStartBox = this.measureBox;
                }    
                this.measureStart = this.map.getLonLatFromViewPortPx(this.mouseDragStart);;
                this.measureBox = OpenLayers.Util.createDiv(null,
                                                         this.mouseDragStart.add(
                                                           -2-parseInt(this.map.layerContainerDiv.style.left),
                                                           -2-parseInt(this.map.layerContainerDiv.style.top)),
                                                         null,
                                                         null,
                                                         "absolute");
                this.measureBox.style.width="4px";
                this.measureBox.style.height="4px";
                this.measureBox.style.fontSize = "1px";
                this.measureBox.style.backgroundColor="red";
                this.measureBox.style.zIndex = this.map.Z_INDEX_BASE["Popup"] - 1;
                this.map.layerContainerDiv.appendChild(this.measureBox);
                if (distance) {
                    this.measureBoxDistance = OpenLayers.Util.createDiv(null,
                                                         this.mouseDragStart.add(
                                                           -2-parseInt(this.map.layerContainerDiv.style.left),
                                                           2-parseInt(this.map.layerContainerDiv.style.top)),
                                                         null,
                                                         null,
                                                         "absolute");
                    
                    this.measureBoxDistance.innerHTML = distance;
                    this.measureBoxDistance.style.zIndex = this.map.Z_INDEX_BASE["Popup"] - 1;
                    this.map.layerContainerDiv.appendChild(this.measureBoxDistance);
                    this.measureDivs.push(this.measureBoxDistance);
                }
                this.measureBox.style.zIndex = this.map.Z_INDEX_BASE["Popup"] - 1;
                this.map.layerContainerDiv.appendChild(this.measureBox);
                this.measureDivs.push(this.measureBox);
                break;
            default:
                this.map.div.style.cursor = "move";
                break;
        }
        document.onselectstart = OpenLayers.Function.False;
        OpenLayers.Event.stop(evt);
    },

    /**
     * Method: switchModeTo 
     *
     * Parameters:
     * mode - {String} 
     */
    switchModeTo: function(mode) {
        if (mode != this.mode) {
            

            if (this.mode && this.buttons[this.mode]) {
                OpenLayers.Util.modifyAlphaImageDiv(this.buttons[this.mode], null, null, null, this.buttons[this.mode].imgLocation);
            }
            if (this.mode == "measure" && mode != "measure") {
                for(var i=0, len=this.measureDivs.length; i<len; i++) {
                    if (this.measureDivs[i]) { 
                        this.map.layerContainerDiv.removeChild(this.measureDivs[i]);
                    }
                }
                this.measureDivs = [];
                this.measureStart = null;
            }
            this.mode = mode;
            if (this.buttons[mode]) {
                OpenLayers.Util.modifyAlphaImageDiv(this.buttons[mode], null, null, null, this.buttons[mode].activeImgLocation);
            }
            switch (this.mode) {
                case "zoombox":
                    this.map.div.style.cursor = "crosshair";
                    break;
                default:
                    this.map.div.style.cursor = "";
                    break;
            }

        } 
    }, 

    /**
     * Method: leaveMode
     */
    leaveMode: function() {
        this.switchModeTo("pan");
    },
    
    /**
     * Method: defaultMouseMove
     *
     * Parameters:
     * evt - {Event} 
     */
    defaultMouseMove: function (evt) {
        if (this.mouseDragStart != null) {
            switch (this.mode) {
                case "zoombox": 
                    var deltaX = Math.abs(this.mouseDragStart.x - evt.xy.x);
                    var deltaY = Math.abs(this.mouseDragStart.y - evt.xy.y);
                    this.zoomBox.style.width = Math.max(1, deltaX) + "px";
                    this.zoomBox.style.height = Math.max(1, deltaY) + "px";
                    if (evt.xy.x < this.mouseDragStart.x) {
                        this.zoomBox.style.left = evt.xy.x+"px";
                    }
                    if (evt.xy.y < this.mouseDragStart.y) {
                        this.zoomBox.style.top = evt.xy.y+"px";
                    }
                    break;
                default:
                    var deltaX = this.mouseDragStart.x - evt.xy.x;
                    var deltaY = this.mouseDragStart.y - evt.xy.y;
                    var size = this.map.getSize();
                    var newXY = new OpenLayers.Pixel(size.w / 2 + deltaX,
                                                     size.h / 2 + deltaY);
                    var newCenter = this.map.getLonLatFromViewPortPx( newXY ); 
                    this.map.setCenter(newCenter, null, true);
                    this.mouseDragStart = evt.xy.clone();
            }
            this.performedDrag = true;
        }
    },

    /**
     * Method: defaultMouseUp
     *
     * Parameters:
     * evt - {Event} 
     */
    defaultMouseUp: function (evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        switch (this.mode) {
            case "zoombox":
                this.zoomBoxEnd(evt);
                if (this.startViaKeyboard) {
                    this.leaveMode();
                }
                break;
            case "pan":
                if (this.performedDrag) {
                    this.map.setCenter(this.map.center);
                }        
        }
        document.onselectstart = null;
        this.mouseDragStart = null;
        this.map.div.style.cursor = "default";
    },

    /**
     * Method: defaultMouseOut
     *
     * Parameters:
     * evt - {Event} 
     */
    defaultMouseOut: function (evt) {
        if (this.mouseDragStart != null
            && OpenLayers.Util.mouseLeft(evt, this.map.viewPortDiv)) {
            if (this.zoomBox) {
                this.removeZoomBox();
                if (this.startViaKeyboard) {
                    this.leaveMode();
                }
            }
            this.mouseDragStart = null;
            this.map.div.style.cursor = "default";
        }
    },

    /**
     * Method: defaultClick
     *
     * Parameters:
     * evt - {Event} 
     */
    defaultClick: function (evt) {
        if (this.performedDrag)  {
            this.performedDrag = false;
            return false;
        }
    },
    
    CLASS_NAME: "OpenLayers.Control.MouseToolbar"
});

OpenLayers.Control.MouseToolbar.X = 6;
OpenLayers.Control.MouseToolbar.Y = 300;

/**
 * Class: OpenLayers.Layer.Grid
 */

OpenLayers.Util.extend(OpenLayers.Layer.Grid.prototype, {

    /**
     * Method: getGridBounds
     * Deprecated. This function will be removed in 3.0. Please use 
     *     getTilesBounds() instead.
     * 
     * Returns:
     * {<OpenLayers.Bounds>} A Bounds object representing the bounds of all the
     * currently loaded tiles (including those partially or not at all seen 
     * onscreen)
     */
    getGridBounds: function() {
        var msg = "The getGridBounds() function is deprecated. It will be " +
                  "removed in 3.0. Please use getTilesBounds() instead.";
        OpenLayers.Console.warn(msg);
        return this.getTilesBounds();
    }
});

/**
 * Class: OpenLayers.Format.XML
 */
OpenLayers.Util.extend(OpenLayers.Format.XML.prototype, {

    /**
     * APIMethod: concatChildValues
     * *Deprecated*. Use <getChildValue> instead.
     *
     * Concatenate the value of all child nodes if any exist, or return an
     *     optional default string.  Returns an empty string if no children
     *     exist and no default value is supplied.  Not optimized for large
     *     numbers of child nodes.
     *
     * Parameters:
     * node - {DOMElement} The element used to look for child values.
     * def - {String} Optional string to return in the event that no
     *     child exist.
     *
     * Returns:
     * {String} The concatenated value of all child nodes of the given node.
     */
    concatChildValues: function(node, def) {
        var value = "";
        var child = node.firstChild;
        var childValue;
        while(child) {
            childValue = child.nodeValue;
            if(childValue) {
                value += childValue;
            }
            child = child.nextSibling;
        }
        if(value == "" && def != undefined) {
            value = def;
        }
        return value;
    }

});

/**
 * Class: OpenLayers.Layer.WMS.Post
 * Instances of OpenLayers.Layer.WMS.Post are used to retrieve data from OGC
 * Web Mapping Services via HTTP-POST (application/x-www-form-urlencoded). 
 * Create a new WMS layer with the <OpenLayers.Layer.WMS.Post> constructor.
 *
 * *Deprecated*. Instead of this layer, use <OpenLayers.Layer.WMS> with
 * <OpenLayers.Tile.Image.maxGetUrlLength> configured in the layer's
 * <OpenLayers.Layer.WMS.tileOptions>.
 *
 * Inherits from:
 *  - <OpenLayers.Layer.WMS>
 */
OpenLayers.Layer.WMS.Post = OpenLayers.Class(OpenLayers.Layer.WMS, {

    /**
     * APIProperty: unsupportedBrowsers
     * {Array} Array with browsers, which should use the HTTP-GET protocol 
     * instead of HTTP-POST for fetching tiles from a WMS .
     * Defaults to ["mozilla", "firefox", "opera"], because Opera is not able 
     * to show transparent images in IFrames and Firefox/Mozilla has some ugly 
     * effects of viewport-shaking when panning the map. Both browsers, Opera
     * and Firefox/Mozilla, have no problem with long urls, which is the reason
     * for using POST instead of GET. The strings to pass to this array are
     * the ones returned by <OpenLayers.BROWSER_NAME>.
     */
    unsupportedBrowsers: ["mozilla", "firefox", "opera"],

    /**
     * Property: SUPPORTED_TRANSITIONS
     * {Array} 
     * no supported transitions for this type of layer, because it is not
     * possible to modify the initialized tiles (iframes)
     */
    SUPPORTED_TRANSITIONS: [],
    
    /**
     * Property: usePost
     * {Boolean}
     */
    usePost: null,

    /**
     * Constructor: OpenLayers.Layer.WMS.Post
     * Creates a new WMS layer object.
     *
     * Example:
     * (code)
     * var wms = new OpenLayers.Layer.WMS.Post(
     *  "NASA Global Mosaic",
     *  "http://wms.jpl.nasa.gov/wms.cgi",
     *  {layers: "modis, global_mosaic"});
     * (end)
     *
     * Parameters:
     * name - {String} A name for the layer
     * url - {String} Base url for the WMS
     *                (e.g. http://wms.jpl.nasa.gov/wms.cgi)
     * params - {Object} An object with key/value pairs representing the
     *                   GetMap query string parameters and parameter values.
     * options - {Object} Hashtable of extra options to tag onto the layer.
     */
    initialize: function(name, url, params, options) {
        var newArguments = [];
        newArguments.push(name, url, params, options);
        OpenLayers.Layer.WMS.prototype.initialize.apply(this, newArguments);

        this.usePost = OpenLayers.Util.indexOf(
            this.unsupportedBrowsers, OpenLayers.BROWSER_NAME) == -1;
    },
    
    /**
     * Method: addTile
     * addTile creates a tile, initializes it and adds it as iframe to the
     * layer div.
     *
     * Parameters:
     * bounds - {<OpenLayers.Bounds>}
     * position - {<OpenLayers.Pixel>}
     *
     * Returns:
     * {<OpenLayers.Tile.Image.IFrame>} The added OpenLayers.Tile.Image.IFrame
     */
    addTile: function(bounds,position) {
        return new OpenLayers.Tile.Image(
            this, position, bounds, null, this.tileSize, {
                maxGetUrlLength: this.usePost ? 0 : null
            });
    },

    CLASS_NAME: 'OpenLayers.Layer.WMS.Post'
});

/**
 * Class: OpenLayers.Layer.WMS.Untiled
 * *Deprecated*.  To be removed in 3.0.  Instead use OpenLayers.Layer.WMS and 
 *     pass the option 'singleTile' as true.
 * 
 * Inherits from: 
 *  - <OpenLayers.Layer.WMS>
 */
OpenLayers.Layer.WMS.Untiled = OpenLayers.Class(OpenLayers.Layer.WMS, {

    /**
     * APIProperty: singleTile
     * {singleTile} Always true for untiled.
     */
    singleTile: true,

    /**
     * Constructor: OpenLayers.Layer.WMS.Untiled
     *
     * Parameters:
     * name - {String} 
     * url - {String} 
     * params - {Object} 
     * options - {Object} 
     */
    initialize: function(name, url, params, options) {
        OpenLayers.Layer.WMS.prototype.initialize.apply(this, arguments);
        
        var msg = "The OpenLayers.Layer.WMS.Untiled class is deprecated and " +
                  "will be removed in 3.0. Instead, you should use the " +
                  "normal OpenLayers.Layer.WMS class, passing it the option " +
                  "'singleTile' as true.";
        OpenLayers.Console.warn(msg);
    },    

    /**
     * Method: clone
     * Create a clone of this layer
     *
     * Returns:
     * {<OpenLayers.Layer.WMS.Untiled>} An exact clone of this layer
     */
    clone: function (obj) {
        
        if (obj == null) {
            obj = new OpenLayers.Layer.WMS.Untiled(this.name,
                                                   this.url,
                                                   this.params,
                                                   this.getOptions());
        }

        //get all additions from superclasses
        obj = OpenLayers.Layer.WMS.prototype.clone.apply(this, [obj]);

        // copy/set any non-init, non-simple values here

        return obj;
    }, 

    CLASS_NAME: "OpenLayers.Layer.WMS.Untiled"
});

/**
 * Class: OpenLayers.Layer.MapServer.Untiled
 * *Deprecated*.  To be removed in 3.0.  Instead use OpenLayers.Layer.MapServer
 *     and pass the option 'singleTile' as true.
 * 
 * Inherits from: 
 *  - <OpenLayers.Layer.MapServer>
 */
OpenLayers.Layer.MapServer.Untiled = OpenLayers.Class(OpenLayers.Layer.MapServer, {

    /**
     * APIProperty: singleTile
     * {singleTile} Always true for untiled.
     */
    singleTile: true,

    /**
     * Constructor: OpenLayers.Layer.MapServer.Untiled
     *
     * Parameters:
     * name - {String} 
     * url - {String} 
     * params - {Object} 
     * options - {Object} 
     */
    initialize: function(name, url, params, options) {
        OpenLayers.Layer.MapServer.prototype.initialize.apply(this, arguments);
        
        var msg = "The OpenLayers.Layer.MapServer.Untiled class is deprecated and " +
                  "will be removed in 3.0. Instead, you should use the " +
                  "normal OpenLayers.Layer.MapServer class, passing it the option " +
                  "'singleTile' as true.";
        OpenLayers.Console.warn(msg);
    },    

    /**
     * Method: clone
     * Create a clone of this layer
     *
     * Returns:
     * {<OpenLayers.Layer.MapServer.Untiled>} An exact clone of this layer
     */
    clone: function (obj) {
        
        if (obj == null) {
            obj = new OpenLayers.Layer.MapServer.Untiled(this.name,
                                                         this.url,
                                                         this.params,
                                                         this.getOptions());
        }

        //get all additions from superclasses
        obj = OpenLayers.Layer.MapServer.prototype.clone.apply(this, [obj]);

        // copy/set any non-init, non-simple values here
        
        return obj;
    }, 

    CLASS_NAME: "OpenLayers.Layer.MapServer.Untiled"
});

/**
 * Class: OpenLayers.Tile.WFS
 * Instances of OpenLayers.Tile.WFS are used to manage the image tiles
 * used by various layers.  Create a new image tile with the
 * <OpenLayers.Tile.WFS> constructor.
 *
 * Inherits from:
 *  - <OpenLayers.Tile>
 */
OpenLayers.Tile.WFS = OpenLayers.Class(OpenLayers.Tile, {

    /**
     * Property: features
     * {Array(<OpenLayers.Feature>)} list of features in this tile
     */
    features: null,

    /**
     * Property: url
     * {String}
     */
    url: null,

    /**
     * Property: request
     * {<OpenLayers.Request.XMLHttpRequest>}
     */
    request: null,

    /** TBD 3.0 - reorder the parameters to the init function to put URL
     *             as last, so we can continue to call tile.initialize()
     *             without changing the arguments.
     *
     * Constructor: OpenLayers.Tile.WFS
     * Constructor for a new <OpenLayers.Tile.WFS> instance.
     *
     * Parameters:
     * layer - {<OpenLayers.Layer>} layer that the tile will go in.
     * position - {<OpenLayers.Pixel>}
     * bounds - {<OpenLayers.Bounds>}
     * url - {<String>}
     * size - {<OpenLayers.Size>}
     */
    initialize: function(layer, position, bounds, url, size) {
        OpenLayers.Tile.prototype.initialize.apply(this, arguments);
        this.url = url;
        this.features = [];
    },

    /**
     * APIMethod: destroy
     * nullify references to prevent circular references and memory leaks
     */
    destroy: function() {
        OpenLayers.Tile.prototype.destroy.apply(this, arguments);
        this.destroyAllFeatures();
        this.features = null;
        this.url = null;
        if(this.request) {
            this.request.abort();
            //this.request.destroy();
            this.request = null;
        }
    },

    /**
     * Method: clear
     *  Clear the tile of any bounds/position-related data so that it can
     *   be reused in a new location.
     */
    clear: function() {
        this.destroyAllFeatures();
    },

    /**
     * Method: draw
     * Check that a tile should be drawn, and load features for it.
     */
    draw:function() {
        if (OpenLayers.Tile.prototype.draw.apply(this, arguments)) {
            if (this.isLoading) {
                //if already loading, send 'reload' instead of 'loadstart'.
                this.events.triggerEvent("reload");
            } else {
                this.isLoading = true;
                this.events.triggerEvent("loadstart");
            }
            this.loadFeaturesForRegion(this.requestSuccess);
        }
    },

    /**
    * Method: loadFeaturesForRegion
    * Abort any pending requests and issue another request for data.
    *
    * Input are function pointers for what to do on success and failure.
    *
    * Parameters:
    * success - {function}
    * failure - {function}
    */
    loadFeaturesForRegion:function(success, failure) {
        if(this.request) {
            this.request.abort();
        }
        this.request = OpenLayers.Request.GET({
            url: this.url,
            success: success,
            failure: failure,
            scope: this
        });
    },

    /**
    * Method: requestSuccess
    * Called on return from request succcess. Adds results via
    * layer.addFeatures in vector mode, addResults otherwise.
    *
    * Parameters:
    * request - {<OpenLayers.Request.XMLHttpRequest>}
    */
    requestSuccess:function(request) {
        if (this.features) {
            var doc = request.responseXML;
            if (!doc || !doc.documentElement) {
                doc = request.responseText;
            }
            if (this.layer.vectorMode) {
                this.layer.addFeatures(this.layer.formatObject.read(doc));
            } else {
                var xml = new OpenLayers.Format.XML();
                if (typeof doc == "string") {
                    doc = xml.read(doc);
                }
                var resultFeatures = xml.getElementsByTagNameNS(
                    doc, "http://www.opengis.net/gml", "featureMember"
                );
                this.addResults(resultFeatures);
            }
        }
        if (this.events) {
            this.events.triggerEvent("loadend");
        }

        //request produced with success, we can delete the request object.
        //this.request.destroy();
        this.request = null;
    },

    /**
     * Method: addResults
     * Construct new feature via layer featureClass constructor, and add to
     * this.features.
     *
     * Parameters:
     * results - {Object}
     */
    addResults: function(results) {
        for (var i=0; i < results.length; i++) {
            var feature = new this.layer.featureClass(this.layer,
                                                      results[i]);
            this.features.push(feature);
        }
    },


    /**
     * Method: destroyAllFeatures
     * Iterate through and call destroy() on each feature, removing it from
     *   the local array
     */
    destroyAllFeatures: function() {
        while(this.features.length > 0) {
            var feature = this.features.shift();
            feature.destroy();
        }
    },

    CLASS_NAME: "OpenLayers.Tile.WFS"
  }
);

/**
 * Class: OpenLayers.Feature.WFS
 * WFS handling class, for use as a featureClass on the WFS layer for handling
 * 'point' WFS types. Good for subclassing when creating a custom WFS like
 * XML application.
 *
 * Inherits from:
 *  - <OpenLayers.Feature>
 */
OpenLayers.Feature.WFS = OpenLayers.Class(OpenLayers.Feature, {

    /**
     * Constructor: OpenLayers.Feature.WFS
     * Create a WFS feature.
     *
     * Parameters:
     * layer - {<OpenLayers.Layer>}
     * xmlNode - {XMLNode}
     */
    initialize: function(layer, xmlNode) {
        var newArguments = arguments;
        var data = this.processXMLNode(xmlNode);
        newArguments = new Array(layer, data.lonlat, data);
        OpenLayers.Feature.prototype.initialize.apply(this, newArguments);
        this.createMarker();
        this.layer.addMarker(this.marker);
    },

    /**
     * Method: destroy
     * nullify references to prevent circular references and memory leaks
     */
    destroy: function() {
        if (this.marker != null) {
            this.layer.removeMarker(this.marker);
        }
        OpenLayers.Feature.prototype.destroy.apply(this, arguments);
    },

    /**
     * Method: processXMLNode
     * When passed an xmlNode, parses it for a GML point, and passes
     * back an object describing that point.
     *
     * For subclasses of Feature.WFS, this is the feature to change.
     *
     * Parameters:
     * xmlNode - {XMLNode}
     *
     * Returns:
     * {Object} Data Object with 'id', 'lonlat', and private properties set
     */
    processXMLNode: function(xmlNode) {
        //this should be overridden by subclasses
        // must return an Object with 'id' and 'lonlat' values set
        var point = OpenLayers.Ajax.getElementsByTagNameNS(xmlNode, "http://www.opengis.net/gml", "gml", "Point");
        var text  = OpenLayers.Util.getXmlNodeValue(OpenLayers.Ajax.getElementsByTagNameNS(point[0], "http://www.opengis.net/gml","gml", "coordinates")[0]);
        var floats = text.split(",");
        return {lonlat: new OpenLayers.LonLat(parseFloat(floats[0]),
                                              parseFloat(floats[1])),
                id: null};

    },

    CLASS_NAME: "OpenLayers.Feature.WFS"
});


/**
 * Class: OpenLayers.Layer.WFS
 * *Deprecated*.  To be removed in 3.0.  Instead use OpenLayers.Layer.Vector
 *     with a Protocol.WFS and one or more Strategies.
 *
 * Inherits from:
 *  - <OpenLayers.Layer.Vector>
 *  - <OpenLayers.Layer.Markers>
 */
OpenLayers.Layer.WFS = OpenLayers.Class(
  OpenLayers.Layer.Vector, OpenLayers.Layer.Markers, {

    /**
     * APIProperty: isBaseLayer
     * {Boolean} WFS layer is not a base layer by default.
     */
    isBaseLayer: false,

    /**
     * Property: tile
     * {<OpenLayers.Tile.WFS>}
     */
    tile: null,

    /**
     * APIProperty: ratio
     * {Float} The ratio property determines the size of the serverside query
     *    relative to the map viewport size. By default, we load an area twice
     *    as big as the map, to allow for panning without immediately reload.
     *    Setting this to 1 will cause the area of the WFS request to match
     *    the map area exactly. It is recommended to set this to some number
     *    at least slightly larger than 1, otherwise accidental clicks can
     *    cause a data reload, by moving the map only 1 pixel.
     */
    ratio: 2,

    /**
     * Property: DEFAULT_PARAMS
     * {Object} Hashtable of default key/value parameters
     */
    DEFAULT_PARAMS: { service: "WFS",
                      version: "1.0.0",
                      request: "GetFeature"
                    },

    /**
     * APIProperty: featureClass
     * {<OpenLayers.Feature>} If featureClass is defined, an old-style markers
     *     based WFS layer is created instead of a new-style vector layer. If
     *     sent, this should be a subclass of OpenLayers.Feature
     */
    featureClass: null,

    /**
      * APIProperty: format
      * {<OpenLayers.Format>} The format you want the data to be parsed with.
      * Must be passed in the constructor. Should be a class, not an instance.
      * This option can only be used if no featureClass is passed / vectorMode
      * is false: if a featureClass is passed, then this parameter is ignored.
      */
    format: null,

    /**
     * Property: formatObject
     * {<OpenLayers.Format>} Internally created/managed format object, used by
     * the Tile to parse data.
     */
    formatObject: null,

    /**
     * APIProperty: formatOptions
     * {Object} Hash of options which should be passed to the format when it is
     * created. Must be passed in the constructor.
     */
    formatOptions: null,

    /**
     * Property: vectorMode
     * {Boolean} Should be calculated automatically. Determines whether the
     *     layer is in vector mode or marker mode.
     */
    vectorMode: true,

    /**
     * APIProperty: encodeBBOX
     * {Boolean} Should the BBOX commas be encoded? The WMS spec says 'no',
     *     but some services want it that way. Default false.
     */
    encodeBBOX: false,

    /**
     * APIProperty: extractAttributes
     * {Boolean} Should the WFS layer parse attributes from the retrieved
     *     GML? Defaults to false. If enabled, parsing is slower, but
     *     attributes are available in the attributes property of
     *     layer features.
     */
    extractAttributes: false,

    /**
     * Constructor: OpenLayers.Layer.WFS
     *
     * Parameters:
     * name - {String}
     * url - {String}
     * params - {Object}
     * options - {Object} Hashtable of extra options to tag onto the layer
     */
    initialize: function(name, url, params, options) {
        if (options == undefined) { options = {}; }

        if (options.featureClass ||
            !OpenLayers.Layer.Vector ||
            !OpenLayers.Feature.Vector) {
            this.vectorMode = false;
        }

        // Uppercase params
        params = OpenLayers.Util.upperCaseObject(params);

        // Turn off error reporting, browsers like Safari may work
        // depending on the setup, and we don't want an unneccesary alert.
        OpenLayers.Util.extend(options, {'reportError': false});
        var newArguments = [];
        newArguments.push(name, options);
        OpenLayers.Layer.Vector.prototype.initialize.apply(this, newArguments);
        if (!this.renderer || !this.vectorMode) {
            this.vectorMode = false;
            if (!options.featureClass) {
                options.featureClass = OpenLayers.Feature.WFS;
            }
            OpenLayers.Layer.Markers.prototype.initialize.apply(this,
                                                                newArguments);
        }

        if (this.params && this.params.typename && !this.options.typename) {
            this.options.typename = this.params.typename;
        }

        if (!this.options.geometry_column) {
            this.options.geometry_column = "the_geom";
        }

        this.params = OpenLayers.Util.applyDefaults(
            params,
            OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS)
        );
        this.url = url;
    },


    /**
     * APIMethod: destroy
     */
    destroy: function() {
        if (this.vectorMode) {
            OpenLayers.Layer.Vector.prototype.destroy.apply(this, arguments);
        } else {
            OpenLayers.Layer.Markers.prototype.destroy.apply(this, arguments);
        }
        if (this.tile) {
            this.tile.destroy();
        }
        this.tile = null;

        this.ratio = null;
        this.featureClass = null;
        this.format = null;

        if (this.formatObject && this.formatObject.destroy) {
            this.formatObject.destroy();
        }
        this.formatObject = null;

        this.formatOptions = null;
        this.vectorMode = null;
        this.encodeBBOX = null;
        this.extractAttributes = null;
    },

    /**
     * Method: setMap
     *
     * Parameters:
     * map - {<OpenLayers.Map>}
     */
    setMap: function(map) {
        if (this.vectorMode) {
            OpenLayers.Layer.Vector.prototype.setMap.apply(this, arguments);

            var options = {
              'extractAttributes': this.extractAttributes
            };

            OpenLayers.Util.extend(options, this.formatOptions);
            if (this.map && !this.projection.equals(this.map.getProjectionObject())) {
                options.externalProjection = this.projection;
                options.internalProjection = this.map.getProjectionObject();
            }

            this.formatObject = this.format ? new this.format(options) : new OpenLayers.Format.GML(options);
        } else {
            OpenLayers.Layer.Markers.prototype.setMap.apply(this, arguments);
        }
    },

    /**
     * Method: moveTo
     *
     * Parameters:
     * bounds - {<OpenLayers.Bounds>}
     * zoomChanged - {Boolean}
     * dragging - {Boolean}
     */
    moveTo:function(bounds, zoomChanged, dragging) {
        if (this.vectorMode) {
            OpenLayers.Layer.Vector.prototype.moveTo.apply(this, arguments);
        } else {
            OpenLayers.Layer.Markers.prototype.moveTo.apply(this, arguments);
        }

        // don't load wfs features while dragging, wait for drag end
        if (dragging) {
            // TBD try to hide the vector layer while dragging
            // this.setVisibility(false);
            // this will probably help for panning performances
            return false;
        }

        if ( zoomChanged ) {
            if (this.vectorMode) {
                this.renderer.clear();
            }
        }

    //DEPRECATED - REMOVE IN 3.0
        // don't load data if current zoom level doesn't match
        if (this.options.minZoomLevel) {
            OpenLayers.Console.warn(OpenLayers.i18n('minZoomLevelError'));

            if (this.map.getZoom() < this.options.minZoomLevel) {
                return null;
            }
        }

        if (bounds == null) {
            bounds = this.map.getExtent();
        }

        var firstRendering = (this.tile == null);

        //does the new bounds to which we need to move fall outside of the
        // current tile's bounds?
        var outOfBounds = (!firstRendering &&
                           !this.tile.bounds.containsBounds(bounds));

        if (zoomChanged || firstRendering || (!dragging && outOfBounds)) {
            //determine new tile bounds
            var center = bounds.getCenterLonLat();
            var tileWidth = bounds.getWidth() * this.ratio;
            var tileHeight = bounds.getHeight() * this.ratio;
            var tileBounds =
                new OpenLayers.Bounds(center.lon - (tileWidth / 2),
                                      center.lat - (tileHeight / 2),
                                      center.lon + (tileWidth / 2),
                                      center.lat + (tileHeight / 2));

            //determine new tile size
            var tileSize = this.map.getSize();
            tileSize.w = tileSize.w * this.ratio;
            tileSize.h = tileSize.h * this.ratio;

            //determine new position (upper left corner of new bounds)
            var ul = new OpenLayers.LonLat(tileBounds.left, tileBounds.top);
            var pos = this.map.getLayerPxFromLonLat(ul);

            //formulate request url string
            var url = this.getFullRequestString();

            var params = null;

            // Cant combine "filter" and "BBOX". This is a cheap hack to help
            // people out who can't migrate to the WFS protocol immediately.
            var filter = this.params.filter || this.params.FILTER;
            if (filter) {
                params = {FILTER: filter};
            }
            else {
                params = {BBOX: this.encodeBBOX ? tileBounds.toBBOX()
                                                    : tileBounds.toArray()};
            }

            if (this.map && !this.projection.equals(this.map.getProjectionObject())) {
                var projectedBounds = tileBounds.clone();
                projectedBounds.transform(this.map.getProjectionObject(),
                                          this.projection);
                if (!filter){
                    params.BBOX = this.encodeBBOX ? projectedBounds.toBBOX()
                                                : projectedBounds.toArray();
                }
            }

            url += "&" + OpenLayers.Util.getParameterString(params);

            if (!this.tile) {
                this.tile = new OpenLayers.Tile.WFS(this, pos, tileBounds,
                                                     url, tileSize);
                this.addTileMonitoringHooks(this.tile);
                this.tile.draw();
            } else {
                if (this.vectorMode) {
                    this.destroyFeatures();
                    this.renderer.clear();
                } else {
                    this.clearMarkers();
                }
                this.removeTileMonitoringHooks(this.tile);
                this.tile.destroy();

                this.tile = null;
                this.tile = new OpenLayers.Tile.WFS(this, pos, tileBounds,
                                                     url, tileSize);
                this.addTileMonitoringHooks(this.tile);
                this.tile.draw();
            }
        }
    },

    /**
     * Method: addTileMonitoringHooks
     * This function takes a tile as input and adds the appropriate hooks to
     *     the tile so that the layer can keep track of the loading tile
     *     (making sure to check that the tile is always the layer's current
     *     tile before taking any action).
     *
     * Parameters:
     * tile - {<OpenLayers.Tile>}
     */
    addTileMonitoringHooks: function(tile) {
        tile.onLoadStart = function() {
            //if this is the the layer's current tile, then trigger
            // a 'loadstart'
            if (this == this.layer.tile) {
                this.layer.events.triggerEvent("loadstart");
            }
        };
        tile.events.register("loadstart", tile, tile.onLoadStart);

        tile.onLoadEnd = function() {
            //if this is the the layer's current tile, then trigger
            // a 'tileloaded' and 'loadend'
            if (this == this.layer.tile) {
                this.layer.events.triggerEvent("tileloaded");
                this.layer.events.triggerEvent("loadend");
            }
        };
        tile.events.register("loadend", tile, tile.onLoadEnd);
        tile.events.register("unload", tile, tile.onLoadEnd);
    },

    /**
     * Method: removeTileMonitoringHooks
     * This function takes a tile as input and removes the tile hooks
     *     that were added in addTileMonitoringHooks()
     *
     * Parameters:
     * tile - {<OpenLayers.Tile>}
     */
    removeTileMonitoringHooks: function(tile) {
        tile.unload();
        tile.events.un({
            "loadstart": tile.onLoadStart,
            "loadend": tile.onLoadEnd,
            "unload": tile.onLoadEnd,
            scope: tile
        });
    },

    /**
     * Method: onMapResize
     * Call the onMapResize method of the appropriate parent class.
     */
    onMapResize: function() {
        if(this.vectorMode) {
            OpenLayers.Layer.Vector.prototype.onMapResize.apply(this,
                                                                arguments);
        } else {
            OpenLayers.Layer.Markers.prototype.onMapResize.apply(this,
                                                                 arguments);
        }
    },

    /**
     * Method: display
     * Call the display method of the appropriate parent class.
     */
    display: function() {
        if(this.vectorMode) {
            OpenLayers.Layer.Vector.prototype.display.apply(this,
                                                                arguments);
        } else {
            OpenLayers.Layer.Markers.prototype.display.apply(this,
                                                                 arguments);
        }
    },

    /**
     * APIMethod: mergeNewParams
     * Modify parameters for the layer and redraw.
     *
     * Parameters:
     * newParams - {Object}
     */
    mergeNewParams:function(newParams) {
        var upperParams = OpenLayers.Util.upperCaseObject(newParams);
        var newArguments = [upperParams];
        return OpenLayers.Layer.HTTPRequest.prototype.mergeNewParams.apply(this,
                                                                 newArguments);
    },

    /**
     * APIMethod: clone
     *
     * Parameters:
     * obj - {Object}
     *
     * Returns:
     * {<OpenLayers.Layer.WFS>} An exact clone of this OpenLayers.Layer.WFS
     */
    clone: function (obj) {

        if (obj == null) {
            obj = new OpenLayers.Layer.WFS(this.name,
                                           this.url,
                                           this.params,
                                           this.getOptions());
        }

        //get all additions from superclasses
        if (this.vectorMode) {
            obj = OpenLayers.Layer.Vector.prototype.clone.apply(this, [obj]);
        } else {
            obj = OpenLayers.Layer.Markers.prototype.clone.apply(this, [obj]);
        }

        // copy/set any non-init, non-simple values here

        return obj;
    },

    /**
     * APIMethod: getFullRequestString
     * combine the layer's url with its params and these newParams.
     *
     *    Add the SRS parameter from 'projection' -- this is probably
     *     more eloquently done via a setProjection() method, but this
     *     works for now and always.
     *
     * Parameters:
     * newParams - {Object}
     * altUrl - {String} Use this as the url instead of the layer's url
     */
    getFullRequestString:function(newParams, altUrl) {
        var projectionCode = this.projection.getCode() || this.map.getProjection();
        this.params.SRS = (projectionCode == "none") ? null : projectionCode;

        return OpenLayers.Layer.Grid.prototype.getFullRequestString.apply(
                                                    this, arguments);
    },

    /**
     * APIMethod: commit
     * Write out the data to a WFS server.
     */
    commit: function() {
        if (!this.writer) {
            var options = {};
            if (this.map && !this.projection.equals(this.map.getProjectionObject())) {
                options.externalProjection = this.projection;
                options.internalProjection = this.map.getProjectionObject();
            }

            this.writer = new OpenLayers.Format.WFS(options,this);
        }

        var data = this.writer.write(this.features);

        OpenLayers.Request.POST({
            url: this.url,
            data: data,
            success: this.commitSuccess,
            failure: this.commitFailure,
            scope: this
        });
    },

    /**
     * Method: commitSuccess
     * Called when the Ajax request returns a response
     *
     * Parameters:
     * response - {XmlNode} from server
     */
    commitSuccess: function(request) {
        var response = request.responseText;
        if (response.indexOf('SUCCESS') != -1) {
            this.commitReport(OpenLayers.i18n("commitSuccess", {'response':response}));

            for(var i = 0; i < this.features.length; i++) {
                this.features[i].state = null;
            }
            // TBD redraw the layer or reset the state of features
            // foreach features: set state to null
        } else if (response.indexOf('FAILED') != -1 ||
            response.indexOf('Exception') != -1) {
            this.commitReport(OpenLayers.i18n("commitFailed", {'response':response}));
        }
    },

    /**
     * Method: commitFailure
     * Called when the Ajax request fails
     *
     * Parameters:
     * response - {XmlNode} from server
     */
    commitFailure: function(request) {},

    /**
     * APIMethod: commitReport
     * Called with a 'success' message if the commit succeeded, otherwise
     *     a failure message, and the full request text as a second parameter.
     *     Override this function to provide custom transaction reporting.
     *
     * string - {String} reporting string
     * response - {String} full XML response
     */
    commitReport: function(string, response) {
        OpenLayers.Console.userError(string);
    },


    /**
     * APIMethod: refresh
     * Refreshes all the features of the layer
     */
    refresh: function() {
        if (this.tile) {
            if (this.vectorMode) {
                this.renderer.clear();
                this.features.length = 0;
            } else {
                this.clearMarkers();
                this.markers.length = 0;
            }
            this.tile.draw();
        }
    },

    /**
     * APIMethod: getDataExtent
     * Calculates the max extent which includes all of the layer data.
     *
     * Returns:
     * {<OpenLayers.Bounds>}
     */
    getDataExtent: function () {
        var extent;
        //get all additions from superclasses
        if (this.vectorMode) {
            extent = OpenLayers.Layer.Vector.prototype.getDataExtent.apply(this);
        } else {
            extent = OpenLayers.Layer.Markers.prototype.getDataExtent.apply(this);
        }

        return extent;
    },

    /**
     * APIMethod: setOpacity
     * Call the setOpacity method of the appropriate parent class to set the
     *     opacity.
     *
     * Parameters:
     * opacity - {Float}
     */
    setOpacity: function (opacity) {
        if (this.vectorMode) {
            OpenLayers.Layer.Vector.prototype.setOpacity.apply(this, [opacity]);
        } else {
            OpenLayers.Layer.Markers.prototype.setOpacity.apply(this, [opacity]);
        }
    },

    CLASS_NAME: "OpenLayers.Layer.WFS"
});

/**
 * Class: OpenLayers.Layer.VirtualEarth
 * *Deprecated*. Use <OpenLayers.Layer.Bing> instead.
 *
 * Instances of OpenLayers.Layer.VirtualEarth are used to display the data from
 *     the Bing Maps AJAX Control (see e.g.
 *     http://msdn.microsoft.com/library/bb429619.aspx). Create a VirtualEarth
 *     layer with the <OpenLayers.Layer.VirtualEarth> constructor.
 *
 * Inherits from:
 *  - <OpenLayers.Layer.EventPane>
 *  - <OpenLayers.Layer.FixedZoomLevels>
 */
OpenLayers.Layer.VirtualEarth = OpenLayers.Class(
    OpenLayers.Layer.EventPane,
    OpenLayers.Layer.FixedZoomLevels, {

    /**
     * Constant: MIN_ZOOM_LEVEL
     * {Integer} 1
     */
    MIN_ZOOM_LEVEL: 1,

    /**
     * Constant: MAX_ZOOM_LEVEL
     * {Integer} 19
     */
    MAX_ZOOM_LEVEL: 19,

    /**
     * Constant: RESOLUTIONS
     * {Array(Float)} Hardcode these resolutions so that they are more closely
     *                tied with the standard wms projection
     */
    RESOLUTIONS: [
        1.40625,
        0.703125,
        0.3515625,
        0.17578125,
        0.087890625,
        0.0439453125,
        0.02197265625,
        0.010986328125,
        0.0054931640625,
        0.00274658203125,
        0.001373291015625,
        0.0006866455078125,
        0.00034332275390625,
        0.000171661376953125,
        0.0000858306884765625,
        0.00004291534423828125,
        0.00002145767211914062,
        0.00001072883605957031,
        0.00000536441802978515
    ],

    /**
     * APIProperty: type
     * {VEMapType}
     */
    type: null,

    /**
     * APIProperty: wrapDateLine
     * {Boolean} Allow user to pan forever east/west.  Default is true.
     *     Setting this to false only restricts panning if
     *     <sphericalMercator> is true.
     */
    wrapDateLine: true,

    /**
     * APIProperty: sphericalMercator
     * {Boolean} Should the map act as a mercator-projected map? This will
     *     cause all interactions with the map to be in the actual map
     *     projection, which allows support for vector drawing, overlaying
     *     other maps, etc.
     */
    sphericalMercator: false,

    /**
     * APIProperty: animationEnabled
     * {Boolean} If set to true, the transition between zoom levels will be
     *     animated. Set to false to match the zooming experience of other
     *     layer types. Default is true.
     */
    animationEnabled: true,

    /**
     * Constructor: OpenLayers.Layer.VirtualEarth
     * Creates a new instance of a OpenLayers.Layer.VirtualEarth. If you use an
     *     instance of OpenLayers.Layer.VirtualEarth in you map, you should set
     *     the <OpenLayers.Map> option restrictedExtent to a meaningful value,
     *     e.g.:
     * (code)
     * var map = new OpenLayers.Map( 'map', {
     *     // other map options
     *     restrictedExtent : OpenLayers.Bounds(-20037508, -20037508, 20037508, 20037508)
     * } );
     *
     * var veLayer = new OpenLayers.Layer.VirtualEarth (
     *     "Virtual Earth Layer"
     * );
     *
     * map.addLayer( veLayer );
     * (end)
     *
     * Parameters:
     * name - {String}
     * options - {Object}
     */
    initialize: function(name, options) {
        OpenLayers.Layer.EventPane.prototype.initialize.apply(this, arguments);
        OpenLayers.Layer.FixedZoomLevels.prototype.initialize.apply(this,
                                                                    arguments);
        if(this.sphericalMercator) {
            OpenLayers.Util.extend(this, OpenLayers.Layer.SphericalMercator);
            this.initMercatorParameters();
        }
    },

    /**
     * Method: loadMapObject
     */
    loadMapObject:function() {

        // create div and set to same size as map
        var veDiv = OpenLayers.Util.createDiv(this.name);
        var sz = this.map.getSize();
        veDiv.style.width = sz.w + "px";
        veDiv.style.height = sz.h + "px";
        this.div.appendChild(veDiv);

        try { // crash prevention
            this.mapObject = new VEMap(this.name);
        } catch (e) { }

        if (this.mapObject != null) {
            try { // this is to catch a Mozilla bug without falling apart

                // The fourth argument is whether the map is 'fixed' -- not
                // draggable. See:
                // http://blogs.msdn.com/virtualearth/archive/2007/09/28/locking-a-virtual-earth-map.aspx
                //
                this.mapObject.LoadMap(null, null, this.type, true);
                this.mapObject.AttachEvent("onmousedown", OpenLayers.Function.True);

            } catch (e) { }
            this.mapObject.HideDashboard();
            if(typeof this.mapObject.SetAnimationEnabled == "function") {
                this.mapObject.SetAnimationEnabled(this.animationEnabled);
            }
        }

        //can we do smooth panning? this is an unpublished method, so we need
        // to be careful
        if ( !this.mapObject ||
             !this.mapObject.vemapcontrol ||
             !this.mapObject.vemapcontrol.PanMap ||
             (typeof this.mapObject.vemapcontrol.PanMap != "function")) {

            this.dragPanMapObject = null;
        }

    },

    /**
     * Method: onMapResize
     */
    onMapResize: function() {
        this.mapObject.Resize(this.map.size.w, this.map.size.h);
    },

    /**
     * APIMethod: getWarningHTML
     *
     * Returns:
     * {String} String with information on why layer is broken, how to get
     *          it working.
     */
    getWarningHTML:function() {
        return OpenLayers.i18n(
            "getLayerWarning", {'layerType':'VE', 'layerLib':'VirtualEarth'}
        );
    },



    /************************************
     *                                  *
     *   MapObject Interface Controls   *
     *                                  *
     ************************************/


  // Get&Set Center, Zoom

    /**
     * APIMethod: setMapObjectCenter
     * Set the mapObject to the specified center and zoom
     *
     * Parameters:
     * center - {Object} MapObject LonLat format
     * zoom - {int} MapObject zoom format
     */
    setMapObjectCenter: function(center, zoom) {
        this.mapObject.SetCenterAndZoom(center, zoom);
    },

    /**
     * APIMethod: getMapObjectCenter
     *
     * Returns:
     * {Object} The mapObject's current center in Map Object format
     */
    getMapObjectCenter: function() {
        return this.mapObject.GetCenter();
    },

    /**
     * APIMethod: dragPanMapObject
     *
     * Parameters:
     * dX - {Integer}
     * dY - {Integer}
     */
    dragPanMapObject: function(dX, dY) {
        this.mapObject.vemapcontrol.PanMap(dX, -dY);
    },

    /**
     * APIMethod: getMapObjectZoom
     *
     * Returns:
     * {Integer} The mapObject's current zoom, in Map Object format
     */
    getMapObjectZoom: function() {
        return this.mapObject.GetZoomLevel();
    },


  // LonLat - Pixel Translation

    /**
     * APIMethod: getMapObjectLonLatFromMapObjectPixel
     *
     * Parameters:
     * moPixel - {Object} MapObject Pixel format
     *
     * Returns:
     * {Object} MapObject LonLat translated from MapObject Pixel
     */
    getMapObjectLonLatFromMapObjectPixel: function(moPixel) {
        //the conditional here is to test if we are running the v6 of VE
        return (typeof VEPixel != 'undefined')
            ? this.mapObject.PixelToLatLong(moPixel)
            : this.mapObject.PixelToLatLong(moPixel.x, moPixel.y);
    },

    /**
     * APIMethod: getMapObjectPixelFromMapObjectLonLat
     *
     * Parameters:
     * moLonLat - {Object} MapObject LonLat format
     *
     * Returns:
     * {Object} MapObject Pixel transtlated from MapObject LonLat
     */
    getMapObjectPixelFromMapObjectLonLat: function(moLonLat) {
        return this.mapObject.LatLongToPixel(moLonLat);
    },


    /************************************
     *                                  *
     *       MapObject Primitives       *
     *                                  *
     ************************************/


  // LonLat

    /**
     * APIMethod: getLongitudeFromMapObjectLonLat
     *
     * Parameters:
     * moLonLat - {Object} MapObject LonLat format
     *
     * Returns:
     * {Float} Longitude of the given MapObject LonLat
     */
    getLongitudeFromMapObjectLonLat: function(moLonLat) {
        return this.sphericalMercator ?
            this.forwardMercator(moLonLat.Longitude, moLonLat.Latitude).lon :
            moLonLat.Longitude;
    },

    /**
     * APIMethod: getLatitudeFromMapObjectLonLat
     *
     * Parameters:
     * moLonLat - {Object} MapObject LonLat format
     *
     * Returns:
     * {Float} Latitude of the given MapObject LonLat
     */
    getLatitudeFromMapObjectLonLat: function(moLonLat) {
        return this.sphericalMercator ?
            this.forwardMercator(moLonLat.Longitude, moLonLat.Latitude).lat :
            moLonLat.Latitude;
    },

    /**
     * APIMethod: getMapObjectLonLatFromLonLat
     *
     * Parameters:
     * lon - {Float}
     * lat - {Float}
     *
     * Returns:
     * {Object} MapObject LonLat built from lon and lat params
     */
    getMapObjectLonLatFromLonLat: function(lon, lat) {
        var veLatLong;
        if(this.sphericalMercator) {
            var lonlat = this.inverseMercator(lon, lat);
            veLatLong = new VELatLong(lonlat.lat, lonlat.lon);
        } else {
            veLatLong = new VELatLong(lat, lon);
        }
        return veLatLong;
    },

  // Pixel

    /**
     * APIMethod: getXFromMapObjectPixel
     *
     * Parameters:
     * moPixel - {Object} MapObject Pixel format
     *
     * Returns:
     * {Integer} X value of the MapObject Pixel
     */
    getXFromMapObjectPixel: function(moPixel) {
        return moPixel.x;
    },

    /**
     * APIMethod: getYFromMapObjectPixel
     *
     * Parameters:
     * moPixel - {Object} MapObject Pixel format
     *
     * Returns:
     * {Integer} Y value of the MapObject Pixel
     */
    getYFromMapObjectPixel: function(moPixel) {
        return moPixel.y;
    },

    /**
     * APIMethod: getMapObjectPixelFromXY
     *
     * Parameters:
     * x - {Integer}
     * y - {Integer}
     *
     * Returns:
     * {Object} MapObject Pixel from x and y parameters
     */
    getMapObjectPixelFromXY: function(x, y) {
        //the conditional here is to test if we are running the v6 of VE
        return (typeof VEPixel != 'undefined') ? new VEPixel(x, y)
                         : new Msn.VE.Pixel(x, y);
    },

    CLASS_NAME: "OpenLayers.Layer.VirtualEarth"
});

/*
 * Copyright 2007, Google Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  1. Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *  3. Neither the name of Google Inc. nor the names of its contributors may be
 *     used to endorse or promote products derived from this software without
 *     specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Sets up google.gears.*, which is *the only* supported way to access Gears.
 *
 * Circumvent this file at your own risk!
 *
 * In the future, Gears may automatically define google.gears.* without this
 * file. Gears may use these objects to transparently fix bugs and compatibility
 * issues. Applications that use the code below will continue to work seamlessly
 * when that happens.
 */

(function() {
  // We are already defined. Hooray!
  if (window.google && google.gears) {
    return;
  }

  var factory = null;

  // Firefox
  if (typeof GearsFactory != 'undefined') {
    factory = new GearsFactory();
  } else {
    // IE
    try {
      factory = new ActiveXObject('Gears.Factory');
      // privateSetGlobalObject is only required and supported on WinCE.
      if (factory.getBuildInfo().indexOf('ie_mobile') != -1) {
        factory.privateSetGlobalObject(this);
      }
    } catch (e) {
      // Safari
      if ((typeof navigator.mimeTypes != 'undefined')
           && navigator.mimeTypes["application/x-googlegears"]) {
        factory = document.createElement("object");
        factory.style.display = "none";
        factory.width = 0;
        factory.height = 0;
        factory.type = "application/x-googlegears";
        document.documentElement.appendChild(factory);
      }
    }
  }

  // *Do not* define any objects if Gears is not installed. This mimics the
  // behavior of Gears defining the objects in the future.
  if (!factory) {
    return;
  }

  // Now set up the objects, being careful not to overwrite anything.
  //
  // Note: In Internet Explorer for Windows Mobile, you can't add properties to
  // the window object. However, global objects are automatically added as
  // properties of the window object in all browsers.
  if (!window.google) {
    google = {};
  }

  if (!google.gears) {
    google.gears = {factory: factory};
  }
})();

/**
 * Class: OpenLayers.Protocol.SQL
 * Abstract SQL protocol class.  Not to be instantiated directly.  Use
 *     one of the SQL protocol subclasses instead.
 *
 * Inherits from:
 *  - <OpenLayers.Protocol>
 */
OpenLayers.Protocol.SQL = OpenLayers.Class(OpenLayers.Protocol, {

    /**
     * APIProperty: databaseName
     * {String}
     */
    databaseName: 'ol',

    /**
     * APIProperty: tableName
     * Name of the database table into which Features should be saved.
     */
    tableName: "ol_vector_features",

    /**
     * Property: postReadFiltering
     * {Boolean} Whether the filter (if there's one) must be applied after
     *      the features have been read from the database; for example the
     *      BBOX strategy passes the read method a BBOX spatial filter, if
     *      postReadFiltering is true every feature read from the database
     *      will go through the BBOX spatial filter, which can be costly;
     *      defaults to true.
     */
    postReadFiltering: true,

    /**
     * Constructor: OpenLayers.Protocol.SQL
     */
    initialize: function(options) {
        OpenLayers.Protocol.prototype.initialize.apply(this, [options]);
    },

    /**
     * APIMethod: destroy
     * Clean up the protocol.
     */
    destroy: function() {
        OpenLayers.Protocol.prototype.destroy.apply(this);
    },

    /**
     * APIMethod: supported
     * This should be overridden by specific subclasses
     *
     * Returns:
     * {Boolean} Whether or not the browser supports the SQL backend
     */
    supported: function() {
        return false;
    },

    /**
     * Method: evaluateFilter
     * If postReadFiltering is true evaluate the filter against the feature
     * and return the result of the evaluation, otherwise return true.
     *
     * Parameters:
     * {<OpenLayers.Feature.Vector>} The feature.
     * {<OpenLayers.Filter>} The filter.
     *
     * Returns:
     * {Boolean} true if postReadFiltering if false, the result of the
     * filter evaluation otherwise.
     */
    evaluateFilter: function(feature, filter) {
        return filter && this.postReadFiltering ?
            filter.evaluate(feature) : true;
    },

    CLASS_NAME: "OpenLayers.Protocol.SQL"
});

/**
 * Class: OpenLayers.Protocol.SQL.Gears
 * This Protocol stores feature in the browser via the Gears Database module
 * <http://code.google.com/apis/gears/api_database.html>.
 *
 * The main advantage is that all the read, create, update and delete operations
 * can be done offline.
 *
 * Inherits from:
 *  - <OpenLayers.Protocol.SQL>
 */
OpenLayers.Protocol.SQL.Gears = OpenLayers.Class(OpenLayers.Protocol.SQL, {

    /**
     * Property: FID_PREFIX
     * {String}
     */
    FID_PREFIX: '__gears_fid__',

    /**
     * Property: NULL_GEOMETRY
     * {String}
     */
    NULL_GEOMETRY: '__gears_null_geometry__',

    /**
     * Property: NULL_FEATURE_STATE
     * {String}
     */
    NULL_FEATURE_STATE: '__gears_null_feature_state__',

    /**
     * Property: jsonParser
     * {<OpenLayers.Format.JSON>}
     */
    jsonParser: null,

    /**
     * Property: wktParser
     * {<OpenLayers.Format.WKT>}
     */
    wktParser: null,

    /**
     * Property: fidRegExp
     * {RegExp} Regular expression to know whether a feature was
     *      created in offline mode.
     */
    fidRegExp: null,

    /**
     * Property: saveFeatureState
     * {Boolean} Whether to save the feature state (<OpenLayers.State>)
     *      into the database, defaults to true.
     */
    saveFeatureState: true,

    /**
     * Property: typeOfFid
     * {String} The type of the feature identifier, either "number" or
     *      "string", defaults to "string".
     */
    typeOfFid: "string",

    /**
     * Property: db
     * {GearsDatabase}
     */
    db: null,

    /**
     * Constructor: OpenLayers.Protocol.SQL.Gears
     */
    initialize: function(options) {
        if (!this.supported()) {
            return;
        }
        OpenLayers.Protocol.SQL.prototype.initialize.apply(this, [options]);
        this.jsonParser = new OpenLayers.Format.JSON();
        this.wktParser = new OpenLayers.Format.WKT();

        this.fidRegExp = new RegExp('^' + this.FID_PREFIX);
        this.initializeDatabase();


    },

    /**
     * Method: initializeDatabase
     */
    initializeDatabase: function() {
        this.db = google.gears.factory.create('beta.database');
        this.db.open(this.databaseName);
        this.db.execute(
            "CREATE TABLE IF NOT EXISTS " + this.tableName +
            " (fid TEXT UNIQUE, geometry TEXT, properties TEXT," +
            "  state TEXT)");
   },

    /**
     * APIMethod: destroy
     * Clean up the protocol.
     */
    destroy: function() {
        this.db.close();
        this.db = null;

        this.jsonParser = null;
        this.wktParser = null;

        OpenLayers.Protocol.SQL.prototype.destroy.apply(this);
    },

    /**
     * APIMethod: supported
     * Determine whether a browser supports Gears
     *
     * Returns:
     * {Boolean} The browser supports Gears
     */
    supported: function() {
        return !!(window.google && google.gears);
    },

    /**
     * APIMethod: read
     * Read all features from the database and return a
     * <OpenLayers.Protocol.Response> instance. If the options parameter
     * contains a callback attribute, the function is called with the response
     * as a parameter.
     *
     * Parameters:
     * options - {Object} Optional object for configuring the request; it
     *      can have the {Boolean} property "noFeatureStateReset" which
     *      specifies if the state of features read from the Gears
     *      database must be reset to null, if "noFeatureStateReset"
     *      is undefined or false then each feature's state is reset
     *      to null, if "noFeatureStateReset" is true the feature state
     *      is preserved.
     *
     * Returns:
     * {<OpenLayers.Protocol.Response>} An <OpenLayers.Protocol.Response>
     *      object.
     */
    read: function(options) {
        OpenLayers.Protocol.prototype.read.apply(this, arguments);
        options = OpenLayers.Util.applyDefaults(options, this.options);

        var feature, features = [];
        var rs = this.db.execute("SELECT * FROM " + this.tableName);
        while (rs.isValidRow()) {
            feature = this.unfreezeFeature(rs);
            if (this.evaluateFilter(feature, options.filter)) {
                if (!options.noFeatureStateReset) {
                    feature.state = null;
                }
                features.push(feature);
            }
            rs.next();
        }
        rs.close();

        var resp = new OpenLayers.Protocol.Response({
            code: OpenLayers.Protocol.Response.SUCCESS,
            requestType: "read",
            features: features
        });

        if (options && options.callback) {
            options.callback.call(options.scope, resp);
        }

        return resp;
    },

    /**
     * Method: unfreezeFeature
     *
     * Parameters:
     * row - {ResultSet}
     *
     * Returns:
     * {<OpenLayers.Feature.Vector>}
     */
    unfreezeFeature: function(row) {
        var feature;
        var wkt = row.fieldByName('geometry');
        if (wkt == this.NULL_GEOMETRY) {
            feature = new OpenLayers.Feature.Vector();
        } else {
            feature = this.wktParser.read(wkt);
        }

        feature.attributes = this.jsonParser.read(
            row.fieldByName('properties'));

        feature.fid = this.extractFidFromField(row.fieldByName('fid'));

        var state = row.fieldByName('state');
        if (state == this.NULL_FEATURE_STATE) {
            state = null;
        }
        feature.state = state;

        return feature;
    },

    /**
     * Method: extractFidFromField
     *
     * Parameters:
     * field - {String}
     *
     * Returns
     * {String} or {Number} The fid.
     */
    extractFidFromField: function(field) {
        if (!field.match(this.fidRegExp) && this.typeOfFid == "number") {
            field = parseFloat(field);
        }
        return field;
    },

    /**
     * APIMethod: create
     * Create new features into the database.
     *
     * Parameters:
     * features - {Array({<OpenLayers.Feature.Vector>})} or
     *            {<OpenLayers.Feature.Vector>} The features to create in
     *            the database.
     * options - {Object} Optional object for configuring the request.
     *
     * Returns:
     *  {<OpenLayers.Protocol.Response>} An <OpenLayers.Protocol.Response>
     *          object.
     */
    create: function(features, options) {
        options = OpenLayers.Util.applyDefaults(options, this.options);

        var resp = this.createOrUpdate(features);
        resp.requestType = "create";

        if (options && options.callback) {
            options.callback.call(options.scope, resp);
        }

        return resp;
    },

    /**
     * APIMethod: update
     * Construct a request updating modified feature.
     *
     * Parameters:
     * features - {Array({<OpenLayers.Feature.Vector>})} or
     *            {<OpenLayers.Feature.Vector>} The features to update in
     *            the database.
     * options - {Object} Optional object for configuring the request.
     *
     * Returns:
     *  {<OpenLayers.Protocol.Response>} An <OpenLayers.Protocol.Response>
     *          object.
     */
    update: function(features, options) {
        options = OpenLayers.Util.applyDefaults(options, this.options);

        var resp = this.createOrUpdate(features);
        resp.requestType = "update";

        if (options && options.callback) {
            options.callback.call(options.scope, resp);
        }

        return resp;
    },

    /**
     * Method: createOrUpdate
     * Construct a request for updating or creating features in the
     * database.
     *
     * Parameters:
     * features - {Array({<OpenLayers.Feature.Vector>})} or
     *      {<OpenLayers.Feature.Vector>} The feature to create or update
     *      in the database.
     *
     * Returns:
     *  {<OpenLayers.Protocol.Response>} An <OpenLayers.Protocol.Response>
     *          object.
     */
    createOrUpdate: function(features) {
        if (!(OpenLayers.Util.isArray(features))) {
            features = [features];
        }

        var i, len = features.length, feature;
        var insertedFeatures = new Array(len);

        for (i = 0; i < len; i++) {
            feature = features[i];
            var params = this.freezeFeature(feature);
            this.db.execute(
                "REPLACE INTO " + this.tableName +
                " (fid, geometry, properties, state)" +
                " VALUES (?, ?, ?, ?)",
                params);

            var clone = feature.clone();
            clone.fid = this.extractFidFromField(params[0]);
            insertedFeatures[i] = clone;
        }

        return new OpenLayers.Protocol.Response({
            code: OpenLayers.Protocol.Response.SUCCESS,
            features: insertedFeatures,
            reqFeatures: features
        });
    },

    /**
     * Method: freezeFeature
     *
     * Parameters:
     * feature - {<OpenLayers.Feature.Vector>}
     * state - {String} The feature state to store in the database.
     *
     * Returns:
     * {Array}
     */
    freezeFeature: function(feature) {
        // 2 notes:
        // - fid might not be a string
        // - getFeatureStateForFreeze needs the feature fid to it's stored
        //   in the feature here
        feature.fid = feature.fid != null ?
            "" + feature.fid : OpenLayers.Util.createUniqueID(this.FID_PREFIX);

        var geometry = feature.geometry != null ?
            feature.geometry.toString() : this.NULL_GEOMETRY;

        var properties = this.jsonParser.write(feature.attributes);

        var state = this.getFeatureStateForFreeze(feature);

        return [feature.fid, geometry, properties, state];
    },

    /**
     * Method: getFeatureStateForFreeze
     * Get the state of the feature to store into the database.
     *
     * Parameters:
     * feature - {<OpenLayers.Feature.Vector>} The feature.
     *
     * Returns
     * {String} The state
     */
    getFeatureStateForFreeze: function(feature) {
        var state;
        if (!this.saveFeatureState) {
            state = this.NULL_FEATURE_STATE;
        } else if (this.createdOffline(feature)) {
            // if the feature was created in offline mode, its
            // state must remain INSERT
            state = OpenLayers.State.INSERT;
        } else {
            state = feature.state;
        }
        return state;
    },

    /**
     * APIMethod: delete
     * Delete features from the database.
     *
     * Parameters:
     * features - {Array({<OpenLayers.Feature.Vector>})} or
     *            {<OpenLayers.Feature.Vector>}
     * options - {Object} Optional object for configuring the request.
     *       This object is modified and should not be reused.
     *
     * Returns:
     *  {<OpenLayers.Protocol.Response>} An <OpenLayers.Protocol.Response>
     *          object.
     */
    "delete": function(features, options) {
        if (!(OpenLayers.Util.isArray(features))) {
            features = [features];
        }

        options = OpenLayers.Util.applyDefaults(options, this.options);

        var i, len, feature;
        for (i = 0, len = features.length; i < len; i++) {
            feature = features[i];

            // if saveFeatureState is set to true and if the feature wasn't created
            // in offline mode we don't delete it in the database but just update
            // it state column
            if (this.saveFeatureState && !this.createdOffline(feature)) {
                var toDelete = feature.clone();
                toDelete.fid = feature.fid;
                if (toDelete.geometry) {
                    toDelete.geometry.destroy();
                    toDelete.geometry = null;
                }
                toDelete.state = feature.state;
                this.createOrUpdate(toDelete);
            } else {
                this.db.execute(
                    "DELETE FROM " + this.tableName +
                    " WHERE fid = ?", [feature.fid]);
            }
        }

        var resp = new OpenLayers.Protocol.Response({
            code: OpenLayers.Protocol.Response.SUCCESS,
            requestType: "delete",
            reqFeatures: features
        });

        if (options && options.callback) {
            options.callback.call(options.scope, resp);
        }

        return resp;
    },

    /**
     * Method: createdOffline
     * Returns true if the feature had a feature id when it was created in
     *      the Gears database, false otherwise; this is determined by
     *      checking the form of the feature's fid value.
     *
     * Parameters:
     * feature - {<OpenLayers.Feature.Vector>}
     *
     * Returns:
     * {Boolean}
     */
    createdOffline: function(feature) {
        return (typeof feature.fid == "string" &&
                !!(feature.fid.match(this.fidRegExp)));
    },

    /**
     * APIMethod: commit
     * Go over the features and for each take action
     * based on the feature state. Possible actions are create,
     * update and delete.
     *
     * Parameters:
     * features - {Array({<OpenLayers.Feature.Vector>})}
     * options - {Object} Object whose possible keys are "create", "update",
     *      "delete", "callback" and "scope", the values referenced by the
     *      first three are objects as passed to the "create", "update", and
     *      "delete" methods, the value referenced by the "callback" key is
     *      a function which is called when the commit operation is complete
     *      using the scope referenced by the "scope" key.
     *
     * Returns:
     * {Array({<OpenLayers.Protocol.Response>})} An array of
     *       <OpenLayers.Protocol.Response> objects, one per request made
     *       to the database.
     */
    commit: function(features, options) {
        var opt, resp = [], nRequests = 0, nResponses = 0;

        function callback(resp) {
            if (++nResponses < nRequests) {
                resp.last = false;
            }
            this.callUserCallback(options, resp);
        }

        var feature, toCreate = [], toUpdate = [], toDelete = [];
        for (var i = features.length - 1; i >= 0; i--) {
            feature = features[i];
            switch (feature.state) {
            case OpenLayers.State.INSERT:
                toCreate.push(feature);
                break;
            case OpenLayers.State.UPDATE:
                toUpdate.push(feature);
                break;
            case OpenLayers.State.DELETE:
                toDelete.push(feature);
                break;
            }
        }
        if (toCreate.length > 0) {
            nRequests++;
            opt = OpenLayers.Util.applyDefaults(
                {"callback": callback, "scope": this},
                options.create
            );
            resp.push(this.create(toCreate, opt));
        }
        if (toUpdate.length > 0) {
            nRequests++;
            opt = OpenLayers.Util.applyDefaults(
                {"callback": callback, "scope": this},
                options.update
            );
            resp.push(this.update(toUpdate, opt));
        }
        if (toDelete.length > 0) {
            nRequests++;
            opt = OpenLayers.Util.applyDefaults(
                {"callback": callback, "scope": this},
                options["delete"]
            );
            resp.push(this["delete"](toDelete, opt));
        }

        return resp;
    },

    /**
     * Method: clear
     * Removes all rows of the table.
     */
    clear: function() {
        this.db.execute("DELETE FROM " + this.tableName);
    },

    /**
     * Method: callUserCallback
     * This method is called from within commit each time a request is made
     * to the database, it is responsible for calling the user-supplied
     * callbacks.
     *
     * Parameters:
     * options - {Object} The map of options passed to the commit call.
     * resp - {<OpenLayers.Protocol.Response>}
     */
    callUserCallback: function(options, resp) {
        var opt = options[resp.requestType];
        if (opt && opt.callback) {
            opt.callback.call(opt.scope, resp);
        }
        if (resp.last && options.callback) {
            options.callback.call(options.scope);
        }
    },

    CLASS_NAME: "OpenLayers.Protocol.SQL.Gears"
});

/**
 * Class: OpenLayers.Layer.Yahoo
 *
 * Inherits from:
 *  - <OpenLayers.Layer.EventPane>
 *  - <OpenLayers.Layer.FixedZoomLevels>
 */
OpenLayers.Layer.Yahoo = OpenLayers.Class(
  OpenLayers.Layer.EventPane, OpenLayers.Layer.FixedZoomLevels, {

    /**
     * Constant: MIN_ZOOM_LEVEL
     * {Integer} 0
     */
    MIN_ZOOM_LEVEL: 0,

    /**
     * Constant: MAX_ZOOM_LEVEL
     * {Integer} 17
     */
    MAX_ZOOM_LEVEL: 17,

    /**
     * Constant: RESOLUTIONS
     * {Array(Float)} Hardcode these resolutions so that they are more closely
     *                tied with the standard wms projection
     */
    RESOLUTIONS: [
        1.40625,
        0.703125,
        0.3515625,
        0.17578125,
        0.087890625,
        0.0439453125,
        0.02197265625,
        0.010986328125,
        0.0054931640625,
        0.00274658203125,
        0.001373291015625,
        0.0006866455078125,
        0.00034332275390625,
        0.000171661376953125,
        0.0000858306884765625,
        0.00004291534423828125,
        0.00002145767211914062,
        0.00001072883605957031
    ],

    /**
     * APIProperty: type
     * {YahooMapType}
     */
    type: null,

    /**
     * APIProperty: wrapDateLine
     * {Boolean} Allow user to pan forever east/west.  Default is true.
     *     Setting this to false only restricts panning if
     *     <sphericalMercator> is true.
     */
    wrapDateLine: true,

    /**
     * APIProperty: sphericalMercator
     * {Boolean} Should the map act as a mercator-projected map? This will
     * cause all interactions with the map to be in the actual map projection,
     * which allows support for vector drawing, overlaying other maps, etc.
     */
    sphericalMercator: false,

    /**
     * Constructor: OpenLayers.Layer.Yahoo
     *
     * Parameters:
     * name - {String}
     * options - {Object}
     */
    initialize: function(name, options) {
        OpenLayers.Layer.EventPane.prototype.initialize.apply(this, arguments);
        OpenLayers.Layer.FixedZoomLevels.prototype.initialize.apply(this,
                                                                    arguments);
        if(this.sphericalMercator) {
            OpenLayers.Util.extend(this, OpenLayers.Layer.SphericalMercator);
            this.initMercatorParameters();
        }
    },

    /**
     * Method: loadMapObject
     */
    loadMapObject:function() {
        try { //do not crash!
            var size = this.getMapObjectSizeFromOLSize(this.map.getSize());
            this.mapObject = new YMap(this.div, this.type, size);
            this.mapObject.disableKeyControls();
            this.mapObject.disableDragMap();

            //can we do smooth panning? (moveByXY is not an API function)
            if ( !this.mapObject.moveByXY ||
                 (typeof this.mapObject.moveByXY != "function" ) ) {

                this.dragPanMapObject = null;
            }
        } catch(e) {}
    },

    /**
     * Method: onMapResize
     *
     */
    onMapResize: function() {
        try {
            var size = this.getMapObjectSizeFromOLSize(this.map.getSize());
            this.mapObject.resizeTo(size);
        } catch(e) {}
    },


    /**
     * APIMethod: setMap
     * Overridden from EventPane because we need to remove this yahoo event
     *     pane which prohibits our drag and drop, and we can only do this
     *     once the map has been loaded and centered.
     *
     * Parameters:
     * map - {<OpenLayers.Map>}
     */
    setMap: function(map) {
        OpenLayers.Layer.EventPane.prototype.setMap.apply(this, arguments);

        this.map.events.register("moveend", this, this.fixYahooEventPane);
    },

    /**
     * Method: fixYahooEventPane
     * The map has been centered, so the mysterious yahoo eventpane has been
     *     added. we remove it so that it doesnt mess with *our* event pane.
     */
    fixYahooEventPane: function() {
        var yahooEventPane = OpenLayers.Util.getElement("ygddfdiv");
        if (yahooEventPane != null) {
            if (yahooEventPane.parentNode != null) {
                yahooEventPane.parentNode.removeChild(yahooEventPane);
            }
            this.map.events.unregister("moveend", this,
                                       this.fixYahooEventPane);
        }
    },

    /**
     * APIMethod: getWarningHTML
     *
     * Returns:
     * {String} String with information on why layer is broken, how to get
     *          it working.
     */
    getWarningHTML:function() {
        return OpenLayers.i18n(
            "getLayerWarning", {'layerType':'Yahoo', 'layerLib':'Yahoo'}
        );
    },

  /********************************************************/
  /*                                                      */
  /*             Translation Functions                    */
  /*                                                      */
  /*    The following functions translate GMaps and OL    */
  /*     formats for Pixel, LonLat, Bounds, and Zoom      */
  /*                                                      */
  /********************************************************/


  //
  // TRANSLATION: MapObject Zoom <-> OpenLayers Zoom
  //

    /**
     * APIMethod: getOLZoomFromMapObjectZoom
     *
     * Parameters:
     * gZoom - {Integer}
     *
     * Returns:
     * {Integer} An OpenLayers Zoom level, translated from the passed in gZoom
     *           Returns null if null value is passed in.
     */
    getOLZoomFromMapObjectZoom: function(moZoom) {
        var zoom = null;
        if (moZoom != null) {
            zoom = OpenLayers.Layer.FixedZoomLevels.prototype.getOLZoomFromMapObjectZoom.apply(this, [moZoom]);
            zoom = 18 - zoom;
        }
        return zoom;
    },

    /**
     * APIMethod: getMapObjectZoomFromOLZoom
     *
     * Parameters:
     * olZoom - {Integer}
     *
     * Returns:
     * {Integer} A MapObject level, translated from the passed in olZoom
     *           Returns null if null value is passed in
     */
    getMapObjectZoomFromOLZoom: function(olZoom) {
        var zoom = null;
        if (olZoom != null) {
            zoom = OpenLayers.Layer.FixedZoomLevels.prototype.getMapObjectZoomFromOLZoom.apply(this, [olZoom]);
            zoom = 18 - zoom;
        }
        return zoom;
    },

    /************************************
     *                                  *
     *   MapObject Interface Controls   *
     *                                  *
     ************************************/


  // Get&Set Center, Zoom

    /**
     * APIMethod: setMapObjectCenter
     * Set the mapObject to the specified center and zoom
     *
     * Parameters:
     * center - {Object} MapObject LonLat format
     * zoom - {int} MapObject zoom format
     */
    setMapObjectCenter: function(center, zoom) {
        this.mapObject.drawZoomAndCenter(center, zoom);
    },

    /**
     * APIMethod: getMapObjectCenter
     *
     * Returns:
     * {Object} The mapObject's current center in Map Object format
     */
    getMapObjectCenter: function() {
        return this.mapObject.getCenterLatLon();
    },

    /**
     * APIMethod: dragPanMapObject
     *
     * Parameters:
     * dX - {Integer}
     * dY - {Integer}
     */
    dragPanMapObject: function(dX, dY) {
        this.mapObject.moveByXY({
            'x': -dX,
            'y': dY
        });
    },

    /**
     * APIMethod: getMapObjectZoom
     *
     * Returns:
     * {Integer} The mapObject's current zoom, in Map Object format
     */
    getMapObjectZoom: function() {
        return this.mapObject.getZoomLevel();
    },


  // LonLat - Pixel Translation

    /**
     * APIMethod: getMapObjectLonLatFromMapObjectPixel
     *
     * Parameters:
     * moPixel - {Object} MapObject Pixel format
     *
     * Returns:
     * {Object} MapObject LonLat translated from MapObject Pixel
     */
    getMapObjectLonLatFromMapObjectPixel: function(moPixel) {
        return this.mapObject.convertXYLatLon(moPixel);
    },

    /**
     * APIMethod: getMapObjectPixelFromMapObjectLonLat
     *
     * Parameters:
     * moLonLat - {Object} MapObject LonLat format
     *
     * Returns:
     * {Object} MapObject Pixel transtlated from MapObject LonLat
     */
    getMapObjectPixelFromMapObjectLonLat: function(moLonLat) {
        return this.mapObject.convertLatLonXY(moLonLat);
    },


    /************************************
     *                                  *
     *       MapObject Primitives       *
     *                                  *
     ************************************/


  // LonLat

    /**
     * APIMethod: getLongitudeFromMapObjectLonLat
     *
     * Parameters:
     * moLonLat - {Object} MapObject LonLat format
     *
     * Returns:
     * {Float} Longitude of the given MapObject LonLat
     */
    getLongitudeFromMapObjectLonLat: function(moLonLat) {
        return this.sphericalMercator ?
            this.forwardMercator(moLonLat.Lon, moLonLat.Lat).lon :
            moLonLat.Lon;
    },

    /**
     * APIMethod: getLatitudeFromMapObjectLonLat
     *
     * Parameters:
     * moLonLat - {Object} MapObject LonLat format
     *
     * Returns:
     * {Float} Latitude of the given MapObject LonLat
     */
    getLatitudeFromMapObjectLonLat: function(moLonLat) {
        return this.sphericalMercator ?
            this.forwardMercator(moLonLat.Lon, moLonLat.Lat).lat :
            moLonLat.Lat;
    },

    /**
     * APIMethod: getMapObjectLonLatFromLonLat
     *
     * Parameters:
     * lon - {Float}
     * lat - {Float}
     *
     * Returns:
     * {Object} MapObject LonLat built from lon and lat params
     */
    getMapObjectLonLatFromLonLat: function(lon, lat) {
        var yLatLong;
        if(this.sphericalMercator) {
            var lonlat = this.inverseMercator(lon, lat);
            yLatLong = new YGeoPoint(lonlat.lat, lonlat.lon);
        } else {
            yLatLong = new YGeoPoint(lat, lon);
        }
        return yLatLong;
    },

  // Pixel

    /**
     * APIMethod: getXFromMapObjectPixel
     *
     * Parameters:
     * moPixel - {Object} MapObject Pixel format
     *
     * Returns:
     * {Integer} X value of the MapObject Pixel
     */
    getXFromMapObjectPixel: function(moPixel) {
        return moPixel.x;
    },

    /**
     * APIMethod: getYFromMapObjectPixel
     *
     * Parameters:
     * moPixel - {Object} MapObject Pixel format
     *
     * Returns:
     * {Integer} Y value of the MapObject Pixel
     */
    getYFromMapObjectPixel: function(moPixel) {
        return moPixel.y;
    },

    /**
     * APIMethod: getMapObjectPixelFromXY
     *
     * Parameters:
     * x - {Integer}
     * y - {Integer}
     *
     * Returns:
     * {Object} MapObject Pixel from x and y parameters
     */
    getMapObjectPixelFromXY: function(x, y) {
        return new YCoordPoint(x, y);
    },

  // Size

    /**
     * APIMethod: getMapObjectSizeFromOLSize
     *
     * Parameters:
     * olSize - {<OpenLayers.Size>}
     *
     * Returns:
     * {Object} MapObject Size from olSize parameter
     */
    getMapObjectSizeFromOLSize: function(olSize) {
        return new YSize(olSize.w, olSize.h);
    },

    CLASS_NAME: "OpenLayers.Layer.Yahoo"
});

/**
 * Class: OpenLayers.Layer.GML
 * Create a vector layer by parsing a GML file. The GML file is
 *     passed in as a parameter.
 * *Deprecated*.  To be removed in 3.0.  Instead use OpenLayers.Layer.Vector
 *     with Protocol.HTTP and Strategy.Fixed. Provide the protocol with a
 *     format parameter to get the parser you want for your data.
 *
 * Inherits from:
 *  - <OpenLayers.Layer.Vector>
 */
OpenLayers.Layer.GML = OpenLayers.Class(OpenLayers.Layer.Vector, {

    /**
      * Property: loaded
      * {Boolean} Flag for whether the GML data has been loaded yet.
      */
    loaded: false,

    /**
      * APIProperty: format
      * {<OpenLayers.Format>} The format you want the data to be parsed with.
      */
    format: null,

    /**
     * APIProperty: formatOptions
     * {Object} Hash of options which should be passed to the format when it is
     * created. Must be passed in the constructor.
     */
    formatOptions: null,

    /**
     * Constructor: OpenLayers.Layer.GML
     * Load and parse a single file on the web, according to the format
     * provided via the 'format' option, defaulting to GML.
     *
     * Parameters:
     * name - {String}
     * url - {String} URL of a GML file.
     * options - {Object} Hashtable of extra options to tag onto the layer.
     */
     initialize: function(name, url, options) {
        var newArguments = [];
        newArguments.push(name, options);
        OpenLayers.Layer.Vector.prototype.initialize.apply(this, newArguments);
        this.url = url;
    },

    /**
     * APIMethod: setVisibility
     * Set the visibility flag for the layer and hide/show&redraw accordingly.
     * Fire event unless otherwise specified
     * GML will be loaded if the layer is being made visible for the first
     * time.
     *
     * Parameters:
     * visible - {Boolean} Whether or not to display the layer
     *                          (if in range)
     * noEvent - {Boolean}
     */
    setVisibility: function(visibility, noEvent) {
        OpenLayers.Layer.Vector.prototype.setVisibility.apply(this, arguments);
        if(this.visibility && !this.loaded){
            // Load the GML
            this.loadGML();
        }
    },

    /**
     * Method: moveTo
     * If layer is visible and GML has not been loaded, load GML, then load GML
     * and call OpenLayers.Layer.Vector.moveTo() to redraw at the new location.
     *
     * Parameters:
     * bounds - {Object}
     * zoomChanged - {Object}
     * minor - {Object}
     */
    moveTo:function(bounds, zoomChanged, minor) {
        OpenLayers.Layer.Vector.prototype.moveTo.apply(this, arguments);
        // Wait until initialisation is complete before loading GML
        // otherwise we can get a race condition where the root HTML DOM is
        // loaded after the GML is paited.
        // See http://trac.openlayers.org/ticket/404
        if(this.visibility && !this.loaded){
            this.loadGML();
        }
    },

    /**
     * Method: loadGML
     */
    loadGML: function() {
        if (!this.loaded) {
            this.events.triggerEvent("loadstart");
            OpenLayers.Request.GET({
                url: this.url,
                success: this.requestSuccess,
                failure: this.requestFailure,
                scope: this
            });
            this.loaded = true;
        }
    },

    /**
     * Method: setUrl
     * Change the URL and reload the GML
     *
     * Parameters:
     * url - {String} URL of a GML file.
     */
    setUrl:function(url) {
        this.url = url;
        this.destroyFeatures();
        this.loaded = false;
        this.loadGML();
    },

    /**
     * Method: requestSuccess
     * Process GML after it has been loaded.
     * Called by initialize() and loadUrl() after the GML has been loaded.
     *
     * Parameters:
     * request - {String}
     */
    requestSuccess:function(request) {
        var doc = request.responseXML;

        if (!doc || !doc.documentElement) {
            doc = request.responseText;
        }

        var options = {};

        OpenLayers.Util.extend(options, this.formatOptions);
        if (this.map && !this.projection.equals(this.map.getProjectionObject())) {
            options.externalProjection = this.projection;
            options.internalProjection = this.map.getProjectionObject();
        }

        var gml = this.format ? new this.format(options) : new OpenLayers.Format.GML(options);
        this.addFeatures(gml.read(doc));
        this.events.triggerEvent("loadend");
    },

    /**
     * Method: requestFailure
     * Process a failed loading of GML.
     * Called by initialize() and loadUrl() if there was a problem loading GML.
     *
     * Parameters:
     * request - {String}
     */
    requestFailure: function(request) {
        OpenLayers.Console.userError('Error in loading GML file ' +  this.url);
        this.events.triggerEvent("loadend");
    },

    CLASS_NAME: "OpenLayers.Layer.GML"
});

/**
 * Class: OpenLayers.Geometry.Rectangle
 * This class is *not supported*, and probably isn't what you're looking for.
 *     Instead, most users probably want something like:
 *     (code)
 *     var poly = new OpenLayers.Bounds(0,0,10,10).toGeometry();
 *     (end)
 *     This will create a rectangular Polygon geometry. 
 * 
 * Inherits:
 *  - <OpenLayers.Geometry>
 */

OpenLayers.Geometry.Rectangle = OpenLayers.Class(OpenLayers.Geometry, {

    /** 
     * Property: x
     * {Float}
     */
    x: null,

    /** 
     * Property: y
     * {Float}
     */
    y: null,

    /** 
     * Property: width
     * {Float}
     */
    width: null,

    /** 
     * Property: height
     * {Float}
     */
    height: null,

    /**
     * Constructor: OpenLayers.Geometry.Rectangle
     * 
     * Parameters:
     * points - {Array(<OpenLayers.Geometry.Point>)}
     */
    initialize: function(x, y, width, height) {
        OpenLayers.Geometry.prototype.initialize.apply(this, arguments);
        
        this.x = x;
        this.y = y;

        this.width = width;
        this.height = height;
    },
    
    /**
     * Method: calculateBounds
     * Recalculate the bounds for the geometry.
     */
    calculateBounds: function() {
        this.bounds = new OpenLayers.Bounds(this.x, this.y,
                                            this.x + this.width, 
                                            this.y + this.height);
    },
    
    
    /**
     * APIMethod: getLength
     * 
     * Returns:
     * {Float} The length of the geometry
     */
    getLength: function() {
        var length = (2 * this.width) + (2 * this.height);
        return length;
    },

    /**
     * APIMethod: getArea
     * 
     * Returns:
     * {Float} The area of the geometry
     */
    getArea: function() {
        var area = this.width * this.height;
        return area;
    },    

    CLASS_NAME: "OpenLayers.Geometry.Rectangle"
});

/**
 * Class: OpenLayers.Renderer.NG
 *
 * Inherits from:
 *  - <OpenLayers.Renderer.Elements>
 */
OpenLayers.Renderer.NG = OpenLayers.Class(OpenLayers.Renderer.Elements, {

    /**
     * Constant: labelNodeType
     * {String} The node type for text label containers. To be defined by
     * subclasses.
     */
    labelNodeType: null,

    /**
     * Constructor: OpenLayers.Renderer.NG
     *
     * Parameters:
     * containerID - {String}
     * options - {Object} options for this renderer. Supported options are:
     *     * yOrdering - {Boolean} Whether to use y-ordering
     *     * zIndexing - {Boolean} Whether to use z-indexing. Will be ignored
     *         if yOrdering is set to true.
     */

    /**
     * Method: updateDimensions
     * To be extended by subclasses - here we set positioning related styles
     * on HTML elements, subclasses have to do the same for renderer specific
     * elements (e.g. viewBox, width and height of the rendererRoot)
     *
     * Parameters:
     * zoomChanged - {Boolean} Has the zoom changed? If so, subclasses may have
     *     to update feature styles/dimensions.
     */
    updateDimensions: function(zoomChanged) {
        var mapExtent = this.map.getExtent();
        var renderExtent = mapExtent.scale(3);
        this.setExtent(renderExtent, true);
        var res = this.getResolution();
        var div = this.rendererRoot.parentNode;
        var layerLeft = parseFloat(div.parentNode.style.left);
        var layerTop = parseFloat(div.parentNode.style.top);
        div.style.left = ((renderExtent.left - mapExtent.left) / res - layerLeft) + "px";
        div.style.top = ((mapExtent.top - renderExtent.top) / res - layerTop) + "px";
    },

    /**
     * Method: resize
     */
    setSize: function() {
        this.map.getExtent() && this.updateDimensions();
    },

    /**
     * Method: drawFeature
     * Draw the feature.  The optional style argument can be used
     * to override the feature's own style.  This method should only
     * be called from layer.drawFeature().
     *
     * Parameters:
     * feature - {<OpenLayers.Feature.Vector>}
     * style - {<Object>}
     *
     * Returns:
     * {Boolean} true if the feature has been drawn completely, false if not,
     *     undefined if the feature had no geometry
     */
    drawFeature: function(feature, style) {
        if(style == null) {
            style = feature.style;
        }
        if (feature.geometry) {
            var rendered = this.drawGeometry(feature.geometry, style, feature.id);
            if(rendered !== false && style.label) {
                var location = feature.geometry.getCentroid();
                this.drawText(feature.id, style, location);
            } else {
                this.removeText(feature.id);
            }
            return rendered;
        }
    },

    /**
     * Method: drawText
     * Function for drawing text labels.
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * featureId - {String|DOMElement}
     * style - {Object}
     * location - {<OpenLayers.Geometry.Point>}, will be modified inline
     *
     * Returns:
     * {DOMElement} container holding the text label (to be populated by
     * subclasses)
     */
    drawText: function(featureId, style, location) {
        var label;
        if (typeof featureId !== "string") {
            label = featureId;
        } else {
            label = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX, this.labelNodeType);
            label._featureId = featureId;
        }
        label._style = style;
        label._x = location.x;
        label._y = location.y;
        if(style.labelXOffset || style.labelYOffset) {
            var xOffset = isNaN(style.labelXOffset) ? 0 : style.labelXOffset;
            var yOffset = isNaN(style.labelYOffset) ? 0 : style.labelYOffset;
            var res = this.getResolution();
            location.move(xOffset*res, yOffset*res);
        }

        if(label.parentNode !== this.textRoot) {
            this.textRoot.appendChild(label);
        }

        return label;
    },

    CLASS_NAME: "OpenLayers.Renderer.NG"
});

// Monkey-patching Layer.Vector for Renderer.NG support
(function() {
    var moveTo = OpenLayers.Layer.Vector.prototype.moveTo;
    OpenLayers.Layer.Vector.prototype.moveTo = function(bounds, zoomChanged, dragging) {
        if (OpenLayers.Renderer.NG && this.renderer instanceof OpenLayers.Renderer.NG) {
            OpenLayers.Layer.prototype.moveTo.apply(this, arguments);
            dragging || this.renderer.updateDimensions(zoomChanged);
            if (!this.drawn) {
                this.drawn = true;
                var feature;
                for(var i=0, len=this.features.length; i<len; i++) {
                    this.renderer.locked = (i !== (len - 1));
                    feature = this.features[i];
                    this.drawFeature(feature);
                }
            }
        } else {
            moveTo.apply(this, arguments);
        }
    }
    var redraw = OpenLayers.Layer.Vector.prototype.redraw;
    OpenLayers.Layer.Vector.prototype.redraw = function() {
        if (OpenLayers.Renderer.NG && this.renderer instanceof OpenLayers.Renderer.NG) {
            this.drawn = false;
        }
        redraw.apply(this, arguments);
    }
})();

/**
 * Class: OpenLayers.Renderer.SVG2
 *
 * Inherits from:
 *  - <OpenLayers.Renderer.NG>
 */
OpenLayers.Renderer.SVG2 = OpenLayers.Class(OpenLayers.Renderer.NG, {

    /**
     * Property: xmlns
     * {String}
     */
    xmlns: "http://www.w3.org/2000/svg",

    /**
     * Property: xlinkns
     * {String}
     */
    xlinkns: "http://www.w3.org/1999/xlink",

    /**
     * Property: symbolMetrics
     * {Object} Cache for symbol metrics according to their svg coordinate
     *     space. This is an object keyed by the symbol's id, and values are
     *     an object with size, x and y properties.
     */
    symbolMetrics: null,

    /**
     * Constant: labelNodeType
     * {String} The node type for text label containers.
     */
    labelNodeType: "g",

    /**
     * Constructor: OpenLayers.Renderer.SVG2
     *
     * Parameters:
     * containerID - {String}
     */
    initialize: function(containerID) {
        if (!this.supported()) {
            return;
        }
        OpenLayers.Renderer.Elements.prototype.initialize.apply(this,
                                                                arguments);

        this.symbolMetrics = {};
    },

    /**
     * APIMethod: supported
     *
     * Returns:
     * {Boolean} Whether or not the browser supports the SVG renderer
     */
    supported: function() {
        var svgFeature = "http://www.w3.org/TR/SVG11/feature#";
        return (document.implementation &&
           (document.implementation.hasFeature("org.w3c.svg", "1.0") ||
            document.implementation.hasFeature(svgFeature + "SVG", "1.1") ||
            document.implementation.hasFeature(svgFeature + "BasicStructure", "1.1") ));
    },

    /**
     * Method: updateDimensions
     *
     * Parameters:
     * zoomChanged - {Boolean}
     */
    updateDimensions: function(zoomChanged) {
        OpenLayers.Renderer.NG.prototype.updateDimensions.apply(this, arguments);

        var res = this.getResolution();

        var width = this.extent.getWidth();
        var height = this.extent.getHeight();

        var extentString = [
            this.extent.left,
            -this.extent.top,
            width,
            height
        ].join(" ");
        this.rendererRoot.setAttributeNS(null, "viewBox", extentString);
        this.rendererRoot.setAttributeNS(null, "width", width / res);
        this.rendererRoot.setAttributeNS(null, "height", height / res);

        if (zoomChanged === true) {
            // update styles for the new resolution
            var i, len;
            var nodes = this.vectorRoot.childNodes;
            for (i=0, len=nodes.length; i<len; ++i) {
                this.setStyle(nodes[i]);
            }
            var textNodes = this.textRoot.childNodes;
            var label;
            for (i=0, len=textNodes.length; i<len; ++i) {
                label = textNodes[i];
                this.drawText(label, label._style,
                    new OpenLayers.Geometry.Point(label._x, label._y)
                );
            }
        }
    },

    /**
     * Method: getNodeType
     *
     * Parameters:
     * geometry - {<OpenLayers.Geometry>}
     * style - {Object}
     *
     * Returns:
     * {String} The corresponding node type for the specified geometry
     */
    getNodeType: function(geometry, style) {
        var nodeType = null;
        switch (geometry.CLASS_NAME) {
            case "OpenLayers.Geometry.Point":
                if (style.externalGraphic) {
                    nodeType = "image";
                } else if (this.isComplexSymbol(style.graphicName)) {
                    nodeType = "svg";
                } else {
                    nodeType = "circle";
                }
                break;
            case "OpenLayers.Geometry.Rectangle":
                nodeType = "rect";
                break;
            case "OpenLayers.Geometry.LineString":
                nodeType = "polyline";
                break;
            case "OpenLayers.Geometry.LinearRing":
                nodeType = "polygon";
                break;
            case "OpenLayers.Geometry.Polygon":
            case "OpenLayers.Geometry.Curve":
                nodeType = "path";
                break;
            default:
                break;
        }
        return nodeType;
    },

    /**
     * Method: setStyle
     * Use to set all the style attributes to a SVG node.
     *
     * Takes care to adjust stroke width and point radius to be
     * resolution-relative
     *
     * Parameters:
     * node - {SVGDomElement} An SVG element to decorate
     * style - {Object}
     * options - {Object} Currently supported options include
     *                              'isFilled' {Boolean} and
     *                              'isStroked' {Boolean}
     */
    setStyle: function(node, style, options) {
        style = style  || node._style;
        options = options || node._options;
        var resolution = this.getResolution();
        var r = node._radius;
        var widthFactor = resolution;
        if (node._geometryClass == "OpenLayers.Geometry.Point" && r) {
            node.style.visibility = "";
            if (style.graphic === false) {
                node.style.visibility = "hidden";
            } else if (style.externalGraphic) {

                if (style.graphicTitle) {
                    node.setAttributeNS(null, "title", style.graphicTitle);
                    //Standards-conformant SVG
                    // Prevent duplicate nodes. See issue https://github.com/openlayers/openlayers/issues/92
                    var titleNode = node.getElementsByTagName("title");
                    if (titleNode.length > 0) {
                        titleNode[0].firstChild.textContent = style.graphicTitle;
                    } else {
                        var label = this.nodeFactory(null, "title");
                        label.textContent = style.graphicTitle;
                        node.appendChild(label);
                    }
                }
                if (style.graphicWidth && style.graphicHeight) {
                    node.setAttributeNS(null, "preserveAspectRatio", "none");
                }
                var width = style.graphicWidth || style.graphicHeight;
                var height = style.graphicHeight || style.graphicWidth;
                width = width ? width : style.pointRadius*2;
                height = height ? height : style.pointRadius*2;
                width *= resolution;
                height *= resolution;

                var xOffset = (style.graphicXOffset != undefined) ?
                    style.graphicXOffset * resolution : -(0.5 * width);
                var yOffset = (style.graphicYOffset != undefined) ?
                    style.graphicYOffset * resolution : -(0.5 * height);

                var opacity = style.graphicOpacity || style.fillOpacity;

                node.setAttributeNS(null, "x", node._x + xOffset);
                node.setAttributeNS(null, "y", node._y + yOffset);
                node.setAttributeNS(null, "width", width);
                node.setAttributeNS(null, "height", height);
                node.setAttributeNS(this.xlinkns, "href", style.externalGraphic);
                node.setAttributeNS(null, "style", "opacity: "+opacity);
                node.onclick = OpenLayers.Renderer.SVG2.preventDefault;
            } else if (this.isComplexSymbol(style.graphicName)) {
                // the symbol viewBox is three times as large as the symbol
                var offset = style.pointRadius * 3 * resolution;
                var size = offset * 2;
                var src = this.importSymbol(style.graphicName);
                widthFactor = this.symbolMetrics[src.id].size * 3 / size * resolution;

                // remove the node from the dom before we modify it. This
                // prevents various rendering issues in Safari and FF
                var parent = node.parentNode;
                var nextSibling = node.nextSibling;
                if(parent) {
                    parent.removeChild(node);
                }

                // The more appropriate way to implement this would be use/defs,
                // but due to various issues in several browsers, it is safer to
                // copy the symbols instead of referencing them.
                // See e.g. ticket http://trac.osgeo.org/openlayers/ticket/2985
                // and this email thread
                // http://osgeo-org.1803224.n2.nabble.com/Select-Control-Ctrl-click-on-Feature-with-a-graphicName-opens-new-browser-window-tc5846039.html
                node.firstChild && node.removeChild(node.firstChild);
                node.appendChild(src.firstChild.cloneNode(true));
                node.setAttributeNS(null, "viewBox", src.getAttributeNS(null, "viewBox"));

                node.setAttributeNS(null, "width", size);
                node.setAttributeNS(null, "height", size);
                node.setAttributeNS(null, "x", node._x - offset);
                node.setAttributeNS(null, "y", node._y - offset);

                // now that the node has all its new properties, insert it
                // back into the dom where it was
                if(nextSibling) {
                    parent.insertBefore(node, nextSibling);
                } else if(parent) {
                    parent.appendChild(node);
                }
            } else {
                node.setAttributeNS(null, "r", style.pointRadius * resolution);
            }

            var rotation = style.rotation;
            if (rotation !== undefined || node._rotation !== undefined) {
                node._rotation = rotation;
                rotation |= 0;
                if (node.nodeName !== "svg") {
                    node.setAttributeNS(null, "transform",
                        ["rotate(", rotation, node._x, node._y, ")"].join(" ")
                    );
                } else {
                    var metrics = this.symbolMetrics[src.id];
                    node.firstChild.setAttributeNS(null, "transform",
                        ["rotate(", rotation, metrics.x, metrics.y, ")"].join(" ")
                    );
                }
            }
        }

        if (options.isFilled) {
            node.setAttributeNS(null, "fill", style.fillColor);
            node.setAttributeNS(null, "fill-opacity", style.fillOpacity);
        } else {
            node.setAttributeNS(null, "fill", "none");
        }

        if (options.isStroked) {
            node.setAttributeNS(null, "stroke", style.strokeColor);
            node.setAttributeNS(null, "stroke-opacity", style.strokeOpacity);
            node.setAttributeNS(null, "stroke-width", style.strokeWidth * widthFactor);
            node.setAttributeNS(null, "stroke-linecap", style.strokeLinecap || "round");
            // Hard-coded linejoin for now, to make it look the same as in VML.
            // There is no strokeLinejoin property yet for symbolizers.
            node.setAttributeNS(null, "stroke-linejoin", "round");
            style.strokeDashstyle && node.setAttributeNS(null,
                "stroke-dasharray", this.dashStyle(style, widthFactor));
        } else {
            node.setAttributeNS(null, "stroke", "none");
        }

        if (style.pointerEvents) {
            node.setAttributeNS(null, "pointer-events", style.pointerEvents);
        }

        if (style.cursor != null) {
            node.setAttributeNS(null, "cursor", style.cursor);
        }

        return node;
    },

    /**
     * Method: dashStyle
     *
     * Parameters:
     * style - {Object}
     * widthFactor - {Number}
     *
     * Returns:
     * {String} A SVG compliant 'stroke-dasharray' value
     */
    dashStyle: function(style, widthFactor) {
        var w = style.strokeWidth * widthFactor;
        var str = style.strokeDashstyle;
        switch (str) {
            case 'solid':
                return 'none';
            case 'dot':
                return [widthFactor, 4 * w].join();
            case 'dash':
                return [4 * w, 4 * w].join();
            case 'dashdot':
                return [4 * w, 4 * w, widthFactor, 4 * w].join();
            case 'longdash':
                return [8 * w, 4 * w].join();
            case 'longdashdot':
                return [8 * w, 4 * w, widthFactor, 4 * w].join();
            default:
                var parts = OpenLayers.String.trim(str).split(/\s+/g);
                for (var i=0, ii=parts.length; i<ii; i++) {
                    parts[i] = parts[i] * widthFactor;
                }
                return parts.join();
        }
    },

    /**
     * Method: createNode
     *
     * Parameters:
     * type - {String} Kind of node to draw
     * id - {String} Id for node
     *
     * Returns:
     * {DOMElement} A new node of the given type and id
     */
    createNode: function(type, id) {
        var node = document.createElementNS(this.xmlns, type);
        if (id) {
            node.setAttributeNS(null, "id", id);
        }
        return node;
    },

    /**
     * Method: nodeTypeCompare
     *
     * Parameters:
     * node - {SVGDomElement} An SVG element
     * type - {String} Kind of node
     *
     * Returns:
     * {Boolean} Whether or not the specified node is of the specified type
     */
    nodeTypeCompare: function(node, type) {
        return (type == node.nodeName);
    },

    /**
     * Method: createRenderRoot
     *
     * Returns:
     * {DOMElement} The specific render engine's root element
     */
    createRenderRoot: function() {
        return this.nodeFactory(this.container.id + "_svgRoot", "svg");
    },

    /**
     * Method: createRoot
     *
     * Parameters:
     * suffix - {String} suffix to append to the id
     *
     * Returns:
     * {DOMElement}
     */
    createRoot: function(suffix) {
        return this.nodeFactory(this.container.id + suffix, "g");
    },

    /**
     * Method: createDefs
     *
     * Returns:
     * {DOMElement} The element to which we'll add the symbol definitions
     */
    createDefs: function() {
        var defs = this.nodeFactory(this.container.id + "_defs", "defs");
        this.rendererRoot.appendChild(defs);
        return defs;
    },

    /**************************************
     *                                    *
     *     GEOMETRY DRAWING FUNCTIONS     *
     *                                    *
     **************************************/

    /**
     * Method: drawPoint
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * node - {DOMElement}
     * geometry - {<OpenLayers.Geometry>}
     *
     * Returns:
     * {DOMElement} or false if the renderer could not draw the point
     */
    drawPoint: function(node, geometry) {
        return this.drawCircle(node, geometry, 1);
    },

    /**
     * Method: drawCircle
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * node - {DOMElement}
     * geometry - {<OpenLayers.Geometry>}
     * radius - {Float}
     *
     * Returns:
     * {DOMElement} or false if the renderer could not draw the circle
     */
    drawCircle: function(node, geometry, radius) {
        var x = geometry.x;
        var y = -geometry.y;
        node.setAttributeNS(null, "cx", x);
        node.setAttributeNS(null, "cy", y);
        node._x = x;
        node._y = y;
        node._radius = radius;
        return node;
    },

    /**
     * Method: drawLineString
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * node - {DOMElement}
     * geometry - {<OpenLayers.Geometry>}
     *
     * Returns:
     * {DOMElement} or null if the renderer could not draw all components of
     *     the linestring, or false if nothing could be drawn
     */
    drawLineString: function(node, geometry) {
        var path = this.getComponentsString(geometry.components);
        node.setAttributeNS(null, "points", path);
        return node;
    },

    /**
     * Method: drawLinearRing
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * node - {DOMElement}
     * geometry - {<OpenLayers.Geometry>}
     *
     * Returns:
     * {DOMElement} or null if the renderer could not draw all components
     *     of the linear ring, or false if nothing could be drawn
     */
    drawLinearRing: function(node, geometry) {
        var path = this.getComponentsString(geometry.components);
        node.setAttributeNS(null, "points", path);
        return node;
    },

    /**
     * Method: drawPolygon
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * node - {DOMElement}
     * geometry - {<OpenLayers.Geometry>}
     *
     * Returns:
     * {DOMElement} or null if the renderer could not draw all components
     *     of the polygon, or false if nothing could be drawn
     */
    drawPolygon: function(node, geometry) {
        var d = [];
        var draw = true;
        var complete = true;
        var linearRingResult, path;
        for (var j=0, len=geometry.components.length; j<len; j++) {
            d.push("M");
            path = this.getComponentsString(
                geometry.components[j].components, " ");
            d.push(path);
        }
        d.push("z");
        node.setAttributeNS(null, "d", d.join(" "));
        node.setAttributeNS(null, "fill-rule", "evenodd");
        return node;
    },

    /**
     * Method: drawRectangle
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * node - {DOMElement}
     * geometry - {<OpenLayers.Geometry>}
     *
     * Returns:
     * {DOMElement} or false if the renderer could not draw the rectangle
     */
    drawRectangle: function(node, geometry) {
        node.setAttributeNS(null, "x", geometry.x);
        node.setAttributeNS(null, "y", -geometry.y);
        node.setAttributeNS(null, "width", geometry.width);
        node.setAttributeNS(null, "height", geometry.height);
        return node;
    },

    /**
     * Method: drawText
     * Function for drawing text labels.
     * This method is only called by the renderer itself.
     *
     * Parameters:
     * featureId - {String|DOMElement}
     * style - {Object}
     * location - {<OpenLayers.Geometry.Point>}, will be modified inline
     *
     * Returns:
     * {DOMElement} container holding the text label
     */
    drawText: function(featureId, style, location) {
        var g = OpenLayers.Renderer.NG.prototype.drawText.apply(this, arguments);
        var text = g.firstChild ||
            this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_text", "text");

        var res = this.getResolution();
        text.setAttributeNS(null, "x", location.x / res);
        text.setAttributeNS(null, "y", - location.y / res);
        g.setAttributeNS(null, "transform", "scale(" + res + ")");

        if (style.fontColor) {
            text.setAttributeNS(null, "fill", style.fontColor);
        }
        if (style.fontOpacity) {
            text.setAttributeNS(null, "opacity", style.fontOpacity);
        }
        if (style.fontFamily) {
            text.setAttributeNS(null, "font-family", style.fontFamily);
        }
        if (style.fontSize) {
            text.setAttributeNS(null, "font-size", style.fontSize);
        }
        if (style.fontWeight) {
            text.setAttributeNS(null, "font-weight", style.fontWeight);
        }
        if (style.fontStyle) {
            text.setAttributeNS(null, "font-style", style.fontStyle);
        }
        if (style.labelSelect === true) {
            text.setAttributeNS(null, "pointer-events", "visible");
            text._featureId = featureId;
        } else {
            text.setAttributeNS(null, "pointer-events", "none");
        }
        var align = style.labelAlign || OpenLayers.Renderer.defaultSymbolizer.labelAlign;
        text.setAttributeNS(null, "text-anchor",
            OpenLayers.Renderer.SVG2.LABEL_ALIGN[align[0]] || "middle");

        if (OpenLayers.IS_GECKO === true) {
            text.setAttributeNS(null, "dominant-baseline",
                OpenLayers.Renderer.SVG2.LABEL_ALIGN[align[1]] || "central");
        }

        var labelRows = style.label.split('\n');
        var numRows = labelRows.length;
        while (text.childNodes.length > numRows) {
            text.removeChild(text.lastChild);
        }
        for (var i = 0; i < numRows; i++) {
            var tspan = text.childNodes[i] ||
                this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_tspan_" + i, "tspan");
            if (style.labelSelect === true) {
                tspan._featureId = featureId;
            }
            if (OpenLayers.IS_GECKO === false) {
                tspan.setAttributeNS(null, "baseline-shift",
                    OpenLayers.Renderer.SVG2.LABEL_VSHIFT[align[1]] || "-35%");
            }
            tspan.setAttribute("x", location.x / res);
            if (i == 0) {
                var vfactor = OpenLayers.Renderer.SVG2.LABEL_VFACTOR[align[1]];
                if (vfactor == null) {
                    vfactor = -.5;
                }
                tspan.setAttribute("dy", (vfactor*(numRows-1)) + "em");
            } else {
                tspan.setAttribute("dy", "1em");
            }
            tspan.textContent = (labelRows[i] === '') ? ' ' : labelRows[i];
            if (!tspan.parentNode) {
                text.appendChild(tspan);
            }
        }

        if (!text.parentNode) {
            g.appendChild(text);
        }

        return g;
    },

    /**
     * Method: getComponentString
     *
     * Parameters:
     * components - {Array(<OpenLayers.Geometry.Point>)} Array of points
     * separator - {String} character between coordinate pairs. Defaults to ","
     *
     * Returns:
     * {Object} hash with properties "path" (the string created from the
     *     components and "complete" (false if the renderer was unable to
     *     draw all components)
     */
    getComponentsString: function(components, separator) {
        var len = components.length;
        var strings = new Array(len);
        for (var i=0; i<len; i++) {
            strings[i] = this.getShortString(components[i]);
        }

        return strings.join(separator || ",");
    },

    /**
     * Method: getShortString
     *
     * Parameters:
     * point - {<OpenLayers.Geometry.Point>}
     *
     * Returns:
     * {String} or false if point is outside the valid range
     */
    getShortString: function(point) {
        return point.x + "," + (-point.y);
    },

    /**
     * Method: importSymbol
     * add a new symbol definition from the rendererer's symbol hash
     *
     * Parameters:
     * graphicName - {String} name of the symbol to import
     *
     * Returns:
     * {DOMElement} - the imported symbol
     */
    importSymbol: function (graphicName)  {
        if (!this.defs) {
            // create svg defs tag
            this.defs = this.createDefs();
        }
        var id = this.container.id + "-" + graphicName;

        // check if symbol already exists in the defs
        var existing = document.getElementById(id);
        if (existing != null) {
            return existing;
        }

        var symbol = OpenLayers.Renderer.symbol[graphicName];
        if (!symbol) {
            throw new Error(graphicName + ' is not a valid symbol name');
        }

        var symbolNode = this.nodeFactory(id, "symbol");
        var node = this.nodeFactory(null, "polygon");
        symbolNode.appendChild(node);
        var symbolExtent = new OpenLayers.Bounds(
                                    Number.MAX_VALUE, Number.MAX_VALUE, 0, 0);

        var points = [];
        var x,y;
        for (var i=0, len=symbol.length; i<len; i=i+2) {
            x = symbol[i];
            y = symbol[i+1];
            symbolExtent.left = Math.min(symbolExtent.left, x);
            symbolExtent.bottom = Math.min(symbolExtent.bottom, y);
            symbolExtent.right = Math.max(symbolExtent.right, x);
            symbolExtent.top = Math.max(symbolExtent.top, y);
            points.push(x, ",", y);
        }

        node.setAttributeNS(null, "points", points.join(" "));

        var width = symbolExtent.getWidth();
        var height = symbolExtent.getHeight();
        // create a viewBox three times as large as the symbol itself,
        // to allow for strokeWidth being displayed correctly at the corners.
        var viewBox = [symbolExtent.left - width,
                        symbolExtent.bottom - height, width * 3, height * 3];
        symbolNode.setAttributeNS(null, "viewBox", viewBox.join(" "));
        this.symbolMetrics[id] = {
            size: Math.max(width, height),
            x: symbolExtent.getCenterLonLat().lon,
            y: symbolExtent.getCenterLonLat().lat
        };

        this.defs.appendChild(symbolNode);
        return symbolNode;
    },

    /**
     * Method: getFeatureIdFromEvent
     *
     * Parameters:
     * evt - {Object} An <OpenLayers.Event> object
     *
     * Returns:
     * {String} A feature id or undefined.
     */
    getFeatureIdFromEvent: function(evt) {
        var featureId = OpenLayers.Renderer.Elements.prototype.getFeatureIdFromEvent.apply(this, arguments);
        if(!featureId) {
            var target = evt.target;
            featureId = target.parentNode && target != this.rendererRoot ?
                target.parentNode._featureId : undefined;
        }
        return featureId;
    },

    CLASS_NAME: "OpenLayers.Renderer.SVG2"
});

/**
 * Constant: OpenLayers.Renderer.SVG2.LABEL_ALIGN
 * {Object}
 */
OpenLayers.Renderer.SVG2.LABEL_ALIGN = {
    "l": "start",
    "r": "end",
    "b": "bottom",
    "t": "hanging"
};

/**
 * Constant: OpenLayers.Renderer.SVG2.LABEL_VSHIFT
 * {Object}
 */
OpenLayers.Renderer.SVG2.LABEL_VSHIFT = {
    // according to
    // http://www.w3.org/Graphics/SVG/Test/20061213/htmlObjectHarness/full-text-align-02-b.html
    // a baseline-shift of -70% shifts the text exactly from the
    // bottom to the top of the baseline, so -35% moves the text to
    // the center of the baseline.
    "t": "-70%",
    "b": "0"
};

/**
 * Constant: OpenLayers.Renderer.SVG2.LABEL_VFACTOR
 * {Object}
 */
OpenLayers.Renderer.SVG2.LABEL_VFACTOR = {
    "t": 0,
    "b": -1
};

/**
 * Function: OpenLayers.Renderer.SVG2.preventDefault
 * Used to prevent default events (especially opening images in a new tab on
 * ctrl-click) from being executed for externalGraphic and graphicName symbols
 */
OpenLayers.Renderer.SVG2.preventDefault = function(e) {
    e.preventDefault && e.preventDefault();
};

/**
 * Class: OpenLayers.Popup.AnchoredBubble
 * This class is *deprecated*. Use {<OpenLayers.Popup.Anchored>} and
 * round corners using CSS3's border-radius property.
 *
 * Inherits from:
 *  - <OpenLayers.Popup.Anchored>
 */
OpenLayers.Popup.AnchoredBubble = OpenLayers.Class(OpenLayers.Popup.Anchored, {

    /**
     * Property: rounded
     * {Boolean} Has the popup been rounded yet?
     */
    rounded: false,

    /**
     * Constructor: OpenLayers.Popup.AnchoredBubble
     *
     * Parameters:
     * id - {String}
     * lonlat - {<OpenLayers.LonLat>}
     * contentSize - {<OpenLayers.Size>}
     * contentHTML - {String}
     * anchor - {Object} Object to which we'll anchor the popup. Must expose
     *     a 'size' (<OpenLayers.Size>) and 'offset' (<OpenLayers.Pixel>)
     *     (Note that this is generally an <OpenLayers.Icon>).
     * closeBox - {Boolean}
     * closeBoxCallback - {Function} Function to be called on closeBox click.
     */
    initialize:function(id, lonlat, contentSize, contentHTML, anchor, closeBox,
                        closeBoxCallback) {

        this.padding = new OpenLayers.Bounds(
            0, OpenLayers.Popup.AnchoredBubble.CORNER_SIZE,
            0, OpenLayers.Popup.AnchoredBubble.CORNER_SIZE
        );
        OpenLayers.Popup.Anchored.prototype.initialize.apply(this, arguments);
    },

    /**
     * Method: draw
     *
     * Parameters:
     * px - {<OpenLayers.Pixel>}
     *
     * Returns:
     * {DOMElement} Reference to a div that contains the drawn popup.
     */
    draw: function(px) {

        OpenLayers.Popup.Anchored.prototype.draw.apply(this, arguments);

        this.setContentHTML();

        //set the popup color and opacity
        this.setBackgroundColor();
        this.setOpacity();

        return this.div;
    },

    /**
     * Method: updateRelativePosition
     * The popup has been moved to a new relative location, in which case
     *     we will want to re-do the rico corners.
     */
    updateRelativePosition: function() {
        this.setRicoCorners();
    },

    /**
     * APIMethod: setSize
     *
     * Parameters:
     * contentSize - {<OpenLayers.Size>} the new size for the popup's
     *     contents div (in pixels).
     */
    setSize:function(contentSize) {
        OpenLayers.Popup.Anchored.prototype.setSize.apply(this, arguments);

        this.setRicoCorners();
    },

    /**
     * APIMethod: setBackgroundColor
     *
     * Parameters:
     * color - {String}
     */
    setBackgroundColor:function(color) {
        if (color != undefined) {
            this.backgroundColor = color;
        }

        if (this.div != null) {
            if (this.contentDiv != null) {
                this.div.style.background = "transparent";
                OpenLayers.Rico.Corner.changeColor(this.groupDiv,
                                                   this.backgroundColor);
            }
        }
    },

    /**
     * APIMethod: setOpacity
     *
     * Parameters:
     * opacity - {float}
     */
    setOpacity:function(opacity) {
        OpenLayers.Popup.Anchored.prototype.setOpacity.call(this, opacity);

        if (this.div != null) {
            if (this.groupDiv != null) {
                OpenLayers.Rico.Corner.changeOpacity(this.groupDiv,
                                                     this.opacity);
            }
        }
    },

    /**
     * Method: setBorder
     * Always sets border to 0. Bubble Popups can not have a border.
     *
     * Parameters:
     * border - {Integer}
     */
    setBorder:function(border) {
        this.border = 0;
    },

    /**
     * Method: setRicoCorners
     * Update RICO corners according to the popup's current relative postion.
     */
    setRicoCorners:function() {

        var corners = this.getCornersToRound(this.relativePosition);
        var options = {corners: corners,
                         color: this.backgroundColor,
                       bgColor: "transparent",
                         blend: false};

        if (!this.rounded) {
            OpenLayers.Rico.Corner.round(this.div, options);
            this.rounded = true;
        } else {
            OpenLayers.Rico.Corner.reRound(this.groupDiv, options);
            //set the popup color and opacity
            this.setBackgroundColor();
            this.setOpacity();
        }
    },

    /**
     * Method: getCornersToRound
     *
     * Returns:
     * {String} The proper corners string ("tr tl bl br") for rico to round.
     */
    getCornersToRound:function() {

        var corners = ['tl', 'tr', 'bl', 'br'];

        //we want to round all the corners _except_ the opposite one.
        var corner = OpenLayers.Bounds.oppositeQuadrant(this.relativePosition);
        OpenLayers.Util.removeItem(corners, corner);

        return corners.join(" ");
    },

    CLASS_NAME: "OpenLayers.Popup.AnchoredBubble"
});

/**
 * Constant: CORNER_SIZE
 * {Integer} 5. Border space for the RICO corners.
 */
OpenLayers.Popup.AnchoredBubble.CORNER_SIZE = 5;
//
// @source = webtis_v4.js
//
/**
*
* DenshiKokudo Web API for OpenLayers
*
* Copyright 2012, Geospatial Information Authority of Japan, released under the FreeBSD
* license. Please see http://portal.cyberjapan.jp/sys/v4/webtis/license.txt
* for the full text of the license.
*
**/

/**
*
* Contains portions of OpenLayers.js <http://openlayers.org/>
*
* Copyright 2005-2011 OpenLayers Contributors
*
* Licensed under the FreeBSD license.
* Please see http://svn.openlayers.org/trunk/openlayers/license.txt
* for the full text of the license.
*
**/

/* ======================================================================
    header.js
   ====================================================================== */

var webtis = new Object();
webtis.Feature = new Object();
webtis.Geometry = new Object();
webtis.Format = new Object();
webtis.Handler = new Object();
webtis.Control = new Object();
webtis.Layer = new Object();
webtis.Renderer = new Object();
webtis.Popup = new Object();

webtis.SERVER_URL = {
		BASEMAP_TILE_SERVER : "http://cyberjapandata.gsi.go.jp/sqras/all",								//デフォルトのサーバ
		BASEMAP_TILE_SERVER2 : "http://cyberjapandata2.gsi.go.jp/sqras/all",							//特定のファイル群だけはこっちのサーバ
		BASEMAP_TILE_SERVER3 : "http://geolib.gsi.go.jp/tiles/thematicmap",								//地理空間情報ライブラリサーバ
		BASEMAP_TILE_SERVER4 : "http://cyberjapandata.gsi.go.jp.cdngc.net/sqras/all",					//新彩色地図用サーバ
		SEARCH_TILE_SERVER : "http://cyberjapandata.gsi.go.jp/cgi-bin/search-tile.php",
//		METADATA_SERVER : "http://cyberjapandata.gsi.go.jp/cgi-bin/get-metadata_test2.php",
//		AVAILABLE_MAP_SERVER : "http://cyberjapandata.gsi.go.jp/cgi-bin/get-available-maps_test2.php",
		METADATA_SERVER : "http://cyberjapandata.gsi.go.jp/cgi-bin/get-metadata.php",
		AVAILABLE_MAP_SERVER : "http://cyberjapandata.gsi.go.jp/cgi-bin/get-available-maps.php",
		GEOTIFF_TILE_SERVER : "http://gp.cyberjapan.jp/cjp4/service/get_geotiff_tile",
		CONVERT_TO_JSON_SERVER : 'http://gp.cyberjapan.jp/cjp4/service/convert_to_json',
		CONVERT_FROM_JSON_SERVER : 'http://gp.cyberjapan.jp/cjp4/service/convert_from_json',
		SHOW_MAP_SERVER : 'http://gp.cyberjapan.jp/cjp4/service/show_map',
		SAVE_JSON_SERVER : 'http://gp.cyberjapan.jp/cjp4/service/save_json',
		CREATE_PDF_SERVER : 'http://gp.cyberjapan.jp/cjp4/service/create_pdf',
		TRANSPARENT_FILE : 'http://cyberjapandata.gsi.go.jp/sqras/transparent.png',
		VLCD_TILE_SERVER : 'http://geolib.gsi.go.jp/tiles/thematicmap/VLCD',							//火山土地条件図
		VBM_TILE_SERVER : 'http://geolib.gsi.go.jp/tiles/thematicmap/VBM',								//火山基本図
		LUM4BL_TILE_SERVER : 'http://geolib.gsi.go.jp/tiles/thematicmap/LUM4BL',
		GEOLIB_TILE_SERVER : 'http://geolib.gsi.go.jp/tiles/thematicmap',
		GEOLIB_TILE_SERVER0 : 'http://geolib.gsi.go.jp/tiles/',
		GEOLIB_TILE_SERVER2 : 'http://geolib.gsi.go.jp/tiles2',
		SAIGAI_SERVER : 'http://saigai.gsi.go.jp/',
		XYZ_TILE_SERVER : 'http://cyberjapandata.gsi.go.jp/xyz',
		LIB_TILE_SERVER : 'http://cyberjapandata.gsi.go.jp/sqras/all'	// 英語版
};

webtis.ATTRIBUTE_TYPE = {
		NONE : "0",		// 凡例を表示しない
		MAP : "1",		// マップ
		OVERLAY : "2",	// オーバーレイ
		PHOTO : "3"		// 写真
};

webtis.TILE_URL = {
	TRANSPARENT : 'http://cyberjapandata.gsi.go.jp/sqras/transparent.png',	// 透過
	BLUE : 'http://cyberjapandata.gsi.go.jp/sqras/no_map.png',				// 青タイル
	NODATA : 'http://cyberjapandata.gsi.go.jp/sqras/white.png'				// NO DATA
};

// 初期表示時のタイルの1辺の長さ
webtis.TILE_SIDE = 256;
// 初期表示時のレゾリューション
webtis.TILE_BASE_RESOLUTIONS = [
	156543.03390625, 78271.516953125,
	39135.7584765625, 19567.87923828125,
	9783.939619140625, 4891.9698095703125,
	2445.9849047851562, 1222.9924523925781,
	611.4962261962891, 305.74811309814453,
	152.87405654907226, 76.43702827453613,
	38.218514137268066, 19.109257068634033,
	9.554628534317017, 4.777314267158508,
	2.388657133579254, 1.194328566789627,
	0.5971642833948135, 0.29858214169740677
];

/* ======================================================================
    Layer/Vector.js
   ====================================================================== */

/**
 * Class: webtis.Layer.Vector
 * 電子国土Webシステム APIで電子国土Webシステム用XMLデータの地物を表示するレイヤー
 *
 * Inherits from:
 *  - <OpenLayers.Layer.Vector>
 */
webtis.Layer.Vector = OpenLayers.Class(OpenLayers.Layer.Vector, {

	displayLevel: "all",

	initialize: function(name, options) {
		this.renderers = [webtis.Renderer.SVG, webtis.Renderer.VML, 'Canvas'];
		OpenLayers.Layer.Vector.prototype.initialize.apply(this, arguments);
		/**
		if (window.console) {
			window.console.log(this.renderer.CLASS_NAME);
		}
		**/
	},

	insertFeatures: function(features, options) {
		if (!OpenLayers.Util.isArray(features)) {
			features = [features];
		}

		var notify = !options || !options.silent;
		if(notify) {
			var event = {features: features};
			var ret = this.events.triggerEvent("beforefeaturesadded", event);
			if(ret === false) {
				return;
			}
			features = event.features;
		}

		var featuresAdded = [];
		for (var i=0, len=features.length; i<len; i++) {
			if (i != (features.length - 1)) {
				this.renderer.locked = true;
			} else {
				this.renderer.locked = false;
			}
			var feature = features[i];

			if (this.geometryType &&
				!(feature.geometry instanceof this.geometryType)) {
				var throwStr = OpenLayers.i18n('componentShouldBe',
						{'geomType':this.geometryType.prototype.CLASS_NAME});
				throw throwStr;
			}

			feature.layer = this;

			if (!feature.style && this.style) {
				feature.style = OpenLayers.Util.extend({}, this.style);
			}

			if (notify) {
				if(this.events.triggerEvent("beforefeatureadded",
						{feature: feature}) === false) {
					continue;
				};
				this.preFeatureInsert(feature);
			}

			featuresAdded.push(feature);
			this.features.unshift(feature);
			this.drawFeature(feature);

			if (notify) {
				this.events.triggerEvent("featureadded", {
					feature: feature
				});
				this.onFeatureInsert(feature);
			}
		}

		if(notify) {
			this.events.triggerEvent("featuresadded", {features: featuresAdded});
		}
	},

	drawFeature: function(feature, style) {

		// don't try to draw the feature with the renderer if the layer is not
		// drawn itself
		if (!this.drawn) {
			return;
		}

		var orgStyle = style;

		// 線の選択の特別なロジック
		if ((this.styleType == "string" || this.styleType == "line") && orgStyle == "select") {
			style = "default";
		}

		if (typeof style != "object") {
			if(!style && feature.state === OpenLayers.State.DELETE) {
				style = "delete";
			}
			var renderIntent = style || feature.renderIntent;

			if (feature.style instanceof OpenLayers.Style) {
				style = feature.style.createSymbolizer(feature);
			} else if (feature.style instanceof OpenLayers.StyleMap) {
				style = feature.style.createSymbolizer(feature, renderIntent);
			} else {
				style = feature.style || this.style;
				if (!style) {
					style = this.styleMap.createSymbolizer(feature, renderIntent);
				}
			}
		} else if (style instanceof OpenLayers.StyleMap) {
			style = style.createSymbolizer(feature, "default");
		} else if (style instanceof OpenLayers.Style) {
			style = style.createSymbolizer(feature);
		}

		if (style) {
			style.orgStyle = orgStyle;
		}

		if (!this.renderer.drawFeature(feature, style)) {
			this.unrenderedFeatures[feature.id] = feature;
		} else {
			delete this.unrenderedFeatures[feature.id];
		};

		// 画像シンボルのセレクション描画
		var className = feature.geometry.CLASS_NAME;
		if (style.display != "none") {
			if (orgStyle == 'select') {

				var geometry = null;
				var sourceNode = null;
				if (this.styleType == "symbol") {
					sourceNode = OpenLayers.Util.getElement(feature.geometry.id);

					var imageWidth = (style.graphicWidth/* + 4*/) * this.renderer.resolution;
					var imageHeight = (style.graphicHeight/* + 4*/) * this.renderer.resolution;
					geometry = new OpenLayers.Geometry.Rectangle(
							feature.geometry.x - (imageWidth/2),
							feature.geometry.y + (imageHeight/2),
							imageWidth, imageHeight);
				} else if (this.styleType == "image") {
					sourceNode = OpenLayers.Util.getElement(feature.geometry.id);

					geometry = new OpenLayers.Geometry.Rectangle(
							feature.geometry.x,
							feature.geometry.y,
							feature.geometry.width,
							feature.geometry.height);
				} else if (this.styleType == "text") {
					geometry = new webtis.Geometry.TextRectangle(feature.geometry.x, feature.geometry.y, true);
					geometry.label = feature.geometry.label;
				} else if (this.styleType == "string" || this.styleType == "line") {
					sourceNode = OpenLayers.Util.getElement(feature.geometry.id);
					var maxx = -180000000000;
					var minx =  180000000000;
					var maxy = -180000000000;
					var miny =  180000000000;
					for (var i = 0; i < feature.geometry.components.length; i++) {
						var cc = feature.geometry.components[i];
						if (maxx < cc.x) {
							maxx = cc.x;
						}
						if (minx > cc.x) {
							minx = cc.x;
						}
						if (maxy < cc.y) {
							maxy = cc.y;
						}
						if (miny > cc.y) {
							miny = cc.y;
						}
					}

					var res = this.map.getResolution();

					var strokeWidthDegX = style.strokeWidth * res;
					var width = maxx - minx;
					if (width < strokeWidthDegX) {
						width = strokeWidthDegX;
					} else {
						width += strokeWidthDegX;
					}
					var strokeWidthDegY = style.strokeWidth * res;
					var height = maxy - miny;
					if (height < strokeWidthDegY) {
						height = strokeWidthDegY;
					} else {
						height += strokeWidthDegY;
					}

					geometry = new OpenLayers.Geometry.Rectangle(
							minx - (strokeWidthDegX/2),
							maxy + (strokeWidthDegY/2),
							width, height);
				}

				if (geometry) {

					var style = this.renderer.applyDefaultSymbolizer({
						strokeColor: "#0000ff",
						strokeWidth: 2,
						fill: false
					});

					if (this.styleType == "text") {
						var defaultStyle = this.styleMap.createSymbolizer(feature, "default");
						style.label = feature.geometry.label;
						style.labelAlign = defaultStyle.labelAlign;
						style.fontSizeNumber = defaultStyle.fontSizeNumber;
					}

					var node = this.renderer.nodeFactory(feature.geometry.id + "_sel", this.renderer.getNodeType(geometry, style));
					// Set the data for the node, then draw it.
					node._featureId = feature.id;
					node._boundsBottom = geometry.getBounds().bottom;
					node._geometryClass = geometry.CLASS_NAME;
					node._style = style;

					var drawResult = this.renderer.drawGeometryNode(node, geometry, style);
					if(drawResult === false) {
					} else {
						node = drawResult.node;
					}
					if (sourceNode)
						this.renderer.vectorRoot.insertBefore(node, sourceNode);
				}
			} else {
				// セレクション削除
				this.forceUnselect(feature);
			}
		}

	},

	forceUnselect: function(feature) {
		var node = OpenLayers.Util.getElement(feature.geometry.id + "_sel");
		if (node) {
			node.parentNode.removeChild(node);
			return true;
		}
		return false;
	},

	calculateInRange: function() {
		/**
		if (this.visibility != true) {
			return false;
		}
		**/
		var inRange = false;
		if (this.alwaysInRange) {
			inRange = true;
		} else {
			if (this.map.baseLayer.CLASS_NAME == "webtis.Layer.BaseMap") {
				if (this.displayLevel != undefined) {
					var levels = null;
					if (typeof this.displayLevel == "number") {
						levels = [("" + displayLevel)];
					} else if (typeof this.displayLevel == "string") {
						if (this.displayLevel == "all") {
							return true;
						}
						if (this.displayLevel.match(/ /)) {
							levels = this.displayLevel.split(' ');
						} else {
							levels = this.displayLevel.split(',');
						}
					}
					if (levels) {
						var zoom = this.map.getZoom();
						var jsgiLevel = parseInt(this.map.baseLayer.getJSGILevel());
						for (var i = 0; i<levels.length; i++) {
							var dl = parseInt(levels[i]);
							if (dl == jsgiLevel) {
								return true;
							}
						}
					}
					return false;
				} else {
					return true;
				}
			}
			return true;
		}
		return inRange;
	},

	setDisplayLevel: function(displayLevel) {
		if (!displayLevel) {
			displayLevel = 'all';
		}
		this.displayLevel = displayLevel;
		if (displayLevel == 'all') {
			this.alwaysInRange = true;
		} else {
			this.alwaysInRange = false;
		}
		if (this.affixStyle) {
			this.affixStyle.displaylevel = displayLevel;
		}
		if (this.map) {
			this.inRange = this.calculateInRange();
			this.moveTo(this.getExtent(), true, false);
		}
	},

	setGroupVisibility: function(groupName, visible) {
		for (var i = this.features.length - 1; i >= 0; i--) {
			if (groupName == this.features[i].groupName) {
				this.features[i].style.display = visible ? "visible" : "none";
			}
		}
	},

	removeGroup: function(groupName) {
		var toBeRemoved = new Array();
		for (var i = 0; i < this.features.length; i++) {
			if (groupName == this.features[i].groupName) {
				toBeRemoved.push(this.features[i]);
			}
		}
		if (toBeRemoved.length > 0) {
			this.removeFeatures(toBeRemoved);
		}
	},

	CLASS_NAME: "webtis.Layer.Vector"
});
/* ======================================================================
    Format/JSGIJSON.js
   ====================================================================== */

/**
 * Class: webtis.Format.JSGIJSON
 * 電子国土Webシステム APIの電子国土Webシステム用XMLデータから変換したJSON形式のデータを読み込むためのクラス
 *
 * Inherits from:
 *  - <OpenLayers.Format>
 */
webtis.Format.ParseJSON = {};
webtis.Format.Parse = {};

webtis.Format.ParseJSON.USE_GEODESTIC_CIRCLE = true;

webtis.Format.ParseJSON.Symbol = function(node) {

	this.uri = null;
	this.size = Number.NaN;
	this.dynamic = false;

	this.uri = node.uri;
	var sizeString = null;
	if (node.size) {
		sizeString = node.size;
	} else if (node.width) {
		sizeString = node.width;
	}
	if (sizeString) {
		var sizes = sizeString.split(",");
		this.size = parseInt(sizes[0]);
		if (sizes[1] == 'dynamic') {
			this.dynamic = true;
		}
	}
};

webtis.Format.ParseJSON.Style = function(node) {

	// 共通
	this.name = "設定されていない";
	this.type = "symbol";
	this.displayLevel = "all";
	this.display = false;
	this.transparent = false;
	this.selection = false;
	this.symbol = null;
	this.style = null;
	this.styleKind = "system";
	this.rgb = null;
	this.width = 1;
	this.dynamic = false;

	// polygon等
	this.brush = "solid";
	this.paint = true;
	this.brgb = null;
	this.hrgb = null;

	// text
	this.mode = "cm";
	this.fontFamily = null;
	this.fontSize = "12px";
	this.fontWeight = 'normal';
	this.fontSizeDynamic = false;

	// image
	this.plane = "overlay";

	function createRGB(rawrgb) {
		var ret = null;
		if (rawrgb) {
			ret = rawrgb.split(",");
			ret[0] = parseInt(ret[0]);
			ret[1] = parseInt(ret[1]);
			ret[2] = parseInt(ret[2]);
		}
		return ret;
	}

	this.isPolygonFill = function() {
		return (this.hrgb != null);
	};

	this.isBackgroundFill = function() {
		return (this.paint && this.brgb != null);
	};

	for (var key in node) {
		if (key == 'name') {
			this.name = node[key];
		} else if (key == 'type') {
			this.type = node[key].toLowerCase();
		} else if (key == 'displaylevel') {
			this.displayLevel = node[key];
		} else if (key == 'display') {
			this.display = (node[key].toLowerCase() == 'on');
		} else if (key == 'tranceparent' || key == 'transparent') {
			this.transparent = (node[key].toLowerCase() == 'on');
		} else if (key == 'selection') {
			this.selection = (node[key].toLowerCase() == 'on');
		} else if (key == 'style') {
			var s = node[key];
			if (s["kind"]=="SYSTEM") {
				this.style = s["value"].toLowerCase();
			} else {
				this.style = "solid";// USERには、非対応
			}
		} else if (key == 'symbol') {
			this.symbol = new webtis.Format.ParseJSON.Symbol(node[key]);
		} else if (key == 'width') {
			var sizeString = node[key];
			var sizes = sizeString.split(",");
			this.width = parseFloat(sizes[0]);
			if (sizes[1] == 'dynamic') {
				this.dynamic = true;
			}
		} else if (key == 'rgb') {
			this.rgb = createRGB(node[key]);
		} else if (key == 'brgb') {
			this.brgb = createRGB(node[key]);
		} else if (key == 'hrgb') {
			this.hrgb = createRGB(node[key]);
		} else if (key == 'paint') {
			this.paint = (node[key].toLowerCase() == 'on');
		} else if (key == 'brush') {
			this.brush = node[key];
		} else if (key == 'mode') {
			this.mode = webtis.Format.Parse.mapTextAlignment(node[key]);
			} else if (key == 'font') {
				var fontobj = node[key];
				for (var fontkey in fontobj) {
					if (fontkey == 'name') {
						this.fontFamily = fontobj[fontkey];
					} else if (fontkey == 'style') {
						this.fontWeight = webtis.Format.Parse.mapTextStyle(fontobj[fontkey]);
					} else if (fontkey == 'size') {
						var sizeString = fontobj[fontkey];
						var sizes = sizeString.split(",");
						this.fontSize = parseFloat(sizes[0]);
						if (sizes[1] == 'dynamic') {
							this.fontSizeDynamic = true;
						}
					}
				}
			} else if (key == 'plane') {
				this.plane = node[key];
			}
	}
};

webtis.Format.ParseJSON.Point = function(json, node) {

	this.id = null;
	this.name = node.name;
	this.description = node.description?node.description:"";

	var attrString = node.attribute;
	this.attributes = webtis.Format.ParseJSON.parseAttribute(attrString);

	this.crs = node.crs;
	this.geometry = json.readGeoJSON(node.geometry);
};

webtis.Format.ParseJSON.Curve = function(json, node) {

	this.id = null;
	this.name = node.name;
	this.description = node.description?node.description:"";

	var attrString = node.attribute;
	this.attributes = webtis.Format.ParseJSON.parseAttribute(attrString);

	this.crs = node.crs;
	var lineGeom = json.readGeoJSON(node.geometry);
	this.line = { 'segment' : lineGeom.components };

};

webtis.Format.ParseJSON.parseAttribute = function(attrString) {
	var attributes = new Array();
	if (attrString == null) {
		return attributes;
	}
	var index = -1;
	if (attrString.indexOf("=")==-1) {
		// v2の場合、属性名がない
		attributes.push({"name":"","value":attrString.replace(/,=/g,"\n")});
	} else if (attrString.indexOf("　=")==0) {
		// 簡易地図作成の場合
		attrString = attrString.substring(2);
		var tokens = attrString.split(",=");
		for (var i = 0; i < tokens.length;i++) {
			attributes.push({
				"name" : "",
				"value":tokens[i]});
		}
	} else {
		while ((index = attrString.indexOf("="))!=-1) {
			var key = attrString.substring(0,index);
			var startIndex = attrString.indexOf("\"");
			var endIndex = attrString.indexOf("\"",startIndex+1);
			var value;
			if (startIndex != -1 && endIndex !=-1) {
				value = attrString.substring(startIndex+1,endIndex);
				endIndex = attrString.indexOf(",",endIndex+1);
			} else {
				endIndex = attrString.indexOf(",",index);
				if (endIndex != -1) {
					value = attrString.substring(index+1,endIndex);
				} else {
					value = attrString.substring(index+1);
				}
			}
			if (endIndex != -1) {
				attrString = attrString.substring(endIndex+1);
			} else {
				attrString = "";
			}
			if (value.indexOf("\\")==value.length-1) {
				value = value.substring(0,value.length-1);
			}
			attributes.push({"name":key,"value":value.replace(/,=/g,"\n")});
		}
	}
	return attributes;
};

webtis.Format.ParseJSON.Surface = function(json, node) {

	this.id = "";
	this.name = node.name;
	this.description = node.description?node.description:"";
	var attrString = node.attribute;
	this.attributes = webtis.Format.ParseJSON.parseAttribute(attrString);

	this.crs = node.crs;
	this.polygon = json.readGeoJSON(node.geometry);
};

webtis.Format.ParseJSON.Circle = function(json, node) {

	this.name = node.name;
	this.description = node.description?node.description:"";

	var attrString = node.attribute;
	this.attributes = webtis.Format.ParseJSON.parseAttribute(attrString);

	this.center = json.readGeoJSON(node.geometry);
	this.crs = node.crs;

	this.radius = parseFloat(node.radius.value);
	this.radiusUnit = node.radius.unit;

	// ポイントですが、半径分の矩形を設定します。
	var centerLonLat = new OpenLayers.LonLat(this.center.x,this.center.y).transform(json.projection,json.resultProjection);
	var radiusm = this.radiusUnit == "km" ? this.radius * 1000:this.radius;
	var topLL = OpenLayers.Util.destinationVincenty(centerLonLat,0,radiusm).transform(json.resultProjection,json.projection);
	var rightLL = OpenLayers.Util.destinationVincenty(centerLonLat,90,radiusm).transform(json.resultProjection,json.projection);
	var bottomLL = OpenLayers.Util.destinationVincenty(centerLonLat,180,radiusm).transform(json.resultProjection,json.projection);
	var leftLL = OpenLayers.Util.destinationVincenty(centerLonLat,270,radiusm).transform(json.resultProjection,json.projection);
	var newBounds = new OpenLayers.Bounds(leftLL.lon,bottomLL.lat,rightLL.lon,topLL.lat);
	this.center.bounds = newBounds;

};

webtis.Format.ParseJSON.Annotation = function(json, node) {

	this.name = node.name;
	this.description = node.description?node.description:"";

	var attrString = node.attribute;
	this.attributes = webtis.Format.ParseJSON.parseAttribute(attrString);

	this.crs = node.crs;
	this.point = json.readGeoJSON(node.geometry);

};

webtis.Format.ParseJSON.Image = function(json, node) {

	this.name = node.name;
	this.description = node.description?node.description:"";

	var attrString = node.attribute;
	this.attributes = webtis.Format.ParseJSON.parseAttribute(attrString);

	this.crs = node.crs;
	this.lb = json.readGeoJSON(node.imageMapping.leftBottomCorner);
	this.lt = json.readGeoJSON(node.imageMapping.leftTopCorner);
	this.rb = json.readGeoJSON(node.imageMapping.rightBottomCorner);
	this.rt = json.readGeoJSON(node.imageMapping.rightTopCorner);
	this.type = node.type;
	this.src = node.src;

};

webtis.Format.ParseJSON.Layer = function(json, node) {

	this.name = null;
	this.description = null;
	this.style = null;
	this.features = [];

	if (node.name) {
		this.name = node.name;
		// 接頭辞を置換
		if (json.affix) {
			// 編集用のxmlを_affix_に置換
			this.name = this.name.replace(/^\xml./,"_affix_.");
		}
	}
	if (node.description) {
		this.description = node.description;
	}
	if (node.style) {
		this.style = new webtis.Format.ParseJSON.Style(node.style);
		// if (json.affix) {
			this.affixStyle = node.style;
		//}
	}
	if (node.data) {
		var rawFeatures = node.data;
		for (var i = 0; i < rawFeatures.length; i++) {
			if (this.style.type.toLowerCase() == 'string') {
				this.features.push(new webtis.Format.ParseJSON.Curve(json, rawFeatures[i]));
			} else if (this.style.type.toLowerCase() == 'polygon') {
				this.features.push(new webtis.Format.ParseJSON.Surface(json, rawFeatures[i]));
			} else if (this.style.type.toLowerCase() == 'circle') {
				this.features.push(new webtis.Format.ParseJSON.Circle(json, rawFeatures[i]));
			} else if (this.style.type.toLowerCase() == 'text') {
				this.features.push(new webtis.Format.ParseJSON.Annotation(json, rawFeatures[i]));
			} else if (this.style.type.toLowerCase() == 'symbol') {
				this.features.push(new webtis.Format.ParseJSON.Point(json, rawFeatures[i]));
			} else if (this.style.type.toLowerCase() == 'image') {
				this.features.push(new webtis.Format.ParseJSON.Image(json, rawFeatures[i]));
			}
		}
	}

};

webtis.Format.JSGIJSON = OpenLayers.Class(OpenLayers.Format, {

	layerName: "",
	layerDescription: "",

	extractAttributes: true,

	extractStyles: false,

	style: null,
	affix : false,
	geoJson : new OpenLayers.Format.GeoJSON(),
	projection : null,
	resultProjection : new OpenLayers.Projection("EPSG:4326"),

	initialize: function(options) {
		OpenLayers.Format.prototype.initialize.apply(this, [options]);
		if (options) {
			this.affix = options.affix;
			if (options.projection != undefined) {
				this.projection = options.projection;
			}
		}
	},

	read: function(data) {
		this.features = [];
		this.styles = {};

		this.regExes = {
			trimSpace: (/^\s*|\s*$/g),
			removeSpace: (/\s*/g)
		};

		var options = {};

		return this.parseData(data, options);
	},

	preprocessData: function(data) {
		return data.layer;
	},

	getLayerNodes: function(data) {
		return data;
	},

	createTemporaryLayerObject: function(rawNode) {
		return new webtis.Format.ParseJSON.Layer(this, rawNode);
	},

	readGeoJSON : function (data) {
		var geometry = this.geoJson.parseGeometry(data);
		if (this.projection) {
			geometry = geometry.transform(this.resultProjection,this.projection);
		}
		return geometry;
	},

	parseData: function(data, options) {
		data = this.preprocessData(data);

		if (!webtis.Format.JSGIJSON.baseProjection) {
			webtis.Format.JSGIJSON.baseProjection = new OpenLayers.Projection("EPSG:4326");
		}
		// 仮のレイヤオブジェクトを作成する
		var tempLayers = [];
		var nodes = this.getLayerNodes(data);

		for (var i=0; i<nodes.length; i++) {
			var layer = this.createTemporaryLayerObject(nodes[i]);
			if (tempLayers.length == 0) {
				tempLayers[0] = layer;
			} else {
				var layerFound = null;
				for (var j=0; j<tempLayers.length; j++) {
					if (tempLayers[j].name == layer.name) {
						if ((tempLayers[j].style != null && layer.style != null &&
									tempLayers[j].style.name == layer.style.name)||
								(tempLayers[j].style == null && layer.style == null)) {
							layerFound = tempLayers[j];
							break;
						}
					}
				}

				if (layerFound != null) {
					// レイヤ合併
					layerFound.features = layerFound.features.concat(layer.features);
				} else {
					tempLayers.push(layer);
				}
			}
		}

		var styles = {};
		var ret = [];

		for (var i=0; i<tempLayers.length; i++) {
			var tempLayer = tempLayers[i];
			var features = [];

			for (var j=0; j<tempLayer.features.length; j++) {
				var tempFeature = tempLayer.features[j];

				var style = undefined;
				var geometry = null;
				var attributes = {};
				attributes["name"] = tempFeature.name ? tempFeature.name : "";
				attributes["id"] = tempFeature.id ? tempFeature.id : "";
				attributes["uuid"] = tempFeature.uuid ? tempFeature.uuid : "";
				attributes["description"] = tempFeature.description ? tempFeature.description : "";
				attributes["attr"] = tempFeature.attributes;

				var pointRadius = Number.NaN;
				var featureStyleSize = Number.NaN;
				if (tempFeature instanceof webtis.Format.ParseJSON.Point) {
					// ポイント
					geometry = tempFeature.geometry;
					featureStyleSize = tempLayer.style.symbol.size;
				} else if (tempFeature instanceof webtis.Format.ParseJSON.Curve) {
					// 線
					geometry = new OpenLayers.Geometry.LineString(tempFeature.line.segment);
					featureStyleSize = tempLayer.style.width;
				} else if (tempFeature instanceof webtis.Format.ParseJSON.Surface) {
					// ポリゴン
					geometry = tempFeature.polygon;
					featureStyleSize = tempLayer.style.width;
				} else if (tempFeature instanceof webtis.Format.ParseJSON.Circle) {
					geometry = tempFeature.center;
					pointRadius = tempFeature.radius;
					// 1 layer -> 1 dynamic sized circle
					tempLayer.representativeRadius = tempFeature.radius;
					tempLayer.representativeRadiusUnit = tempFeature.radiusUnit;
					featureStyleSize = tempLayer.style.width;
				} else if (tempFeature instanceof webtis.Format.ParseJSON.Annotation) {
					geometry = new webtis.Geometry.TextRectangle(tempFeature.point.x, tempFeature.point.y);
					geometry.label = tempFeature.name;
					featureStyleSize = tempLayer.style.fontSize;
				} else if (tempFeature instanceof webtis.Format.ParseJSON.Image) {
					geometry = new webtis.Geometry.ImageRectangle(
							tempFeature.lt.x,
							tempFeature.lt.y,
							tempFeature.rt.x - tempFeature.lt.x,
							tempFeature.lt.y - tempFeature.lb.y);
					geometry.imageUrl = tempFeature.src;
					geometry.imageType = tempFeature.type;
					geometry.imageOpacity = tempLayer.style.transparent ? 0.5 : 1.0;
				}

				if (geometry) {
					var feature = new webtis.Feature.Vector(geometry, attributes, style);

					feature.styleSize = featureStyleSize; // 動的なスタイルの大きさの計算するため
					if (!isNaN(pointRadius)) {
						feature.pointRadius = pointRadius;
					}
					features.push(feature);
				}
			}

			// スタイル準備
			var defaultStyle = null;
			var selectStyle = null;
			var layerStyleMap = null;
			var layer = null;

			if (tempLayer.style.type == "symbol") {
				// アイコン
				if (tempLayer.style.symbol.dynamic) {
					// 縮尺によって動的に大きさがかわる
					defaultStyle = new OpenLayers.Style({
						'externalGraphic': tempLayer.style.symbol.uri,
						'graphicWidth': "${getSize}",
						'graphicHeight': "${getSize}",
						'graphicXOffset': "${getOffset}",
						'graphicYOffset': "${getOffset}",
						'graphicOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'JSGIDynamicSize' : true
					}, {
						context : {
							getSize : function(feature) {
								return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.styleSize));
							},
							getOffset : function(feature) {
								var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.styleSize));
								return -(Math.round(size/2));
							}
						}
					});
				} else {
					// 静的な大きさ
					defaultStyle = new OpenLayers.Style({
						'externalGraphic': tempLayer.style.symbol.uri,
						'graphicWidth': tempLayer.style.symbol.size,
						'graphicHeight': tempLayer.style.symbol.size,
						'graphicXOffset': -(tempLayer.style.symbol.size/2),
						'graphicYOffset': -(tempLayer.style.symbol.size/2),
						'graphicOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'JSGIDynamicSize' : false
					});
				}
			} else if (tempLayer.style.type == "circle") {
				// 円
				var strokeDynamic = false;
				if (tempLayer.representativeRadiusUnit == 'meter') {
					if (tempLayer.style.dynamic)
						strokeDynamic = true;
					tempLayer.style.dynamic = true;
				}

				if (tempLayer.style.dynamic) {
					defaultStyle = new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'strokeOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'strokeWidth' : strokeDynamic ? "${getSize}" : tempLayer.style.width,
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.hrgb[0], tempLayer.style.hrgb[1], tempLayer.style.hrgb[2]),
						'strokeLinecap' : "square",
						'fill' : true,
						'pointRadius' : "${getRadius}",
						'JSGIDynamicSize' : true
					}, {
						context : {
							getSize : function(feature) {
								if (strokeDynamic) {
									var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.styleSize));
									return (size < 1) ? 1 : size;
								} else {
									var strokeWidth = feature.styleSize;
									var radiusPixel;
									if (webtis.Format.ParseJSON.USE_GEODESTIC_CIRCLE) {
										var calcGeom = feature.geometry.clone();
										calcGeom = calcGeom.transform(feature.layer.map.getProjectionObject(),webtis.Format.JSGIJSON.baseProjection);
										var lonLat = new OpenLayers.LonLat(calcGeom.x,calcGeom.y);
										var horiLatLon = OpenLayers.Util.destinationVincenty(lonLat,90,feature.pointRadius);
										var pix = feature.layer.map.getPixelFromLonLat(lonLat.transform(webtis.Format.JSGIJSON.baseProjection,feature.layer.map.getProjectionObject()));
										horiPix = feature.layer.map.getPixelFromLonLat(horiLatLon.transform(webtis.Format.JSGIJSON.baseProjection,feature.layer.map.getProjectionObject()));
										radiusPixel = Math.round(horiPix.x - pix.x);
									} else {
										radiusPixel = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.pointRadius));
									}
									if (radiusPixel*2 > strokeWidth) {
										return strokeWidth;
									} else {
										return strokeWidth - (strokeWidth - radiusPixel*2);
									}
								}
							},
							getRadius : function(feature) {
								if (webtis.Format.ParseJSON.USE_GEODESTIC_CIRCLE) {
									var calcGeom = feature.geometry.clone();
									calcGeom = calcGeom.transform(feature.layer.map.getProjectionObject(),webtis.Format.JSGIJSON.baseProjection);
									var lonLat = new OpenLayers.LonLat(calcGeom.x,calcGeom.y);
									var horiLatLon = OpenLayers.Util.destinationVincenty(lonLat,90,feature.pointRadius);
									var pix = feature.layer.map.getPixelFromLonLat(lonLat.transform(webtis.Format.JSGIJSON.baseProjection,feature.layer.map.getProjectionObject()));
									var horiPix = feature.layer.map.getPixelFromLonLat(horiLatLon.transform(webtis.Format.JSGIJSON.baseProjection,feature.layer.map.getProjectionObject()));
									return Math.round(horiPix.x - pix.x);
								}
								return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.pointRadius));
							}
						}
					});
					selectStyle = new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : 'blue',
						'strokeOpacity' : 1,
						'strokeWidth' : 2,
						'strokeDashstyle' : 'solid',
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : "blue",
						'fill' : true,
						'pointRadius' : "${getRadius}",
						'JSGIDynamicSize' : true
					}, {
						context : {
							getRadius : function(feature) {
								if (webtis.Format.ParseJSON.USE_GEODESTIC_CIRCLE) {
									var calcGeom = feature.geometry.clone();
									calcGeom = calcGeom.transform(feature.layer.map.getProjectionObject(),webtis.Format.JSGIJSON.baseProjection);
									var lonLat = new OpenLayers.LonLat(calcGeom.x,calcGeom.y);
									var horiLatLon = OpenLayers.Util.destinationVincenty(lonLat,90,feature.pointRadius);
									var pix = feature.layer.map.getPixelFromLonLat(lonLat.transform(webtis.Format.JSGIJSON.baseProjection,feature.layer.map.getProjectionObject()));
									var horiPix = feature.layer.map.getPixelFromLonLat(horiLatLon.transform(webtis.Format.JSGIJSON.baseProjection,feature.layer.map.getProjectionObject()));
									return Math.round(horiPix.x - pix.x);
								}
								return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.pointRadius/* + (feature.pointRadius*0.2)*/));
							}
						}
					});
				} else {
					defaultStyle = new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'strokeOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'strokeWidth' : tempLayer.style.width,
						'strokeLinecap' : "square",
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.hrgb[0], tempLayer.style.hrgb[1], tempLayer.style.hrgb[2]),
						'fill' : true,
						'pointRadius' : tempLayer.representativeRadius,
						'JSGIDynamicSize' : false
					});
					selectStyle= new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : 'blue',
						'strokeOpacity' : 1,
						'strokeWidth' : 2,
						'strokeDashstyle' : 'solid',
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.hrgb[0], tempLayer.style.hrgb[1], tempLayer.style.hrgb[2]),
						'fill' : true,
						'pointRadius' : tempLayer.representativeRadius + 2,
						'JSGIDynamicSize' : false
					});
				}
			} else if (tempLayer.style.type == "string") {
				// 線
				if (tempLayer.style.dynamic) {
					defaultStyle = new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'strokeOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'strokeWidth' : "${getSize}",
						'strokeLinecap' : "square",
						'fill' : false,
						'JSGIDynamicSize' : true
					}, {
						context : {
							getSize : function(feature) {
								var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.styleSize));
								return size < 1?1:size;
							}
						}
					});
				} else {
					defaultStyle = new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'strokeOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'strokeWidth' : tempLayer.style.width,
						'strokeLinecap' : "square",
						'fill' : false,
						'JSGIDynamicSize' : false
					});

				}
			} else if (tempLayer.style.type == "polygon") {
				// ポリゴン
				if (tempLayer.style.dynamic) {
					defaultStyle = new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'strokeOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'strokeWidth' : "${getSize}",
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : tempLayer.style.isPolygonFill() ? webtis.Format.Parse.RGBToHexaColor(tempLayer.style.hrgb[0], tempLayer.style.hrgb[1], tempLayer.style.hrgb[2]) : 'white',
						'fill' : tempLayer.style.isPolygonFill(),
						'strokeLinecap' : "square",
						'JSGIDynamicSize' : true
					}, {
						context : {
							getSize : function(feature) {
								var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.styleSize));
								return size < 1 ? 1:size;
							}
						}
					});
				} else {
					defaultStyle = new OpenLayers.Style({
						'stroke' : true,
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'strokeOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'strokeWidth' : tempLayer.style.width,
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : tempLayer.style.isPolygonFill() ? webtis.Format.Parse.RGBToHexaColor(tempLayer.style.hrgb[0], tempLayer.style.hrgb[1], tempLayer.style.hrgb[2]) : 'white',
						'fill' : tempLayer.style.isPolygonFill(),
						'strokeLinecap' : "square",
						'JSGIDynamicSize' : false
					});
				}
			} else if (tempLayer.style.type == "text") {
				if (tempLayer.style.fontSizeDynamic) {
					defaultStyle = new OpenLayers.Style({
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'fontColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'fontFamily' : tempLayer.style.fontFamily,
						'fontWeight' : tempLayer.style.fontWeight,
						'fontSize' : "${getSize}",
						'fontSizeNumber' : "${getSizeNumber}",
						'labelAlign' : tempLayer.style.mode,
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : tempLayer.style.isBackgroundFill() ? webtis.Format.Parse.RGBToHexaColor(tempLayer.style.brgb[0], tempLayer.style.brgb[1], tempLayer.style.brgb[2]) : 'white',
						'fill' : tempLayer.style.isBackgroundFill(),
						'labelSelect' : true,
						'JSGIDynamicSize' : true
					}, {
						context : {
							getSize : function(feature) {
								return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.styleSize)) + "px";
							},
							getSizeNumber : function(feature) {
								return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.styleSize));
							}
						}
					});
				} else {
					defaultStyle = new OpenLayers.Style({
						'strokeColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'fontColor' : webtis.Format.Parse.RGBToHexaColor(tempLayer.style.rgb[0], tempLayer.style.rgb[1], tempLayer.style.rgb[2]),
						'fontFamily' : tempLayer.style.fontFamily,
						'fontWeight' : tempLayer.style.fontWeight,
						'fontSize' : tempLayer.style.fontSize + "px",
						'fontSizeNumber' : tempLayer.style.fontSize,
						'labelAlign' : tempLayer.style.mode,
						'fillOpacity' : tempLayer.style.transparent ? 0.5 : 1,
						'fillColor' : tempLayer.style.isBackgroundFill() ? webtis.Format.Parse.RGBToHexaColor(tempLayer.style.brgb[0], tempLayer.style.brgb[1], tempLayer.style.brgb[2]) : 'white',
						'fill' : tempLayer.style.isBackgroundFill(),
						'labelSelect' : true,
						'JSGIDynamicSize' : false
					});
				}
			} else if (tempLayer.style.type == "image") {
				// ピクセルサイズを取りに画像プリーロードする
			}

			if (!layer) {
				// レイヤ作成
				if (tempLayer.style.styleKind == "system" && tempLayer.style.style) {
					defaultStyle.defaultStyle.strokeDashstyle = tempLayer.style.style;
				}

				if (defaultStyle) {
					var _ds = { "default": defaultStyle };
					if (selectStyle) {
						_ds["select"] = selectStyle;
					}
					layerStyleMap = new OpenLayers.StyleMap(_ds);
				}

				layer = new webtis.Layer.Vector(tempLayer.name, layerStyleMap ? {
					styleMap: layerStyleMap
				} : null);
				layer.setDisplayLevel(tempLayer.style.displayLevel);
				layer.visibility = tempLayer.style.display;

				layer.styleName = tempLayer.style.name;
				layer.styleType = tempLayer.style.type;
				layer.description = tempLayer.description;
				layer.addFeatures(features);
				// 選択出来るか否かを設定
				layer.JSGISelection = tempLayer.style.selection;
				if (tempLayer.affixStyle) {
					layer.affixStyle = tempLayer.affixStyle;
				}
				ret.push(layer);
			}

		}
		return ret;
	},

	CLASS_NAME: "webtis.Format.JSGIJSON"
});


// レイヤーの配列をJSON化
webtis.Format.JSGIJSON.makeJSONString = function(layers,baseProjection) {
	var layerNode = [];
	var topNode = new Array({"layer":layerNode});
	var geoJSON = new OpenLayers.Format.GeoJSON();
	for (var i = 0; i < layers.length; i++) {
		var layer = layers[i];
		var dataNode = [];
		var styleNode = null;
		var primidPrefix = null;
		styleNode = layer.affixStyle;
		if (layer.styleType == "string" || layer.styleType == "polygon") {
			primidPrefix = "cv";
		}
		var layerName = layer.name;
		var description = layer.description;
		if (layer.name.indexOf("_affix_.")==0) {
			layerName = layerName.substring(8);
		}
		layerNode[i] = {
			"name" : layerName,
			"description" : description,
			"style" : styleNode,
			"data" : dataNode
		};
		var primId = 1;
		for (var j = 0; j < layer.features.length; j++) {
			var feature = layer.features[j];
			var attributes = feature.attributes;
			var name = attributes["name"];
			var description = attributes["description"];

			var attr = attributes["attr"];
			var attrString = "";
			if (attr) {
				for (var k = 0; k < attr.length; k++) {
					var attrkey = attr[k].name;
					var value = attr[k].value;
					if (attrString.length > 0) {
						attrString += ",";
					}
					attrString += attrkey+"=\""+webtis.Format.JSGIJSON.escapeHTML(value,true)+"\"";
				}
			}
			var geometryJSON = null;
			var meter = null;
			var data = null;
			if (layer.styleType == "circle") {
				var geometry = feature.geometry.clone().transform(layer.map.getProjectionObject(),baseProjection);
				eval("geometryJSON = "+geoJSON.write(geometry)+";");
				meter = feature.pointRadius;
			} else if (layer.styleType == "text") {
					var geometry = feature.geometry.clone().components[0].transform(layer.map.getProjectionObject(),baseProjection);
					eval("geometryJSON = "+geoJSON.write(geometry)+";");
					meter = feature.pointRadius;
			} else if (layer.styleType == "image") {
				var geometry = feature.geometry.clone().transform(layer.map.getProjectionObject(),baseProjection);
				var imageMapping = {
						"leftBottomCorner" : {"type" : "Point" , "coordinates" :[geometry.x,geometry.y-geometry.height]},
						"rightTopCorner" : {"type" : "Point" , "coordinates" :[geometry.x+geometry.width,geometry.y]},
						"leftTopCorner" : {"type" : "Point" , "coordinates" :[geometry.x,geometry.y]},
						"rightBottomCorner" : {"type" : "Point" , "coordinates" :[geometry.x+geometry.width,geometry.y-geometry.height]}
				};
				data = {
				        "name": name,
				        "description":description,
				        "attribute": attrString,
				        "crs": "JGD2000 / (L, B)",
				        "type" : geometry.imageType,
				        "src" : geometry.imageUrl,
				        "imageMapping": imageMapping
					};
			} else {
				// window.console.log(layer.styleType+":"+feature.geometry.CLASS_NAME);
				var geometry = feature.geometry.clone().transform(layer.map.getProjectionObject(),baseProjection);
				eval("geometryJSON = "+geoJSON.write(geometry)+";");
			}
			if (!data) {
				data = {
			        "name": name,
			        "description":description,
			        "attribute": attrString,
			        "crs": "JGD2000 / (L, B)",
			        "geometry": geometryJSON
				};
			}
			if (primidPrefix) {
				data = OpenLayers.Util.extend(data,{"primitiveId":primidPrefix+webtis.Format.JSGIJSON.zeroPadDeci(primId,3)});
			}
			if (meter) {
				data = OpenLayers.Util.extend(data,{"radius":{
						unit:"meter",
						value : meter
					}
				});
			}
			dataNode[j] = data;
		}
	}
	var result = webtis.Format.JSGIJSON.stringify(topNode);
	result = result.substring(1,result.length-1);
	result = result.substring(result.indexOf("{"),result.lastIndexOf("}")+1);
	// window.console.log(result);
	return result;
};

webtis.Format.JSGIJSON.stringify = function(obj) {
	var json = new OpenLayers.Format.JSON();
	var result = json.write(obj);
	// var result = JSON.stringify(obj);
	return result;
};
//HTMLをエスケープ
webtis.Format.JSGIJSON.escapeHTML = function(str,forSend) {
	if (!str) {
		return str;
	}
	var result = str.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
	if (!forSend) {
		result = result.replace(/[\r]/g,"");
		result = result.replace(/[\n]/g,"<br/>");
		result = result.replace(/ /g,"&nbsp;");
	} else {
		result = result.replace(/[\r]/g,"");
		result = result.replace(/[\n]/g,",=");
	}
	return result;
};

//10進数 10より小さいときは、0を付加
webtis.Format.JSGIJSON.zeroPadDeci = function(deci,padLen) {
	var str = deci+"";
	while (str.length < padLen) {
		str = "0" + str;
	}
	return str;
};

webtis.Format.Parse.mapTextAlignment = function(textAlignment) {
	var ret = textAlignment.charAt(0).toLowerCase();
	if (textAlignment.charAt(1) == 'C') {
		ret += 'm';
	} else {
		ret += textAlignment.charAt(1).toLowerCase();
	}
	return ret;
};

webtis.Format.Parse.mapTextStyle = function(textStyle) {
	var ret = 'normal';
	if (textStyle.indexOf(',') > -1) {
		var textStyles = textStyle.split(',');
		textStyle = textStyles[0];
	}
	if (textStyle == '太' || textStyle == 'bold') {
		ret = '700';
	} else if (textStyle == '中太') {
		ret = '800';
	} else if (textStyle == '極太' || textStyle == 'bolder') {
		ret = '900';
	}
	return ret;
};

webtis.Format.Parse.metersToPixel = function(map, meters) {
	var res = map.getResolution();
	// assume constant resolution based on x-direction
	// -> only used for line width style, circle size
	var curMapUnits = map.getUnits();
	var inches = OpenLayers.INCHES_PER_UNIT;
	var size = meters * inches["m"];
	return size / (res * inches[curMapUnits]);
};

webtis.Format.Parse.RGBToHexaColor = function(r, g, b) {
	var nr = (typeof r == 'string') ? parseInt(r) : r;
	var ng = (typeof g == 'string') ? parseInt(g) : g;
	var nb = (typeof b == 'string') ? parseInt(b) : b;
	var sr = nr.toString(16); sr = sr.length == 1 ? "0" + sr : sr;
	var sg = ng.toString(16); sg = sg.length == 1 ? "0" + sg : sg;
	var sb = nb.toString(16); sb = sb.length == 1 ? "0" + sb : sb;
	return "#" + sr + sg + sb;
};
/* ======================================================================
    Handler/Box.js
   ====================================================================== */

/**
 * Class: webtis.Handler.Box
 * 電子国土Webシステム APIで矩形描画を行うハンドラー
 *
 * Inherits from:
 *  - <OpenLayers.Handler.Box>
 */
webtis.Handler.Box = OpenLayers.Class(OpenLayers.Handler.Box, {

	deactivate: function () {
		if (OpenLayers.Handler.prototype.deactivate.apply(this, arguments)) {
			if (this.dragHandler) {
				this.dragHandler.deactivate();
			}
			return true;
		} else {
			return false;
		}
	},

	CLASS_NAME: "webtis.Handler.Box"
});
/* ======================================================================
    Control/ScaleLine.js
   ====================================================================== */

/**
 * Class: webtis.Control.ScaleLine
 * 電子国土Webシステム APIの距離凡例を表示するコントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control.ScaleLine>
 */
webtis.Control.ScaleLine = OpenLayers.Class(OpenLayers.Control.ScaleLine, {

	initialize: function(options) {
		OpenLayers.Control.ScaleLine.prototype.initialize.apply(this, [options]);
		this.geodesic = true;
		var parentClassName = OpenLayers.Control.ScaleLine.prototype.CLASS_NAME;
		this.displayClass = parentClassName.replace("OpenLayers.", "ol").replace(/\./g, "");
	},

	update: function() {

		var mapSize = this.map.getSize();

		var res = this.map.getResolution();
		if (!res) {
			return;
		}

		var curMapUnits = this.map.getUnits();
		var inches = OpenLayers.INCHES_PER_UNIT;

		var maxSizeData = this.maxWidth * res * inches[curMapUnits];
		var geodesicRatio = 1;
		if(this.geodesic === true) {
			var maxSizeGeodesic = (this.map.getGeodesicPixelSize().w ||
					0.000001) * this.maxWidth;
			var maxSizeKilometers = maxSizeData / inches["km"];
			geodesicRatio = maxSizeGeodesic / maxSizeKilometers;
			maxSizeData *= geodesicRatio;
		}

		var topUnits;
		if(maxSizeData > 100000) {
			topUnits = this.topOutUnits;
		} else {
			topUnits = this.topInUnits;
		}

		// and to map units units
		var topMax = maxSizeData / inches[topUnits];

		// now trim this down to useful block length
		var topRounded = this.getBarLen(topMax);

		// and back to display units
		topMax = topRounded / inches[curMapUnits] * inches[topUnits];

		// and to pixel units
		var topPx = topMax / res / geodesicRatio;

		var rtopPx = Math.round(topPx);

		if (this.eTop.style.visibility == "visible"){
			this.eTop.style.width = rtopPx + "px";
			this.eTop.innerHTML = topRounded + " " + topUnits;
		}

		this.div.style.left = (mapSize.w - 10 - rtopPx) + "px";
		this.div.style.bottom = "10px";
	},

	destroy: function () {
		this.map.events.unregister('moveend', this, this.update);
		OpenLayers.Control.prototype.destroy.apply(this);
	},

	CLASS_NAME: "webtis.Control.ScaleLine"
});
/* ======================================================================
    Renderer/PixelVML.js
   ====================================================================== */

/**
 * Class: webtis.Renderer.PixelVML
 * 電子国土Webシステム APIでピクセル座標の電子国土Web システム用XMLデータをVMLで表示するための描画クラス
 *
 * Inherits from:
 *  - <OpenLayers.Renderer.VML>
 */
webtis.Renderer.PixelVML = OpenLayers.Class(OpenLayers.Renderer.VML, {

	setExtent: function(extent, resolutionChanged) {

		var left = 0;
		var top = 0;
		this.extent = new OpenLayers.Bounds(0, 0, this.size.w, this.size.h);

		var org = left + " " + top;
		this.root.coordorigin = org;
		var roots = [this.root, this.vectorRoot, this.textRoot];
		var root;
		for(var i=0, len=roots.length; i<len; ++i) {
			root = roots[i];

			var size = this.size.w + " " + this.size.h;
			root.coordsize = size;
		}
		// flip the VML display Y axis upside down so it
		// matches the display Y axis of the map
		//this.root.style.flip = "y";

		return true;
	},

	setStyle: function(node, style, options, geometry) {
		style = style  || node._style;
		options = options || node._options;
		var fillColor = style.fillColor;

		if (node._geometryClass === "OpenLayers.Geometry.Point") {
			if (style.externalGraphic) {
				if (style.graphicTitle) {
					node.title=style.graphicTitle;
				}
				var width = style.graphicWidth || style.graphicHeight;
				var height = style.graphicHeight || style.graphicWidth;
				width = width ? width : style.pointRadius*2;
				height = height ? height : style.pointRadius*2;

				var xOffset = (style.graphicXOffset != undefined) ?
						style.graphicXOffset : -(0.5 * width);
				var yOffset = (style.graphicYOffset != undefined) ?
						style.graphicYOffset : -(0.5 * height);

				node.style.left = ((geometry.x + xOffset) | 0) + "px";
				node.style.top = ((geometry.y - (yOffset + height)) | 0) + "px";
				node.style.width = width + "px";
				node.style.height = height + "px";
				node.style.flip = "y";

				// modify fillColor and options for stroke styling below
				fillColor = "none";
				options.isStroked = false;
			} else if (this.isComplexSymbol(style.graphicName)) {
				var cache = this.importSymbol(style.graphicName);
				node.path = cache.path;
				node.coordorigin = cache.left + "," + cache.bottom;
				var size = cache.size;
				node.coordsize = size + "," + size;
				this.drawCircle(node, geometry, style.pointRadius);
				node.style.flip = "y";
			} else {
				this.drawCircle(node, geometry, style.pointRadius);
			}
		}

		// fill
		if (options.isFilled) {
			node.fillcolor = fillColor;
		} else {
			node.filled = "false";
		}
		var fills = node.getElementsByTagName("fill");
		var fill = (fills.length == 0) ? null : fills[0];
		if (!options.isFilled) {
			if (fill) {
				node.removeChild(fill);
			}
		} else {
			if (!fill) {
				fill = this.createNode('olv:fill', node.id + "_fill");
			}
			fill.opacity = style.fillOpacity;

			if (node._geometryClass === "OpenLayers.Geometry.Point" &&
					style.externalGraphic) {

				// override fillOpacity
				if (style.graphicOpacity) {
					fill.opacity = style.graphicOpacity;
				}

				fill.src = style.externalGraphic;
				fill.type = "frame";

				if (!(style.graphicWidth && style.graphicHeight)) {
					fill.aspect = "atmost";
				}
			}
			if (fill.parentNode != node) {
				node.appendChild(fill);
			}
		}

		// additional rendering for rotated graphics or symbols
		var rotation = style.rotation;
		if ((rotation !== undefined || node._rotation !== undefined)) {
			node._rotation = rotation;
			if (style.externalGraphic) {
				this.graphicRotate(node, xOffset, yOffset, style);
				// make the fill fully transparent, because we now have
				// the graphic as imagedata element. We cannot just remove
				// the fill, because this is part of the hack described
				// in graphicRotate
				fill.opacity = 0;
			} else if(node._geometryClass === "OpenLayers.Geometry.Point") {
				node.style.rotation = rotation || 0;
			}
		}

		// stroke
		var strokes = node.getElementsByTagName("stroke");
		var stroke = (strokes.length == 0) ? null : strokes[0];
		if (!options.isStroked) {
			node.stroked = false;
			if (stroke) {
				stroke.on = false;
			}
		} else {
			if (!stroke) {
				stroke = this.createNode('olv:stroke', node.id + "_stroke");
				node.appendChild(stroke);
			}
			stroke.on = true;
			stroke.color = style.strokeColor;
			stroke.weight = style.strokeWidth + "px";
			stroke.opacity = style.strokeOpacity;
			stroke.endcap = style.strokeLinecap == 'butt' ? 'flat' :
				(style.strokeLinecap || 'round');
			if (style.strokeDashstyle) {
				stroke.dashstyle = this.dashStyle(style);
			}
		}

		if (style.cursor != "inherit" && style.cursor != null) {
			node.style.cursor = style.cursor;
		}
		return node;
	},

	setNodeDimension: function(node, geometry) {
		var bbox = geometry.getBounds();
		if(bbox) {
			// Set the internal coordinate system to draw the path
			node.style.left = bbox.left + "px";
			node.style.top = bbox.top + "px";
			node.style.width = bbox.getWidth() + "px";
			node.style.height = bbox.getHeight() + "px";

			node.coordorigin = bbox.left + " " + bbox.top;
			node.coordsize = bbox.getWidth()+ " " + bbox.getHeight();
		}
	},

	drawCircle: function(node, geometry, radius) {
		if(!isNaN(geometry.x)&& !isNaN(geometry.y)) {
			node.style.left = ((geometry.x | 0) - radius) + "px";
			node.style.top = ((geometry.y | 0) - radius) + "px";
			var diameter = radius * 2;
			node.style.width = diameter + "px";
			node.style.height = diameter + "px";
			return node;
		}
		return false;
	},

	drawLine: function(node, geometry, closeLine) {

		this.setNodeDimension(node, geometry);

		var numComponents = geometry.components.length;
		var parts = new Array(numComponents);

		var comp, x, y;
		for (var i = 0; i < numComponents; i++) {
			comp = geometry.components[i];
			x = comp.x | 0;
			y = comp.y | 0;
			parts[i] = " " + x + "," + y + " l ";
		}
		var end = (closeLine) ? " x e" : " e";
		node.path = "m" + parts.join("") + end;
		return node;
	},

	drawPolygon: function(node, geometry) {

		this.setNodeDimension(node, geometry);

		var path = [];
		var linearRing, i, j, len, ilen, comp, x, y;
		for (j = 0, len=geometry.components.length; j<len; j++) {
			linearRing = geometry.components[j];

			path.push("m");
			for (i=0, ilen=linearRing.components.length; i<ilen; i++) {
				comp = linearRing.components[i];
				x = comp.x | 0;
				y = comp.y | 0;
				path.push(" " + x + "," + y);
				if (i==0) {
					path.push(" l");
				}
			}
			path.push(" x ");
		}
		path.push("e");
		node.path = path.join("");
		return node;
	},

	drawRectangle: function(node, geometry) {

		node.style.left = (geometry.x | 0) + "px";
		node.style.top = (geometry.y | 0) + "px";
		node.style.width = (geometry.width | 0) + "px";
		node.style.height = (geometry.height | 0) + "px";

		return node;
	},

	drawImageRectangle: function(node, geometry) {

		var width = geometry.width;
		var height = geometry.height;

		node.style.left = (geometry.x | 0) + "px";
		node.style.top = (geometry.y | 0) + "px";
		node.style.width = width + "px";
		node.style.height = height + "px";
		//node.style.flip = "y";
		node.stroked = false;

		var fills = node.getElementsByTagName("fill");
		var fill = (fills.length == 0) ? null : fills[0];

		if (!fill) {
			fill = this.createNode('olv:fill', node.id + "_fill");
		}

		if (geometry.imageOpacity) {
			fill.opacity = geometry.imageOpacity;
		}
		fill.src = geometry.imageUrl;
		fill.type = "frame";

		if (fill.parentNode != node) {
			node.appendChild(fill);
		}

		return node;
	},

	drawText: function(featureId, style, location) {

		var label = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX, "olv:rect");
		var textbox = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_textbox", "olv:textbox");

		var labelText = style.label;
		var labelFontSize = 12;
		if (style.fontSize) {
			labelFontSize = parseInt(style.fontSize);
		}
		/*
		var labelWidth = (labelFontSize * (labelText.length + 0.5)) | 0;
		var labelHeight = ((labelFontSize * 1.5) | 0);
		*/

		var labelLeft = location.x | 0;
		var labelTop = location.y | 0;

		label.style.left = labelLeft + "px";
		label.style.top = labelTop + "px";
		/*
		label.style.width = labelWidth + "px";
		label.style.height = labelHeight + "px";
		*/
		//label.style.flip = "y";
		label.filled = false;
		label.stroked = false;

		textbox.innerText = labelText;

		textbox.style.fontSize = labelFontSize + "px";
		textbox.style.lineHeight = labelFontSize + "px";

		if (style.fontColor) {
			textbox.style.color = style.fontColor;
		}
		if (style.fontOpacity) {
			textbox.style.filter = 'alpha(opacity=' + (style.fontOpacity * 100) + ')';
		}
		if (style.fontFamily) {
			textbox.style.fontFamily = style.fontFamily;
		}
		if (style.fontWeight) {
			textbox.style.fontWeight = style.fontWeight;
		}

		textbox.style.whiteSpace = "nowrap";
		var inset = ((labelFontSize/4) | 0) + "px";
		textbox.inset = inset + "," + inset + "," + inset + "," + inset;

		if(!label.parentNode) {
			label.appendChild(textbox);
			this.textRoot.appendChild(label);
		}

		var align = style.labelAlign || "cm";
		if (align.length == 1) {
			align += "m";
		}
		var labelWidth = textbox.clientWidth;
		var labelHeight = textbox.clientHeight;
		var xshift = labelWidth * (OpenLayers.Renderer.VML.LABEL_SHIFT[align.substr(0,1)]);
		var yshift = labelHeight * (OpenLayers.Renderer.VML.LABEL_SHIFT[align.substr(1,1)]);
		label.style.left = ((labelLeft - xshift - 1) | 0) + "px";
		label.style.top = ((labelTop + yshift) | 0) + "px";

	},

	drawSurface: function(node, geometry) {

		this.setNodeDimension(node, geometry);

		var path = [];
		var comp, x, y;
		for (var i=0, len=geometry.components.length; i<len; i++) {
			comp = geometry.components[i];
			x = comp.x | 0;
			y = comp.y | 0;
			if ((i%3)==0 && (i/3)==0) {
				path.push("m");
			} else if ((i%3)==1) {
				path.push(" c");
			}
			path.push(" " + x + "," + y);
		}
		path.push(" x e");

		node.path = path.join("");
		return node;
	},

	CLASS_NAME: "webtis.Renderer.PixelVML"
});
/* ======================================================================
    Geometry/TextRectangle.js
   ====================================================================== */

/**
 * Class: webtis.Geometry.TextRectangle
 * 電子国土Webシステム APIの文字オブジェクトを表すGeometryオブジェクト
 *
 * Inherits from:
 *  - <OpenLayers.Geometry.Point>
 */
webtis.Geometry.TextRectangle = OpenLayers.Class(OpenLayers.Geometry.Point, {

	selectDisplay: null,

	initialize: function(x, y, selectDisplay) {
		OpenLayers.Geometry.Point.prototype.initialize.apply(this, arguments);
		if (selectDisplay)
			this.selectDisplay = selectDisplay;
		this.components = [new OpenLayers.Geometry.Point(x, y)];
	},

	clone: function(obj) {
		if (obj == null) {
			obj = new webtis.Geometry.TextRectangle(this.x, this.y, this.selectDisplay);
		}
		if (this.label)
			obj.label = this.label;
		OpenLayers.Util.applyDefaults(obj, this);
		return obj;
	},


	calculateBounds: function() {
		this.bounds = new OpenLayers.Bounds(this.x, this.y,this.x, this.y);
		this.components = [new OpenLayers.Geometry.Point(this.x, this.y)];
	},

	CLASS_NAME: "webtis.Geometry.TextRectangle"
});
/* ======================================================================
    Layer/PixelVector.js
   ====================================================================== */

/**
 * Class: webtis.Layer.PixelVector
 * 電子国土Webシステム APIでピクセル座標で地物を表示するレイヤー
 *
 * Inherits from:
 *  - <webtis.Layer.Vector>
 */
webtis.Layer.PixelVector = OpenLayers.Class(webtis.Layer.Vector, {

	initialize: function(name, options) {
		this.renderers = [webtis.Renderer.PixelSVG, webtis.Renderer.PixelVML, 'Canvas'];
		OpenLayers.Layer.Vector.prototype.initialize.apply(this, arguments);
	},

	CLASS_NAME: "webtis.Layer.PixelVector"
});
/* ======================================================================
    Handler/LeftRightDrag.js
   ====================================================================== */

/**
 * Class: webtis.Handler.LeftRightDrag
 * 電子国土Webシステム APIでマウスでのドラッグ行うハンドラー
 *
 * Inherits from:
 *  - <OpenLayers.Handler.Drag>
 */
webtis.Handler.LeftRightDrag = OpenLayers.Class(OpenLayers.Handler.Drag, {

	/**
	 * Property: leftDrag
	 * {Boolean}
	 */
	leftDrag: false,

	/**
	 * Property: rightDrag
	 * {Boolean}
	 */
	rightDrag: false,

	mousedown: function (evt) {
		var propagate = true;
		this.dragging = false;
		this.leftDrag = OpenLayers.Event.isLeftClick(evt);
		this.rightDrag = OpenLayers.Event.isRightClick(evt);
		if (this.checkModifiers(evt) && (this.leftDrag||this.rightDrag)) {
			this.started = true;
			this.start = evt.xy;
			this.last = evt.xy;
			OpenLayers.Element.addClass(
				this.map.viewPortDiv, "olDragDown"
			);
			this.down(evt);
			this.callback("down", [evt.xy]);
			OpenLayers.Event.stop(evt);

			if(!this.oldOnselectstart) {
				this.oldOnselectstart = (document.onselectstart) ? document.onselectstart : OpenLayers.Function.True;
			}
			document.onselectstart = OpenLayers.Function.False;

			propagate = !this.stopDown;
		} else {
			this.started = false;
			this.start = null;
			this.last = null;
		}
		return propagate;
	},

	activate: function() {
		OpenLayers.Handler.Drag.prototype.activate.apply(this, []);
		// コンテキストメニューを無効にする。（しないと、右マウスのイベントの後
		// でコンテキストメニューが表示されてしまう）
		OpenLayers.Event.observe(document.body, "contextmenu",
			OpenLayers.Function.bindAsEventListener(function(evt) {
				OpenLayers.Event.stop(evt, false);
				return false;
			}, this));
	},

	deactivate: function() {
		OpenLayers.Handler.Drag.prototype.deactivate.apply(this, []);
		// コンテキストメニューを有効にする。
		OpenLayers.Event.observe(document.body, "contextmenu",
			OpenLayers.Function.bindAsEventListener(function(evt) {
				return true;
			}, this));
	},

	CLASS_NAME: "webtis.Handler.LeftRightDrag"
});
/* ======================================================================
    Control/MultiLayerDragFeature.js
   ====================================================================== */

/**
 * Class: webtis.Control.MultiLayerDragFeature
 * 電子国土Webシステム APIで複数のレイヤを透過的にドラッグできるようにするコントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control.DragFeature>
 */
webtis.Control.MultiLayerDragFeature = OpenLayers.Class(OpenLayers.Control.DragFeature, {

	initialize: function(layers, options) {
		OpenLayers.Control.prototype.initialize.apply(this, [options]);

		this.initLayer(layers);

		this.handlers = {
			drag: new OpenLayers.Handler.Drag(
				this, OpenLayers.Util.extend({
					down: this.downFeature,
					move: this.moveFeature,
					up: this.upFeature,
					out: this.cancel,
					done: this.doneDragging
				}, this.dragCallbacks), {
					documentDrag: this.documentDrag
				}
			),
			feature: new OpenLayers.Handler.Feature(
				this, this.layer, OpenLayers.Util.extend({
					over: this.overFeature,
					out: this.outFeature
				}, this.featureCallbacks),
				{geometryTypes: this.geometryTypes}
			)
		};
	},

	initLayer: function(layers) {
		if(OpenLayers.Util.isArray(layers)) {
			this.layers = layers;
			this.layer = new OpenLayers.Layer.Vector.RootContainer(
				this.id + "_container", {
					layers: layers
				}
			);
		} else {
			this.layer = layers;
		}
	},

	activate: function() {
		if (!this.active) {
			if(this.layers) {
				this.map.addLayer(this.layer);
			}
			this.handlers.feature.activate();
		}
		return OpenLayers.Control.prototype.activate.apply(this, arguments);
	},

	deactivate: function () {
		if (this.active) {
			if(this.layers) {
				this.map.removeLayer(this.layer);
			}
		}
		return OpenLayers.Control.DragFeature.prototype.deactivate.apply(
			this, arguments
		);
	},

	destroy: function() {
		if(this.active && this.layers) {
			this.map.removeLayer(this.layer);
		}
		OpenLayers.Control.prototype.destroy.apply(this, arguments);
		if(this.layers) {
			this.layer.destroy();
		}
	},

	moveFeature: function(pixel) {
		if (!this.feature.layer.JSGISelection) {
			return false;
		}
		var res = this.map.getResolution();
		this.feature.geometry.move(
				res * (pixel.x - this.lastPixel.x),
				res * (this.lastPixel.y - pixel.y));
		this.feature.layer.drawFeature(this.feature);
		this.lastPixel = pixel;
		this.onDrag(this.feature, pixel);
	},

	CLASS_NAME: "webtis.Control.MultiLayerDragFeature"
});
/* ======================================================================
    Handler/Polygon.js
   ====================================================================== */

/**
 * Class: webtis.Handler.Polygon
 * 電子国土Webシステム APIでポリゴンの描画を行うハンドラー
 *
 * Inherits from:
 *  - <OpenLayers.Handler.Polygon>
 */
webtis.Handler.Polygon = OpenLayers.Class(OpenLayers.Handler.Polygon, {

	activate: function() {
		if(!OpenLayers.Handler.prototype.activate.apply(this, arguments)) {
			return false;
		}
		var options = OpenLayers.Util.extend({
			displayInLayerSwitcher: false,
			calculateInRange: OpenLayers.Function.True
		}, this.layerOptions);
		this.layer = new webtis.Layer.Vector(this.CLASS_NAME, options);
		this.map.addLayer(this.layer);
		return true;
	},

	createFeature: function(pixel) {
		var lonlat = this.control.map.getLonLatFromPixel(pixel);
		this.point = new webtis.Feature.Vector(
			new OpenLayers.Geometry.Point(lonlat.lon, lonlat.lat)
		);
		this.line = new webtis.Feature.Vector(
			new OpenLayers.Geometry.LinearRing([this.point.geometry])
		);
		this.polygon = new webtis.Feature.Vector(
			new OpenLayers.Geometry.Polygon([this.line.geometry])
		);
		this.callback("create", [this.point.geometry, this.getSketch()]);
		this.point.geometry.clearBounds();
		this.layer.addFeatures([this.polygon, this.point], {silent: true});
	},

	CLASS_NAME: "webtis.Handler.Polygon"
});
/* ======================================================================
    Control/DenshiKokudoLinks.js
   ====================================================================== */

/**
 * Class: webtis.Control.DenshiKokudoLinks
 * 電子国土Webシステム APIで表示する使用許諾ページなどへのリンクを表すコントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control>
 */
webtis.Control.DenshiKokudoLinks = OpenLayers.Class(OpenLayers.Control, {

	heightOffset: 42,

	initialize: function() {
		OpenLayers.Control.prototype.initialize.apply(this, arguments);
		if (OpenLayers.Util.getBrowserName() == "msie") {
			this.heightOffset = 79;
		} else {
			this.heightOffset = 42;
		}
	},

	createCtrlImage: function(url, left, handler) {
		var	image = document.createElement('img');
		image.src = url;
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '32px';
		image.style.height = '32px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown",
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "click",
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "dblclick",
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},

	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();

			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = (mapSize.h - this.heightOffset) + "px";
			this.div.style.left = "10px";

			this.createCtrlImage("http://cyberjapan.jp/images/icon01.gif", 0, function(e) {
				window.open("http://portal.cyberjapan.jp/index.html");
				OpenLayers.Event.stop(e);
				return false;
			});
		}
		return this.div;
	},

	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.top = (mapSize.h - 42) + "px";
		}
	},

	CLASS_NAME: "webtis.Control.DenshiKokudoLinks"
});
/* ======================================================================
    Feature/Vector.js
   ====================================================================== */

/**
 * Class: webtis.Feature.Vector
 * 電子国土Webシステム APIの地物を格納するためのレイヤー
 *
 * Inherits from:
 *  - <OpenLayers.Feature.Vector>
 */
webtis.Feature.Vector = OpenLayers.Class(OpenLayers.Feature.Vector, {

	initialize: function(geometry, attributes, style) {
		OpenLayers.Feature.Vector.prototype.initialize.apply(this, [geometry, attributes, style]);
		if (!webtis.gObjIDGen) {
			webtis.gObjIDGen = 0;
		}
		webtis.gObjIDGen++;
		this.objid = '' + webtis.gObjIDGen;
	},

	move: function(location) {
		if(!this.layer || !this.geometry.move){
			return;
		}
		var pixel;
		if (location.CLASS_NAME == "OpenLayers.LonLat") {
			pixel = this.layer.map.baseLayer.getViewPortPxFromLonLat(location);
		} else {
			pixel = location;
		}

		var centerLonLat = this.geometry.getBounds().getCenterLonLat();
		var lastPixel = this.layer.map.baseLayer.getViewPortPxFromLonLat(centerLonLat);
		var res = this.layer.map.getResolution();
		this.geometry.move(
				res * (pixel.x - lastPixel.x),
				res * (lastPixel.y - pixel.y));
		this.layer.drawFeature(this);
		return lastPixel;
	},

	clone: function () {
		var ret = new webtis.Feature.Vector(
			this.geometry ? this.geometry.clone() : null,
			this.attributes,
			this.style);
		/**
		if (this.objid) {
			ret.objid = this.objid;
		}
		**/
		webtis.gObjIDGen++;
		ret.objid = '' + webtis.gObjIDGen;

		if (this.styleSize) {
			ret.styleSize = this.styleSize;
		}
		if (this.pointRadius) {
			ret.pointRadius = this.pointRadius;
		}
		return ret;
	},

	toString : function() {
		return this.objid;
	},

	CLASS_NAME: "webtis.Feature.Vector"
});
/* ======================================================================
    Renderer/VML.js
   ====================================================================== */

/**
 * Class: webtis.Renderer.VML
 * 電子国土Webシステム APIで電子国土Web システム用XML データをVMLで表示するための描画クラス
 *
 * Inherits from:
 *  - <OpenLayers.Renderer.VML>
 */
webtis.Renderer.VML = OpenLayers.Class(OpenLayers.Renderer.VML, {

	// ========================================================================
	// OpenLayers.Renderer overrides
	// ========================================================================

	drawFeature: function(feature, style) {
		if(style == null) {
			style = feature.style;
		}
		if (feature.geometry) {
			var bounds = feature.geometry.getBounds();
			if(bounds) {
				if (!bounds.intersectsBounds(this.extent)) {
					style = {display: "none"};
				}
				var rendered = this.drawGeometry(feature.geometry, style, feature.id);
				if(style.display != "none" && (style.label || feature.geometry.label) && rendered !== false) {
					var location = feature.geometry.getCentroid();
					if(style.labelXOffset || style.labelYOffset) {
						xOffset = isNaN(style.labelXOffset) ? 0 : style.labelXOffset;
						yOffset = isNaN(style.labelYOffset) ? 0 : style.labelYOffset;
						var res = this.getResolution();

						location.move(xOffset*res, yOffset*res);
					}
					if (feature.geometry.label) {
						this._drawText(feature.id, style, location, feature.geometry.label);
					} else {
						this.drawText(feature.id, style, location);
					}
				} else {
					this.removeText(feature.id);
				}
				return rendered;
			}
		}
	},

	// ========================================================================
	// OpenLayers.Renderer.Elements overrides
	// ========================================================================

	drawGeometryNode: function(node, geometry, style) {
		var drawn;
		if (geometry.CLASS_NAME == "webtis.Geometry.ImageRectangle") {
			drawn = this.drawImageRectangle(node, geometry);
			if (drawn != false) {
				drawn = {
					node: node/*this.setStyle(node, style, { 'isFilled' : false, 'isStroked' : false }, geometry)*/,
					complete: drawn
				};
			}
		} else if (geometry.CLASS_NAME == "webtis.Geometry.TextRectangle") {
//			if (geometry.selectDisplay || style.orgStyle == 'select') {
//				drawn = this.drawTextRectangle(node, geometry, style);
//				if (drawn != false) {
//					drawn = {
//						node: node/*this.setStyle(node, style, {
//								'isFilled' : style.fill === undefined ? false : style.fill,
//								'isStroked' : false
//							}, geometry)*/,
//						complete: drawn
//					};
//				}
//			} else {
				return { node:node, complete:true };
//			}
		} else {
			drawn = OpenLayers.Renderer.Elements.prototype.drawGeometryNode.apply(this, arguments);
		}
		return drawn;
	},

	// ========================================================================
	// OpenLayers.Renderer.VML overrides
	// ========================================================================
	getNodeType: function(geometry, style) {
		var nodeType = OpenLayers.Renderer.VML.prototype.getNodeType.apply(this, arguments);
		if (!nodeType) {
			if (geometry.CLASS_NAME == "webtis.Geometry.ImageRectangle") {
				nodeType = "olv:rect";
			} else if (geometry.CLASS_NAME == "webtis.Geometry.TextRectangle") {
				nodeType = "olv:rect";
			}
		}
		return nodeType;
	},

	setStyle: function(node, style, options, geometry) {
		style = style  || node._style;
		options = options || node._options;
		var fillColor = style.fillColor;

		if (node._geometryClass === "OpenLayers.Geometry.Point") {
			if (style.externalGraphic) {
				if (style.graphicTitle) {
					node.title=style.graphicTitle;
				}
				var width = style.graphicWidth || style.graphicHeight;
				var height = style.graphicHeight || style.graphicWidth;
				width = width ? width : style.pointRadius*2;
				height = height ? height : style.pointRadius*2;

				var resolution = this.getResolution();

				var xOffset = (style.graphicXOffset != undefined) ?
						style.graphicXOffset : -(0.5 * width);
				var yOffset = (style.graphicYOffset != undefined) ?
						style.graphicYOffset : -(0.5 * height);

				node.style.left = (((geometry.x/resolution - this.offset.x)+xOffset) | 0) + "px";
				node.style.top = (((geometry.y/resolution - this.offset.y)-(yOffset+height)) | 0) + "px";

				node.style.width = width + "px";
				node.style.height = height + "px";
				node.style.flip = "y";

				// modify fillColor and options for stroke styling below
				fillColor = "none";
				options.isStroked = false;
			} else if (this.isComplexSymbol(style.graphicName)) {
				var cache = this.importSymbol(style.graphicName);
				node.path = cache.path;
				node.coordorigin = cache.left + "," + cache.bottom;
				var size = cache.size;
				node.coordsize = size + "," + size;
				this.drawCircle(node, geometry, style.pointRadius);
				node.style.flip = "y";
			} else {
				this.drawCircle(node, geometry, style.pointRadius);
			}
		}

		// fill
		if (options.isFilled) {
			node.fillcolor = fillColor;
		} else {
			node.filled = "false";
		}
		var fills = node.getElementsByTagName("fill");
		var fill = (fills.length == 0) ? null : fills[0];
		if (!options.isFilled) {
			if (fill) {
				node.removeChild(fill);
			}
		} else {
			if (!fill) {
				fill = this.createNode('olv:fill', node.id + "_fill");
			}
			fill.opacity = style.fillOpacity;

			if (node._geometryClass === "OpenLayers.Geometry.Point" &&
					style.externalGraphic) {

				// override fillOpacity
				if (style.graphicOpacity) {
					fill.opacity = style.graphicOpacity;
				}

				fill.src = style.externalGraphic;
				fill.type = "frame";

				if (!(style.graphicWidth && style.graphicHeight)) {
					fill.aspect = "atmost";
				}
			}
			if (fill.parentNode != node) {
				node.appendChild(fill);
			}
		}

		// additional rendering for rotated graphics or symbols
		var rotation = style.rotation;
		if ((rotation !== undefined || node._rotation !== undefined)) {
			node._rotation = rotation;
			if (style.externalGraphic) {
				this.graphicRotate(node, xOffset, yOffset, style);
				// make the fill fully transparent, because we now have
				// the graphic as imagedata element. We cannot just remove
				// the fill, because this is part of the hack described
				// in graphicRotate
				fill.opacity = 0;
			} else if(node._geometryClass === "OpenLayers.Geometry.Point") {
				node.style.rotation = rotation || 0;
			}
		}

		// stroke
		var strokes = node.getElementsByTagName("stroke");
		var stroke = (strokes.length == 0) ? null : strokes[0];
		if (!options.isStroked) {
			node.stroked = false;
			if (stroke) {
				stroke.on = false;
			}
		} else {
			if (!stroke) {
				stroke = this.createNode('olv:stroke', node.id + "_stroke");
				node.appendChild(stroke);
			}
			stroke.on = true;
			stroke.color = style.strokeColor;
			stroke.weight = style.strokeWidth + "px";
			stroke.opacity = style.strokeOpacity;
			stroke.endcap = style.strokeLinecap == 'butt' ? 'flat' :
				(style.strokeLinecap || 'round');
			if (style.strokeDashstyle) {
				stroke.dashstyle = this.dashStyle(style);
			}
		}

		if (style.cursor != "inherit" && style.cursor != null) {
			node.style.cursor = style.cursor;
		}
		return node;
	},
	drawRectangle: function(node, geometry) {
		var resolution = this.getResolution();

		var nodeWidth = ((geometry.width/resolution) | 0);
		var nodeHeight = ((geometry.height/resolution) | 0);
		var nodeTop = ((geometry.y/resolution - this.offset.y) | 0);
		nodeTop -= nodeHeight;

		node.style.left = ((geometry.x/resolution - this.offset.x) | 0) + "px";
		//node.style.top = ((geometry.y/resolution - this.offset.y) | 0) + "px";
		node.style.top = nodeTop + "px";
		node.style.width = nodeWidth + "px";
		node.style.height = nodeHeight + "px";
		node.style.flip = "y";

		return node;
	},

	drawImageRectangle: function(node, geometry) {

		var resolution = this.getResolution();

		var width = geometry.width / resolution;
		var height = geometry.height / resolution;
		var xOffset = 0/*-(0.5 * width)*/;
		var yOffset = 0/*-(0.5 * height)*/;

		node.style.left = (((geometry.x/resolution - this.offset.x) + xOffset) | 0) + "px";
		node.style.top = (((geometry.y/resolution - this.offset.y) - (yOffset + height)) | 0) + "px";
		node.style.width = width + "px";
		node.style.height = height + "px";
		node.style.flip = "y";
		node.stroked = false;

		var fills = node.getElementsByTagName("fill");
		var fill = (fills.length == 0) ? null : fills[0];

		if (!fill) {
			fill = this.createNode('olv:fill', node.id + "_fill");
		}

		if (geometry.imageOpacity) {
			fill.opacity = geometry.imageOpacity;
		}
		fill.src = geometry.imageUrl;
		fill.type = "frame";

		if (fill.parentNode != node) {
			node.appendChild(fill);
		}

		return node;
	},

	_calcLabelWidth : function(str,labelFontSize,bold) {
		var cw = parseFloat(labelFontSize);
		var half = cw /2;
		if (bold) {
			cw *= 1+(0.2*(10.0/labelFontSize));
			half = cw /2;
		}
		var w = 0;
		for (var i = 0; i < str.length; i++) {
			var c = str.charAt(i);
			var len = escape(c).length;
			if (len < 4) {
				w += half;
			} else {
				w += cw;
			}
		}
		return w;
	},
	_drawText: function(featureId, style, location, label) {
		var labelText = label;
		var label = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX, "olv:rect");
		var textbox = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_textbox", "olv:textbox");

		var labelFontSize = 12.0;
		if (style.fontSize) {
			labelFontSize = parseFloat(style.fontSize);
		}
		if (labelFontSize%2!=0) {
			labelFontSize+=1;
		}

		var labelWidth = this._calcLabelWidth(labelText,labelFontSize,style.fontWeight == "bold")+(labelFontSize/2);
		var labelHeight = ((labelFontSize * 1.5) | 0);

		var resolution = this.getResolution();

		var labelLeft = (location.x/resolution - this.offset.x) | 0;
		var labelTop = (location.y/resolution - this.offset.y) | 0;
		labelTop -= labelHeight;

		label.style.left = labelLeft + "px";
		label.style.top = labelTop + "px";
		label.style.width = labelWidth + "px";
		label.style.height = labelHeight + "px";
		label.style.flip = "y";

		if (style.orgStyle == 'select') {
			label.stroked = true;

			var strokes = label.getElementsByTagName("stroke");
			var stroke = (strokes.length == 0) ? null : strokes[0];
			if (!stroke) {
				stroke = this.createNode('olv:stroke', label.id + "_stroke");
				label.appendChild(stroke);
			}
			stroke.on = true;
			stroke.color = "#0000ff";//style.strokeColor;
			stroke.weight = "2px";//style.strokeWidth + "px";
			stroke.opacity = 1;
			stroke.endcap = 'round';
		} else {
			label.stroked = false;
		}

		if (style.fill) {
			label.filled = true;
			label.fillcolor = style.fillColor;
			var fill = fill = this.createNode('olv:fill', featureId + "_fill");;
			fill.opacity = style.fillOpacity;
			label.appendChild(fill);
		} else {
			label.filled = false;
		}

		textbox.innerText = labelText;
		textbox.style.fontFamily = "monospace";
		textbox.style.fontSize = labelFontSize + "px";
		textbox.style.lineHeight = labelFontSize + "px";
		if (style.fontColor) {
			textbox.style.color = style.fontColor;
		}
		if (style.fontOpacity) {
			textbox.style.filter = 'alpha(opacity=' + (style.fontOpacity * 100) + ')';
		}
		if (style.fontFamily) {
			textbox.style.fontFamily = style.fontFamily;
		}
		if (style.fontWeight) {
			textbox.style.fontWeight = style.fontWeight;
		}

		if(style.labelSelect === true) {
			label._featureId = featureId;
			textbox._featureId = featureId;
			textbox._geometry = location;
			textbox._geometryClass = location.CLASS_NAME;
		}

		textbox.style.whiteSpace = "nowrap";

		var inset = ((labelFontSize/4) | 0) + "px";
		textbox.inset = inset + "," + inset + "," + inset + "," + inset;
		//if(!label.parentNode) {
			label.appendChild(textbox);
			this.textRoot.appendChild(label);
		//}

		var align = style.labelAlign || "cm";
		if (align.length == 1) {
			align += "m";
		}
		textbox.style.textAlign="center";
		var labelHeight = textbox.clientHeight;
		var xshift = 0;
		if (align.indexOf("l") == 0) {
			xshift = 0;;
		} else if (align.indexOf("r") == 0) {
			xshift = (labelWidth+(labelFontSize/2));
		} else {
			xshift = (labelWidth+(labelFontSize/2))/2;
		}
		var yshift = (labelHeight+(labelFontSize/2))/2;

		labelLeft = labelLeft - xshift - 1;
		labelTop = labelTop + yshift;

		label.style.left = (labelLeft | 0) + "px";
		label.style.top = (labelTop | 0) + "px";

	},

	drawText: function(featureId, style, location) {
		this._drawText(featureId, style, location, style.label);
	},
	CLASS_NAME: "webtis.Renderer.VML"
});
/* ======================================================================
    Layer/JSGIXMLLayer.js
   ====================================================================== */

/**
 * Class: webtis.Layer.JSGIXMLLayer
 * 電子国土Webシステム APIで電子国土Webシステム用XMLデータを表示するためのレイヤー
 *
 * Inherits from:
 *  - <OpenLayers.Layer.Vector>
 */
var JSGIXMLRequest={};
setTimeout("JSGIXMLRequest.checkJsonRequest()",1000);
JSGIXMLRequest._sequenceNo = 0;
JSGIXMLRequest.checkJsonRequest = function() {
	if (JSGIXMLRequest.queue) {
		for (var key in JSGIXMLRequest.queue) {
			var item = JSGIXMLRequest.queue[key];
			var testVar;
			eval("testVar = JSGIXMLRequest.gJSGIDataList["+item.currentId+"];");
			var currentTime = new Date();
			if ((currentTime.getTime() - item.startTime.getTime())>10000) {
				eval("delete JSGIXMLRequest.queue['"+item.scriptElement.id+"']");
				var headElements = document.getElementsByTagName("head");
				headElements[0].removeChild(item.scriptElement);
				var failure = item['scope'] ? OpenLayers.Function.bind(item['failure'],item['scope']):item['failure'];
				failure(item);
				continue;
			} else {
				eval("testVar = JSGIXMLRequest.gJSGIDataList["+item.currentId+"];");
			}
			if (testVar != undefined) {
				var headElements = document.getElementsByTagName("head");
				eval("delete JSGIXMLRequest.queue['"+item.scriptElement.id+"'];");
				headElements[0].removeChild(item.scriptElement);
				eval("JSGIXMLRequest.gJSGIDataList["+item.currentId+"]=undefined;");
				testVar.sourceItemId = item.currentId;
				item['result']=testVar;
				var success = item['scope']?OpenLayers.Function.bind(item['success'],item['scope']):item['success'];
				success(item);
			}
		}
	}
	setTimeout("JSGIXMLRequest.checkJsonRequest()",2000);
};
JSGIXMLRequest.getJSON = function(params) {
	if (!JSGIXMLRequest.gJSGIDataList) {
		JSGIXMLRequest.gJSGIDataList = new Array();
	}
	if (!JSGIXMLRequest.queue) {
		JSGIXMLRequest.queue = new Array();
	}
	var currentId = JSGIXMLRequest._sequenceNo++;
	var requestUrl = params['url'];
	var url = webtis.SERVER_URL.CONVERT_TO_JSON_SERVER+"?inFmt=path&callback="+currentId+"&content="+escape(requestUrl);
	var script = document.createElement('script');
	script.setAttribute('type', 'text/javascript');
	script.setAttribute('charset', 'UTF-8');
	script.src = url;
	script.id = "jsgijson"+currentId;
	var headElements = document.getElementsByTagName("head");
	headElements[0].appendChild(script);
	var item = params;
	item.currentId = currentId;
	item.scriptElement = script;
	item.startTime = new Date();
	JSGIXMLRequest.queue[script.id]=item;
};

webtis.Layer.JSGIXMLLayer = OpenLayers.Class(OpenLayers.Layer.Vector, {

	loadFailed: false,
	displayLevel: "all",
	subLayers: [],
	description: "",
	affix : false,

	initialize: function(name, url, options) {
		var newArguments = [];
		newArguments.push(name, options);
		OpenLayers.Layer.Vector.prototype.initialize.apply(this, newArguments);
		this.url = url;
		if (options) {
			if (options.formatOptions) {
				this.affix = options.formatOptions.affix;
			}
		}
	},

	setVisibility: function(visibility, noEvent) {
		OpenLayers.Layer.Vector.prototype.setVisibility.apply(this, arguments);
		if(this.visibility && !this.loaded){
			this.loadJSON();
		}
	},

	moveTo:function(bounds, zoomChanged, minor) {
		OpenLayers.Layer.Vector.prototype.moveTo.apply(this, arguments);
		if(this.visibility && !this.loaded){
			this.loadJSON();
		}
	},

	loadJSON: function() {
		if (!this.loaded) {
			this.events.triggerEvent("loadstart");
			JSGIXMLRequest.getJSON({
				url: this.url,
				success: this.requestSuccess,
				failure: this.requestFailure,
				scope: this
			});
			this.loaded = true;
		}
	},

	setUrl:function(url) {
		this.url = url;
		this.destroyFeatures();
		this.loaded = false;
		this.loadJSON();
	},

	requestSuccess:function(doc) {
		if (doc.result) {
			var options = {
					"affix" : this.affix,
					"projection" : this.map.getProjectionObject()
			};
			var json = new webtis.Format.JSGIJSON(options);
			this.subLayers = json.read(doc.result);

			this.loadFailed = false;
			if (this.events) {
				this.events.triggerEvent("loadend");
			}
		}
	},

	requestFailure: function(doc) {
		//OpenLayers.Console.userError(OpenLayers.i18n("errorLoadingGML", {'url':this.url}));
		this.events.triggerEvent("loadend");
	},

	CLASS_NAME: "webtis.Layer.JSGIXMLLayer"
});

var JSGIXMLLoader={};
JSGIXMLLoader.loadXML = function(url,option) {
  JSGIXMLRequest.getJSON({
	    url: url,
	    success: function(doc) {
	    	var jsonOption = {};
	    	if (option && option.projection) {
	    		jsonOption.projection = option.projection;
	    	}
			var json = new webtis.Format.JSGIJSON(jsonOption);
			var subLayers = json.read(doc.result);
			if (option && option.success) {
				option.success(subLayers);
			}
		},
	    failure: function() {
			if (option && option.failure) {
				option.failure();
			}
		}
	  });
};
/* ======================================================================
    Control/ZoomInOutButtons.js
   ====================================================================== */

/**
 * Class: webtis.Control.ZoomInOutButtons
 * 電子国土Webシステム APIの拡大・縮小ボタンを表すコントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control>
 */
webtis.Control.ZoomInOutButtons = OpenLayers.Class(OpenLayers.Control, {

	initialize: function() {
		OpenLayers.Control.prototype.initialize.apply(this, arguments);
	},

	createCtrlImage: function(url, left, handler) {
		var	image = document.createElement('img');
		image.src = url;
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '16px';
		image.style.height = '16px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown",
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "click",
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "dblclick",
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},

	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();

			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = "10px";
			this.div.style.left = (mapSize.w - 45) + "px";

			this.createCtrlImage("http://cyberjapan.jp/images/minus.gif", 0, function(e) {
				this.map.zoomOut();
				OpenLayers.Event.stop(e);
				return false;
			});
			this.createCtrlImage("http://cyberjapan.jp/images/plus.gif", 19, function(e) {
				this.map.zoomIn();
				OpenLayers.Event.stop(e);
				return false;
			});
		}
		return this.div;
	},

	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.left = (mapSize.w - 45) + "px";
		}
	},

	CLASS_NAME: "webtis.Control.ZoomInOutButtons"
});
/* ======================================================================
    Control/SelectFeature.js
   ====================================================================== */

/**
 * Class: webtis.Control.SelectFeature
 * 電子国土Webシステム APIの地物を選択するコントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control.SelectFeature>
 */
webtis.Control.SelectFeature = OpenLayers.Class(OpenLayers.Control.SelectFeature, {

	initialize: function(layers, options) {

		if (OpenLayers.Control.SelectFeature.prototype.EVENT_TYPES && OpenLayers.Control.prototype.EVENT_TYPES) {
			this.EVENT_TYPES =
				OpenLayers.Control.SelectFeature.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES)
		}

		OpenLayers.Control.prototype.initialize.apply(this, [options]);

		if(this.scope === null) {
			this.scope = this;
		}
		this.initLayer(layers);
		var callbacks = {
			click: this.clickFeature,
			clickout: this.clickoutFeature
		};
		if (this.hover) {
			callbacks.over = this.overFeature;
			callbacks.out = this.outFeature;
		}

		this.callbacks = OpenLayers.Util.extend(callbacks, this.callbacks);
		var featureHandler = new OpenLayers.Handler.Feature(
				this, this.layer, this.callbacks,
				{geometryTypes: this.geometryTypes}
			);
		this.handlers = {
				feature: featureHandler
			};
		if (this.box) {
			this.handlers.box = new webtis.Handler.Box(
				this, {done: this.selectBox},
				{boxDivClassName: "olHandlerBoxSelectFeature"}
			);
		}
	},

	_selectBox: function(position) {
		// if multiple is false, first deselect currently selected features
		if (!this.multipleSelect()) {
			this.unselectAll();
		}
		var bounds = null;
		var clickPoint = null;
		var clicked = false;
		if (position instanceof OpenLayers.Bounds) {
			var minXY = this.map.getLonLatFromPixel(
				new OpenLayers.Pixel(position.left, position.bottom)
			);
			var maxXY = this.map.getLonLatFromPixel(
				new OpenLayers.Pixel(position.right, position.top)
			);
			bounds = new OpenLayers.Bounds(
				minXY.lon, minXY.lat, maxXY.lon, maxXY.lat
			);
			bounds = bounds.toGeometry();
		} else if (position instanceof OpenLayers.Pixel) {
			clicked = true;
			var clickLatLon1 = this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.x-4, position.y-4));
			var clickLatLon2 = this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.x+4, position.y+4));
			bounds = new OpenLayers.Bounds(
					clickLatLon1.lon, clickLatLon1.lat, clickLatLon2.lon, clickLatLon2.lat
				);
			bounds = bounds.toGeometry();
		} else {
			return;
		}

		// because we're using a box, we consider we want multiple selection
		var prevMultiple = this.multiple;
		this.multiple = true;
		var layers = this.layers || [this.layer];
		var layer;
		for(var l=0; l<layers.length; ++l) {
			layer = layers[l];
			if (!layer.JSGISelection) {
				continue;
			}
			for(var i=0, len = layer.features.length; i<len; ++i) {
				var feature = layer.features[i];
				// check if the feature is displayed
				if (!feature.getVisibility()) {
					continue;
				}

				if (this.geometryTypes == null || OpenLayers.Util.indexOf(
						this.geometryTypes, feature.geometry.CLASS_NAME) > -1) {
					if (feature.layer.styleType == 'circle') {
						// check circle bound in pixel unit
						var cxy = this.map.getPixelFromLonLat(
								new OpenLayers.LonLat(
										feature.geometry.x,
										feature.geometry.y));

						var style = feature.style;
						if (!style && feature.layer) {
							style = feature.layer.style;
						}
						if (!style && feature.layer) {
							style = feature.layer.styleMap;
						}
						if (style instanceof OpenLayers.StyleMap) {
							style = style.createSymbolizer(feature, "default");
						} else if (style instanceof OpenLayers.Style) {
							style = style.createSymbolizer(feature);
						}

						var radius = style.pointRadius;
						var circlePixBounds = new OpenLayers.Bounds(
								cxy.x - radius,
								cxy.y + radius,
								cxy.x + radius,
								cxy.y - radius);
						var pixPoint;
						if (position instanceof OpenLayers.Pixel) {
							pixPoint = new OpenLayers.Geometry.Point(position.x,position.y);
							if (circlePixBounds.toGeometry().intersects(pixPoint)) {
								if (OpenLayers.Util.indexOf(layer.selectedFeatures, feature) == -1) {
									this.select(feature);
									if (clicked) {
										this.multiple = prevMultiple;
										return;
									}
								}
							}
						} else {
							if (circlePixBounds.toGeometry().intersects(position.toGeometry())) {
								if (OpenLayers.Util.indexOf(layer.selectedFeatures, feature) == -1) {
									this.select(feature);
									if (clicked) {
										this.multiple = prevMultiple;
										return;
									}
								}
							}
						}
					} else {
						if (bounds != null && bounds.intersects(feature.geometry)) {
							if (OpenLayers.Util.indexOf(layer.selectedFeatures, feature) == -1) {
								this.select(feature);
								if (clicked) {
									this.multiple = prevMultiple;
									return;
								}
							}
						}
					}
				}
			}
		}
		this.multiple = prevMultiple;
	},

	selectBox: function(position) {
		this._selectBox(position);
		if ("function" === typeof selectionNum) {
			var numSelected = selectionNum();
			this.didSelected = false;
			if (numSelected > 0) {
				var list = webtis._selectionList();
				if (numSelected == 1) {
					if (webtis.callEventProc) {
						webtis.callEventProc(webtis.EV_SELECTION, list.list[0].feature);
					}
					return;
				}
				this.didSelected = true;
				var objList = new Array();
				for (var i = 0; i < list.list.length;i++) {
					var feature = list.list[i].feature;
					var id = feature.id;
					var idx = id.lastIndexOf("_");
					if (idx > -1) {
						var nid = parseInt(id.substr(idx + 1));
						if (!isNaN(nid)) {
							objList.push(feature.objid);
						} else {
							alert("Unexpected feature ID: " + feature.id);
						}
					} else {
						alert("Unexpected feature ID: " + feature.id);
					}
				}
				if (webtis.callEventProc) {
					webtis.callEventProc(webtis.EV_MSELECTION, objList);
				}
			}
		}
	},

	addLayer: function(layer) {
		var isActive = this.active;
		if (!this.layers) {
			this.setLayer([layer]);
		} else {
			this.layers.push(layer);
			if (isActive) {
				this.activate();
			}
		}
	},

    clickFeature: function(feature) {
    	if(!this.hover) {
            var selected = (OpenLayers.Util.indexOf(
                feature.layer.selectedFeatures, feature) > -1);
            if(selected) {
                if(this.toggleSelect()) {
                    this.unselect(feature);
                } else if(!this.multipleSelect()) {
                	this.unselect(feature);
                    this.select(feature);
/*
                	if (this.didSelected) {
                	} else {
                		this.unselectAll({except: feature});
                	}
                	this.didSelected = false;
*/
                }
            } else {
                if(!this.multipleSelect()) {
                    this.unselectAll({except: feature});
                }
    			if (!feature.layer.JSGISelection) {
    				return;
    			}

                this.select(feature);
                //
				var id = feature.id;
				var idx = id.lastIndexOf("_");
				var nid = null;
				if (idx > -1) {
					nid = parseInt(id.substr(idx + 1));
					if (isNaN(nid)) {
						alert("Unexpected feature ID: " + feature.id);
					}
				} else {
					alert("Unexpected feature ID: " + feature.id);
				}
				if (webtis.callEventProc) {
					webtis.callEventProc(webtis.EV_SELECTION, feature);
				}
            }
        }
    },

	CLASS_NAME: "webtis.Control.SelectFeature"
});
/* ======================================================================
    Control/Navigation.js
   ====================================================================== */

/**
 * Class: webtis.Control.Navigation
 * 電子国土Webシステム APIのマウス操作に合わせたOpenLayers.Control.Navigationの拡張コントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control.Navigation>
 */
webtis.Control.Navigation = OpenLayers.Class(OpenLayers.Control.Navigation, {

	semiFixed: false, // mouse wheel only

	activate: function() {
		if (this.semiFixed) {
			if (this.zoomWheelEnabled) {
				this.handlers.wheel.activate();
			}
			return OpenLayers.Control.prototype.activate.apply(this,arguments);
		} else {
			this.dragPan.activate();
			if (this.zoomWheelEnabled) {
				this.handlers.wheel.activate();
			}
			this.handlers.click.activate();
			if (this.zoomBoxEnabled) {
				this.zoomBox.activate();
			}
			return OpenLayers.Control.prototype.activate.apply(this,arguments);
		}
	},

	wheelChange: function(evt, deltaZ) {
		var currentZoom = this.map.getZoom();
		var newZoom = this.map.getZoom() + Math.round(deltaZ);
		newZoom = Math.max(newZoom, 0);
		newZoom = Math.min(newZoom, this.map.getNumZoomLevels());
		if (newZoom === currentZoom) {
			return;
		}
		var size    = this.map.getSize();
		var deltaX  = size.w/2 - evt.xy.x;
		var deltaY  = evt.xy.y - size.h/2;
		var newRes  = this.map.baseLayer.getResolutionForZoom(newZoom);
		var zoomPoint = this.map.getLonLatFromPixel(evt.xy);

		var zoomPoint = this.map.getLonLatFromPixel(evt.xy);
		var newCenter = new OpenLayers.LonLat(
							zoomPoint.lon + deltaX * newRes,
							zoomPoint.lat + deltaY * newRes );
		this.map.setCenter( newCenter, newZoom );
	},

	CLASS_NAME: "webtis.Control.Navigation"
});
/* ======================================================================
    Layer/JSGIGeoTiffLayer.js
   ====================================================================== */

/**
 * Class: webtis.Layer.JSGIGeoTiffLayer
 * 電子国土Webシステム APIでGeoTiffを表示するためのレイヤー
 *
 * Inherits from:
 *  - <OpenLayers.Layer.XYZ>
 */
webtis.Layer.JSGIGeoTiffLayer = OpenLayers.Class(OpenLayers.Layer.XYZ, {
    name: "JSGIGeoTiff",

    sphericalMercator: true,
    wrapDateLine: false,
    geoTiffURL : null,
    url: webtis.SERVER_URL.GEOTIFF_TILE_SERVER+"?url=${url}&zoomLevel=${z}&tileId=${x}${y}",

    isBaseLayer:false,
    BASE_EXTENT: new OpenLayers.Bounds(
            -128 * 156543.03390625,
            -128 * 156543.03390625,
            128 * 156543.03390625,
            128 * 156543.03390625
    ),
    // 20段階分の解像度
    BASE_RESOLUTIONS : [156543.03390625, 78271.516953125, 39135.7584765625, 19567.87923828125, 9783.939619140625, 4891.9698095703125, 2445.9849047851562, 1222.9924523925781, 611.4962261962891, 305.74811309814453, 152.87405654907226, 76.43702827453613, 38.218514137268066, 19.109257068634033, 9.554628534317017, 4.777314267158508, 2.388657133579254, 1.194328566789627, 0.5971642833948135, 0.29858214169740677],

    /**
     * 初期化
     * @param name
     * @param options
     */
    initialize: function(name, geoTiffURL) {
        this.geoTiffURL = geoTiffURL;
        this.name = name;
        this.projection = new OpenLayers.Projection("EPSG:900913");

        var newArguments = [this.name, this.url, {}, {}];
        OpenLayers.Layer.Grid.prototype.initialize.apply(this, newArguments);
    },

    /**
     * Method: destroy
     */
    destroy: function() {
        OpenLayers.Layer.XYZ.prototype.destroy.apply(this, arguments);
    },


	clone: function(obj) {
        if (obj == null) {
            obj = new webtis.Layer.JSGIGeoTiffLayer(this.name, this.geoTiffURL);
        }
        obj = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [obj]);
        return obj;
    },

    /**
     * Method: setMap
     */
    setMap: function() {
        OpenLayers.Layer.XYZ.prototype.setMap.apply(this, arguments);
        // mapに追加した時に、ベースマップの情報で再初期化
        this.zoomOffset = this.map.baseLayer.options.minZoomLevel;
        this.addOptions(this.map.baseLayer.options,true);
        this.clearGrid();
    	this.redraw();
    },

    /**
     * Method: getXYZ
     * Calculates x, y and z for the given bounds.
     *
     * Parameters:
     * bounds - {<OpenLayers.Bounds>}
     *
     * Returns:
     * {Object} - an object with x, y and z properties.
     */
    getXYZ: function(bounds) {
        var res = this.map.getResolution();
        // ベースレイヤが、webtis.Layer.BaseMapである必要があります。
        var zoomOffset = this.map.baseLayer.zoomOffset;
        var x = Math.round((bounds.left - this.BASE_EXTENT.left) /
            (res * this.tileSize.w));
        var y = Math.round((this.BASE_EXTENT.top - bounds.top) /
            (res * this.tileSize.h));
        var z = this.serverResolutions != null ?
            OpenLayers.Util.indexOf(this.serverResolutions, res) :
            this.map.getZoom() + zoomOffset;

        var limit = Math.pow(2, z);
        if (this.wrapDateLine)
        {
           x = ((x % limit) + limit) % limit;
        }

        return {'x': this.zeroPad(x,7), 'y': this.zeroPad(y,7), 'z': z};
    },

    zeroPad : function(num,len) {
    	var result = ""+num;
    	while (result.length < len) {
    		result = "0"+result;
    	}
    	return result;
    },

    /**
     * URLを作成
     */
    getURL: function (bounds) {
        var xyz = this.getXYZ(bounds);
        xyz.url = escape(this.geoTiffURL);
        var url = this.url;
        return OpenLayers.String.format(url, xyz);
    },

    getZoomForExtent :  function(bounds,closest) {
    	var zoom = OpenLayers.Layer.XYZ.prototype.getZoomForExtent.apply(this, arguments);
    	return zoom;
    },

    CLASS_NAME: "webtis.Layer.JSGIGeoTiffLayer"
});
/* ======================================================================
    Layer/BaseMap.js
   ====================================================================== */

/**
 * Class: webtis.Layer.BaseMap
 * 電子国土Webシステムの背景地図画像を表示するクラス
 *
 * 内部での投影法は、WebMercatorを指定しており、座標はメルカトルのメートルで管理されています。
 * 座標指定は、メートル座標で行う必要があります。詳しくは、
 * http://docs.openlayers.org/library/spherical_mercator.html
 * を参照ください。
 *
 * Inherits from:
 *  - <OpenLayers.Layer.XYZ>
 *
 * Examples:
 * (code)
 * 使用例
 * var webtisMap = new webtis.Layer.BaseMap();
 * var map = new OpenLayers.Map('map',{
 *   // 電子国土Webシステムの背景地図ががサポートする範囲に表示範囲を制限する
 *    restrictedExtent:
 *       new OpenLayers.Bounds(121.0, 16.0, 158.0, 48.0).transform(
 *           new OpenLayers.Projection("EPSG:4326"),webtis.projection)
 * });
 * // レイヤーを追加
 * map.addLayer(webtisMap);
 * // 中心座標を緯度経度で指定
 * map.setCenter(
 *    new OpenLayers.LonLat(139.7671653,35.68096937).transform(
 *        new OpenLayers.Projection("EPSG:4326"),webtis.projection), 0);
 *
 * (end)
 */
webtis.Layer.BaseMap = OpenLayers.Class(OpenLayers.Layer.XYZ,{
	name : "WEBTIS",
	attribution : "国土地理院　",
	attributionTemplate : '<span>${copyright} ${title}${legend}</span>',

	sphericalMercator : true,
	dataSet : null,
	wrapDateLine : false,
	zoomOffset : 0,
	side: webtis.TILE_SIDE,
	errorImagePath: null,
	is20130822 : null,

	url : webtis.SERVER_URL.BASEMAP_TILE_SERVER+"/${did}/latest/${z}${dir}/${x}${y}.${ext}",					//デフォルトのサーバ
	url2 : webtis.SERVER_URL.BASEMAP_TILE_SERVER2+"/${did}/latest/${z}${dir}/${x}${y}.${ext}",					//特定のファイル群だけはこっちのサーバ
	url3 : webtis.SERVER_URL.BASEMAP_TILE_SERVER3+"/${did}/${z}/${x}/${x}-${y}-${z}.${ext}",							//地理空間情報ライブラリサーバ
	url4 : webtis.SERVER_URL.BASEMAP_TILE_SERVER4+"/${did}/latest/${z}${dir}/${x}${y}.${ext}",							//新彩色地図用サーバ
	urlDM : webtis.SERVER_URL.BASEMAP_TILE_SERVER2+"/DM/${did}/latest/${z}${dir}/${x}${y}.${ext}",					//DM（都市計画基図と砂防基盤図用）
	searchTileUrl : webtis.SERVER_URL.SEARCH_TILE_SERVER+"?did=${did}&zl=${z}&tid=${x}${y}&per=${per}",
	metaUrl : webtis.SERVER_URL.METADATA_SERVER,
	availableMapUrl : webtis.SERVER_URL.AVAILABLE_MAP_SERVER,
//	url_naibu_sar : webtis.SERVER_URL.BASEMAP_TILE_SERVER_NAIBU + "/tiles/20130919sar/${did}/${z}/${x}/${y}.${ext}",
	urlKIBANCHIZU : webtis.SERVER_URL.GEOLIB_TILE_SERVER2 + "/KIBANCHIZU/${did}/${z}/${x}/${y}.${ext}",
//	url_naibu_chijiki : webtis.SERVER_URL.BASEMAP_TILE_SERVER_NAIBU2 + "/${did}/${z}/${x}/${y}.${ext}",
	urlJIKIZU : webtis.SERVER_URL.GEOLIB_TILE_SERVER2 + "/JIKIZU/${did}/${z}/${x}/${y}.${ext}",
	urlVLCD : webtis.SERVER_URL.VLCD_TILE_SERVER + "/${did}/${z}/${x}/${x}-${y}-${z}.${ext}",							//火山土地条件図
	urlVBM : webtis.SERVER_URL.VBM_TILE_SERVER + "/${did}/${z}/${x}/${x}-${y}-${z}.${ext}",								//火山基本図
	urlLUM4BL : webtis.SERVER_URL.LUM4BL_TILE_SERVER + "/${did}/${z}/${x}/${x}-${y}-${z}.${ext}",
	urlGEOLIB : webtis.SERVER_URL.GEOLIB_TILE_SERVER + "/${did}/${z}/${x}/${x}-${y}-${z}.${ext}",
	urlGEOLIBizuoshima : webtis.SERVER_URL.GEOLIB_TILE_SERVER0 + "izuoshima/${did}/${z}/${x}/${x}-${y}-${z}.${ext}",			//台風26号（2013年）伊豆大島タイル
	urlXYZTile : webtis.SERVER_URL.XYZ_TILE_SERVER + "/${did}/${z}/${x}/${y}.${ext}",
	urlSAIGAI20130717yama : webtis.SERVER_URL.XYZ_TILE_SERVER + "/test_20130717yama/${z}/${x}/${y}.png",
	url2013Typhoon26 : webtis.SERVER_URL.SAIGAI_SERVER + "1/20131017/o/${did}/${z}/${x}/${y}.png",					//台風26号（2013年）伊豆大島垂直写真タイル
	urlLibGMLD : webtis.SERVER_URL.LIB_TILE_SERVER + "/${did}/${z}/${x}/${x}-${y}-${z}.${ext}",
	urlOldScheme: webtis.SERVER_URL.BASEMAP_TILE_SERVER+"/${did}/${z}${dir}/${x}${y}.${ext}",			//地理院独自従来版タイルスキーム
	urlSAR : webtis.SERVER_URL.GEOLIB_TILE_SERVER2 + "/${did}/${z}/${x}/${y}.${ext}",
	urlThematic :  webtis.SERVER_URL.BASEMAP_TILE_SERVER3 + "/${did}/${z}/${x}/${y}.${ext}",

	BASE_EXTENT : new OpenLayers.Bounds(-128 * 156543.03390625,
			-128 * 156543.03390625, 128 * 156543.03390625,
			128 * 156543.03390625),
	// 20段階分の解像度
    BASE_RESOLUTIONS : [
    	webtis.TILE_BASE_RESOLUTIONS[0] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[1] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[2] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[3] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[4] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[5] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[6] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[7] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[8] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[9] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[10] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[11] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[12] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[13] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[14] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[15] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[16] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[17] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[18] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[19] * (256 / webtis.TILE_SIDE)
    ],

    /**
     * Constructor: webtis.Layer.BaseMap
     * 電子国土Webシステムの背景地図画像を表示するレイヤーを生成します。
     *
     * Parameters:
     * name - {String} レイヤー名。未指定の場合は、"WEBTIS"が使用されます。
     * options - {Object} オプションを指定。未指定の場合は、デフォルトの状態で動作します。
     * 			dataset : 初期状態で使用するデータセットを指定。サンプルを参照。
     *
     * Returns:
     * {<webtis.Layer.BaseMap>} 生成された電子国土Webシステムの背景地図画像を表示するレイヤー
     *
     * Examples:
     * (code)
     * 使用する背景地図データの定義方法は、以下の通りです。
     * ※検索期間を設定できるデータIDは、限定されています。
     * var dataset = {
     *  【縮尺番号1】: {
     *          "dataId" : 【使用するデータID】,
     *          "beginUse" : 【データを検索する期間の開始年月日を指定するか否か(true | false)】,
     *          "begin" : 【データを検索する期間の開始年月日を指定(yyyyMMdd)】,
     *          "endUse" : 【データを検索する期間の終了年月日を指定するか否か(true | false)】,
     *          "end" : 【データを検索する期間の終了年月日を指定(yyyyMMdd)】
     *    },
     *    .........
     *   【縮尺番号n】: {
     *          "dataId" : 【使用するデータID】,
     *          "beginUse" : 【データを検索する期間の年月日を指定するか否か(true | false)】,
     *          "begin" : 【データを検索する期間の開始年月日を指定(yyyyMMdd)】,
     *          "endUse" : 【データを検索する期間の終了年月日を指定するか否か(true | false)】,
     *          "end" : 【データを検索する期間の終了年月日を指定(yyyyMMdd)】
     *          }
     *   };
     * (end)
     */
	initialize : function(name, options) {
		var url = url || this.url;
		name = name || this.name;
		this.projection = new OpenLayers.Projection("EPSG:900913");

		// タイルサイズ設定
		if (typeof options != "undefined" && options.tileSide) {
			this.side = options.tileSide;
			for (var i = 0; i < 20; i++) {
				this.BASE_RESOLUTIONS[i] = webtis.TILE_BASE_RESOLUTIONS[0] * (256 / this.side);
			}
		}

		// データセット設定
		var dataSet;
		if (options && options.dataSet) {
			dataSet = options.dataSet;
		} else {
			dataSet = this.defaultDataSet;
		}
		options = this._createOptionFromDataSet(dataSet,options);
		this.dataSet = dataSet;
		this.zoomOffset = options.minZoomLevel;

		var newArguments = [ name, url, {}, options ];
		OpenLayers.Layer.Grid.prototype.initialize.apply(this,newArguments);

		// メタデータを取得
		var metaJS = document.createElement("script");
		metaJS.setAttribute("type","text/javascript");
		var key = "j"+webtis.Layer.BaseMap.j_c;
		var that = this;
		webtis.Layer.BaseMap[key] = function(ev) {
			metaJS.parentNode.removeChild(metaJS);
			delete webtis.Layer.BaseMap[key];
			that.metaData = ev.items;
			if (that.map) {
				that.updateAttribution();
				that.redraw();
			}
		};

		// OLバージョン判定
		this.is20130822 = this.getServerResolution == null;

		// タイルサイズの設定
		this.tileSize = new OpenLayers.Size(this.side, this.side),

		// タイルの表示エラー
		this.events.register('tileerror', this, this.imageLoadError);

		metaJS.setAttribute("src", this.availableMapUrl+"?callback=webtis.Layer.BaseMap.j"+webtis.Layer.BaseMap.j_c);
		webtis.Layer.BaseMap.j_c++;
		document.getElementsByTagName("head")[0].appendChild(metaJS);
		this.metaJS = metaJS;
	},

	/**
	 * Method: destroy
	 */
	destroy : function() {
		this.map&& this.map.events.unregister("moveend", this,this.updateAttribution);
		this.events.unregister('tileerror', this, this.imageLoadError);
		OpenLayers.Layer.XYZ.prototype.destroy.apply(this,arguments);
	},

	clone : function(obj) {
		if (obj == null) {
			obj = new webtis.Layer.BaseMap(this.name, this.getOptions());
			//obj = new webtis.Layer.BaseMap(this.name, this.url,this.getOptions());
		}
		obj = OpenLayers.Layer.XYZ.prototype.clone.apply(this,[ obj ]);
		return obj;
	},

	/**
	 * Method: getXYZ Calculates x, y and z for the given
	 * bounds.
	 *
	 * Parameters: bounds - {<OpenLayers.Bounds>}
	 *
	 * Returns: {Object} - an object with x, y and z properties.
	 */
	getXYZ : function(bounds) {
		if (!this.is20130822) {
			var res = this.map.getResolution();
			var z = this.serverResolutions != null ? OpenLayers.Util
					.indexOf(this.serverResolutions, res)
					: this.map.getZoom() + this.zoomOffset;

			var newTileSize = this.tileSize;

			var extZL = this.getTileExtentZL(z, this.dataSet[z]["dataId"]);
			if (extZL != z) {
				newTileSize = this.getExtentImageSize(this.tileSize, z, extZL);
			}

			var x = Math
					.round((bounds.left - this.BASE_EXTENT.left)
							/ (res * newTileSize.w));
			var y = Math.round((this.BASE_EXTENT.top - bounds.top)
					/ (res * newTileSize.h));

			var limit = Math.pow(2, z);
			if (this.wrapDateLine) {
				x = ((x % limit) + limit) % limit;
			}

			return {
				'x' : this.zeroPad(x, 7),
				'y' : this.zeroPad(y, 7),
				'z' : z
			};
		}
		else {
			var res = this.map.getResolution();
			var x = Math
					.round((bounds.left - this.BASE_EXTENT.left)
							/ (res * this.tileSize.w));
			var y = Math.round((this.BASE_EXTENT.top - bounds.top)
					/ (res * this.tileSize.h));
			var z = this.serverResolutions != null ? OpenLayers.Util
					.indexOf(this.serverResolutions, res)
					: this.map.getZoom() + this.zoomOffset;

			var limit = Math.pow(2, z);
			if (this.wrapDateLine) {
				x = ((x % limit) + limit) % limit;
			}

			var newTileSize = this.tileSize;
			//特定のズームレベルでかつ特定のデータIDのときは、1つ小さいズームレベルのタイルを表示させるための処理
			if((z==18)&&(
				(this.dataSet[z]["dataId"]=="DJBMO")||
				(this.dataSet[z]["dataId"]=="ort")||
				(this.dataSet[z]["dataId"].indexOf("NLII")!=-1)||
				(this.dataSet[z]["dataId"].indexOf("TOHO1")!=-1)||
				(this.dataSet[z]["dataId"].indexOf("toho1")!=-1)))	{
				newTileSize = new OpenLayers.Size(this.side * 2, this.side * 2);
			}else{
				newTileSize = new OpenLayers.Size(this.side, this.side);
			}

			if (this.dataSet[z]["dataId"] == "RELIEF" || this.dataSet[z]["dataId"] == "relief" ) {
				switch(z){
				case 16:
					newTileSize = new OpenLayers.Size(this.side * 2, this.side * 2);
					break;

				case 17:
					newTileSize = new OpenLayers.Size(this.side * 4, this.side * 4);
					break;

				case 18:
					newTileSize = new OpenLayers.Size(this.side * 8, this.side * 8);
					break;

				default:
					newTileSize = new OpenLayers.Size(this.side, this.side);
					break;
				}
			}

			if (this.tileSize != newTileSize) {
				this.tileSize = newTileSize;
			}

			return {
				'x' : this.zeroPad(x, 7),
				'y' : this.zeroPad(y, 7),
				'z' : z
			};
		}
	},

	zeroPad : function(num, len) {
		var result = "" + num;
		while (result.length < len) {
			result = "0" + result;
		}
		return result;
	},

	/**
	 * URLを作成
	 */
	getURL : function(bounds) {
		var xyz = this.getXYZ(bounds);
		if (!this.dataSet[xyz.z]) {
			return "";
		}
		xyz.did = this.dataSet[xyz.z]["dataId"];

		if (xyz.did == 'TRANSPARENT') {
			return webtis.SERVER_URL.TRANSPARENT_FILE;
		}

		//特定のズームレベルでかつ特定のデータIDのときは、1つ小さいズームレベルのタイルを表示させるための処理
		if((xyz.z==18)&&(
			(xyz.did=="DJBMO")||
			(xyz.did=="ort")||
			(xyz.did.indexOf("NLII")!=-1)||
			(xyz.did.indexOf("TOHO1")!=-1)||
			(xyz.did.indexOf("toho1")!=-1))) {
			xyz.z = xyz.z -1;
		}

		if(xyz.z > 15 && (xyz.did == "RELIEF" || xyz.did == "relief") ){
			xyz.z = 15;
		}

////////////////////////////////////////////////////////////////////////
//		//特定のズームレベルかつ特定のデータIDのとき、エラータイルを表示する
//		if((xyz.z==18)&&((xyz.did=="pale")||(xyz.did=="D2500"))) {
//			return this.errorImagePath;
//		}
		//特定のズームレベルかつ特定のデータIDのとき、エラータイルを表示する
		if((xyz.z==18)&&((xyz.did=="D2500")))
		{
			return this.errorImagePath;
		}
////////////////////////////////////////////////////////////////////////


		var url;
		var currentData = this.getCurrentData();
		if (currentData.endUse) {
			url = this.searchTileUrl;
			var per = "";
			if (currentData.beginUse) {
				per += currentData.begin;
			}
			per += "_";
			if (currentData.endUse) {
				per += currentData.end;
			}
			xyz.per = per;
		}
		else
		{
			var ext = "png";
			if((xyz.did.match(/^SAR_/))
					|| xyz.did.match(/^NDVI_250m/)
					|| xyz.did.match(/^BUILD_/)
				)
			{		//サーバのメタデータを取りに行かないようにする
			}
			else
			{
				var curMetaData = this.getCurrentMetaData();
				if (!curMetaData)
				{
					return "";
				}
				var imageFormat = curMetaData.imageFormat.toLowerCase();
				if (imageFormat == "png") {
					ext = "png";
				} else if (imageFormat == "jpeg" || imageFormat == "jpg") {
					ext = "jpg";
				}
			}
			/////////////////////////////////////////-------------------------------------------

			xyz.ext = ext;
			// 静的なファイルを使う場合

			//データIDにより、タイル配信サーバを変える
			if((xyz.did=='JAIS2')||(xyz.did=='JAISG')||(xyz.did=='BLANK')||(xyz.did=='BLANKM')||(xyz.did=='BLANKC')||(xyz.did=='SPRING')||(xyz.did=='SUMMER')||(xyz.did=='AUTUMN')||(xyz.did=='WINTER')||(xyz.did=='GRAY')||(xyz.did=='BAFD1000K2')||(xyz.did=='BAFD200K2')||(xyz.did=='BAFD1000KG')||(xyz.did=='BAFD200KG'))
			{
				url = this.url2;
			}
			/////////////////////////////////////////////////////////////
			else if( xyz.did.match(/^BUILD_/) )
			{
				var aStr = xyz.did.split( "__" );

				var sURL	=	aStr[1]  + "/${z}/${x}/${y}.${ext}";
				xyz.x 		= 	Number(xyz.x);
				xyz.y 		= 	Number(xyz.y);

				if( aStr.length >= 3 )
				{
					xyz.ext		=	aStr[2];
				}
				else
				{
					xyz.ext		=	"png";
				}
				var sResult	=	 OpenLayers.String.format( sURL, xyz );
				return sResult;
			}
			//////////////////////////////////////////////////////////////
			else if((xyz.did.match(/^[0-4][0-9]SABO$/))||(xyz.did.match(/^[0-4][0-9][0-9][0-9][0-9]DM$/)))	{		//DM（都市計画基図、砂防基盤図）の判定
				url = this.urlDM;
			}else if((xyz.did=='CCM1')||(xyz.did=='CCM2'))	{
				url = this.url3;
			}else if((xyz.did=='D200K')||(xyz.did=='D25K2BRWN')||(xyz.did=='D25K2')||(xyz.did=='D2500')||(xyz.did=='D200KBRWN')||(xyz.did=='D200KGRN')||(xyz.did=='D200KG')||(xyz.did=='D25K2GRN')||(xyz.did=='D25KG')||(xyz.did=='D2500G'))	{
				url = this.url4;
			}else if((xyz.did=='16akandake')||(xyz.did=='02tokachidake')||(xyz.did=='10tarumaesan')||(xyz.did=='09usuzan')||(xyz.did=='05komagatake')||(xyz.did=='00iwatesan')||(xyz.did=='00kurikomayama')||(xyz.did=='14adatarayama')||(xyz.did=='11bandaisan')||(xyz.did=='13izuoshima')||(xyz.did=='06miyakezima')||(xyz.did=='03kusatsushiranesan')||(xyz.did=='12fujisan')||(xyz.did=='00ontakesan')||(xyz.did=='15kujirenzan')||(xyz.did=='04asosan')||(xyz.did=='07unzendake')||(xyz.did=='08kirishimayama')||(xyz.did=='01sakurazima')||(xyz.did=='17satsumaiojima')){
				url = this.urlVLCD;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}else if((xyz.did.match(/(capital|chubu|kinki)[0-9][0-9][0-9][0-9]/))){
				url = this.urlLUM4BL;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}else if((xyz.did.match(/^vbm[0-9][0-9]/))){
				url = this.urlVBM;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}else if((xyz.did=='LAKE1')||(xyz.did=='LAKE2')


					||(xyz.did=='FM')

					||(xyz.did=='lum200k')||(xyz.did=='LCMFC')){
				url = this.urlGEOLIB;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}else if((xyz.did=='vbm2_izuoshima_chocolate')||(xyz.did=='laserortho')){
				url = this.urlGEOLIBizuoshima;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}else if((xyz.did=='20131017dol')){
				url = this.url2013Typhoon26;
				xyz.x = Number(xyz.x);
				xyz.y = Math.pow(2, xyz.z) - Number(xyz.y) - 1;
				return OpenLayers.String.format(url, xyz);
			}else if((xyz.did.match(/^20130717/))||(xyz.did=='20130902dol')||(xyz.did=='20130902doh')||(xyz.did=='std')||(xyz.did=='std2012')||
			         (xyz.did=='pale')||(xyz.did=='blank')||(xyz.did=='20131017dol2')||(xyz.did=='20131204doh')||(xyz.did=='20131204doh2')||
			         (xyz.did=='20131217doh')||(xyz.did=='20131217doh2')||(xyz.did=='20140216doh')||(xyz.did=='20140216doh2')||(xyz.did=='20131224lsi')||
			         (xyz.did=='brownshade2012')||(xyz.did=='greenshade2012')||(xyz.did=='transparent2012')||(xyz.did=='monotoneshade2012')||
			         (xyz.did=='monotone2012')||(xyz.did=='ort')||(xyz.did=='english')||(xyz.did=='photoarea')||(xyz.did=='airphoto')||
			         (xyz.did=='20140226lsi')||(xyz.did=='fukkokizu')||(xyz.did=='fgd')||(xyz.did=='20140330lsi')||(xyz.did=='20140322dol')||(xyz.did=='20140322dol2')||


			         (xyz.did=='20140517lsi')||
			         (xyz.did=='20130903lsi')||
			         (xyz.did=='20140602lsi')||
			         (xyz.did=='20140704lsi')||
					(xyz.did=='LCMFC01')||
					(xyz.did=='LCMFC02')||
					(xyz.did=='swale')||
					(xyz.did=='20140820dol')||
					(xyz.did=='20140820dol2')||
					(xyz.did=='20140820dol3')||
					(xyz.did == '20140819dol') ||
					(xyz.did=='gmjpn_airp')||
					(xyz.did=='gmjpn_rstatp')||
					(xyz.did=='gmjpn_raill')||
					(xyz.did=='gmjpn_roadl')||
					(xyz.did=='gmjpn_ferryl')||
					(xyz.did=='gmjpn_portp')||
					(xyz.did=='gmjpn_polbndl')||
					(xyz.did=='gmjpn_polbnda')||
					(xyz.did=='gmjpn_coastl')||
					(xyz.did=='gmjpn_riverl')||
					(xyz.did=='gmjpn_inwatera')||
					(xyz.did=='gmjpn_builtupa')||
					(xyz.did=='gmjpn_builtupp')||
					(xyz.did=='20140711dol')||
					(xyz.did=='20140704dol')||
					(xyz.did == '20140704dol2')||
					(xyz.did == 'fgd2500_area')||
					(xyz.did == '20140813dol') ||
					(xyz.did == '20140819doh') ||
					(xyz.did == '20140821lsi') ||
					(xyz.did == '19480000dol') ||
					(xyz.did == '19620000dol') ||
					(xyz.did == '20140828dol') ||
					(xyz.did == '20140830dol') ||
					(xyz.did == '20140831dol') ||
					(xyz.did == '20140906lsi') ||
					(xyz.did == '20140928dol') ||
					(xyz.did == '20140927d_vlcd_t_ontake') ||
					(xyz.did == '20140929dol') ||
					(xyz.did == '20140929dol2') ||
					(xyz.did == '20140930dol') ||
//					(xyz.did == '20140818-0929d_sar_ontake') ||
//					(xyz.did == '20140818d_mag_ontake') ||
//					(xyz.did == '20140929d_mag_ontake') ||


					(xyz.did == '20140818-0929d_sar_ontake') ||
					(xyz.did == '20140822_1003d_sar_ontake') ||
					(xyz.did == '20140818d_mag_ontake') ||
					(xyz.did == '20140929d_mag_ontake') ||
					(xyz.did == '20141008lsi') ||


			         (xyz.did=='toho1')||(xyz.did=='toho2')||(xyz.did=='toho3')||(xyz.did=='toho1area')||(xyz.did=='toho2area')||(xyz.did=='toho3area')||
			         (xyz.did=='gazo1')||(xyz.did=='gazo2')||(xyz.did=='gazo3')||(xyz.did=='gazo4')||(xyz.did=='relief')||
			         (xyz.did=='LCM25K')||(xyz.did=='LCM25K_2011')||(xyz.did=='LCM25K_2012'))
			{
				url = this.urlXYZTile;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}
			else if(
				(xyz.did == 'gazo1area') ||
				(xyz.did == 'gazo2area') ||
				(xyz.did == 'gazo3area') ||
				(xyz.did == 'gazo4area') )
			{
				var sURL = this.urlXYZTile;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);


				xyz.ext	=	"png";

				var sResult	=	 OpenLayers.String.format( sURL, xyz );
				return sResult;
			}
			else if( xyz.did=='AFM' )
			{
				url = this.urlXYZTile;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				var sResult	=	 OpenLayers.String.format(url, xyz);
				return sResult;
			}

			else if((xyz.did=='GMLD_glcnmo2')||(xyz.did=='GMLD_ptc2'))
			{
				url = this.urlLibGMLD;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}
			else if(xyz.did.match(/^CHIJIKI/))	{
				url = this.urlJIKIZU;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				xyz.z = Number(xyz.z);
				if(!(xyz.did=='CHIJIKID' && xyz.z>=8))	{
					xyz.y = Math.pow(2, xyz.z) - xyz.y -1;
				}
				return OpenLayers.String.format(url, xyz);
			}else if(xyz.did=='test_20130717yama'){
				url = this.urlSAIGAI20130717yama;
				xyz.x = Number(xyz.x);
				xyz.y = Math.pow(2, xyz.z) - Number(xyz.y) - 1;
				return OpenLayers.String.format(url, xyz);
			}else if(xyz.did=='PHOTOAREA'){				// 写真2007～インデックス
				url = this.urlOldScheme;
			}else if(xyz.did.match(/^SAR_/))	{		// 干渉SAR
				url = this.urlSAR;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				xyz.z = Number(xyz.z);
				xyz.y = Math.pow(2, xyz.z) - xyz.y -1;
				var didPathArray = xyz.did.split("_");
				xyz.did = didPathArray[0] + "/" + didPathArray[1] + "/" + didPathArray[2] + "/" + didPathArray[3];
				return OpenLayers.String.format(url, xyz);
			}else if(xyz.did.match(/^NDVI_250m/)){		//植生（250m）
//				var didPathArray = xyz.did.split("-");
				url = this.urlThematic;
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
				return OpenLayers.String.format(url, xyz);
			}else{							//デフォルトのサーバ
				url = this.url;
			}

			var dir = "";
			var xi;
			var yi;
			for (var i = 0; i < 6; i++) {
				xi = xyz.x.substr(i, 1);
				yi = xyz.y.substr(i, 1);

				dir += "/"+xi+yi;
			}
			xyz.dir = dir;

			if((xyz.did=='CCM1')||(xyz.did=='CCM2'))	{
				xyz.x = Number(xyz.x);
				xyz.y = Number(xyz.y);
			}
		}
		return OpenLayers.String.format(url, xyz);
	},

	// タイルを拡大して表示するZLを返す
	getTileExtentZL: function(z, id) {

		// 写真(ZL18) → ZL17を拡大する
		if((z==18)&&(
			(this.dataSet[z]["dataId"]=="DJBMO")||
			(this.dataSet[z]["dataId"]=="ort")||
			(this.dataSet[z]["dataId"].indexOf("NLII")!=-1)||
			(this.dataSet[z]["dataId"].indexOf("TOHO1")!=-1)||
			(this.dataSet[z]["dataId"].indexOf("toho1")!=-1))) {
			return 17;
		}

		// 色別標高図(ZL16-18) → ZL15を拡大する
		if (16 <= z && z <=18 && (this.dataSet[z]["dataId"] == "RELIEF" || this.dataSet[z]["dataId"] == "relief")) {
			return 15;
		}

		return z;
	},

	// レベル17より上は17を拡大表示するので、メソッドをオーバーライド
    getImageSize: function(bounds) {
		var xyz = this.getXYZ(bounds);

		var extZL = this.getTileExtentZL(xyz.z, this.dataSet[xyz.z]["dataId"]);
		if (!this.is20130822 && extZL != xyz.z) {
			return this.getExtentImageSize(this.tileSize, xyz.z, extZL);
		}
		else{
			// Layer.js original
	        return (this.imageSize || this.tileSize);
		}
    },

	getExtentImageSize: function(tileSize, z, extZL) {
		return new OpenLayers.Size(tileSize.w * Math.pow(2, (z - extZL)), tileSize.h * Math.pow(2, (z - extZL)));
	},

	// レベル17より上は17を拡大表示するので、メソッドをオーバーライド
    /**
     * Method: initGriddedTiles
     *
     * Parameters:
     * bounds - {<OpenLayers.Bounds>}
     */
    initGriddedTiles:function(bounds) {

    	if (!this.is20130822) {

	        this.events.triggerEvent("retile");

			// レベル17より上は17を拡大表示するので、その分タイル画像の幅高さが大きくなる
	        // 一時的にthis.tileSize.w、this.tileSize.hを書き変える
			var xyz = this.getXYZ(bounds);
			var orgTileSizeW = this.tileSize.w;
			var orgTileSizeH = this.tileSize.h;

			var extZL = this.getTileExtentZL(xyz.z, this.dataSet[xyz.z]["dataId"]);
			if (extZL != xyz.z) {
				this.tileSize = this.getExtentImageSize(this.tileSize, xyz.z, extZL);
			}

			// Grid.js original

	        // work out mininum number of rows and columns; this is the number of
	        // tiles required to cover the viewport plus at least one for panning

	        var viewSize = this.map.getSize();

	        var origin = this.getTileOrigin();
	        var resolution = this.map.getResolution(),
	            serverResolution = this.getServerResolution(),
	            ratio = resolution / serverResolution,
	            tileSize = {
	                w: this.tileSize.w / ratio,
	                h: this.tileSize.h / ratio
	            };

	        var minRows = Math.ceil(viewSize.h/tileSize.h) +
	                      2 * this.buffer + 1;
	        var minCols = Math.ceil(viewSize.w/tileSize.w) +
	                      2 * this.buffer + 1;

	        var tileLayout = this.calculateGridLayout(bounds, origin, serverResolution);
	        this.gridLayout = tileLayout;

	        var tilelon = tileLayout.tilelon;
	        var tilelat = tileLayout.tilelat;

	        var layerContainerDivLeft = this.map.layerContainerOriginPx.x;
	        var layerContainerDivTop = this.map.layerContainerOriginPx.y;

	        var tileBounds = this.getTileBoundsForGridIndex(0, 0);
	        var startPx = this.map.getViewPortPxFromLonLat(
	            new OpenLayers.LonLat(tileBounds.left, tileBounds.top)
	        );
	        startPx.x = Math.round(startPx.x) - layerContainerDivLeft;
	        startPx.y = Math.round(startPx.y) - layerContainerDivTop;

	        var tileData = [], center = this.map.getCenter();

	        var rowidx = 0;
	        do {
	            var row = this.grid[rowidx];
	            if (!row) {
	                row = [];
	                this.grid.push(row);
	            }

	            var colidx = 0;
	            do {
	                tileBounds = this.getTileBoundsForGridIndex(rowidx, colidx);
	                var px = startPx.clone();
	                px.x = px.x + colidx * Math.round(tileSize.w);
	                px.y = px.y + rowidx * Math.round(tileSize.h);
	                var tile = row[colidx];
	                if (!tile) {
	                    tile = this.addTile(tileBounds, px);
	                    this.addTileMonitoringHooks(tile);
	                    row.push(tile);
	                } else {
	                    tile.moveTo(tileBounds, px, false);
	                }
	                var tileCenter = tileBounds.getCenterLonLat();
	                tileData.push({
	                    tile: tile,
	                    distance: Math.pow(tileCenter.lon - center.lon, 2) +
	                        Math.pow(tileCenter.lat - center.lat, 2)
	                });

	                colidx += 1;
	            } while ((tileBounds.right <= bounds.right + tilelon * this.buffer)
	                     || colidx < minCols);

	            rowidx += 1;
	        } while((tileBounds.bottom >= bounds.bottom - tilelat * this.buffer)
	                || rowidx < minRows);

	        //shave off exceess rows and colums
	        this.removeExcessTiles(rowidx, colidx);

	        var resolution = this.getServerResolution();
	        // store the resolution of the grid
	        this.gridResolution = resolution;

	        //now actually draw the tiles
	        tileData.sort(function(a, b) {
	            return a.distance - b.distance;
	        });
	        for (var i=0, ii=tileData.length; i<ii; ++i) {
	            tileData[i].tile.draw();
	        }

	        // 一時的に書き変えたthis.tileSize.w、this.tileSize.hをを戻す
			this.tileSize.w = orgTileSizeW;
			this.tileSize.h = orgTileSizeH;
		}
		else {
			// OL2.11対応
	        var viewSize = this.map.getSize();
	        var minRows = Math.ceil(viewSize.h/this.tileSize.h) +
	                      Math.max(1, 2 * this.buffer);
	        var minCols = Math.ceil(viewSize.w/this.tileSize.w) +
	                      Math.max(1, 2 * this.buffer);

	        var origin = this.getTileOrigin();
	        var resolution = this.map.getResolution();

	        var tileLayout = this.calculateGridLayout(bounds, origin, resolution);

	        var tileoffsetx = Math.round(tileLayout.tileoffsetx); // heaven help us
	        var tileoffsety = Math.round(tileLayout.tileoffsety);

	        var tileoffsetlon = tileLayout.tileoffsetlon;
	        var tileoffsetlat = tileLayout.tileoffsetlat;

	        var tilelon = tileLayout.tilelon;
	        var tilelat = tileLayout.tilelat;

	        this.origin = new OpenLayers.Pixel(tileoffsetx, tileoffsety);

	        var startX = tileoffsetx;
	        var startLon = tileoffsetlon;

	        var rowidx = 0;

	        var layerContainerDivLeft = parseInt(this.map.layerContainerDiv.style.left);
	        var layerContainerDivTop = parseInt(this.map.layerContainerDiv.style.top);


	        do {
	            var row = this.grid[rowidx++];
	            if (!row) {
	                row = [];
	                this.grid.push(row);
	            }

	            tileoffsetlon = startLon;
	            tileoffsetx = startX;
	            var colidx = 0;

	            do {
	                var tileBounds =
	                    new OpenLayers.Bounds(tileoffsetlon,
	                                          tileoffsetlat,
	                                          tileoffsetlon + tilelon,
	                                          tileoffsetlat + tilelat);

	                var x = tileoffsetx;
	                x -= layerContainerDivLeft;

	                var y = tileoffsety;
	                y -= layerContainerDivTop;

	                var px = new OpenLayers.Pixel(x, y);
	                var tile = row[colidx++];
	                if (!tile) {
	                    tile = this.addTile(tileBounds, px);
	                    this.addTileMonitoringHooks(tile);
	                    row.push(tile);
	                } else {
	                    tile.moveTo(tileBounds, px, false);
	                }

	                tileoffsetlon += tilelon;
	                tileoffsetx += this.tileSize.w;
	            } while ((tileoffsetlon <= bounds.right + tilelon * this.buffer)
	                     || colidx < minCols);

	            tileoffsetlat -= tilelat;
	            tileoffsety += this.tileSize.h;
	        } while((tileoffsetlat >= bounds.bottom - tilelat * this.buffer)
	                || rowidx < minRows);

	        //shave off exceess rows and colums
	        this.removeExcessTiles(rowidx, colidx);

	        //now actually draw the tiles
	        this.spiralTileLoad();
		}
    },

	// レベル17より上は17を拡大表示するので、メソッドをオーバーライド
    /**
     * Method: moveGriddedTiles
     *
     * Parameter:
     * deferred - {Boolean} true if this is a deferred call that should not
     * be delayed.
     */
    moveGriddedTiles: function(deferred) {

		if (!this.is20130822) {

			// レベル17より上は17を拡大表示するので、その分タイル画像の幅高さが大きくなる
	        // 一時的にthis.tileSizeを書き変える
			var z = this.map.getZoom() + this.zoomOffset;
			var orgTileSizeW = this.tileSize.w;
			var orgTileSizeH = this.tileSize.h;

			var extZL = this.getTileExtentZL(z, this.dataSet[z]["dataId"]);
			if (extZL != z) {
				this.tileSize = this.getExtentImageSize(this.tileSize, z, extZL);
			}

			// Grid.js original
	        var buffer = this.buffer + 1;
	        while(true) {
	            var tlTile = this.grid[0][0];
	            var tlViewPort = {
	                x: tlTile.position.x +
	                    this.map.layerContainerOriginPx.x,
	                y: tlTile.position.y +
	                    this.map.layerContainerOriginPx.y
	            };
	            var ratio = this.getServerResolution() / this.map.getResolution();
	            var tileSize = {
	                w: Math.round(this.tileSize.w * ratio),
	                h: Math.round(this.tileSize.h * ratio)
	            };
	            if (tlViewPort.x > -tileSize.w * (buffer - 1)) {
	                this.shiftColumn(true, tileSize);
	            } else if (tlViewPort.x < -tileSize.w * buffer) {
	                this.shiftColumn(false, tileSize);
	            } else if (tlViewPort.y > -tileSize.h * (buffer - 1)) {
	                this.shiftRow(true, tileSize);
	            } else if (tlViewPort.y < -tileSize.h * buffer) {
	                this.shiftRow(false, tileSize);
	            } else {
	                break;
	            }
	        }

	        // 一時的に書き変えたthis.tileSize.w、this.tileSize.hをを戻す
			this.tileSize.w = orgTileSizeW;
			this.tileSize.h = orgTileSizeH;
		}
		else {
			// OL2.11対応
	        var shifted = true;
	        var buffer = this.buffer || 1;
	        var tlLayer = this.grid[0][0].position;
	        var offsetX = parseInt(this.map.layerContainerDiv.style.left);
	        var offsetY = parseInt(this.map.layerContainerDiv.style.top);
	        var tlViewPort = tlLayer.add(offsetX, offsetY);
	        if (tlViewPort.x > -this.tileSize.w * (buffer - 1)) {
	            this.shiftColumn(true);
	        } else if (tlViewPort.x < -this.tileSize.w * buffer) {
	            this.shiftColumn(false);
	        } else if (tlViewPort.y > -this.tileSize.h * (buffer - 1)) {
	            this.shiftRow(true);
	        } else if (tlViewPort.y < -this.tileSize.h * buffer) {
	            this.shiftRow(false);
	        } else {
	            shifted = false;
	        }
	        if (shifted) {
	            // we may have other row or columns to shift, schedule it
	            // with a setTimeout, to give the user a chance to sneak
	            // in moveTo's
	            this.timerId = window.setTimeout(this._moveGriddedTiles, 0);
	        }
		}
    },

	/**
	 * コピーライト等を更新
	 */
	updateAttribution : function() {

		if (this.map) {
			// IE7以前は旧仕様で表示
			var msie=navigator.appVersion.toLowerCase();
			msie=(msie.indexOf('msie')>-1)?parseInt(msie.replace(/.*msie[ ]/,'').match(/^[0-9]+/)):0;
			if (msie <= 7 && msie != 0){
				this.updateAttributionIE7();
				return;
			}

			var curMetaData = this.getCurrentMetaData();
			if (!curMetaData || curMetaData.mapType == webtis.ATTRIBUTE_TYPE.NONE) {
				this.attribution = null;
				return;
			}

			var label = curMetaData.label;
			var copyright = curMetaData.owner;
			var legendURL = curMetaData.legendURL;

			var currentData = this.getCurrentData();
			var dataId = currentData == null ? "" : currentData.dataId;
			var zoom = this.map.getZoom();

			if (((dataId=='SPRING')||(dataId=='SUMMER')||(dataId=='AUTUMN')||(dataId=='WINTER')||(dataId=='GRAY'))) {
				// 彩色地図20万・100万の凡例をつける
				if (zoom>=12 && zoom<=14)
				{
					legendURL = "http://cyberjapan.jp/legend/200000c-legend.pdf";
					label += "20万";
				}
				else if (zoom>=9 && zoom<=11)
				{
					legendURL = "http://cyberjapan.jp/legend/1000000c-legend.pdf";
					label += "100万";
				}
			}
			else if ((dataId=='std')) {
				if (zoom>=0 && zoom<=4){
					legendURL = "http://cyberjapan.jp/legend/globalmaphyoko-legend.pdf";
					label = "地球地図（標高）";
				}
				else if (zoom>=5 && zoom<=8) {
					legendURL = "http://cyberjapan.jp/legend/5000000-legend.pdf";
					label = "日本周辺図（500万）";
				}
				else if (zoom>=9 && zoom<=11) {
					legendURL = "http://www.gsi.go.jp/common/1000000-legend.pdf";
					label = "標準地図（100万）";
				}
				else if (zoom>=12 && zoom<=14) {
					legendURL = "http://cyberjapan.jp/legend/std_200000_legend.pdf";
					label = label + "（20万）";
				}
				else if (zoom>=15 && zoom<=17) {
					legendURL = "http://cyberjapan.jp/legend/std_25000_legend.pdf";
					label = label + "（25000）";
				}
				else if (zoom==18) {
					legendURL = "http://cyberjapan.jp/legend/std_2500_legend.pdf";
					label = label + "（2500）";
				}
			}
			else if ((dataId=='pale')) {
				if (zoom>=12 && zoom<=14) {
					legendURL = "http://cyberjapan.jp/legend/pale_200000_legend.pdf";
					label = label + "（20万）";
				}
				else if (zoom>=15 && zoom<=17) {
					legendURL = "http://cyberjapan.jp/legend/pale_25000_legend.pdf";
					label = label + "（25000）";
				}
////////////////////////////////////	Add
				else if (zoom==18) {
					legendURL = "http://cyberjapan.jp/legend/pale_2500_legend.pdf";
					label = label + "（2500）";
				}
////////////////////////////////////	Add

			}
			else if ((dataId=='english')){
				if (zoom>=5 && zoom <=8) {
					label = "Japan And Its Surroundings";
				}
				else if (zoom>=9 && zoom <=11) {
					legendURL = "http://cyberjapan.jp/legend/hyoujyun1000000e_legend.pdf";
					label = "1:1,000,000 INTERNATIONAL MAP"
				}
			}
			else if((dataId=='std2012')){
				if (zoom>=12 && zoom <=14) {
					legendURL = "http://cyberjapan.jp/legend/200000-legend.pdf";
					label = label + "（20万）";
				}
				else if (zoom>=15 && zoom <=17) {
					legendURL = "http://cyberjapan.jp/legend/std2012_25000_legend.pdf";
					label = label + "（25000）";
				}
				else if (zoom==18) {
					legendURL = "http://cyberjapan.jp/legend/fgd_2500_legend.pdf";
					label = label + "（2500）";
				}
			}
			else if ((dataId=='brownshade2012')||(dataId=='greenshade2012')){
				if (zoom>=9 && zoom <=11) {
					legendURL = "http://cyberjapan.jp/legend/1000000c-legend.pdf";
					label = label + "（100万）";
				}
				else if (zoom>=12 && zoom <=14) {
					legendURL = "http://cyberjapan.jp/legend/200000c-legend.pdf";
					label = label + "（20万）";
				}
			}
			else if ((dataId=='monotoneshade2012')){
				if (zoom>=9 && zoom <=11) {
					legendURL = "http://cyberjapan.jp/legend/1000000g-legend.pdf";
					label = label + "（100万）";
				}
				else if (zoom>=12 && zoom <=14) {
					legendURL = "http://cyberjapan.jp/legend/200000g-legend.pdf";
					label = label + "（20万）";
				}
			}
			else if ((dataId=='monotone2012')){
				if (zoom>=5 && zoom <=8) {
					legendURL = "http://cyberjapan.jp/legend/5000000-legend_G.pdf";
					label = label + "（500万）";
				}
				else {
					this.attribution = null;
					return;
				}
			}
			else if ((dataId=='JAIS')||(dataId=='JAIS2')) {
				if (zoom>=5 && zoom <=6) {
					legendURL = "http://cyberjapan.jp/legend/5000000-legend-zl56.pdf";
				}
			}
			else if ((dataId=='JAISG')) {
				if (zoom>=5 && zoom <=6) {
					legendURL = "http://cyberjapan.jp/legend/5000000-legend-zl56_G.pdf";
				}
			}

			// 表記文字列
			var copyrightString = this.isBaseLayer ? copyright : "";

			// 凡例
			var legendString = "";
			if (webtis.Layer.BaseMap.isShowLegend && legendURL) {
				switch (curMetaData.mapType){
					case webtis.ATTRIBUTE_TYPE.MAP:		// 地図
					case webtis.ATTRIBUTE_TYPE.OVERLAY:	// オーバーレイ
						legendString = "<div class=\"legendattr\" style=\"display:inline\">" + this.createLegendString("凡例", legendURL) + "</div>";
						break;

					case webtis.ATTRIBUTE_TYPE.PHOTO:	// 写真
						legendString = "<div class=\"legendattr\" style=\"display:inline\">" + this.createLegendString("関連情報", legendURL) + "</div>";
						break;
				}
			}

			this.attribution = OpenLayers.String.format(
				this.attributionTemplate, {
					copyright : copyrightString,
					title : label,
					legend: legendString
				});

			this.map
					&& this.map.events.triggerEvent(
							"changelayer", {
								layer : this,
								property : "attribution"
							});
		}
	},

	/**
	 * コピーライト等を更新(IE7)
	 */
	updateAttributionIE7 : function() {
		var curMetaData = this.getCurrentMetaData();
		var title = curMetaData ? this.createLegendString(curMetaData.label, curMetaData.legendURL) : "";

		var copyright = curMetaData ? curMetaData.owner : "国土地理院";
		var currentData = this.getCurrentData();
		// 20130220
		var dataId = currentData == null ? "" : currentData.dataId;
		var zoom = this.map.getZoom();

		// 彩色地図20万・100万の凡例をつける
		if (((dataId=='SPRING')||(dataId=='SUMMER')||(dataId=='AUTUMN')||(dataId=='WINTER')||(dataId=='GRAY'))&&(zoom>=12)&&(zoom<=14))
		{
			title += this.createLegendString("20万", "http://cyberjapan.jp/legend/200000c-legend.pdf");
		}
		if (((dataId=='SPRING')||(dataId=='SUMMER')||(dataId=='AUTUMN')||(dataId=='WINTER')||(dataId=='GRAY'))&&(zoom>=9)&&(zoom<=11))
		{
			title += this.createLegendString("100万", "http://cyberjapan.jp/legend/1000000c-legend.pdf");
		}

		//上載せレイヤのattributionは載せない
		if (curMetaData && curMetaData.mapType != null && curMetaData.mapType == webtis.ATTRIBUTE_TYPE.NONE) {
			this.attribution = null;
		} else {
			this.attribution = OpenLayers.String.format(
				this.attributionTemplate, {
					copyright : copyright,
					title : title,
					legend : ""
				});
		}

		this.map && this.map.events.triggerEvent(
			"changelayer", {
				layer : this,
				property : "attribution"
			});
	},


	createLegendString: function(label, url) {

		var ret = "";
//		ret += "<div class=\"legendattr\" border=\"1\">";
		ret += "<a href=\"" + url + "\" ";
		ret += "onClick=\"window.open('" + url + "', 'win', 'width=500, height=400, menubar=no, status=yes, scrollbars=yes, resizable=yes'); return false; \" ";
		ret += ">";
		ret += label;
		ret += "</a>";
//		ret += "</div>";

		return ret;
	},

	/**
	 * APIMethod: getDefaultDataSet
	 * デフォルトデータセットを取得します。
	 *
	 * 初期状態でオプションが未指定の場合は、このデータセットが使用されます。
	 * 取得したデータセットをsetDataSetメソッドを用いて設定する事で、背景地図がオルソ画像の背景地図に変更されます。
	 *
     * Returns:
     * <Object> データセットの情報が格納されたObject
	 */
	getDefaultDataSet : function() {
		return this.defaultDataSet;
	},

	/**
	 * APIMethod: getOrthoDataSet
	 * オルソデータセットを取得します。
	 *
	 * 取得したデータセットをsetDataSetメソッドを用いて設定する事で、背景地図がオルソ画像の背景地図に変更されます。
	 *
     * Returns:
     * <Object> データセットの情報が格納されたObject
	 */
	getOrthoDataSet : function() {
		return this.orthoDataSet;
	},

	setMap : function() {
		OpenLayers.Layer.XYZ.prototype.setMap.apply(this,
				arguments);
		this.updateAttribution();
		this.map.events.register("moveend", this,
				this.updateAttribution);
	},

	getZoomForExtent : function(bounds, closest) {
		var zoom = OpenLayers.Layer.XYZ.prototype.getZoomForExtent
				.apply(this, arguments);
		return zoom;
	},

	/**
	 * データセットの情報から、Optionを生成します。
	 *
	 * @param dataSet
	 */
	_createOptionFromDataSet : function(dataSet, options) {
		// 縮尺数を設定
		var minZoomLevel;
		var maxZoomLevel;
		for ( var key in dataSet) {
			key = parseInt(key, 10);
			if (minZoomLevel === undefined) {
				minZoomLevel = key;
			} else if (key < minZoomLevel) {
				minZoomLevel = key;
			}
			if (maxZoomLevel === undefined) {
				maxZoomLevel = key;
			} else if (key > maxZoomLevel) {
				maxZoomLevel = key;
			}
		}
		var limitTotalNum = Math.pow(2, minZoomLevel);
		var limitResolution = this.BASE_RESOLUTIONS[minZoomLevel];
		var newOptions = OpenLayers.Util.extend({
			maxExtent : new OpenLayers.Bounds(
				(this.side / -2 * limitTotalNum) * limitResolution,
				(this.side / -2 * limitTotalNum) * limitResolution,
				(this.side /  2 * limitTotalNum) * limitResolution,
				(this.side /  2 * limitTotalNum) * limitResolution
			),
			maxResolution : limitResolution,
			numZoomLevels : maxZoomLevel - minZoomLevel + 1,
			minZoomLevel : minZoomLevel,
			maxZoomLevel : maxZoomLevel,
			units : "m",
			projection : "EPSG:900913"
		}, options);
		return newOptions;
	},

	/** 電子国土APIでの縮尺レベルを取得 * */
	getJSGILevel : function() {
		var actualZoomLevel = this.map.getZoom()
				+ this.zoomOffset;
		var level = null;
		if (actualZoomLevel <= 8) {
			level = "10000";
		} else if (actualZoomLevel <= 11) {
			level = "3000";
		} else if (actualZoomLevel <= 13) {
			level = "200";
		} else if (actualZoomLevel <= 14) {
			level = "50";
		} else if (actualZoomLevel <= 17) {
			level = "25";
		} else { // if (actualZoomLevel <= 19) {
			level = "0.5";
		}
		return level;
	},

	/**
	 * Method: getCurrentData
	 * 現在表示中の地図データの情報を取得します。
	 *
     * Returns:
     * <Object> 地図データの情報が格納されたObject
	 */
	getCurrentData : function() {
		if (this.map == null) {
			return null;
		}
		return this.dataSet[this.map.getZoom() + this.zoomOffset];
	},

	/**
	 * APIMethod: getDataSet
	 * 現在設定されているデータセットを取得します。
	 *
	 * 取得したデータセットの内容を変更することで、表示される背景地図の状態が変更されます。
	 *
     * Returns:
     * <Object> 減税設定されているデータセットの情報が格納されたObject
	 */
	getDataSet : function() {
		return this.dataSet;
	},

	/**
	 * APIMethod: getCurrentMetaData
	 *
	 * 現在表示中の地図データのメタデータを取得します。
	 *
	 * 取得したオブジェクトから、表示中の地図の発行者やライセンスの情報を参照できます。
	 *
     * Returns:
     * <Object> 現在表示中の地図データのメタ情報が格納されたObject
	 */
	getCurrentMetaData : function() {
		var curData = this.getCurrentData();
		if (!curData) {
			return null;
		}
		var curMetaData = null;
		if (this.metaData) {
			curMetaData = this.metaData[curData.dataId];
		}
		return curMetaData;
	},
	/**
	 * APIMethod: setDataSet
	 * データセットを切り替えます。
	 *
	 * 引数のデータセットが定義されたObjectの情報で、背景地図のデータセットを切り替えます。データセットの初期値は、Constructorのサンプルを参照ください。
	 *
     * Parameters:
     * dataset - {Object} データセットが定義されたObject
	 */
	setDataSet : function(dataSet) {
		var newOptions = this._createOptionFromDataSet(dataSet);
		this.dataSet = dataSet;
		this.zoomOffset = newOptions.minZoomLevel;
		this.addOptions(newOptions, true);
		this.clearGrid();
		this.redraw();
	},

	/**
	 * APIMethod: setMapMeta
	 * 特定の縮尺レベルのデータセットの背景地図を差し替えます。
	 *
	 * 引数の背景地図が定義されたObjectの情報で、特定の縮尺の背景地図を切り替えます。
	 *
     * Parameters:
     * zoomLevel - {int} 縮尺番号
     * mapMeta - {Object} 背景地図が定義されたObject
	 */
	setMapMeta : function(zoomLevel, mapMeta) {
		var newDataSet = new Array();
		for (var key in this.dataSet) {
			if (key == zoomLevel) {
				newDataSet[key] = mapMeta;
			} else {
				newDataSet[key] = this.dataSet[key];
			}
		}
		// もともと無い場合もある。
		if (newDataSet[key] == null) {
			newDataSet[key] = mapMeta;
		}
		this.setDataSet(newDataSet);
	},
	/** OpenLayers zoomLevel<=> 電子国土縮尺変換用テーブル **/
	getJSGIScale: function(scale) {
		for (var key in this.JSGI_SCALE_MAP) {
			var scaleInfo = this.JSGI_SCALE_MAP[key];
			if (scale >= scaleInfo.scaleRange.lower && scale <= scaleInfo.scaleRange.upper) {
				return scaleInfo.scale;
			}
		}
		return null;
	},

	jsgiScaleToZoomLevel: function(scale) {
		for (var key in this.JSGI_SCALE_MAP) {
			var scaleInfo = this.JSGI_SCALE_MAP[key];
			if (scale >= scaleInfo.scaleRange.lower && scale <= scaleInfo.scaleRange.upper) {
				return parseInt(key,10)-this.zoomOffset;
			}
		}
		return null;
	},

	zoomLevelToJSGIScale : function(zoomLevel) {
		var scaleInfo = this.JSGI_SCALE_MAP[zoomLevel+this.zoomOffset];
		if (scaleInfo) {
			return scaleInfo.scale;
		}
		return null;
	},

	// タイル読込みエラー時の処理
	imageLoadError: function() {

		// ZL≦17で標準/淡色/英語/写真のとき、背景色を水色にする
		var zl = this.map.getZoom();
		if (this.dataSet[zl] && (
				this.dataSet[zl].dataId == "std" ||
				this.dataSet[zl].dataId == "pale" ||
				this.dataSet[zl].dataId == "english"
			)){
			if (12 <= zl && zl <= 17) {
				var replaceImageUrl = "url(" + webtis.TILE_URL.BLUE + ")";
				$("div#" + this.div.id + " .olImageLoadError").css("background-image", replaceImageUrl);
				return;
			}
		}

		// 代替画像が指定されていれば、それを表示する
		if (this.errorImagePath) {
			var replaceImageUrl = "url(" + this.errorImagePath + ")";
			$("div#" + this.div.id + " .olImageLoadError").css("background-image", replaceImageUrl);
		}
		else {
			$("div#" + this.div.id + " .olImageLoadError").css("display", "none");
		}
	},

	// デフォルトセット
	defaultDataSet : {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "std" },
		3: { "dataId" : "std" },
		4: { "dataId" : "std" },
		5: { "dataId" : "std" },
		6: { "dataId" : "std" },
		7: { "dataId" : "std" },
		8: { "dataId" : "std" },
		9: { "dataId" : "std" },
		10: { "dataId" : "std" },
		11: { "dataId" : "std" },
		12: { "dataId" : "std" },
		13: { "dataId" : "std" },
		14: { "dataId" : "std" },
		15: { "dataId" : "std" },
		16: { "dataId" : "std" },
		17: { "dataId" : "std" },
		18: { "dataId" : "std" }
	},
	// オルソセット
	orthoDataSet : {
		0: {dataId : "TRANSPARENT"},
		1: {dataId : "TRANSPARENT"},
		2: { "dataId" : "std" },
		3: { "dataId" : "std" },
		4: { "dataId" : "std" },
		5: { "dataId" : "std" },
		6: { "dataId" : "std" },
		7: { "dataId" : "std" },
		8: { "dataId" : "std" },
		9: { "dataId" : "std" },
		10: { "dataId" : "std" },
		11: { "dataId" : "std" },
		12: { "dataId" : "std" },
		13: { "dataId" : "std" },
		14: { "dataId" : "std" },
		15: { "dataId" : "ort" },
		16: { "dataId" : "ort" },
		17: { "dataId" : "ort" },
		18: { "dataId" : "std" }
	},

	/** 縮尺範囲テーブル　**/
	JSGI_SCALE_MAP : {
		6 : {
			scale : 10000000,
			scaleRange : {
				lower : 7000000,
				upper : Number.NaN
			}
		},
		7 : {
			scale : 5000000,
			scaleRange : {
				lower : 3500000,
				upper : 6999999
			}
		},
		8 : {
			scale : 2400000,
			scaleRange : {
				lower : 1800000,
				upper : 3499999
			}
		},
		9 : {
			scale : 1200000,
			scaleRange : {
				lower : 800000,
				upper : 1799999
			}
		},
		10 : {
			scale : 600000,
			scaleRange : {
				lower : 400000,
				upper : 799999
			}
		},
		11 : {
			scale : 300000,
			scaleRange : {
				lower : 200000,
				upper : 399999
			}
		},
		12 : {
			scale : 150000,
			scaleRange : {
				lower : 100000,
				upper : 199999
			}
		},
		13 : {
			scale : 75000,
			scaleRange : {
				lower : 50000,
				upper : 99999
			}
		},
		14 : {
			scale : 36000,
			scaleRange : {
				lower : 24000,
				upper : 49999
			}
		},
		15 : {
			scale : 18000,
			scaleRange : {
				lower : 12000,
				upper : 23999
			}
		},
		16 : {
			scale : 9000,
			scaleRange : {
				lower : 7000,
				upper : 11999
			}
		},
		17 : {
			scale : 4500,
			scaleRange : {
				lower : 3000,
				upper : 6999
			}
		},
		18 : {
			scale : 2500,
			scaleRange : {
				lower : 1500,
				upper : 2999
			}
		},
		19 : {
			scale : 1000,
			scaleRange : {
				lower : 0,
				upper : 1499
			}
		}
	},

	CLASS_NAME : "webtis.Layer.BaseMap"
});
webtis.Layer.BaseMap.j_c = 0;
webtis.Layer.BaseMap.isShowLegend = true;
/* ======================================================================
    Handler/LeftRightBox.js
   ====================================================================== */

/**
 * Class: webtis.Handler.LeftRightBox
 * 電子国土Webシステム APIでマウスによる矩形描画を行うハンドラー
 *
 * Inherits from:
 *  - <OpenLayers.Handler.Box>
 */
webtis.Handler.LeftRightBox = OpenLayers.Class(OpenLayers.Handler.Box, {

	initialize: function(control, callbacks, options) {
		OpenLayers.Handler.prototype.initialize.apply(this, arguments);
		var callbacks = {
			"down": this.startBox,
			"move": this.moveBox,
			"out":  this.removeBox,
			"up":   this.endBox
		};
		this.dragHandler = new webtis.Handler.LeftRightDrag(
				this, callbacks, {keyMask: this.keyMask});
	},

	deactivate: function () {
		if (OpenLayers.Handler.prototype.deactivate.apply(this, arguments)) {
			if (this.dragHandler)
				this.dragHandler.deactivate();
			return true;
		} else {
			return false;
		}
	},

	CLASS_NAME: "webtis.Handler.LeftRightBox"
});
/* ======================================================================
    Handler/CircleFixedRadius.js
   ====================================================================== */

/**
 * Class: webtis.Handler.CircleFixedRadius
 * 電子国土Webシステム APIで指定半径による円の描画を行うハンドラー
 *
 * Inherits from:
 *  - <OpenLayers.Handler.Point>
 */
webtis.Handler.CircleFixedRadius = OpenLayers.Class(OpenLayers.Handler.Point, {
	radiusMeter : 0,
	basePorjection : null,
    activate: function() {
        if(!OpenLayers.Handler.prototype.activate.apply(this, arguments)) {
            return false;
        }
        var options = OpenLayers.Util.extend({
            displayInLayerSwitcher: false,
            calculateInRange: OpenLayers.Function.True
        }, this.layerOptions);
        this.layer = new webtis.Layer.Vector(this.CLASS_NAME, options);
        this.map.addLayer(this.layer);
        return true;
    },



    createFeature: function() {
		var maploc = this.map.getLonLatFromPixel(this.origin);
		this.point = new webtis.Feature.Vector();
		this.originLatLon = new OpenLayers.Geometry.Point(maploc.lon, maploc.lat);
		this.point.geometry = this.originLatLon.clone();
		this.point.style = OpenLayers.Util.extend(OpenLayers.Feature.Vector.style['default'], {});

		this.layer.addFeatures([this.point]);
	},

	move : function(evt) {

		this.origin = evt.xy.clone();
		this.modifyFeature(evt.xy);

		if (this.baseProjection == null) {
			this.baseProjection = new OpenLayers.Projection("EPSG:4326");
		}

		var calcGeom = this.point.geometry.clone();
		calcGeom = calcGeom.transform(this.map.getProjectionObject(),this.baseProjection);
		var lonLat = new OpenLayers.LonLat(calcGeom.x,calcGeom.y);
		var horiLatLon = OpenLayers.Util.destinationVincenty(lonLat,90,this.radiusMeter);
		var pix = this.map.getPixelFromLonLat(lonLat.transform(this.baseProjection,this.map.getProjectionObject()));
		var horiPix = this.map.getPixelFromLonLat(horiLatLon.transform(this.baseProjection,this.map.getProjectionObject()));
		this.point.style.pointRadius = horiPix.x - pix.x;
		this.layer.drawFeature(this.point, this.style);
	},

	CLASS_NAME: "webtis.Handler.CircleFixedRadius"
});
/* ======================================================================
    Renderer/SVG.js
   ====================================================================== */

/**
 * Class: webtis.Renderer.SVG
 * 電子国土Webシステム APIで電子国土Web システム用XML データをSVGで表示するための描画クラス
 *
 * Inherits from:
 *  - <OpenLayers.Renderer.SVG>
 */
webtis.Renderer.SVG = OpenLayers.Class(OpenLayers.Renderer.SVG, {
	// ========================================================================
	// OpenLayers.Renderer overrides
	// ========================================================================

	drawFeature: function(feature, style) {
		if(style == null) {
			style = feature.style;
		}
		if (feature.geometry) {
			var bounds = feature.geometry.getBounds();
			if(bounds) {
				if (!bounds.intersectsBounds(this.extent)) {
					style = {display: "none"};
				}
				var rendered = this.drawGeometry(feature.geometry, style, feature.id);
				if (style.display != "none" && (style.label || feature.geometry.label) && rendered !== false) {
					var location = feature.geometry.getCentroid();
					if(style.labelXOffset || style.labelYOffset) {
						xOffset = isNaN(style.labelXOffset) ? 0 : style.labelXOffset;
						yOffset = isNaN(style.labelYOffset) ? 0 : style.labelYOffset;
						var res = this.getResolution();
						location.move(xOffset*res, yOffset*res);
					}
					if (feature.geometry.label) {
						this._drawText(feature.id, style, location, feature.geometry.label,feature.geometry._bbox);
					} else {
						this.drawText(feature.id, style, location);
					}
				} else {
					this.removeText(feature.id);
				}
				return rendered;
			}
		}
	},

	// ========================================================================
	// OpenLayers.Renderer.Elements overrides
	// ========================================================================

	drawGeometryNode: function(node, geometry, style) {
		var drawn;
		if (geometry.CLASS_NAME == "webtis.Geometry.ImageRectangle") {
			drawn = this.drawImageRectangle(node, geometry);
			if (drawn != false) {
				drawn = {
					node: this.setStyle(node, style, { 'isFilled' : true, 'isStroked' : false }, geometry),
					complete: drawn
				};
			}
		} else if (geometry.CLASS_NAME == "webtis.Geometry.TextRectangle") {
			// くくり線描画用にgeometryに保存。
			geometry._bbox = node;
			drawn = this.drawTextRectangle(node, geometry, style);
			if (drawn != false) {
				drawn = {
					node: this.setStyle(node, style, {
							'isFilled' : style.fill === undefined ? false : style.fill,
							'isStroked' : (geometry.selectDisplay || style.orgStyle == 'select') ? true : false
						}, geometry),
					complete: drawn
				};
			}
		} else {
			drawn = OpenLayers.Renderer.Elements.prototype.drawGeometryNode.apply(this, arguments);
		}
		return drawn;
	},

	// ========================================================================
	// OpenLayers.Renderer.SVG overrides
	// ========================================================================
	getNodeType: function(geometry, style) {
		var nodeType = OpenLayers.Renderer.SVG.prototype.getNodeType.apply(this, arguments);
		if (!nodeType) {
			if (geometry.CLASS_NAME == "webtis.Geometry.ImageRectangle") {
				nodeType = "image";
			} else if (geometry.CLASS_NAME == "webtis.Geometry.TextRectangle") {
				nodeType = "rect";
			}
		}
		return nodeType;
	},

	setStyle: function(node, style, options, geometry) {
		style = style  || node._style;
		options = options || node._options;
		if (node._geometryClass == "webtis.Geometry.TextRectangle") {
			this.setTextRectangleStyle(node, style, options, geometry);
		} else {
			OpenLayers.Renderer.SVG.prototype.setStyle.apply(this, arguments);
		}
		return node;
	},

	setTextRectangleStyle: function(node, style, options, geometry) {
		if (geometry.selectDisplay || style.orgStyle == 'select') {
			node.setAttributeNS(null, "stroke", "#0000ff");
			node.setAttributeNS(null, "stroke-opacity", 1);
			node.setAttributeNS(null, "stroke-width", "2");
			node.setAttributeNS(null, "stroke-linecap", "round");
			if (options.isFilled) {
				node.setAttributeNS(null, "fill", style.fillColor);
				node.setAttributeNS(null, "fill-opacity", style.fillOpacity);
			} else {
				node.setAttributeNS(null, "fill", "none");
			}
		} else {
			if (options.isFilled) {
				node.setAttributeNS(null, "fill", style.fillColor);
				node.setAttributeNS(null, "fill-opacity", style.fillOpacity);
			} else {
				node.setAttributeNS(null, "fill", "none");
			}
			node.setAttributeNS(null, "stroke", "none");
		}
	},
	drawImageRectangle: function(node, geometry) {

		var resolution = this.getResolution();

		var x = (geometry.x / resolution + this.left);
		var y = (this.top - geometry.y / resolution);
		var width = geometry.width / resolution;
		var height = geometry.height / resolution;

		if (this.inValidRange(x, y)) {
			node.setAttributeNS(null, "x", x);
			node.setAttributeNS(null, "y", y);
			node.setAttributeNS(null, "width", width);
			node.setAttributeNS(null, "height", height);
			node.setAttributeNS(this.xlinkns, "href", geometry.imageUrl);
			node.setAttributeNS(null, "style", "opacity: "+geometry.imageOpacity);
			node.setAttributeNS(null, "preserveAspectRatio", "none");
			return node;
		} else {
			return false;
		}

	},

	drawTextRectangle: function(node, geometry, style) {
		var resolution = this.getResolution();

		var x = (geometry.x / resolution + this.left);
		var y = (this.top - geometry.y / resolution);

		if (this.inValidRange(x, y)) {
			node.setAttributeNS(null, "x", x);
			node.setAttributeNS(null, "y", y);
			node.setAttributeNS(null, "width", 0);
			node.setAttributeNS(null, "height", 0);
			return node;
		} else {
			return false;
		}
	},

	_drawText: function(featureId, style, location, _label, _bbox) {
		var resolution = this.getResolution();

		var x = (location.x / resolution + this.left);
		var y = (location.y / resolution - this.top);

		var label = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX, "text");
		var tspan = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_tspan", "tspan");

		label.setAttributeNS(null, "x", x);
		label.setAttributeNS(null, "y", -y);

		if (style.fontColor) {
			label.setAttributeNS(null, "fill", style.fontColor);
		}
		if (style.fontOpacity) {
			label.setAttributeNS(null, "opacity", style.fontOpacity);
		}
		if (style.fontFamily) {
			label.setAttributeNS(null, "font-family", style.fontFamily);
		}
		if (style.fontSize) {
			label.setAttributeNS(null, "font-size", style.fontSize);
			label.setAttributeNS(null,"style","line-height:1em;");
		}
		if (style.fontWeight) {
			label.setAttributeNS(null, "font-weight", style.fontWeight);
		}
		if(style.labelSelect === true) {
			label.setAttributeNS(null, "pointer-events", "visible");
			label._featureId = featureId;
			tspan._featureId = featureId;
			tspan._geometry = location;
			tspan._geometryClass = location.CLASS_NAME;
		} else {
			label.setAttributeNS(null, "pointer-events", "none");
		}
		var align = style.labelAlign || "cm";
		label.setAttributeNS(null, "text-anchor",
				OpenLayers.Renderer.SVG.LABEL_ALIGN[align[0]] || "middle");
		if (OpenLayers.IS_GECKO === true) {
			label.setAttributeNS(null, "dominant-baseline",
				OpenLayers.Renderer.SVG.LABEL_ALIGN[align[1]] || "central");
		}
		if (OpenLayers.IS_GECKO === false) {
			if (OpenLayers.BROWSER_NAME != "msie") {
				tspan.setAttributeNS(null, "baseline-shift",
					OpenLayers.Renderer.SVG.LABEL_VSHIFT[align[1]] || "-35%");
			}
		}
		tspan.textContent = _label;
		if(!label.parentNode) {
			label.appendChild(tspan);
			this.textRoot.appendChild(label);
		}
		var textBbox = label.getBBox();
		if(OpenLayers.BROWSER_NAME == "msie") {
			var ratio = 0;
			if (align[1] == "t") {
				ratio = 0.85;// 微調整済み
			} else if (align[1] == "b") {
				ratio = 0;
			} else {
				ratio = 0.35;
			}
			label.setAttributeNS(null, "y", -y+(textBbox.height*ratio));
			textBbox = label.getBBox();
		}

		// くくり線を設定。
		if (_bbox) {
			_bbox.setAttributeNS(null,"x",textBbox.x-5);
			_bbox.setAttributeNS(null,"y",textBbox.y);
			_bbox.setAttributeNS(null,"width",textBbox.width+10);
			_bbox.setAttributeNS(null,"height",textBbox.height);
		}
	},

	drawText: function(featureId, style, location) {
		this._drawText(featureId, style, location, style.label);
	},
	CLASS_NAME: "webtis.Renderer.SVG"
});
/* ======================================================================
    Geometry/ImageRectangle.js
   ====================================================================== */

/**
 * Class: webtis.Geometry.ImageRectangle
 * 電子国土Webシステム APIの画像オブジェクトを表すGeometryオブジェクト
 *
 * Inherits from:
 *  - <OpenLayers.Geometry.Rectangle>
 */
webtis.Geometry.ImageRectangle = OpenLayers.Class(OpenLayers.Geometry.Rectangle, {

	imageUrl: null,
	imageOpacity: 1.0,
	imageType: null,

	initialize: function(x, y, width, height) {
		OpenLayers.Geometry.Rectangle.prototype.initialize.apply(this, arguments);
	},

	calculateBounds: function() {
		this.bounds = new OpenLayers.Bounds(this.x, this.y - this.height,
												this.x + this.width,
												this.y);
		this.components = [this.bounds.toGeometry()];
	},

	move: function(x, y) {
		this.x = this.x + x;
		this.y = this.y + y;
		this.calculateBounds();
	},

	clone: function(obj) {
		if (obj == null) {
			obj = new webtis.Geometry.ImageRectangle(this.x, this.y, this.width, this.height);
		}
		obj.imageUrl = this.imageUrl;
		obj.imageOpacity = this.imageOpacity;
		obj.imageType = this.imageType;
		return obj;
	},

    transform: function(source, dest) {
        if ((source && dest)) {
        	var p1 = new OpenLayers.LonLat(this.x,this.y);
        	var p2 = new OpenLayers.LonLat(this.x+this.width,this.y+this.height);
        	p1.transform(source,dest);
        	p2.transform(source,dest);
        	this.x = p1.lon;
        	this.y = p1.lat;
        	this.width = p2.lon - p1.lon;
        	this.height = p2.lat - p1.lat;
        	this.calculateBounds();
        }
        return this;
    },

	CLASS_NAME: "webtis.Geometry.ImageRectangle"
});
/* ======================================================================
    Control/MeasureDisplay.js
   ====================================================================== */

/**
 * Class: webtis.Control.MeasureDisplay
 * 電子国土Webシステム APIで表示する距離、面積計算用をUIを表すコントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control>
 */
webtis.Control.MeasureDisplay = OpenLayers.Class(OpenLayers.Control, {

	onCloseButton: null,

	initialize: function(options) {
		OpenLayers.Control.prototype.initialize.apply(this, arguments);
	},

	createDiv : function(id, left, top, width, height, color, background, parent) {
		var div = document.createElement('div');

		if (id) div.id = id;
		if (parent)
			parent.appendChild(div);

		div.style.margin = '0px';
		div.style.padding = '0px';
		div.style.position = 'absolute';

		if (left)
			div.style.left = left + "px";
		if (top)
			div.style.top = top + "px";
		if (width)
			div.style.width = width + "px";
		if (height)
			div.style.height = height + "px";

		if (color)
			div.style.color = color;
		if (background)
			div.style.background = background;

		div.style.overflow = 'hidden';
		return div;
	},

	activate: function () {
		OpenLayers.Control.prototype.activate.apply(this, arguments);
		this.map.addControl(this.pathMeasureCtrl);
		this.map.addControl(this.areaMeasureCtrl);
		this.rb1.checked = "checked";
		this.pathMeasureCtrl.activate();
	},

	deactivate: function () {
		this.map.removeControl(this.pathMeasureCtrl);
		this.map.removeControl(this.areaMeasureCtrl);
		this.pathMeasureCtrl.deactivate();
		this.areaMeasureCtrl.deactivate();

		var parent = this.div.parentNode;
		if (parent)
			parent.removeChild(this.div);
		delete this.div;
		this.div = null;
	},

	draw: function() {
		var width = 275;
		var height = 100;
		var formPadding = 5;
		var	formWidth = width-(formPadding*2);
		var	formHeight = height-(formPadding*2);

		var ret = this.createDiv(
				null, 5, 5, null, null,
				'#000000', '#FFFFFF', null);
		ret.style.borderWidth = '1px';
		ret.style.borderColor = '#000000';
		ret.style.borderStyle = 'solid';
		ret.style.fontSize = '12px';
		ret.obj = this;
        if (ret.addEventListener) {
    		ret.addEventListener('mousedown',function(ev){
    			this.obj.pathMeasureCtrl.cancel();
    			this.obj.areaMeasureCtrl.cancel();
    			OpenLayers.Event.stop(ev);
    		},false);
    		ret.addEventListener('mouseup',function(ev){
    			this.obj.pathMeasureCtrl.cancel();
    			this.obj.areaMeasureCtrl.cancel();
    			OpenLayers.Event.stop(ev);
    		},false);
        } else if (ret.attachEvent) {
    		ret.attachEvent('onmousedown',OpenLayers.Function.bindAsEventListener(function(ev){
    			this.obj.pathMeasureCtrl.cancel();
    			this.obj.areaMeasureCtrl.cancel();
    			OpenLayers.Event.stop(ev);
    		},ret),false);
    		ret.attachEvent('onmouseup',OpenLayers.Function.bindAsEventListener(function(ev){
    			this.obj.pathMeasureCtrl.cancel();
    			this.obj.areaMeasureCtrl.cancel();
    			OpenLayers.Event.stop(ev);
    		},ret),false);
        }

		var	form = document.createElement('form');
		form.style.position = 'relative';
		form.style.margin = '0px';
		form.style.padding = formPadding + 'px';
		form.style.left = "0px";
		form.style.top = "0px";
		form.style.width = formWidth + "px";
		form.style.height = formHeight + "px";
		ret.appendChild(form);

		this.rb1 = document.createElement('input');
		this.rb1.type = "radio";
		this.rb1.name = "webtisRB_measure";
		this.rb1.value = "1";
		this.rb1.ctrl = this;

		form.appendChild(this.rb1);

		this.rb1.onmouseup = function(ev) {
			this.ctrl.areaMeasureCtrl.deactivate();
			this.ctrl.pathMeasureCtrl.activate();
			this.ctrl.rb2.checked = false;
			this.checked = "checked";
			this.ctrl.input1.value = "";
			this.ctrl.input2.value = "";
			return true;
		};

		var	text = document.createElement('span');
		text.innerHTML = '距離';
		text.style.marginRight = "20px";
		form.appendChild(text);

		this.input1 = document.createElement('input');
		this.input1.id = "webtisTXT_pathMeasurement";
		this.input1.type = 'text';
		this.input1.size = 14;
		this.input1.value = '';
		this.input1.style.fontSize = '12px';
		form.appendChild(this.input1);

		this.select1 = document.createElement('select');
		this.select1.name = 'distance';
		this.select1.id = "webtisSELECT_1";
		var	option = document.createElement('option');
		option.appendChild(document.createTextNode('m'));
		option.value = 'm';
		this.select1.appendChild(option);
		option = document.createElement('option');
		option.appendChild(document.createTextNode('km'));
		option.value = 'km';
		this.select1.appendChild(option);
		this.select1.onclick = function() {
			return false;
		};
		this.currentPathUnit = "m";
		this.select1.obj = this;
		this.select1.onchange = function() {
			var val = document.getElementById("webtisTXT_pathMeasurement").value;
			var units = document.getElementById("webtisSELECT_1").value;
			webtis.Control.MeasureDisplay.applyPathValue(units,this.obj.currentPathUnit,val);
			this.obj.currentPathUnit = units;
			return false;
		};
		//this.select1.onchange = LT_P.Bind( this, this.UpdateDist );
		form.appendChild(this.select1);

		form.appendChild(document.createElement('br'));

		this.rb2 = document.createElement('input');
		this.rb2.type = "radio";
		this.rb2.name = "webtisRB_measure";
		this.rb2.value = "2";
		this.rb2.ctrl = this;

		this.rb2.onmouseup = function(ev) {
			this.ctrl.pathMeasureCtrl.deactivate();
			this.ctrl.areaMeasureCtrl.activate();
			this.ctrl.rb1.checked = false;
			this.checked = "checked";
			this.ctrl.input1.value = "";
			this.ctrl.input2.value = "";
			return true;
		};
		form.appendChild(this.rb2);

		text = document.createElement('span');
		text.innerHTML = '面積';
		text.style.marginRight = "20px";
		form.appendChild(text);

		this.input2 = document.createElement('input');
		this.input2.id = "webtisTXT_areaMeasurement";
		this.input2.type = 'text';
		this.input2.size = 14;
		this.input2.value = '';
		this.input2.style.fontSize = '12px';
		form.appendChild(this.input2);

		this.select2 = document.createElement('select');
		this.select2.name = 'area';
		this.select2.id = "webtisSELECT_2";
		var	option = document.createElement('option');
		option.appendChild(document.createTextNode('m2'));
		option.value = 'm2';
		this.select2.appendChild(option);
		option = document.createElement('option');
		option.appendChild(document.createTextNode('km2'));
		option.value = 'km2';
		this.select2.appendChild(option);
		option = document.createElement('option');
		option.appendChild(document.createTextNode('a'));
		option.value = 'a';
		this.select2.appendChild(option);
		option = document.createElement('option');
		option.appendChild(document.createTextNode('ha'));
		option.value = 'ha';
		this.currentAreaUnit = "m2";
		this.select2.appendChild(option);
		form.appendChild(this.select2);
		this.select2.obj = this;
		this.select2.onchange = function() {
			var val = document.getElementById("webtisTXT_areaMeasurement").value;
			var units = document.getElementById("webtisSELECT_2").value;
			webtis.Control.MeasureDisplay.applyAreaValue(units,this.obj.currentAreaUnit,val);
			this.obj.currentAreaUnit = units;
			return false;
		};

		var butdiv = document.createElement('div');
		butdiv.style.margin = '0px';
		butdiv.style.padding = '0px';
		butdiv.style.textAlign = 'right';
		butdiv.style.width = formWidth;
		butdiv.style.height = "24px";
		form.appendChild(butdiv);

		var button = document.createElement('input');
		button.type = 'button';
		button.value = 'リセット';
		button.style.fontSize = '12px';
		button.style.marginTop = '4px';
		button.obj = this;
		button.onclick = function() {
			button.obj.pathMeasureCtrl.cancel();
			button.obj.areaMeasureCtrl.cancel();
			button.obj.input1.value = "";
			button.obj.input2.value = "";
		};
		butdiv.appendChild(button);

		button = document.createElement('input');
		button.type = 'button';
		button.value = '閉じる';
		button.style.fontSize = '12px';
		button.style.marginTop = '4px';
		button.obj = this;
		button.onclick = function() {
			if (button.obj.onCloseButton) {
				button.obj.onCloseButton();
			}
		};
		butdiv.appendChild(button);

		this.div = ret;
		return this.div;
	},

	handlePathMeasurements : function(event) {
		var val = event.measure;
		var units = document.getElementById("webtisSELECT_1").value;
		webtis.Control.MeasureDisplay.applyPathValue(units,event.units,val);
		this.currentPathUnit = units;
	},

	handleAreaMeasurements : function(event) {
		var val = event.measure;
		var units = document.getElementById("webtisSELECT_2").value;
		webtis.Control.MeasureDisplay.applyAreaValue(units,event.units, val);
		this.currentAreaUnit = units;
	},

	CLASS_NAME: "webtis.Control.MeasureDisplay"
});

webtis.Control.MeasureDisplay.applyPathValue = function(currentUnit,targetUnits,val) {
	if (targetUnits == 'km') {
		if (currentUnit == 'm') {
			val = val*1000;
		}
	} else if (targetUnits == 'm') {
		if (currentUnit == 'km') {
			val = val/1000;
		}
	}
	document.getElementById("webtisTXT_pathMeasurement").value = val;
};

webtis.Control.MeasureDisplay.applyAreaValue = function(currentUnit,targetUnits,val) {
	if (targetUnits == 'km'||targetUnits == 'km2') {
		if (currentUnit == 'm2') {
			val = val*1000000;
		} else if (currentUnit == 'a') {
			val = val*10000;
		} else if (currentUnit == 'ha') {
			val = val*100;
		}
	} else if (targetUnits == 'm'||targetUnits == 'm2') {
		if (currentUnit == 'km2') {
			val = val/1000000;
		} else if (currentUnit == 'a') {
			val = val/100;
		} else if (currentUnit == 'ha') {
			val = val/10000;
		}
	} else if (targetUnits == 'a') {
		if (currentUnit == 'km2') {
			val = val/10000;
		} else if (currentUnit == 'm2') {
			val = val*100;
		} else if (currentUnit == 'ha') {
			val = val/100;
		}
	} else if (targetUnits == 'ha') {
		if (currentUnit == 'km2') {
			val = val/100;
		} else if (currentUnit == 'm2') {
			val = val*10000;
		} else if (currentUnit == 'a') {
			val = val*100;
		}
	}
	document.getElementById("webtisTXT_areaMeasurement").value = val;
};


/* ======================================================================
    Handler/Path.js
   ====================================================================== */

/**
 * Class: webtis.Handler.Path
 * 電子国土Webシステム APIで線分の描画を行うハンドラー
 *
 * Inherits from:
 *  - <OpenLayers.Handler.Path>
 */
webtis.Handler.Path = OpenLayers.Class(OpenLayers.Handler.Path, {

	activate: function() {
		if(!OpenLayers.Handler.prototype.activate.apply(this, arguments)) {
			return false;
		}
		var options = OpenLayers.Util.extend({
			displayInLayerSwitcher: false,
			calculateInRange: OpenLayers.Function.True
		}, this.layerOptions);
		this.layer = new webtis.Layer.Vector(this.CLASS_NAME, options);
		this.map.addLayer(this.layer);
		return true;
	},

	createFeature: function(pixel) {
		var lonlat = this.control.map.getLonLatFromPixel(pixel);
		this.point = new webtis.Feature.Vector(
			new OpenLayers.Geometry.Point(lonlat.lon, lonlat.lat)
		);
		this.line = new webtis.Feature.Vector(
			new OpenLayers.Geometry.LineString([this.point.geometry])
		);
		this.callback("create", [this.point.geometry, this.getSketch()]);
		this.point.geometry.clearBounds();
		this.layer.addFeatures([this.line, this.point], {silent: true});
	},

	addPoint: function(pixel) {
		this.layer.removeFeatures([this.point]);
		var lonlat = this.control.map.getLonLatFromPixel(pixel);
		this.point = new webtis.Feature.Vector(
			new OpenLayers.Geometry.Point(lonlat.lon, lonlat.lat)
		);
		this.line.geometry.addComponent(
			this.point.geometry, this.line.geometry.components.length
		);
		this.callback("point", [this.point.geometry, this.getGeometry()]);
		this.callback("modify", [this.point.geometry, this.getSketch()]);
		this.drawFeature();
	},

	CLASS_NAME: "webtis.Handler.Path"
});
/* ======================================================================
    Handler/Circle.js
   ====================================================================== */

/**
 * Class: webtis.Handler.Circle
 * 電子国土Webシステム APIでドラッグによる円の描画を行うハンドラー
 *
 * Inherits from:
 *  - <OpenLayers.Handler.Drag>
 */
webtis.Handler.Circle = OpenLayers.Class(OpenLayers.Handler.Drag, {
	radius: null,
	layerOptions: null,
	feature: null,
	layer: null,
	origin: null,

	initialize: function(control, callbacks, options) {
		if(!(options && options.layerOptions && options.layerOptions.styleMap)) {
			this.style = OpenLayers.Util.extend(OpenLayers.Feature.Vector.style['default'], {});
		}

		OpenLayers.Handler.prototype.initialize.apply(this, [control, callbacks, options]);
		this.options = (options) ? options : {};
	},

	setOptions: function (newOptions) {
		OpenLayers.Util.extend(this.options, newOptions);
		OpenLayers.Util.extend(this, newOptions);
	},

	activate: function() {
		var activated = false;
		if(OpenLayers.Handler.prototype.activate.apply(this, arguments)) {
			var options = OpenLayers.Util.extend({
				displayInLayerSwitcher: false,
				calculateInRange: OpenLayers.Function.True
			}, this.layerOptions);
			this.layer = new webtis.Layer.Vector(this.CLASS_NAME, options);
			this.map.addLayer(this.layer);
			activated = true;
		}
		return activated;
	},

	deactivate: function() {
		var deactivated = false;
		if(OpenLayers.Handler.Drag.prototype.deactivate.apply(this, arguments)) {
			if(this.dragging) {
				this.cancel();
			}
			if (this.layer.map != null) {
				this.layer.destroy(false);
				if (this.feature) {
					this.feature.destroy();
				}
			}
			this.layer = null;
			this.feature = null;
			deactivated = true;
		}
		return deactivated;
	},

	down: function(evt) {
		this.origin = evt.xy.clone();
		this.radius = 1;
		this.feature = new webtis.Feature.Vector();
		this.createGeometry();
		this.callback("create", [this.origin, this.feature]);
		this.layer.addFeatures([this.feature], {silent: true});
		this.layer.drawFeature(this.feature, this.style);
	},

	move: function(evt) {
		this.radius = Math.max(Math.round(Math.sqrt(Math.pow(this.origin.x - evt.xy.x, 2) + Math.pow(this.origin.y - evt.xy.y, 2))), 1);
		this.modifyGeometry();
		this.layer.drawFeature(this.feature, this.style);
	},

	up: function(evt) {
		this.radiusLatLon = this.map.getLonLatFromPixel(new OpenLayers.Pixel(this.origin.x+this.radius,this.origin.y));
		this.finalize();
		if (this.start == this.last) {

			this.originLatLon.radius = this.radius;
			// 左下と右上の座標を埋め込んでおく
			this.callback("done", null);
		}
	},

	out: function(evt) {
		this.finalize();
	},

	createGeometry: function() {
		var maploc = this.map.getLonLatFromPixel(this.origin);
		this.originLatLon = new OpenLayers.Geometry.Point(maploc.lon, maploc.lat);
		this.feature.geometry = this.originLatLon.clone();
		this.feature.style = OpenLayers.Util.extend(OpenLayers.Feature.Vector.style['default'], {});
		this.feature.style.pointRadius = this.radius;
	},

	modifyGeometry: function() {
		this.feature.style.pointRadius = this.radius;
	},

	cancel: function() {
		// the polygon geometry gets cloned in the callback method
		this.callback("cancel", null);
		this.finalize();
	},

	finalize: function() {
		this.origin = null;
	},

	clear: function() {
		if (this.layer) {
			this.layer.renderer.clear();
			this.layer.destroyFeatures();
		}
	},

	callback: function (name, args) {
		if (this.callbacks[name]) {
			this.callbacks[name].apply(this.control, [this.feature.geometry.clone(), this.radius,this.radiusLatLon]);
		}
		if(!this.persist && (name == "done" || name == "cancel")) {
			this.clear();
		}
	},

	CLASS_NAME: "webtis.Handler.Circle"
});
/* ======================================================================
    Popup/JSGIPopup.js
   ====================================================================== */

/**
 * Class: webtis.Popup.JSGIPopup
 * 電子国土Webシステム APIでポップアップを表示するためのクラス
 *
 */
webtis.Popup.JSGIPopup_popupId = 0;
webtis.Popup.JSGIPopup = OpenLayers.Class({
	map : null,
	feature : null,
	onClose : null,
	initialize:function(map,onClose) {
		this.map = map;
		this.onClose = onClose;
		// マップをクリックしたら、ポップアップは消える。
		this.map.events.register("mouseup",this.map,this.removeEvent =
				OpenLayers.Function.bindAsEventListener(function(evt) {
					if (this.feature && this.feature.popup) {
						this.map.removePopup(this.feature.popup);
//						this.feature.popup.destroy();
						this.feature.popup = null;
						this.feature = null;
					}
				}, this)
		);
		this.map.events.register("moveend",this.map,this.moveEndEvent =
			OpenLayers.Function.bindAsEventListener(function(evt) {
				if (this.feature && this.feature.popup) {
					this.map.removePopup(this.feature.popup);
//					this.feature.popup.destroy();
					this.feature.popup = null;
					this.feature = null;
				}
			}, this)
	);
	},

	destroy : function() {
		this.map.events.unregister("mouseup",this.map,this.removeEvent);
		this.map.events.unregister("moveend",this.map,this.moveEndEvent);
	},
	/** Featureをポップアップしたときの動き **/
	onFeatureSelectPopup : function (evt) {
		var feature = evt.feature;
		if (feature.popup) return;

		var proceed = false;
		var attributes = feature.attributes['attr'];
		if ((feature.attributes.name == null || feature.attributes.name.length == 0)&&(attributes == null || attributes.length == 0)) {		//20121210「タイトル」「項目名」「値」のどれかに入力があれば、ポップアップを出すように変更
			proceed = false;
		} else {
			if (attributes) {
				proceed = true;
			}
		}
		if (!proceed) return;

		var attrs = "";
		for (var i = 0; i < attributes.length; i++) {
			var attribute = attributes[i];
			var attrkey = attribute.name;
			var valueStr = webtis.Format.JSGIJSON.escapeHTML(attribute.value);
			if (attrkey.charAt(0) == '@') {
				continue;
			}
			attrs += '<tr><td style="width:80px;vertical-align:top;word-wrap: break-word;color:rgb(0, 0, 255);">' + attrkey + '</td>';
			attrs += '<td style="vertical-align:top;word-wrap: break-word;" >' + valueStr + '</td></tr>';
		}
		attrs = '<table style="margin:0px;padding:0px;table-layout:auto;width: 290px;"><tr><td colspan="2" style="word-wrap: break-word;color:rgb(255, 0, 0);">' +webtis.Format.JSGIJSON.escapeHTML(feature.attributes.name)+"</td></tr>"+ attrs + '</table>';
		var popup = new OpenLayers.Popup.FramedCloud(
				"featurePopup_" + (++webtis.Popup.JSGIPopup_popupId),
				feature.geometry.getBounds().getCenterLonLat(),
				new OpenLayers.Size(300,300),
				attrs,
				null,
				false,this.onPopupClose);
		feature.popup = popup;
		popup.feature = feature;
		// popup.autoResize = false;

		if (this.feature && this.feature.popup) {
			this.map.removePopup(this.feature.popup);
//			this.feature.popup.destroy();
			this.feature.popup = null;
		}
		this.feature = feature;
		this.map.addPopup(popup,true);
	},

	onFeatureUnselectPopup : function(evt) {
		var feature = evt.feature;
		if (feature.popup) {
			/**
			this.map.removePopup(feature.popup);
			feature.popup.destroy();
			feature.popup = null;
			**/
		}
	},

	onPopupClose : function(evt) {
		if (onClose) {
			onClose(this.feature);
		}
		// this.feature = null;
	},

	removePopup : function() {
		if (this.feature && this.feature.popup) {
			this.map.removePopup(this.feature.popup);
			this.feature.popup = null;
			this.feature = null;
		}
	//	this.map.removePopup(this.feature.popup);
	},
	CLASS_NAME : "webtis.Popup.JSGIPopup"
});
/* ======================================================================
    Control/ZoomInOutBox.js
   ====================================================================== */

/**
 * Class: webtis.Control.ZoomInOutBox
 * 電子国土Webシステム APIの拡大・縮小の機能を表すコントロール
 *
 * Inherits from:
 *  - <OpenLayers.Control.ZoomBox>
 */
webtis.Control.ZoomInOutBox = OpenLayers.Class(OpenLayers.Control.ZoomBox, {

	draw: function() {
		this.handler = new webtis.Handler.LeftRightBox(this,
				{done: this.zoomBox}, {keyMask: this.keyMask});
	},

	zoomBox: function(position) {
		if (this.handler.dragHandler.leftDrag) {
			this.out = false;
		} else {
			this.out = true;
		}
		OpenLayers.Control.ZoomBox.prototype.zoomBox.apply(this, arguments);
	},

	CLASS_NAME: "webtis.Control.ZoomInOutBox"
});
/* ======================================================================
    Renderer/PixelSVG.js
   ====================================================================== */

/**
 * Class: webtis.Renderer.PixelSVG
 * 電子国土Webシステム APIでピクセル座標の電子国土Web システム用XML データをSVGで表示するための描画クラス
 * Inherits from:
 *  - <OpenLayers.Renderer.SVG>
 */
webtis.Renderer.PixelSVG = OpenLayers.Class(OpenLayers.Renderer.SVG, {

	setExtent: function(extent, resolutionChanged) {

		//OpenLayers.Renderer.Elements.prototype.setExtent.apply(this, arguments);
		/*
		var left = -extent.left;
		var top = extent.top;
		*/

		if (resolutionChanged) {
			this.resolution = null;
		}

		var left = 0;
		var top = 0;
		this.extent = new OpenLayers.Bounds(0, 0, this.size.w, this.size.h);

		// If the resolution has changed, start over changing the corner, because
		// the features will redraw.
		if (resolutionChanged) {
			this.left = left;
			this.top = top;
			// Set the viewbox
			var extentString = "0 0 " + this.size.w + " " + this.size.h;

			this.rendererRoot.setAttributeNS(null, "viewBox", extentString);
			this.translate(0, 0);
			return true;
		} else {
			var inRange = this.translate(left - this.left, top - this.top);
			if (!inRange) {
				// recenter the coordinate system
				this.setExtent(extent, true);
			}
			return inRange;
		}
	},

	drawCircle: function(node, geometry, radius) {
		var x = geometry.x + this.left;
		//var y = (this.top - geometry.y);
		var y = geometry.y + this.top;

		if (this.inValidRange(x, y)) {
			node.setAttributeNS(null, "cx", x);
			node.setAttributeNS(null, "cy", y);
			node.setAttributeNS(null, "r", radius);
			return node;
		} else {
			return false;
		}
	},

	drawRectangle: function(node, geometry) {
		var x = geometry.x + this.left;
		//var y = (this.top - geometry.y);
		var y = geometry.y + this.top;

		if (this.inValidRange(x, y)) {
			node.setAttributeNS(null, "x", x);
			node.setAttributeNS(null, "y", y);
			node.setAttributeNS(null, "width", geometry.width);
			node.setAttributeNS(null, "height", geometry.height);
			return node;
		} else {
			return false;
		}
	},

	drawText: function(featureId, style, location) {
		var x = location.x + this.left;
		var y = this.top - location.y;

		var label = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX, "text");
		var tspan = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_tspan", "tspan");

		label.setAttributeNS(null, "x", x);
		label.setAttributeNS(null, "y", -y);

		if (style.fontColor) {
			label.setAttributeNS(null, "fill", style.fontColor);
		}
		if (style.fontOpacity) {
			label.setAttributeNS(null, "opacity", style.fontOpacity);
		}
		if (style.fontFamily) {
			label.setAttributeNS(null, "font-family", style.fontFamily);
		}
		if (style.fontSize) {
			label.setAttributeNS(null, "font-size", style.fontSize);
			label.setAttributeNS(null,"style","line-height:1em;");
		}
		if (style.fontWeight) {
			label.setAttributeNS(null, "font-weight", style.fontWeight);
		}
		if(style.labelSelect === true) {
			label.setAttributeNS(null, "pointer-events", "visible");
			label._featureId = featureId;
			tspan._featureId = featureId;
			tspan._geometry = location;
			tspan._geometryClass = location.CLASS_NAME;
		} else {
			label.setAttributeNS(null, "pointer-events", "none");
		}
		var align = style.labelAlign || "cm";
		label.setAttributeNS(null, "text-anchor",
				OpenLayers.Renderer.SVG.LABEL_ALIGN[align[0]] || "middle");
		if (OpenLayers.IS_GECKO === true) {
			label.setAttributeNS(null, "dominant-baseline",OpenLayers.Renderer.SVG.LABEL_ALIGN[align[1]] || "central");
		}
		if (OpenLayers.IS_GECKO === false) {
			if (OpenLayers.BROWSER_NAME != "msie") {
				tspan.setAttributeNS(null, "baseline-shift",OpenLayers.Renderer.SVG.LABEL_VSHIFT[align[1]] || "-35%");
			}
		}

		tspan.textContent = style.label;

		if(!label.parentNode) {
			label.appendChild(tspan);
			this.textRoot.appendChild(label);
		}
		if(OpenLayers.BROWSER_NAME == "msie") {
			// baseline-shiftのかわり
			var textBbox = label.getBBox();
			var ratio = 0;
			if (align[1] == "t") {
				ratio = 0.85;// 微調整済み
			} else if (align[1] == "b") {
				ratio = 0;
			} else {
				ratio = 0.35;
			}
			label.setAttributeNS(null, "y", -y+(textBbox.height*ratio));
		}
	},

	clipLine: function(badComponent, goodComponent) {
		if (goodComponent.equals(badComponent)) {
			return "";
		}
		var maxX = this.MAX_PIXEL - this.translationParameters.x;
		var maxY = this.MAX_PIXEL - this.translationParameters.y;
		var x1 = goodComponent.x + this.left;
		//var y1 = this.top - goodComponent.y;
		var y1 = goodComponent.y + this.top;
		var x2 = badComponent.x + this.left;
		//var y2 = this.top - badComponent.y;
		var y2 = badComponent.y + this.top;
		var k;
		if (x2 < -maxX || x2 > maxX) {
			k = (y2 - y1) / (x2 - x1);
			x2 = x2 < 0 ? -maxX : maxX;
			y2 = y1 + (x2 - x1) * k;
		}
		if (y2 < -maxY || y2 > maxY) {
			k = (x2 - x1) / (y2 - y1);
			y2 = y2 < 0 ? -maxY : maxY;
			x2 = x1 + (y2 - y1) * k;
		}
		return x2 + "," + y2;
	},

	getShortString: function(point) {
		var x = point.x + this.left;
		//var y = (this.top - point.y);
		var y = point.y + this.top;

		if (this.inValidRange(x, y)) {
			return x + "," + y;
		} else {
			return false;
		}
	},

	CLASS_NAME: "webtis.Renderer.PixelSVG"
});

webtis.Control.PanZoomBar = OpenLayers.Class(OpenLayers.Control.PanZoomBar, {
	minZoomLevel: 0,
	maxZoomLevel: 18,
	shukushakuDiv: null,
	zoomInDiv: null,
	zoomOutDiv: null,

    /**
    * Method: draw
    *
    * Parameters:
    * px - {<OpenLayers.Pixel>}
    */
    draw: function(px) {
        // initialize our internal div
        OpenLayers.Control.prototype.draw.apply(this, arguments);
        px = this.position.clone();

        // place the controls
        this.buttons = [];

        var sz = new OpenLayers.Size(18,18);
        if (this.panIcons) {
            var centered = new OpenLayers.Pixel(px.x+sz.w/2, px.y);
            var wposition = sz.w;

            if (this.zoomWorldIcon) {
                centered = new OpenLayers.Pixel(px.x+sz.w, px.y);
            }

            this._addButton("panup", "north-mini.png", centered, sz);
            px.y = centered.y+sz.h;
            this._addButton("panleft", "west-mini.png", px, sz);
            if (this.zoomWorldIcon) {
                this._addButton("zoomworld", "zoom-world-mini.png", px.add(sz.w, 0), sz);

                wposition *= 2;
            }
            this._addButton("panright", "east-mini.png", px.add(wposition, 0), sz);
            this._addButton("pandown", "south-mini.png", centered.add(0, sz.h*2), sz);
            this.zoomInDiv = this._addButton("zoomin", "zoom-plus-mini.png", centered.add(0, sz.h*3+5), sz);
            centered = this._addZoomBar(centered.add(0, sz.h*4 + 5));
            this.zoomOutDiv = this._addButton("zoomout", "zoom-minus-mini.png", centered, sz);
        }
        else {
            this.zoomInDiv = this._addButton("zoomin", "zoom-plus-mini.png", px, sz);
            centered = this._addZoomBar(px.add(0, sz.h));
            this.zoomOutDiv = this._addButton("zoomout", "zoom-minus-mini.png", centered, sz);
            if (this.zoomWorldIcon) {
                centered = centered.add(0, sz.h+3);
                this._addButton("zoomworld", "zoom-world-mini.png", centered, sz);
            }
        }

        this.zoomInEvents = new OpenLayers.Events(this, this.zoomInDiv, null, true, {includeXY: true});
        this.zoomInEvents.on({
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });
        this.zoomOutEvents = new OpenLayers.Events(this, this.zoomOutDiv, null, true, {includeXY: true});
        this.zoomOutEvents.on({
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });

        return this.div;
    },

    _addZoomBar:function(centered) {
        var imgLocation = OpenLayers.Util.getImagesLocation();

        var id = this.id + "_" + this.map.id;
//      var zoomsToEnd = this.map.getNumZoomLevels() - 1 - this.map.getZoom();
        var zoomsToEnd = this.map.getNumZoomLevels() - 1 - Math.max(this.map.getZoom(), this.minZoomLevel);
        var slider = OpenLayers.Util.createAlphaImageDiv(id,
                       centered.add(-1, zoomsToEnd * this.zoomStopHeight),
                       new OpenLayers.Size(20,9),
                       imgLocation+"slider.png",
                       "absolute");
        slider.style.cursor = "move";
        this.slider = slider;

        this.sliderEvents = new OpenLayers.Events(this, slider, null, true,
                                            {includeXY: true});
        this.sliderEvents.on({
            "touchstart": this.zoomBarDown,
            "touchmove": this.zoomBarDrag,
            "touchend": this.zoomBarUp,
            "mousedown": this.zoomBarDown,
            "mousemove": this.zoomBarDrag,
            "mouseup": this.zoomBarUp,
            "dblclick": this.doubleClick,
            "click": this.doubleClick,
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });

        var sz = new OpenLayers.Size();
//      sz.h = this.zoomStopHeight * this.map.getNumZoomLevels();
        sz.h = this.zoomStopHeight * this.getNumZoomLevels();
        sz.w = this.zoomStopWidth;
        var div = null;

        if (OpenLayers.Util.alphaHack()) {
            var id = this.id + "_" + this.map.id;
            div = OpenLayers.Util.createAlphaImageDiv(id, centered,
                                      new OpenLayers.Size(sz.w,
                                              this.zoomStopHeight),
                                      imgLocation + "zoombar.png",
                                      "absolute", null, "crop");
            div.style.height = sz.h + "px";
        } else {
            div = OpenLayers.Util.createDiv(
                        'OpenLayers_Control_PanZoomBar_Zoombar' + this.map.id,
                        centered,
                        sz,
                        imgLocation+"zoombar.png");
        }
        div.style.cursor = "pointer";
        this.zoombarDiv = div;

        this.divEvents = new OpenLayers.Events(this, div, null, true,
                                                {includeXY: true});
        this.divEvents.on({
            "touchmove": this.passEventToSlider,
            "mousedown": this.divClick,
            "mousemove": this.passEventToSlider,
            "dblclick": this.doubleClick,
            "click": this.doubleClick,
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });

        this.div.appendChild(div);

        this.startTop = parseInt(div.style.top);
        this.div.appendChild(slider);

        this.map.events.register("zoomend", this, this.moveZoomBar);

        centered = centered.add(0,
//          this.zoomStopHeight * this.map.getNumZoomLevels());
            this.zoomStopHeight * this.getNumZoomLevels());
        return centered;
    },

	_removeZoomBar: function (){
        this.sliderEvents.un({
            "touchmove": this.zoomBarDrag,
            "mousedown": this.zoomBarDown,
            "mousemove": this.zoomBarDrag,
            "mouseup": this.zoomBarUp,
            "dblclick": this.doubleClick,
            "click": this.doubleClick,
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });
        this.sliderEvents.destroy();

        this.divEvents.un({
            "touchmove": this.passEventToSlider,
            "mousedown": this.divClick,
            "mousemove": this.passEventToSlider,
            "dblclick": this.doubleClick,
            "click": this.doubleClick,
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });
        this.divEvents.destroy();

        this.zoomInEvents.un({
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });
        this.zoomInEvents.destroy();

        this.zoomOutEvents.un({
            "mouseover": this.showShukushaku,
            "mouseout": this.hideShukushaku
        });
        this.zoomOutEvents.destroy();

        this.div.removeChild(this.zoombarDiv);
        this.zoombarDiv = null;
        this.div.removeChild(this.slider);
        this.slider = null;

        this.map.events.unregister("zoomend", this, this.moveZoomBar);
	},

    divClick: function (evt) {
        if (!OpenLayers.Event.isLeftClick(evt)) {
            return;
        }
        var levels = evt.xy.y / this.zoomStopHeight;
        if(this.forceFixedZoomLevel || !this.map.fractionalZoom) {
            levels = Math.floor(levels);
        }
//      var zoom = (this.map.getNumZoomLevels() - 1) - levels;
//      zoom = Math.min(Math.max(zoom, 0), this.map.getNumZoomLevels() - 1);
        var zoom = (this.maxZoomLevel) - levels;
        zoom = Math.min(Math.max(zoom, 0), this.maxZoomLevel);
        this.map.zoomTo(zoom);
        OpenLayers.Event.stop(evt);
    },

    zoomBarUp:function(evt) {
        if (!OpenLayers.Event.isLeftClick(evt) && evt.type !== "touchend") {
            return;
        }
        if (this.mouseDragStart) {
            this.div.style.cursor="";
            this.map.events.un({
                "touchmove": this.passEventToSlider,
                "mouseup": this.passEventToSlider,
                "mousemove": this.passEventToSlider,
                scope: this
            });
            var zoomLevel = this.map.zoom;
            if (!this.forceFixedZoomLevel && this.map.fractionalZoom) {
                zoomLevel += this.deltaY/this.zoomStopHeight;
                zoomLevel = Math.min(Math.max(zoomLevel, 0),
//                                   this.map.getNumZoomLevels() - 1);
                                     this.maxZoomLevel - 1);
            } else {
                zoomLevel += this.deltaY/this.zoomStopHeight;
                zoomLevel = Math.max(Math.round(zoomLevel), 0);
            }
            this.map.zoomTo(zoomLevel);
            this.mouseDragStart = null;
            this.zoomStart = null;
            this.deltaY = 0;
            OpenLayers.Event.stop(evt);
        }
    },

    moveZoomBar:function() {
        var newTop =
//          ((this.map.getNumZoomLevels()-1) - this.map.getZoom()) *
            ((this.maxZoomLevel) - this.map.getZoom()) *
            this.zoomStopHeight + this.startTop + 1;
        this.slider.style.top = newTop + "px";
    },

    getNumZoomLevels: function() {
		return this.maxZoomLevel - this.minZoomLevel + 1;
	},

	showShukushaku: function() {
		var h = 198;
		var w = 67;

		if (!this.shukushakuDiv) {
            var id = this.id + "_" + this.map.id;
            this.shukushakuDiv =
                OpenLayers.Util.createAlphaImageDiv(id, new OpenLayers.Pixel(35, 80),
                    new OpenLayers.Size(w, h),
                    "http://portal.cyberjapan.jp/sys/v4/image/scale3.png",
                    "absolute", null, "scale");

	        this.div.appendChild(this.shukushakuDiv);
		}

		this.shukushakuDiv.style.display = "block";
	},

	hideShukushaku: function() {
		if (this.shukushakuDiv) {
			this.shukushakuDiv.style.display = "none";
		}
	},

    CLASS_NAME: "webtis.Control.PanZoomBar"
});

/**
 * Class: webtis.Layer.TileLayer
 * 電子国土Webシステム APIでタイルマップを表示するためのレイヤー
 *
 * Inherits from:
 *  - <OpenLayers.Layer.XYZ>
 */
webtis.Layer.TileLayer = OpenLayers.Class(OpenLayers.Layer.XYZ, {
    name: "TileLayer",

    sphericalMercator: true,
    wrapDateLine: false,
    url : null,
    side: webtis.TILE_SIDE,
    isBaseLayer:false,
    BASE_EXTENT: new OpenLayers.Bounds(
            -128 * 156543.03390625,
            -128 * 156543.03390625,
            128 * 156543.03390625,
            128 * 156543.03390625
    ),
    // 20段階分の解像度
    BASE_RESOLUTIONS : [
    	webtis.TILE_BASE_RESOLUTIONS[0] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[1] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[2] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[3] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[4] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[5] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[6] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[7] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[8] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[9] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[10] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[11] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[12] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[13] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[14] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[15] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[16] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[17] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[18] * (256 / webtis.TILE_SIDE),
    	webtis.TILE_BASE_RESOLUTIONS[19] * (256 / webtis.TILE_SIDE)
    ],

    /**
     * 初期化
     * @param name
     * @param options
     */
    initialize: function(name, url, maxzoom, minzoom, tileside) {
        this.url = url;
        this.name = name;
        this.projection = new OpenLayers.Projection("EPSG:900913");
		this.maxzoom = maxzoom;
		this.minzoom = minzoom;
		if (tileside) {
			this.side = tileside;
			for (var i = 0; i < 20; i++) {
				this.BASE_RESOLUTIONS[i] = webtis.TILE_BASE_RESOLUTIONS[0] * (256 / tileside);
			}
		}

		var options = {
			maxResolution: this.BASE_RESOLUTIONS[minzoom],
			minResolution: this.BASE_RESOLUTIONS[maxzoom],
			numZoomLevels: maxzoom - minzoom + 1
		};

		this.tileSize = new OpenLayers.Size(this.side, this.side);

//        var newArguments = [this.name, this.url, {}, {}];
        var newArguments = [this.name, this.url, {}, options];
        OpenLayers.Layer.Grid.prototype.initialize.apply(this, newArguments);
    },

    /**
     * Method: destroy
     */
    destroy: function() {
        OpenLayers.Layer.XYZ.prototype.destroy.apply(this, arguments);
    },


	clone: function(obj) {
        if (obj == null) {
            obj = new webtis.Layer.TileLayer(this.name, this.url);
        }
        obj = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [obj]);
        return obj;
    },

    /**
     * Method: setMap
     */
    setMap: function() {
        OpenLayers.Layer.XYZ.prototype.setMap.apply(this, arguments);
        // mapに追加した時に、ベースマップの情報で再初期化
        this.zoomOffset = this.map.baseLayer.options.minZoomLevel;
        this.addOptions(this.map.baseLayer.options,true);
        this.clearGrid();
    	this.redraw();
    },

    /**
     * Method: getXYZ
     * Calculates x, y and z for the given bounds.
     *
     * Parameters:
     * bounds - {<OpenLayers.Bounds>}
     *
     * Returns:
     * {Object} - an object with x, y and z properties.
     */
    getXYZ: function(bounds) {
        var res = this.map.getResolution();
        // ベースレイヤが、webtis.Layer.BaseMapである必要があります。
        var zoomOffset = this.map.baseLayer.zoomOffset;
        var x = Math.round((bounds.left - this.BASE_EXTENT.left) /
            (res * this.tileSize.w));
        var y = Math.round((this.BASE_EXTENT.top - bounds.top) /
            (res * this.tileSize.h));
        var z = this.serverResolutions != null ?
            OpenLayers.Util.indexOf(this.serverResolutions, res) :
            this.map.getZoom() + zoomOffset;

        var limit = Math.pow(2, z);
        if (this.wrapDateLine)
        {
           x = ((x % limit) + limit) % limit;
        }

        return {'x': x, 'y': y, 'z': z};
    },

    /**
     * URLを作成
     */
    getURL: function (bounds) {
        var xyz = this.getXYZ(bounds);
        var url = this.url;
        return OpenLayers.String.format(url, xyz);
    },

    getZoomForExtent :  function(bounds,closest) {
    	var zoom = OpenLayers.Layer.XYZ.prototype.getZoomForExtent.apply(this, arguments);
    	return zoom;
    },

    CLASS_NAME: "webtis.Layer.TileLayer"
});

OpenLayers.Util.onImageLoadError = function(){
	//20120911 地図IDによる判定を追加
	var currentZoomLevel= this.map.getZoom();				//ズームレベルを取得

	var overlayMapIds = ['lcm25k', 'lcm25k_2011', 'ccm1', 'ccm2', 'meijiswale', 'akandake', 'tokachidake', 'tarumaesan', 'usuzan', 'komagatake', 'iwatesan', 'kurikomayama', 'adatarayama', 'bandaisan', 'izuoshima', 'miyakezima', 'kusatsushiranesan', 'fujisan', 'ontakesan', 'kujirenzan', 'asosan', 'unzendake', 'kirishimayama', 'sakurazima', 'satsumaiojima',
						 'vbm01meakan','vbm02tokachi','vbm03tarumae','vbm04usu','vbm05hokkaidokoma','vbm06iwaki','vbm07akitayake','vbm08iwate','vbm09kurikoma','vbm10akitakoma','vbm11chokai','vbm12zao','vbm13azuma','vbm14adatara','vbm15bandai','vbm16nasu','vbm17kusatsushirane','vbm18asama','vbm19hakone','vbm20fuji','vbm21eastizu','vbm22izuoshima','vbm23miyake','vbm24yakedake','vbm25ontake','vbm26tsurumi','vbm27kujyu','vbm28aso','vbm29unzen','vbm30kirishima','vbm31sakurajima','vbm32satsumatakesima','vbm33satsumaiojima','vbm34suwanosejima',
						 'capital2005','capital2000','capital1994','capital1989','capital1984','capital1979','capital1974',
						 'chubu2003','chubu1997','chubu1991','chubu1987','chubu1982','chubu1977',
						 'kinki2008','kinki2001','kinki1996','kinki1991','kinki1985','kinki1979','kinki1974','lake1','lake2', 'seisya1307yamaguchi', 'seisya1307yamaguchi2',
						 'lum200k','LCMFC','LCM25K_2012',

						 'gazo1area',
						 'gazo2area',
						 'gazo3area',
						 'gazo4area'

						 ];

	for (var i in overlayMapIds){
		var mapId = overlayMapIds[i];
		var dataId;
		if(this.map.getLayersByName(mapId)[0] && this.map.getLayersByName(mapId)[0].getVisibility() == true) {
			dataId = this.map.getLayersByName(mapId)[0].dataSet[currentZoomLevel].dataId;
		}
		else {
			continue;
		}

		if((dataId=='LCM25K')||(dataId=='LCM25K_2011')||(dataId=='CCM1')||(dataId=='CCM2')||(dataId=='SWALE')




				||(dataId=='16akandake')||
		   (dataId=='02tokachidake')||(dataId=='10tarumaesan')||(dataId=='09usuzan')||(dataId=='05komagatake')||(dataId=='00kurikomayama')||
		   (dataId=='14adatarayama')||(dataId=='11bandaisan')||(dataId=='13izuoshima')||(dataId=='06miyakezima')||(dataId=='03kusatsushiranesan')||
		   (dataId=='12fujisan')||(dataId=='00ontakesan')||(dataId=='15kujirenzan')||(dataId=='04asosan')||(dataId=='07unzendake')||
		   (dataId=='08kirishimayama')||(dataId=='01sakurazima')||(dataId=='17satsumaiojima')||(dataId.match(/(capital|chubu|kinki)[0-9][0-9][0-9][0-9]/))||
		   (dataId=='LAKE1')||(dataId=='LAKE2')||(dataId=='20130717dol')||(dataId=='20130717dol2')||(dataId.match(/^vbm/))||(dataId=='pale')
		   ||(dataId.match(/^SAR_/))||(dataId.match(/^NDVI_250m/))

		   ////////////////////////////////////////////////
		   || dataId.match(/^BUILD_/)
		   ////////////////////////////////////////////////
		   )
		{
			// オーバーレイを重ね合わせた場合は背景地図を隠さないよう透過pngを表示
			this.src = 'http://cyberjapandata.gsi.go.jp/sqras/transparent.png';
			return;
		}
	}

	var mapId = this.map.baseLayer.dataSet[currentZoomLevel].dataId;		//地図IDを取得

	if(mapId == "GLMD") { //ベースが地球地図の場合は透過pngを返す(500万のとき地球地図を隠さないため)
		this.src = 'http://cyberjapandata.gsi.go.jp/sqras/transparent.png';
	}else if(mapId == "GRAY" || mapId == "SPRING" || mapId == "SUMMER" || mapId == "AUTUMN" || mapId == "WINTER" || mapId == ""){
		this.src='http://cyberjapandata.gsi.go.jp/sqras/transparent.png';//オーバーレイしている場合軽量な透過PNG
	}else if(mapId=="DJBMM"){	//電子国土基本図（地図情報）は青タイル
		this.src='http://cyberjapandata.gsi.go.jp/sqras/no_map.png';
	}else{ //NODATAタイル
		this.src='http://cyberjapandata.gsi.go.jp/sqras/white.png';
	}
};

// OpenLayers.Tile.Image.useBlankTile=false;
webtis.readyToGo = true;
//
// @source = jquery-1.6.2.min.js
//
/*!
 * jQuery JavaScript Library v1.6.2
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Thu Jun 30 14:16:56 2011 -0400
 */
(function(a,b){function cv(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cs(a){if(!cg[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ch||(ch=c.createElement("iframe"),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),ci.close();d=ci.createElement(a),ci.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ch)}cg[a]=e}return cg[a]}function cr(a,b){var c={};f.each(cm.concat.apply([],cm.slice(0,b)),function(){c[this]=a});return c}function cq(){cn=b}function cp(){setTimeout(cq,0);return cn=f.now()}function cf(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ce(){try{return new a.XMLHttpRequest}catch(b){}}function b$(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function bZ(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function bY(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bC.test(a)?d(a,e):bY(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)bY(a+"["+e+"]",b[e],c,d);else d(a,b)}function bX(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bR,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bX(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bX(a,c,d,e,"*",g));return l}function bW(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bN),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bA(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bv:bw;if(d>0){c!=="border"&&f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bx(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&&f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function bm(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(be,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bl(a){f.nodeName(a,"input")?bk(a):"getElementsByTagName"in a&&f.grep(a.getElementsByTagName("input"),bk)}function bk(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bj(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bi(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bh(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i<j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bg(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function W(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(R.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function V(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function N(a,b){return(a&&a!=="*"?a+".":"")+b.replace(z,"`").replace(A,"&")}function M(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&&a.type==="click")){a.namespace&&(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i<s.length;i++)g=s[i],g.origType.replace(x,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j<k;j++){m=e[j];for(i=0;i<s.length;i++){g=s[i];if(m.selector===g.selector&&(!n||n.test(g.namespace))&&!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&&f.contains(h,d)&&(d=h);(!d||d!==h)&&p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j<k;j++){e=p[j];if(c&&e.level>c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&&(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function K(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&&d[0].preventDefault()}function E(){return!0}function D(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&&(d==="queue"||!f.data(a,g,b,!0))&&(d==="mark"||!f.data(a,h,b,!0))&&setTimeout(function(){!f.data(a,g,b,!0)&&!f.data(a,h,b,!0)&&(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(j,"$1-$2").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z])/ig,x=function(a,b){return b.toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.resolveWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!A){A=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1;var c;for(c in a);return c===b||D.call(a,c)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(b,c,d){a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b)),d=c.documentElement,(!d||!d.nodeName||d.nodeName==="parsererror")&&e.error("Invalid XML: "+b);return c},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(H)return H.call(b,a);for(var c=0,d=b.length;c<d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")<0&&v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&&(k=b,b=0);for(g=0,h=c.length;g<h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&&a.push(i);k&&e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&&!b&&!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&&f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g](h)}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&&a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length>1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred();if(d>1){for(;c<d;c++)b[c]&&f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&&g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&&a.attachEvent&&a.fireEvent&&(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.firstChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0},m&&f.extend(p,{position:"absolute",left:-1e3,top:-1e3});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&&(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="<div style='width:4px;'></div>",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&&q[0].offsetHeight===0,a.innerHTML="",c.defaultView&&c.defaultView.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0),o.innerHTML="",n.removeChild(o);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([a-z])([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g=f.expando,h=typeof c=="string",i,j=a.nodeType,k=j?f.cache:a,l=j?a[f.expando]:a[f.expando]&&f.expando;if((!l||e&&l&&!k[l][g])&&h&&d===b)return;l||(j?a[f.expando]=l=++f.uuid:l=f.expando),k[l]||(k[l]={},j||(k[l].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?k[l][g]=f.extend(k[l][g],c):k[l]=f.extend(k[l],c);i=k[l],e&&(i[g]||(i[g]={}),i=i[g]),d!==b&&(i[f.camelCase(c)]=d);if(c==="events"&&!i[c])return i[g]&&i[g].events;return h?i[f.camelCase(c)]||i[c]:i}},removeData:function(b,c,d){if(!!f.acceptData(b)){var e=f.expando,g=b.nodeType,h=g?f.cache:b,i=g?b[f.expando]:f.expando;if(!h[i])return;if(c){var j=d?h[i][e]:h[i];if(j){delete j[c];if(!l(j))return}}if(d){delete h[i][e];if(!l(h[i]))return}var k=h[i][e];f.support.deleteExpando||h!=a?delete h[i]:h[i]=null,k?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=k):g&&(f.support.deleteExpando?delete b[f.expando]:b.removeAttribute?b.removeAttribute(f.expando):b[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h<i;h++)g=e[h].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&&this.length&&(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&&j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&&(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&&(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&&(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u=/\:|^on/,v,w;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(o);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(o);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(n," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c<d;c++)if((" "+this[c].className+" ").replace(n," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&&"get"in c&&(d=c.get(e,"value"))!==b)return d;d=e.value;return typeof d=="string"?d.replace(p,""):d==null?"":d}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c<0)return null;for(var h=g?c:0,i=g?c+1:e.length;h<i;h++){var j=e[h];if(j.selected&&(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&&(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&&!d.length&&e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&&c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);j&&(c=f.attrFix[c]||c,i=f.attrHooks[c],i||(t.test(c)?i=w:v&&c!=="className"&&(f.nodeName(a,"form")||u.test(c))&&(i=v)));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&&"set"in i&&j&&(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&&"get"in i&&j&&(h=i.get(a,c))!==null)return h;h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&&(b=f.attrFix[b]||b,f.support.getSetAttribute?a.removeAttribute(b):(f.attr(a,b,""),a.removeAttributeNode(a.getAttributeNode(b))),t.test(b)&&(c=f.propFix[b]||b)in a&&(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},tabIndex:{get:function(a){var c=a.getAttributeNode("tabIndex");return c&&c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&&a.href?0:b}},value:{get:function(a,b){if(v&&f.nodeName(a,"button"))return v.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(v&&f.nodeName(a,"button"))return v.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);i&&(c=f.propFix[c]||c,h=f.propHooks[c]);return d!==b?h&&"set"in h&&(g=h.set(a,d,c))!==b?g:a[c]=d:h&&"get"in h&&(g=h.get(a,c))!==b?g:a[c]},propHooks:{}}),w={get:function(a,c){return f.prop(a,c)?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},f.support.getSetAttribute||(f.attrFix=f.propFix,v=f.attrHooks.name=f.attrHooks.title=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&d.nodeValue!==""?d.nodeValue:b},set:function(a,b,c){var d=a.getAttributeNode(c);if(d){d.nodeValue=b;return b}}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var x=/\.(.*)$/,y=/^(?:textarea|input|select)$/i,z=/\./g,A=/ /g,B=/[^\w\s.|`]/g,C=function(a){return a.replace(B,"\\$&")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){if(d===!1)d=D;else if(!d)return;var g,h;d.handler&&(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")>-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&&a.attachEvent("on"+l,k)}p.add&&(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){d===!1&&(d=D);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&&f._data(a),t=s&&s.events;if(!s||!t)return;c&&c.type&&(d=c.handler,c=c.type);if(!c||typeof c=="string"&&c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")<0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),C).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j<p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j<p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&&p.splice(j--,1),o.remove&&o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&&p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&&f.removeEvent(a,h,s.handle),g=null,delete t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&&(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&&f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")>=0&&(h=h.slice(0,-1),j=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.
shift(),i.sort());if(!!e&&!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&&b.events&&b.events[h]&&f.event.trigger(c,d,b.handle.elem)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d!=null?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")<0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&&m.apply(k,d),l&&f.acceptData(k)&&k[l]&&k[l].apply(k,d)===!1&&(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&&a}while(k&&!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)){try{l&&e[h]&&(n=e[l],n&&(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&&(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&&!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h<i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&&(c.result=k,k===!1&&(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),!a.relatedTarget&&a.fromElement&&(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&&a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&&i.scrollLeft||j&&j.scrollLeft||0)-(i&&i.clientLeft||j&&j.clientLeft||0),a.pageY=a.clientY+(i&&i.scrollTop||j&&j.scrollTop||0)-(i&&i.clientTop||j&&j.clientTop||0)}a.which==null&&(a.charCode!=null||a.keyCode!=null)&&(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&&a.ctrlKey&&(a.metaKey=a.ctrlKey),!a.which&&a.button!==b&&(a.which=a.button&1?1:a.button&2?3:a.button&4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,N(a.origType,a.selector),f.extend({},a,{handler:M,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,N(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?E:D):this.type=a,b&&f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=E;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=E;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=E,this.stopPropagation()},isDefaultPrevented:D,isPropagationStopped:D,isImmediatePropagationStopped:D};var F=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&&(b&&(c=f.contains(this,b)),c||(f.event.handle.apply(this,arguments),a.type=d))},G=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&&c.selector?G:F,a)},teardown:function(a){f.event.remove(this,b,a&&a.selector?G:F)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=b.type;(c==="submit"||c==="image")&&f(b).closest("form").length&&K("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=b.type;(c==="text"||c==="password")&&f(b).closest("form").length&&a.keyCode===13&&K("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var H,I=function(a){var b=a.type,c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex>-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&&(c=a.selectedIndex);return c},J=function(c){var d=c.target,e,g;if(!!y.test(d.nodeName)&&!d.readOnly){e=f._data(d,"_change_data"),g=I(d),(c.type!=="focusout"||d.type!=="radio")&&f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:J,beforedeactivate:J,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&&J.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&&!f.nodeName(b,"textarea")||a.keyCode===32&&(c==="checkbox"||c==="radio")||c==="select-multiple")&&J.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",I(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in H)f.event.add(this,c+".specialChange",H[c]);return y.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return y.test(this.nodeName)}},H=f.event.special.change.filters,H.focus=H.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&&a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&&c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i<j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&&!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d<e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var L={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&&!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&&!a&&g&&g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||D,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=x.exec(h),k="",j&&(k=j[0],h=h.replace(x,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,L[h]?(a.push(L[h]+k),h=h+k):h=(L[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p<q;p++)f.event.add(n[p],"live."+N(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+N(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.bind(b,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length>0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&&!f&&(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length>1&&m.exec(b))if(x.length===2&&l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&&(b+=x.shift()),j=v(b,j)}else{!g&&x.length>1&&d.nodeType===9&&!w&&l.match.ID.test(x[0])&&!l.match.ID.test(x[x.length-1])&&(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&&(x[0]==="~"||x[0]==="+")&&d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length>0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&&(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&&d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&&(n[t]===!0||n[t].nodeType===1&&k.contains(d,n[t]))&&f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&&n[t].nodeType===1&&f.push(j[t]);else p(n,f);o&&(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length>0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e<f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&&c[0]&&k.isXML(c[0]);while(a&&c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&&f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&&(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&&o!=null?t?g=!0:j[s]=!1:t&&(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!j.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&k.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!j.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&&l.attrMap[g]&&(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&&f===0)return!0;var g=b[0],h=a.parentNode;if(h&&(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&&(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&&j/e>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c<f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&&(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&&!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&&l.find.CLASS&&e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return p([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&"):e.setAttribute("id",o),r&&q&&(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g<h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var O=/Until$/,P=/^(?:parents|prevUntil|prevAll)/,Q=/,/,R=/^.[^:#\[\.,]*$/,S=Array.prototype.slice,T=f.expr.match.POS,U={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(W(this,a,!1),"not",a)},filter:function(a){return this.pushStack(W(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&&a.length){for(d=0,e=a.length;d<e;d++)i=a[d],j[i]||(j[i]=T.test(i)?f(i,b||this.context):i);while(g&&g.ownerDocument&&g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)>-1:f(g).is(h))&&c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=T.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(l?l.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a||typeof a=="string")return f.inArray(this[0],a?f(a):this.parent().children());return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(V(c[0])||V(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=S.call(arguments);O.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!U[a]?f.unique(e):e,(this.length>1||Q.test(d))&&P.test(a)&&(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var X=/ jQuery\d+="(?:\d+|null)"/g,Y=/^\s+/,Z=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,$=/<([\w:]+)/,_=/<tbody/i,ba=/<|&#?\w+;/,bb=/<(?:script|object|embed|option|style)/i,bc=/checked\s*(?:[^=]|=\s*.checked.)/i,bd=/\/(java|ecma)script/i,be=/^\s*<!(?:\[CDATA\[|\-\-)/,bf={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};bf.optgroup=bf.option,bf.tbody=bf.tfoot=bf.colgroup=bf.caption=bf.thead,bf.th=bf.td,f.support.htmlSerialize||(bf._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(X,""):null;if(typeof a=="string"&&!bb.test(a)&&(f.support.leadingWhitespace||!Y.test(a))&&!bf[($.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Z,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bc.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bg(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bm)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i;b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof a[0]=="string"&&a[0].length<512&&i===c&&a[0].charAt(0)==="<"&&!bb.test(a[0])&&(f.support.checkClone||!bc.test(a[0]))&&(g=!0,h=f.fragments[a[0]],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[a[0]]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j
)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bi(a,d),e=bj(a),g=bj(d);for(h=0;e[h];++h)bi(e[h],g[h])}if(b){bh(a,d);if(c){e=bj(a),g=bj(d);for(h=0;e[h];++h)bh(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!ba.test(k))k=b.createTextNode(k);else{k=k.replace(Z,"<$1></$2>");var l=($.exec(k)||["",""])[1].toLowerCase(),m=bf[l]||bf._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=_.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&Y.test(k)&&o.insertBefore(b.createTextNode(Y.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bl(k[i]);else bl(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bd.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&&f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&&d[c][e];if(b&&b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&&(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&&j.removeAttribute(f.expando),delete d[c]}}}});var bn=/alpha\([^)]*\)/i,bo=/opacity=([^)]*)/,bp=/([A-Z]|^ms)/g,bq=/^-?\d+(?:px)?$/i,br=/^-?\d/,bs=/^[+\-]=/,bt=/[^+\-\.\de]+/g,bu={position:"absolute",visibility:"hidden",display:"block"},bv=["Left","Right"],bw=["Top","Bottom"],bx,by,bz;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bx(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d;if(h==="number"&&isNaN(d)||d==null)return;h==="string"&&bs.test(d)&&(d=+d.replace(bt,"")+parseFloat(f.css(a,c)),h="number"),h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bx)return bx(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return bA(a,b,d);f.swap(a,bu,function(){e=bA(a,b,d)});return e}},set:function(a,b){if(!bq.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bo.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle;c.zoom=1;var e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&&d.filter||c.filter||"";c.filter=bn.test(g)?g.replace(bn,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bx(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(by=function(a,c){var d,e,g;c=c.replace(bp,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&&!f.contains(a.ownerDocument.documentElement,a)&&(d=f.style(a,c));return d}),c.documentElement.currentStyle&&(bz=function(a,b){var c,d=a.currentStyle&&a.currentStyle[b],e=a.runtimeStyle&&a.runtimeStyle[b],f=a.style;!bq.test(d)&&br.test(d)&&(c=f.left,e&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&&(a.runtimeStyle.left=e));return d===""?"auto":d}),bx=by||bz,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bB=/%20/g,bC=/\[\]$/,bD=/\r?\n/g,bE=/#.*$/,bF=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bG=/^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bH=/^(?:about|app|app\-storage|.+\-extension|file|widget):$/,bI=/^(?:GET|HEAD)$/,bJ=/^\/\//,bK=/\?/,bL=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bM=/^(?:select|textarea)/i,bN=/\s+/,bO=/([?&])_=[^&]*/,bP=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bQ=f.fn.load,bR={},bS={},bT,bU;try{bT=e.href}catch(bV){bT=c.createElement("a"),bT.href="",bT=bT.href}bU=bP.exec(bT.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bQ)return bQ.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bL,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bM.test(this.nodeName)||bG.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bD,"\r\n")}}):{name:b.name,value:c.replace(bD,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?f.extend(!0,a,f.ajaxSettings,b):(b=a,a=f.extend(!0,f.ajaxSettings,b));for(var c in{context:1,url:1})c in b?a[c]=b[c]:c in f.ajaxSettings&&(a[c]=f.ajaxSettings[c]);return a},ajaxSettings:{url:bT,isLocal:bH.test(bU[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":"*/*"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML}},ajaxPrefilter:bW(bR),ajaxTransport:bW(bS),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a?4:0;var o,r,u,w=l?bZ(d,v,l):b,x,y;if(a>=200&&a<300||a===304){if(d.ifModified){if(x=v.getResponseHeader("Last-Modified"))f.lastModified[k]=x;if(y=v.getResponseHeader("Etag"))f.etag[k]=y}if(a===304)c="notmodified",o=!0;else try{r=b$(d,w),c="success",o=!0}catch(z){c="parsererror",u=z}}else{u=c;if(!c||a)c="error",a<0&&(a=0)}v.status=a,v.statusText=c,o?h.resolveWith(e,[r,c,v]):h.rejectWith(e,[v,c,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,c]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bF.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bE,"").replace(bJ,bU[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bN),d.crossDomain==null&&(r=bP.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bU[1]&&r[2]==bU[2]&&(r[3]||(r[1]==="http:"?80:443))==(bU[3]||(bU[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bX(bR,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bI.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bK.test(d.url)?"&":"?")+d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bO,"$1_="+x);d.url=y+(y===d.url?(bK.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", */*; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bX(bS,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){status<2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)bY(g,a[g],c,e);return d.join("&").replace(bB,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var b_=f.now(),ca=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+b_++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ca.test(b.url)||e&&ca.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ca,l),b.url===j&&(e&&(k=k.replace(ca,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cb=a.ActiveXObject?function(){for(var a in cd)cd[a](0,1)}:!1,cc=0,cd;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ce()||cf()}:ce,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cb&&delete cd[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cc,cb&&(cd||(cd={},f(a).unload(cb)),cd[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cg={},ch,ci,cj=/^(?:toggle|show|hide)$/,ck=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cl,cm=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cn,co=a.webkitRequestAnimationFrame||a.mozRequestAnimationFrame||a.oRequestAnimationFrame;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cr("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cs(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cr("hide",3),a,b,c);for(var d=0,e=this.length;d<e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&&!f._data(this[d],"olddisplay")&&f._data(this[d],"olddisplay",g)}for(d=0;d<e;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cr("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(f.support.inlineBlockNeedsLayout?(j=cs(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cj.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=ck.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&&(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&&(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&&this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&&(b&&a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cr("show",1),slideUp:cr("hide",1),slideToggle:cr("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue!==!1?f.dequeue(this):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function h(a){return d.step(a)}var d=this,e=f.fx,g;this.startTime=cn||cp(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,h.elem=this.elem,h()&&f.timers.push(h)&&!cl&&(co?(cl=!0,g=function(){cl&&(co(g),e.tick())},co(g)):cl=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cn||cp(),c=!0,d=this.elem,e=this.options,g,h;if(a||b>=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&&(c=!1);if(c){e.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&&f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b<a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cl),cl=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var ct=/^t(?:able|d|h)$/i,cu=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cv(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.offset.supportsFixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&&(!f.offset.doesAddBorderForTableAndCells||!ct.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cu.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cu.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cv(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cv(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a&&a.style?parseFloat(f.css(a,d,"padding")):null},f.fn["outer"+c]=function(a){var b=this[0];return b&&b.style?parseFloat(f.css(b,d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c];return e.document.compatMode==="CSS1Compat"&&g||e.document.body["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var h=f.css(e,d),i=parseFloat(h);return f.isNaN(i)?h:i}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);//
// @source = jquery-ui-1.8.16.custom.min.js
//
/*!
 * jQuery UI 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(c,j){function k(a,b){var d=a.nodeName.toLowerCase();if("area"===d){b=a.parentNode;d=b.name;if(!a.href||!d||b.nodeName.toLowerCase()!=="map")return false;a=c("img[usemap=#"+d+"]")[0];return!!a&&l(a)}return(/input|select|textarea|button|object/.test(d)?!a.disabled:"a"==d?a.href||b:b)&&l(a)}function l(a){return!c(a).parents().andSelf().filter(function(){return c.curCSS(this,"visibility")==="hidden"||c.expr.filters.hidden(this)}).length}c.ui=c.ui||{};if(!c.ui.version){c.extend(c.ui,{version:"1.8.16",
keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});c.fn.extend({propAttr:c.fn.prop||c.fn.attr,_focus:c.fn.focus,focus:function(a,b){return typeof a==="number"?this.each(function(){var d=
this;setTimeout(function(){c(d).focus();b&&b.call(d)},a)}):this._focus.apply(this,arguments)},scrollParent:function(){var a;a=c.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(c.curCSS(this,"position",1))&&/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(c.curCSS(this,
"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1))}).eq(0);return/fixed/.test(this.css("position"))||!a.length?c(document):a},zIndex:function(a){if(a!==j)return this.css("zIndex",a);if(this.length){a=c(this[0]);for(var b;a.length&&a[0]!==document;){b=a.css("position");if(b==="absolute"||b==="relative"||b==="fixed"){b=parseInt(a.css("zIndex"),10);if(!isNaN(b)&&b!==0)return b}a=a.parent()}}return 0},disableSelection:function(){return this.bind((c.support.selectstart?"selectstart":
"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});c.each(["Width","Height"],function(a,b){function d(f,g,m,n){c.each(e,function(){g-=parseFloat(c.curCSS(f,"padding"+this,true))||0;if(m)g-=parseFloat(c.curCSS(f,"border"+this+"Width",true))||0;if(n)g-=parseFloat(c.curCSS(f,"margin"+this,true))||0});return g}var e=b==="Width"?["Left","Right"]:["Top","Bottom"],h=b.toLowerCase(),i={innerWidth:c.fn.innerWidth,innerHeight:c.fn.innerHeight,
outerWidth:c.fn.outerWidth,outerHeight:c.fn.outerHeight};c.fn["inner"+b]=function(f){if(f===j)return i["inner"+b].call(this);return this.each(function(){c(this).css(h,d(this,f)+"px")})};c.fn["outer"+b]=function(f,g){if(typeof f!=="number")return i["outer"+b].call(this,f);return this.each(function(){c(this).css(h,d(this,f,true,g)+"px")})}});c.extend(c.expr[":"],{data:function(a,b,d){return!!c.data(a,d[3])},focusable:function(a){return k(a,!isNaN(c.attr(a,"tabindex")))},tabbable:function(a){var b=c.attr(a,
"tabindex"),d=isNaN(b);return(d||b>=0)&&k(a,!d)}});c(function(){var a=document.body,b=a.appendChild(b=document.createElement("div"));c.extend(b.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});c.support.minHeight=b.offsetHeight===100;c.support.selectstart="onselectstart"in b;a.removeChild(b).style.display="none"});c.extend(c.ui,{plugin:{add:function(a,b,d){a=c.ui[a].prototype;for(var e in d){a.plugins[e]=a.plugins[e]||[];a.plugins[e].push([b,d[e]])}},call:function(a,b,d){if((b=a.plugins[b])&&
a.element[0].parentNode)for(var e=0;e<b.length;e++)a.options[b[e][0]]&&b[e][1].apply(a.element,d)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(a,b){if(c(a).css("overflow")==="hidden")return false;b=b&&b==="left"?"scrollLeft":"scrollTop";var d=false;if(a[b]>0)return true;a[b]=1;d=a[b]>0;a[b]=0;return d},isOverAxis:function(a,b,d){return a>b&&a<b+d},isOver:function(a,b,d,e,h,i){return c.ui.isOverAxis(a,d,h)&&
c.ui.isOverAxis(b,e,i)}})}})(jQuery);
;/*!
 * jQuery UI Widget 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(b,j){if(b.cleanData){var k=b.cleanData;b.cleanData=function(a){for(var c=0,d;(d=a[c])!=null;c++)try{b(d).triggerHandler("remove")}catch(e){}k(a)}}else{var l=b.fn.remove;b.fn.remove=function(a,c){return this.each(function(){if(!c)if(!a||b.filter(a,[this]).length)b("*",this).add([this]).each(function(){try{b(this).triggerHandler("remove")}catch(d){}});return l.call(b(this),a,c)})}}b.widget=function(a,c,d){var e=a.split(".")[0],f;a=a.split(".")[1];f=e+"-"+a;if(!d){d=c;c=b.Widget}b.expr[":"][f]=
function(h){return!!b.data(h,a)};b[e]=b[e]||{};b[e][a]=function(h,g){arguments.length&&this._createWidget(h,g)};c=new c;c.options=b.extend(true,{},c.options);b[e][a].prototype=b.extend(true,c,{namespace:e,widgetName:a,widgetEventPrefix:b[e][a].prototype.widgetEventPrefix||a,widgetBaseClass:f},d);b.widget.bridge(a,b[e][a])};b.widget.bridge=function(a,c){b.fn[a]=function(d){var e=typeof d==="string",f=Array.prototype.slice.call(arguments,1),h=this;d=!e&&f.length?b.extend.apply(null,[true,d].concat(f)):
d;if(e&&d.charAt(0)==="_")return h;e?this.each(function(){var g=b.data(this,a),i=g&&b.isFunction(g[d])?g[d].apply(g,f):g;if(i!==g&&i!==j){h=i;return false}}):this.each(function(){var g=b.data(this,a);g?g.option(d||{})._init():b.data(this,a,new c(d,this))});return h}};b.Widget=function(a,c){arguments.length&&this._createWidget(a,c)};b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(a,c){b.data(c,this.widgetName,this);this.element=b(c);this.options=
b.extend(true,{},this.options,this._getCreateOptions(),a);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()});this._create();this._trigger("create");this._init()},_getCreateOptions:function(){return b.metadata&&b.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+
"-disabled ui-state-disabled")},widget:function(){return this.element},option:function(a,c){var d=a;if(arguments.length===0)return b.extend({},this.options);if(typeof a==="string"){if(c===j)return this.options[a];d={};d[a]=c}this._setOptions(d);return this},_setOptions:function(a){var c=this;b.each(a,function(d,e){c._setOption(d,e)});return this},_setOption:function(a,c){this.options[a]=c;if(a==="disabled")this.widget()[c?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",
c);return this},enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_trigger:function(a,c,d){var e=this.options[a];c=b.Event(c);c.type=(a===this.widgetEventPrefix?a:this.widgetEventPrefix+a).toLowerCase();d=d||{};if(c.originalEvent){a=b.event.props.length;for(var f;a;){f=b.event.props[--a];c[f]=c.originalEvent[f]}}this.element.trigger(c,d);return!(b.isFunction(e)&&e.call(this.element[0],c,d)===false||c.isDefaultPrevented())}}})(jQuery);
;/*!
 * jQuery UI Mouse 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends:
 *	jquery.ui.widget.js
 */
(function(b){var d=false;b(document).mouseup(function(){d=false});b.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var a=this;this.element.bind("mousedown."+this.widgetName,function(c){return a._mouseDown(c)}).bind("click."+this.widgetName,function(c){if(true===b.data(c.target,a.widgetName+".preventClickEvent")){b.removeData(c.target,a.widgetName+".preventClickEvent");c.stopImmediatePropagation();return false}});this.started=false},_mouseDestroy:function(){this.element.unbind("."+
this.widgetName)},_mouseDown:function(a){if(!d){this._mouseStarted&&this._mouseUp(a);this._mouseDownEvent=a;var c=this,f=a.which==1,g=typeof this.options.cancel=="string"&&a.target.nodeName?b(a.target).closest(this.options.cancel).length:false;if(!f||g||!this._mouseCapture(a))return true;this.mouseDelayMet=!this.options.delay;if(!this.mouseDelayMet)this._mouseDelayTimer=setTimeout(function(){c.mouseDelayMet=true},this.options.delay);if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a)){this._mouseStarted=
this._mouseStart(a)!==false;if(!this._mouseStarted){a.preventDefault();return true}}true===b.data(a.target,this.widgetName+".preventClickEvent")&&b.removeData(a.target,this.widgetName+".preventClickEvent");this._mouseMoveDelegate=function(e){return c._mouseMove(e)};this._mouseUpDelegate=function(e){return c._mouseUp(e)};b(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);a.preventDefault();return d=true}},_mouseMove:function(a){if(b.browser.msie&&
!(document.documentMode>=9)&&!a.button)return this._mouseUp(a);if(this._mouseStarted){this._mouseDrag(a);return a.preventDefault()}if(this._mouseDistanceMet(a)&&this._mouseDelayMet(a))(this._mouseStarted=this._mouseStart(this._mouseDownEvent,a)!==false)?this._mouseDrag(a):this._mouseUp(a);return!this._mouseStarted},_mouseUp:function(a){b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);if(this._mouseStarted){this._mouseStarted=
false;a.target==this._mouseDownEvent.target&&b.data(a.target,this.widgetName+".preventClickEvent",true);this._mouseStop(a)}return false},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return true}})})(jQuery);
;/*
 * jQuery UI Position 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Position
 */
(function(c){c.ui=c.ui||{};var n=/left|center|right/,o=/top|center|bottom/,t=c.fn.position,u=c.fn.offset;c.fn.position=function(b){if(!b||!b.of)return t.apply(this,arguments);b=c.extend({},b);var a=c(b.of),d=a[0],g=(b.collision||"flip").split(" "),e=b.offset?b.offset.split(" "):[0,0],h,k,j;if(d.nodeType===9){h=a.width();k=a.height();j={top:0,left:0}}else if(d.setTimeout){h=a.width();k=a.height();j={top:a.scrollTop(),left:a.scrollLeft()}}else if(d.preventDefault){b.at="left top";h=k=0;j={top:b.of.pageY,
left:b.of.pageX}}else{h=a.outerWidth();k=a.outerHeight();j=a.offset()}c.each(["my","at"],function(){var f=(b[this]||"").split(" ");if(f.length===1)f=n.test(f[0])?f.concat(["center"]):o.test(f[0])?["center"].concat(f):["center","center"];f[0]=n.test(f[0])?f[0]:"center";f[1]=o.test(f[1])?f[1]:"center";b[this]=f});if(g.length===1)g[1]=g[0];e[0]=parseInt(e[0],10)||0;if(e.length===1)e[1]=e[0];e[1]=parseInt(e[1],10)||0;if(b.at[0]==="right")j.left+=h;else if(b.at[0]==="center")j.left+=h/2;if(b.at[1]==="bottom")j.top+=
k;else if(b.at[1]==="center")j.top+=k/2;j.left+=e[0];j.top+=e[1];return this.each(function(){var f=c(this),l=f.outerWidth(),m=f.outerHeight(),p=parseInt(c.curCSS(this,"marginLeft",true))||0,q=parseInt(c.curCSS(this,"marginTop",true))||0,v=l+p+(parseInt(c.curCSS(this,"marginRight",true))||0),w=m+q+(parseInt(c.curCSS(this,"marginBottom",true))||0),i=c.extend({},j),r;if(b.my[0]==="right")i.left-=l;else if(b.my[0]==="center")i.left-=l/2;if(b.my[1]==="bottom")i.top-=m;else if(b.my[1]==="center")i.top-=
m/2;i.left=Math.round(i.left);i.top=Math.round(i.top);r={left:i.left-p,top:i.top-q};c.each(["left","top"],function(s,x){c.ui.position[g[s]]&&c.ui.position[g[s]][x](i,{targetWidth:h,targetHeight:k,elemWidth:l,elemHeight:m,collisionPosition:r,collisionWidth:v,collisionHeight:w,offset:e,my:b.my,at:b.at})});c.fn.bgiframe&&f.bgiframe();f.offset(c.extend(i,{using:b.using}))})};c.ui.position={fit:{left:function(b,a){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();b.left=
d>0?b.left-d:Math.max(b.left-a.collisionPosition.left,b.left)},top:function(b,a){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();b.top=d>0?b.top-d:Math.max(b.top-a.collisionPosition.top,b.top)}},flip:{left:function(b,a){if(a.at[0]!=="center"){var d=c(window);d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();var g=a.my[0]==="left"?-a.elemWidth:a.my[0]==="right"?a.elemWidth:0,e=a.at[0]==="left"?a.targetWidth:-a.targetWidth,h=-2*a.offset[0];b.left+=
a.collisionPosition.left<0?g+e+h:d>0?g+e+h:0}},top:function(b,a){if(a.at[1]!=="center"){var d=c(window);d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();var g=a.my[1]==="top"?-a.elemHeight:a.my[1]==="bottom"?a.elemHeight:0,e=a.at[1]==="top"?a.targetHeight:-a.targetHeight,h=-2*a.offset[1];b.top+=a.collisionPosition.top<0?g+e+h:d>0?g+e+h:0}}}};if(!c.offset.setOffset){c.offset.setOffset=function(b,a){if(/static/.test(c.curCSS(b,"position")))b.style.position="relative";var d=c(b),
g=d.offset(),e=parseInt(c.curCSS(b,"top",true),10)||0,h=parseInt(c.curCSS(b,"left",true),10)||0;g={top:a.top-g.top+e,left:a.left-g.left+h};"using"in a?a.using.call(b,g):d.css(g)};c.fn.offset=function(b){var a=this[0];if(!a||!a.ownerDocument)return null;if(b)return this.each(function(){c.offset.setOffset(this,b)});return u.call(this)}}})(jQuery);
;/*
 * jQuery UI Draggable 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.draggable",d.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:true,appendTo:"parent",axis:false,connectToSortable:false,containment:false,cursor:"auto",cursorAt:false,grid:false,handle:false,helper:"original",iframeFix:false,opacity:false,refreshPositions:false,revert:false,revertDuration:500,scope:"default",scroll:true,scrollSensitivity:20,scrollSpeed:20,snap:false,snapMode:"both",snapTolerance:20,stack:false,zIndex:false},_create:function(){if(this.options.helper==
"original"&&!/^(?:r|a|f)/.test(this.element.css("position")))this.element[0].style.position="relative";this.options.addClasses&&this.element.addClass("ui-draggable");this.options.disabled&&this.element.addClass("ui-draggable-disabled");this._mouseInit()},destroy:function(){if(this.element.data("draggable")){this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy();return this}},_mouseCapture:function(a){var b=
this.options;if(this.helper||b.disabled||d(a.target).is(".ui-resizable-handle"))return false;this.handle=this._getHandle(a);if(!this.handle)return false;if(b.iframeFix)d(b.iframeFix===true?"iframe":b.iframeFix).each(function(){d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1E3}).css(d(this).offset()).appendTo("body")});return true},_mouseStart:function(a){var b=this.options;
this.helper=this._createHelper(a);this._cacheHelperProportions();if(d.ui.ddmanager)d.ui.ddmanager.current=this;this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});
this.originalPosition=this.position=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);b.containment&&this._setContainment();if(this._trigger("start",a)===false){this._clear();return false}this._cacheHelperProportions();d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.helper.addClass("ui-draggable-dragging");this._mouseDrag(a,true);d.ui.ddmanager&&d.ui.ddmanager.dragStart(this,a);return true},
_mouseDrag:function(a,b){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!b){b=this._uiHash();if(this._trigger("drag",a,b)===false){this._mouseUp({});return false}this.position=b.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);return false},_mouseStop:function(a){var b=
false;if(d.ui.ddmanager&&!this.options.dropBehaviour)b=d.ui.ddmanager.drop(this,a);if(this.dropped){b=this.dropped;this.dropped=false}if((!this.element[0]||!this.element[0].parentNode)&&this.options.helper=="original")return false;if(this.options.revert=="invalid"&&!b||this.options.revert=="valid"&&b||this.options.revert===true||d.isFunction(this.options.revert)&&this.options.revert.call(this.element,b)){var c=this;d(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,
10),function(){c._trigger("stop",a)!==false&&c._clear()})}else this._trigger("stop",a)!==false&&this._clear();return false},_mouseUp:function(a){this.options.iframeFix===true&&d("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)});d.ui.ddmanager&&d.ui.ddmanager.dragStop(this,a);return d.ui.mouse.prototype._mouseUp.call(this,a)},cancel:function(){this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear();return this},_getHandle:function(a){var b=!this.options.handle||
!d(this.options.handle,this.element).length?true:false;d(this.options.handle,this.element).find("*").andSelf().each(function(){if(this==a.target)b=true});return b},_createHelper:function(a){var b=this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a])):b.helper=="clone"?this.element.clone().removeAttr("id"):this.element;a.parents("body").length||a.appendTo(b.appendTo=="parent"?this.element[0].parentNode:b.appendTo);a[0]!=this.element[0]&&!/(fixed|absolute)/.test(a.css("position"))&&
a.css("position","absolute");return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=
this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a={top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),
10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),
10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[a.containment=="document"?0:d(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,a.containment=="document"?0:d(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,
(a.containment=="document"?0:d(window).scrollLeft())+d(a.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a.containment=="document"?0:d(window).scrollTop())+(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)&&a.containment.constructor!=Array){a=d(a.containment);var b=a[0];if(b){a.offset();var c=d(b).css("overflow")!=
"hidden";this.containment=[(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0),(parseInt(d(b).css("borderTopWidth"),10)||0)+(parseInt(d(b).css("paddingTop"),10)||0),(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),
10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom];this.relative_container=a}}else if(a.containment.constructor==Array)this.containment=a.containment},_convertPositionTo:function(a,b){if(!b)b=this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName);return{top:b.top+
this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&
!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,f=/(html|body)/i.test(c[0].tagName),e=a.pageX,h=a.pageY;if(this.originalPosition){var g;if(this.containment){if(this.relative_container){g=this.relative_container.offset();g=[this.containment[0]+g.left,this.containment[1]+g.top,this.containment[2]+g.left,this.containment[3]+g.top]}else g=this.containment;if(a.pageX-this.offset.click.left<g[0])e=g[0]+this.offset.click.left;
if(a.pageY-this.offset.click.top<g[1])h=g[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>g[2])e=g[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>g[3])h=g[3]+this.offset.click.top}if(b.grid){h=b.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/b.grid[1])*b.grid[1]:this.originalPageY;h=g?!(h-this.offset.click.top<g[1]||h-this.offset.click.top>g[3])?h:!(h-this.offset.click.top<g[1])?h-b.grid[1]:h+b.grid[1]:h;e=b.grid[0]?this.originalPageX+Math.round((e-this.originalPageX)/
b.grid[0])*b.grid[0]:this.originalPageX;e=g?!(e-this.offset.click.left<g[0]||e-this.offset.click.left>g[2])?e:!(e-this.offset.click.left<g[0])?e-b.grid[0]:e+b.grid[0]:e}}return{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&d.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():f?0:c.scrollTop()),left:e-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&d.browser.version<
526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():f?0:c.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove();this.helper=null;this.cancelHelperRemoval=false},_trigger:function(a,b,c){c=c||this._uiHash();d.ui.plugin.call(this,a,[b,c]);if(a=="drag")this.positionAbs=this._convertPositionTo("absolute");return d.Widget.prototype._trigger.call(this,a,b,
c)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});d.extend(d.ui.draggable,{version:"1.8.16"});d.ui.plugin.add("draggable","connectToSortable",{start:function(a,b){var c=d(this).data("draggable"),f=c.options,e=d.extend({},b,{item:c.element});c.sortables=[];d(f.connectToSortable).each(function(){var h=d.data(this,"sortable");if(h&&!h.options.disabled){c.sortables.push({instance:h,shouldRevert:h.options.revert});
h.refreshPositions();h._trigger("activate",a,e)}})},stop:function(a,b){var c=d(this).data("draggable"),f=d.extend({},b,{item:c.element});d.each(c.sortables,function(){if(this.instance.isOver){this.instance.isOver=0;c.cancelHelperRemoval=true;this.instance.cancelHelperRemoval=false;if(this.shouldRevert)this.instance.options.revert=true;this.instance._mouseStop(a);this.instance.options.helper=this.instance.options._helper;c.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})}else{this.instance.cancelHelperRemoval=
false;this.instance._trigger("deactivate",a,f)}})},drag:function(a,b){var c=d(this).data("draggable"),f=this;d.each(c.sortables,function(){this.instance.positionAbs=c.positionAbs;this.instance.helperProportions=c.helperProportions;this.instance.offset.click=c.offset.click;if(this.instance._intersectsWith(this.instance.containerCache)){if(!this.instance.isOver){this.instance.isOver=1;this.instance.currentItem=d(f).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",true);
this.instance.options._helper=this.instance.options.helper;this.instance.options.helper=function(){return b.helper[0]};a.target=this.instance.currentItem[0];this.instance._mouseCapture(a,true);this.instance._mouseStart(a,true,true);this.instance.offset.click.top=c.offset.click.top;this.instance.offset.click.left=c.offset.click.left;this.instance.offset.parent.left-=c.offset.parent.left-this.instance.offset.parent.left;this.instance.offset.parent.top-=c.offset.parent.top-this.instance.offset.parent.top;
c._trigger("toSortable",a);c.dropped=this.instance.element;c.currentItem=c.element;this.instance.fromOutside=c}this.instance.currentItem&&this.instance._mouseDrag(a)}else if(this.instance.isOver){this.instance.isOver=0;this.instance.cancelHelperRemoval=true;this.instance.options.revert=false;this.instance._trigger("out",a,this.instance._uiHash(this.instance));this.instance._mouseStop(a,true);this.instance.options.helper=this.instance.options._helper;this.instance.currentItem.remove();this.instance.placeholder&&
this.instance.placeholder.remove();c._trigger("fromSortable",a);c.dropped=false}})}});d.ui.plugin.add("draggable","cursor",{start:function(){var a=d("body"),b=d(this).data("draggable").options;if(a.css("cursor"))b._cursor=a.css("cursor");a.css("cursor",b.cursor)},stop:function(){var a=d(this).data("draggable").options;a._cursor&&d("body").css("cursor",a._cursor)}});d.ui.plugin.add("draggable","opacity",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("opacity"))b._opacity=
a.css("opacity");a.css("opacity",b.opacity)},stop:function(a,b){a=d(this).data("draggable").options;a._opacity&&d(b.helper).css("opacity",a._opacity)}});d.ui.plugin.add("draggable","scroll",{start:function(){var a=d(this).data("draggable");if(a.scrollParent[0]!=document&&a.scrollParent[0].tagName!="HTML")a.overflowOffset=a.scrollParent.offset()},drag:function(a){var b=d(this).data("draggable"),c=b.options,f=false;if(b.scrollParent[0]!=document&&b.scrollParent[0].tagName!="HTML"){if(!c.axis||c.axis!=
"x")if(b.overflowOffset.top+b.scrollParent[0].offsetHeight-a.pageY<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop+c.scrollSpeed;else if(a.pageY-b.overflowOffset.top<c.scrollSensitivity)b.scrollParent[0].scrollTop=f=b.scrollParent[0].scrollTop-c.scrollSpeed;if(!c.axis||c.axis!="y")if(b.overflowOffset.left+b.scrollParent[0].offsetWidth-a.pageX<c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft+c.scrollSpeed;else if(a.pageX-b.overflowOffset.left<
c.scrollSensitivity)b.scrollParent[0].scrollLeft=f=b.scrollParent[0].scrollLeft-c.scrollSpeed}else{if(!c.axis||c.axis!="x")if(a.pageY-d(document).scrollTop()<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()-c.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<c.scrollSensitivity)f=d(document).scrollTop(d(document).scrollTop()+c.scrollSpeed);if(!c.axis||c.axis!="y")if(a.pageX-d(document).scrollLeft()<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()-
c.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<c.scrollSensitivity)f=d(document).scrollLeft(d(document).scrollLeft()+c.scrollSpeed)}f!==false&&d.ui.ddmanager&&!c.dropBehaviour&&d.ui.ddmanager.prepareOffsets(b,a)}});d.ui.plugin.add("draggable","snap",{start:function(){var a=d(this).data("draggable"),b=a.options;a.snapElements=[];d(b.snap.constructor!=String?b.snap.items||":data(draggable)":b.snap).each(function(){var c=d(this),f=c.offset();this!=a.element[0]&&a.snapElements.push({item:this,
width:c.outerWidth(),height:c.outerHeight(),top:f.top,left:f.left})})},drag:function(a,b){for(var c=d(this).data("draggable"),f=c.options,e=f.snapTolerance,h=b.offset.left,g=h+c.helperProportions.width,n=b.offset.top,o=n+c.helperProportions.height,i=c.snapElements.length-1;i>=0;i--){var j=c.snapElements[i].left,l=j+c.snapElements[i].width,k=c.snapElements[i].top,m=k+c.snapElements[i].height;if(j-e<h&&h<l+e&&k-e<n&&n<m+e||j-e<h&&h<l+e&&k-e<o&&o<m+e||j-e<g&&g<l+e&&k-e<n&&n<m+e||j-e<g&&g<l+e&&k-e<o&&
o<m+e){if(f.snapMode!="inner"){var p=Math.abs(k-o)<=e,q=Math.abs(m-n)<=e,r=Math.abs(j-g)<=e,s=Math.abs(l-h)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k-c.helperProportions.height,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j-c.helperProportions.width}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l}).left-c.margins.left}var t=
p||q||r||s;if(f.snapMode!="outer"){p=Math.abs(k-n)<=e;q=Math.abs(m-o)<=e;r=Math.abs(j-h)<=e;s=Math.abs(l-g)<=e;if(p)b.position.top=c._convertPositionTo("relative",{top:k,left:0}).top-c.margins.top;if(q)b.position.top=c._convertPositionTo("relative",{top:m-c.helperProportions.height,left:0}).top-c.margins.top;if(r)b.position.left=c._convertPositionTo("relative",{top:0,left:j}).left-c.margins.left;if(s)b.position.left=c._convertPositionTo("relative",{top:0,left:l-c.helperProportions.width}).left-c.margins.left}if(!c.snapElements[i].snapping&&
(p||q||r||s||t))c.options.snap.snap&&c.options.snap.snap.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=p||q||r||s||t}else{c.snapElements[i].snapping&&c.options.snap.release&&c.options.snap.release.call(c.element,a,d.extend(c._uiHash(),{snapItem:c.snapElements[i].item}));c.snapElements[i].snapping=false}}}});d.ui.plugin.add("draggable","stack",{start:function(){var a=d(this).data("draggable").options;a=d.makeArray(d(a.stack)).sort(function(c,f){return(parseInt(d(c).css("zIndex"),
10)||0)-(parseInt(d(f).css("zIndex"),10)||0)});if(a.length){var b=parseInt(a[0].style.zIndex)||0;d(a).each(function(c){this.style.zIndex=b+c});this[0].style.zIndex=b+a.length}}});d.ui.plugin.add("draggable","zIndex",{start:function(a,b){a=d(b.helper);b=d(this).data("draggable").options;if(a.css("zIndex"))b._zIndex=a.css("zIndex");a.css("zIndex",b.zIndex)},stop:function(a,b){a=d(this).data("draggable").options;a._zIndex&&d(b.helper).css("zIndex",a._zIndex)}})})(jQuery);
;/*
 * jQuery UI Droppable 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Droppables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.mouse.js
 *	jquery.ui.draggable.js
 */
(function(d){d.widget("ui.droppable",{widgetEventPrefix:"drop",options:{accept:"*",activeClass:false,addClasses:true,greedy:false,hoverClass:false,scope:"default",tolerance:"intersect"},_create:function(){var a=this.options,b=a.accept;this.isover=0;this.isout=1;this.accept=d.isFunction(b)?b:function(c){return c.is(b)};this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};d.ui.ddmanager.droppables[a.scope]=d.ui.ddmanager.droppables[a.scope]||[];d.ui.ddmanager.droppables[a.scope].push(this);
a.addClasses&&this.element.addClass("ui-droppable")},destroy:function(){for(var a=d.ui.ddmanager.droppables[this.options.scope],b=0;b<a.length;b++)a[b]==this&&a.splice(b,1);this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");return this},_setOption:function(a,b){if(a=="accept")this.accept=d.isFunction(b)?b:function(c){return c.is(b)};d.Widget.prototype._setOption.apply(this,arguments)},_activate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&
this.element.addClass(this.options.activeClass);b&&this._trigger("activate",a,this.ui(b))},_deactivate:function(a){var b=d.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass);b&&this._trigger("deactivate",a,this.ui(b))},_over:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.addClass(this.options.hoverClass);
this._trigger("over",a,this.ui(b))}},_out:function(a){var b=d.ui.ddmanager.current;if(!(!b||(b.currentItem||b.element)[0]==this.element[0]))if(this.accept.call(this.element[0],b.currentItem||b.element)){this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("out",a,this.ui(b))}},_drop:function(a,b){var c=b||d.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return false;var e=false;this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var g=
d.data(this,"droppable");if(g.options.greedy&&!g.options.disabled&&g.options.scope==c.options.scope&&g.accept.call(g.element[0],c.currentItem||c.element)&&d.ui.intersect(c,d.extend(g,{offset:g.element.offset()}),g.options.tolerance)){e=true;return false}});if(e)return false;if(this.accept.call(this.element[0],c.currentItem||c.element)){this.options.activeClass&&this.element.removeClass(this.options.activeClass);this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);this._trigger("drop",
a,this.ui(c));return this.element}return false},ui:function(a){return{draggable:a.currentItem||a.element,helper:a.helper,position:a.position,offset:a.positionAbs}}});d.extend(d.ui.droppable,{version:"1.8.16"});d.ui.intersect=function(a,b,c){if(!b.offset)return false;var e=(a.positionAbs||a.position.absolute).left,g=e+a.helperProportions.width,f=(a.positionAbs||a.position.absolute).top,h=f+a.helperProportions.height,i=b.offset.left,k=i+b.proportions.width,j=b.offset.top,l=j+b.proportions.height;
switch(c){case "fit":return i<=e&&g<=k&&j<=f&&h<=l;case "intersect":return i<e+a.helperProportions.width/2&&g-a.helperProportions.width/2<k&&j<f+a.helperProportions.height/2&&h-a.helperProportions.height/2<l;case "pointer":return d.ui.isOver((a.positionAbs||a.position.absolute).top+(a.clickOffset||a.offset.click).top,(a.positionAbs||a.position.absolute).left+(a.clickOffset||a.offset.click).left,j,i,b.proportions.height,b.proportions.width);case "touch":return(f>=j&&f<=l||h>=j&&h<=l||f<j&&h>l)&&(e>=
i&&e<=k||g>=i&&g<=k||e<i&&g>k);default:return false}};d.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(a,b){var c=d.ui.ddmanager.droppables[a.options.scope]||[],e=b?b.type:null,g=(a.currentItem||a.element).find(":data(droppable)").andSelf(),f=0;a:for(;f<c.length;f++)if(!(c[f].options.disabled||a&&!c[f].accept.call(c[f].element[0],a.currentItem||a.element))){for(var h=0;h<g.length;h++)if(g[h]==c[f].element[0]){c[f].proportions.height=0;continue a}c[f].visible=c[f].element.css("display")!=
"none";if(c[f].visible){e=="mousedown"&&c[f]._activate.call(c[f],b);c[f].offset=c[f].element.offset();c[f].proportions={width:c[f].element[0].offsetWidth,height:c[f].element[0].offsetHeight}}}},drop:function(a,b){var c=false;d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(this.options){if(!this.options.disabled&&this.visible&&d.ui.intersect(a,this,this.options.tolerance))c=c||this._drop.call(this,b);if(!this.options.disabled&&this.visible&&this.accept.call(this.element[0],a.currentItem||
a.element)){this.isout=1;this.isover=0;this._deactivate.call(this,b)}}});return c},dragStart:function(a,b){a.element.parents(":not(body,html)").bind("scroll.droppable",function(){a.options.refreshPositions||d.ui.ddmanager.prepareOffsets(a,b)})},drag:function(a,b){a.options.refreshPositions&&d.ui.ddmanager.prepareOffsets(a,b);d.each(d.ui.ddmanager.droppables[a.options.scope]||[],function(){if(!(this.options.disabled||this.greedyChild||!this.visible)){var c=d.ui.intersect(a,this,this.options.tolerance);
if(c=!c&&this.isover==1?"isout":c&&this.isover==0?"isover":null){var e;if(this.options.greedy){var g=this.element.parents(":data(droppable):eq(0)");if(g.length){e=d.data(g[0],"droppable");e.greedyChild=c=="isover"?1:0}}if(e&&c=="isover"){e.isover=0;e.isout=1;e._out.call(e,b)}this[c]=1;this[c=="isout"?"isover":"isout"]=0;this[c=="isover"?"_over":"_out"].call(this,b);if(e&&c=="isout"){e.isout=0;e.isover=1;e._over.call(e,b)}}}})},dragStop:function(a,b){a.element.parents(":not(body,html)").unbind("scroll.droppable");
a.options.refreshPositions||d.ui.ddmanager.prepareOffsets(a,b)}}})(jQuery);
;/*
 * jQuery UI Resizable 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Resizables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(e){e.widget("ui.resizable",e.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:false,animate:false,animateDuration:"slow",animateEasing:"swing",aspectRatio:false,autoHide:false,containment:false,ghost:false,grid:false,handles:"e,s,se",helper:false,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1E3},_create:function(){var b=this,a=this.options;this.element.addClass("ui-resizable");e.extend(this,{_aspectRatio:!!a.aspectRatio,aspectRatio:a.aspectRatio,originalElement:this.element,
_proportionallyResizeElements:[],_helper:a.helper||a.ghost||a.animate?a.helper||"ui-resizable-helper":null});if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)){/relative/.test(this.element.css("position"))&&e.browser.opera&&this.element.css({position:"relative",top:"auto",left:"auto"});this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),
top:this.element.css("top"),left:this.element.css("left")}));this.element=this.element.parent().data("resizable",this.element.data("resizable"));this.elementIsWrapper=true;this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")});this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0});this.originalResizeStyle=
this.originalElement.css("resize");this.originalElement.css("resize","none");this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"}));this.originalElement.css({margin:this.originalElement.css("margin")});this._proportionallyResize()}this.handles=a.handles||(!e(".ui-resizable-handle",this.element).length?"e,s,se":{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",
nw:".ui-resizable-nw"});if(this.handles.constructor==String){if(this.handles=="all")this.handles="n,e,s,w,se,sw,ne,nw";var c=this.handles.split(",");this.handles={};for(var d=0;d<c.length;d++){var f=e.trim(c[d]),g=e('<div class="ui-resizable-handle '+("ui-resizable-"+f)+'"></div>');/sw|se|ne|nw/.test(f)&&g.css({zIndex:++a.zIndex});"se"==f&&g.addClass("ui-icon ui-icon-gripsmall-diagonal-se");this.handles[f]=".ui-resizable-"+f;this.element.append(g)}}this._renderAxis=function(h){h=h||this.element;for(var i in this.handles){if(this.handles[i].constructor==
String)this.handles[i]=e(this.handles[i],this.element).show();if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var j=e(this.handles[i],this.element),l=0;l=/sw|ne|nw|se|n|s/.test(i)?j.outerHeight():j.outerWidth();j=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");h.css(j,l);this._proportionallyResize()}e(this.handles[i])}};this._renderAxis(this.element);this._handles=e(".ui-resizable-handle",this.element).disableSelection();
this._handles.mouseover(function(){if(!b.resizing){if(this.className)var h=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);b.axis=h&&h[1]?h[1]:"se"}});if(a.autoHide){this._handles.hide();e(this.element).addClass("ui-resizable-autohide").hover(function(){if(!a.disabled){e(this).removeClass("ui-resizable-autohide");b._handles.show()}},function(){if(!a.disabled)if(!b.resizing){e(this).addClass("ui-resizable-autohide");b._handles.hide()}})}this._mouseInit()},destroy:function(){this._mouseDestroy();
var b=function(c){e(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){b(this.element);var a=this.element;a.after(this.originalElement.css({position:a.css("position"),width:a.outerWidth(),height:a.outerHeight(),top:a.css("top"),left:a.css("left")})).remove()}this.originalElement.css("resize",this.originalResizeStyle);b(this.originalElement);return this},_mouseCapture:function(b){var a=
false;for(var c in this.handles)if(e(this.handles[c])[0]==b.target)a=true;return!this.options.disabled&&a},_mouseStart:function(b){var a=this.options,c=this.element.position(),d=this.element;this.resizing=true;this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()};if(d.is(".ui-draggable")||/absolute/.test(d.css("position")))d.css({position:"absolute",top:c.top,left:c.left});e.browser.opera&&/relative/.test(d.css("position"))&&d.css({position:"relative",top:"auto",left:"auto"});
this._renderProxy();c=m(this.helper.css("left"));var f=m(this.helper.css("top"));if(a.containment){c+=e(a.containment).scrollLeft()||0;f+=e(a.containment).scrollTop()||0}this.offset=this.helper.offset();this.position={left:c,top:f};this.size=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalSize=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalPosition={left:c,top:f};this.sizeDiff=
{width:d.outerWidth()-d.width(),height:d.outerHeight()-d.height()};this.originalMousePosition={left:b.pageX,top:b.pageY};this.aspectRatio=typeof a.aspectRatio=="number"?a.aspectRatio:this.originalSize.width/this.originalSize.height||1;a=e(".ui-resizable-"+this.axis).css("cursor");e("body").css("cursor",a=="auto"?this.axis+"-resize":a);d.addClass("ui-resizable-resizing");this._propagate("start",b);return true},_mouseDrag:function(b){var a=this.helper,c=this.originalMousePosition,d=this._change[this.axis];
if(!d)return false;c=d.apply(this,[b,b.pageX-c.left||0,b.pageY-c.top||0]);this._updateVirtualBoundaries(b.shiftKey);if(this._aspectRatio||b.shiftKey)c=this._updateRatio(c,b);c=this._respectSize(c,b);this._propagate("resize",b);a.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"});!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize();this._updateCache(c);this._trigger("resize",b,this.ui());return false},
_mouseStop:function(b){this.resizing=false;var a=this.options,c=this;if(this._helper){var d=this._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName);d=f&&e.ui.hasScroll(d[0],"left")?0:c.sizeDiff.height;f=f?0:c.sizeDiff.width;f={width:c.helper.width()-f,height:c.helper.height()-d};d=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null;var g=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null;a.animate||this.element.css(e.extend(f,
{top:g,left:d}));c.helper.height(c.size.height);c.helper.width(c.size.width);this._helper&&!a.animate&&this._proportionallyResize()}e("body").css("cursor","auto");this.element.removeClass("ui-resizable-resizing");this._propagate("stop",b);this._helper&&this.helper.remove();return false},_updateVirtualBoundaries:function(b){var a=this.options,c,d,f;a={minWidth:k(a.minWidth)?a.minWidth:0,maxWidth:k(a.maxWidth)?a.maxWidth:Infinity,minHeight:k(a.minHeight)?a.minHeight:0,maxHeight:k(a.maxHeight)?a.maxHeight:
Infinity};if(this._aspectRatio||b){b=a.minHeight*this.aspectRatio;d=a.minWidth/this.aspectRatio;c=a.maxHeight*this.aspectRatio;f=a.maxWidth/this.aspectRatio;if(b>a.minWidth)a.minWidth=b;if(d>a.minHeight)a.minHeight=d;if(c<a.maxWidth)a.maxWidth=c;if(f<a.maxHeight)a.maxHeight=f}this._vBoundaries=a},_updateCache:function(b){this.offset=this.helper.offset();if(k(b.left))this.position.left=b.left;if(k(b.top))this.position.top=b.top;if(k(b.height))this.size.height=b.height;if(k(b.width))this.size.width=
b.width},_updateRatio:function(b){var a=this.position,c=this.size,d=this.axis;if(k(b.height))b.width=b.height*this.aspectRatio;else if(k(b.width))b.height=b.width/this.aspectRatio;if(d=="sw"){b.left=a.left+(c.width-b.width);b.top=null}if(d=="nw"){b.top=a.top+(c.height-b.height);b.left=a.left+(c.width-b.width)}return b},_respectSize:function(b){var a=this._vBoundaries,c=this.axis,d=k(b.width)&&a.maxWidth&&a.maxWidth<b.width,f=k(b.height)&&a.maxHeight&&a.maxHeight<b.height,g=k(b.width)&&a.minWidth&&
a.minWidth>b.width,h=k(b.height)&&a.minHeight&&a.minHeight>b.height;if(g)b.width=a.minWidth;if(h)b.height=a.minHeight;if(d)b.width=a.maxWidth;if(f)b.height=a.maxHeight;var i=this.originalPosition.left+this.originalSize.width,j=this.position.top+this.size.height,l=/sw|nw|w/.test(c);c=/nw|ne|n/.test(c);if(g&&l)b.left=i-a.minWidth;if(d&&l)b.left=i-a.maxWidth;if(h&&c)b.top=j-a.minHeight;if(f&&c)b.top=j-a.maxHeight;if((a=!b.width&&!b.height)&&!b.left&&b.top)b.top=null;else if(a&&!b.top&&b.left)b.left=
null;return b},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var b=this.helper||this.element,a=0;a<this._proportionallyResizeElements.length;a++){var c=this._proportionallyResizeElements[a];if(!this.borderDif){var d=[c.css("borderTopWidth"),c.css("borderRightWidth"),c.css("borderBottomWidth"),c.css("borderLeftWidth")],f=[c.css("paddingTop"),c.css("paddingRight"),c.css("paddingBottom"),c.css("paddingLeft")];this.borderDif=e.map(d,function(g,h){g=parseInt(g,10)||
0;h=parseInt(f[h],10)||0;return g+h})}e.browser.msie&&(e(b).is(":hidden")||e(b).parents(":hidden").length)||c.css({height:b.height()-this.borderDif[0]-this.borderDif[2]||0,width:b.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var b=this.options;this.elementOffset=this.element.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var a=e.browser.msie&&e.browser.version<7,c=a?1:0;a=a?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+
a,height:this.element.outerHeight()+a,position:"absolute",left:this.elementOffset.left-c+"px",top:this.elementOffset.top-c+"px",zIndex:++b.zIndex});this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(b,a){return{width:this.originalSize.width+a}},w:function(b,a){return{left:this.originalPosition.left+a,width:this.originalSize.width-a}},n:function(b,a,c){return{top:this.originalPosition.top+c,height:this.originalSize.height-c}},s:function(b,a,c){return{height:this.originalSize.height+
c}},se:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,a,c]))},sw:function(b,a,c){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,a,c]))},ne:function(b,a,c){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[b,a,c]))},nw:function(b,a,c){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,a,c]))}},_propagate:function(b,a){e.ui.plugin.call(this,b,[a,this.ui()]);
b!="resize"&&this._trigger(b,a,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}});e.extend(e.ui.resizable,{version:"1.8.16"});e.ui.plugin.add("resizable","alsoResize",{start:function(){var b=e(this).data("resizable").options,a=function(c){e(c).each(function(){var d=e(this);d.data("resizable-alsoresize",{width:parseInt(d.width(),
10),height:parseInt(d.height(),10),left:parseInt(d.css("left"),10),top:parseInt(d.css("top"),10),position:d.css("position")})})};if(typeof b.alsoResize=="object"&&!b.alsoResize.parentNode)if(b.alsoResize.length){b.alsoResize=b.alsoResize[0];a(b.alsoResize)}else e.each(b.alsoResize,function(c){a(c)});else a(b.alsoResize)},resize:function(b,a){var c=e(this).data("resizable");b=c.options;var d=c.originalSize,f=c.originalPosition,g={height:c.size.height-d.height||0,width:c.size.width-d.width||0,top:c.position.top-
f.top||0,left:c.position.left-f.left||0},h=function(i,j){e(i).each(function(){var l=e(this),q=e(this).data("resizable-alsoresize"),p={},r=j&&j.length?j:l.parents(a.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(r,function(n,o){if((n=(q[o]||0)+(g[o]||0))&&n>=0)p[o]=n||null});if(e.browser.opera&&/relative/.test(l.css("position"))){c._revertToRelativePosition=true;l.css({position:"absolute",top:"auto",left:"auto"})}l.css(p)})};typeof b.alsoResize=="object"&&!b.alsoResize.nodeType?
e.each(b.alsoResize,function(i,j){h(i,j)}):h(b.alsoResize)},stop:function(){var b=e(this).data("resizable"),a=b.options,c=function(d){e(d).each(function(){var f=e(this);f.css({position:f.data("resizable-alsoresize").position})})};if(b._revertToRelativePosition){b._revertToRelativePosition=false;typeof a.alsoResize=="object"&&!a.alsoResize.nodeType?e.each(a.alsoResize,function(d){c(d)}):c(a.alsoResize)}e(this).removeData("resizable-alsoresize")}});e.ui.plugin.add("resizable","animate",{stop:function(b){var a=
e(this).data("resizable"),c=a.options,d=a._proportionallyResizeElements,f=d.length&&/textarea/i.test(d[0].nodeName),g=f&&e.ui.hasScroll(d[0],"left")?0:a.sizeDiff.height;f={width:a.size.width-(f?0:a.sizeDiff.width),height:a.size.height-g};g=parseInt(a.element.css("left"),10)+(a.position.left-a.originalPosition.left)||null;var h=parseInt(a.element.css("top"),10)+(a.position.top-a.originalPosition.top)||null;a.element.animate(e.extend(f,h&&g?{top:h,left:g}:{}),{duration:c.animateDuration,easing:c.animateEasing,
step:function(){var i={width:parseInt(a.element.css("width"),10),height:parseInt(a.element.css("height"),10),top:parseInt(a.element.css("top"),10),left:parseInt(a.element.css("left"),10)};d&&d.length&&e(d[0]).css({width:i.width,height:i.height});a._updateCache(i);a._propagate("resize",b)}})}});e.ui.plugin.add("resizable","containment",{start:function(){var b=e(this).data("resizable"),a=b.element,c=b.options.containment;if(a=c instanceof e?c.get(0):/parent/.test(c)?a.parent().get(0):c){b.containerElement=
e(a);if(/document/.test(c)||c==document){b.containerOffset={left:0,top:0};b.containerPosition={left:0,top:0};b.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}}else{var d=e(a),f=[];e(["Top","Right","Left","Bottom"]).each(function(i,j){f[i]=m(d.css("padding"+j))});b.containerOffset=d.offset();b.containerPosition=d.position();b.containerSize={height:d.innerHeight()-f[3],width:d.innerWidth()-f[1]};c=b.containerOffset;
var g=b.containerSize.height,h=b.containerSize.width;h=e.ui.hasScroll(a,"left")?a.scrollWidth:h;g=e.ui.hasScroll(a)?a.scrollHeight:g;b.parentData={element:a,left:c.left,top:c.top,width:h,height:g}}}},resize:function(b){var a=e(this).data("resizable"),c=a.options,d=a.containerOffset,f=a.position;b=a._aspectRatio||b.shiftKey;var g={top:0,left:0},h=a.containerElement;if(h[0]!=document&&/static/.test(h.css("position")))g=d;if(f.left<(a._helper?d.left:0)){a.size.width+=a._helper?a.position.left-d.left:
a.position.left-g.left;if(b)a.size.height=a.size.width/c.aspectRatio;a.position.left=c.helper?d.left:0}if(f.top<(a._helper?d.top:0)){a.size.height+=a._helper?a.position.top-d.top:a.position.top;if(b)a.size.width=a.size.height*c.aspectRatio;a.position.top=a._helper?d.top:0}a.offset.left=a.parentData.left+a.position.left;a.offset.top=a.parentData.top+a.position.top;c=Math.abs((a._helper?a.offset.left-g.left:a.offset.left-g.left)+a.sizeDiff.width);d=Math.abs((a._helper?a.offset.top-g.top:a.offset.top-
d.top)+a.sizeDiff.height);f=a.containerElement.get(0)==a.element.parent().get(0);g=/relative|absolute/.test(a.containerElement.css("position"));if(f&&g)c-=a.parentData.left;if(c+a.size.width>=a.parentData.width){a.size.width=a.parentData.width-c;if(b)a.size.height=a.size.width/a.aspectRatio}if(d+a.size.height>=a.parentData.height){a.size.height=a.parentData.height-d;if(b)a.size.width=a.size.height*a.aspectRatio}},stop:function(){var b=e(this).data("resizable"),a=b.options,c=b.containerOffset,d=b.containerPosition,
f=b.containerElement,g=e(b.helper),h=g.offset(),i=g.outerWidth()-b.sizeDiff.width;g=g.outerHeight()-b.sizeDiff.height;b._helper&&!a.animate&&/relative/.test(f.css("position"))&&e(this).css({left:h.left-d.left-c.left,width:i,height:g});b._helper&&!a.animate&&/static/.test(f.css("position"))&&e(this).css({left:h.left-d.left-c.left,width:i,height:g})}});e.ui.plugin.add("resizable","ghost",{start:function(){var b=e(this).data("resizable"),a=b.options,c=b.size;b.ghost=b.originalElement.clone();b.ghost.css({opacity:0.25,
display:"block",position:"relative",height:c.height,width:c.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof a.ghost=="string"?a.ghost:"");b.ghost.appendTo(b.helper)},resize:function(){var b=e(this).data("resizable");b.ghost&&b.ghost.css({position:"relative",height:b.size.height,width:b.size.width})},stop:function(){var b=e(this).data("resizable");b.ghost&&b.helper&&b.helper.get(0).removeChild(b.ghost.get(0))}});e.ui.plugin.add("resizable","grid",{resize:function(){var b=
e(this).data("resizable"),a=b.options,c=b.size,d=b.originalSize,f=b.originalPosition,g=b.axis;a.grid=typeof a.grid=="number"?[a.grid,a.grid]:a.grid;var h=Math.round((c.width-d.width)/(a.grid[0]||1))*(a.grid[0]||1);a=Math.round((c.height-d.height)/(a.grid[1]||1))*(a.grid[1]||1);if(/^(se|s|e)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a}else if(/^(ne)$/.test(g)){b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}else{if(/^(sw)$/.test(g)){b.size.width=d.width+h;b.size.height=
d.height+a}else{b.size.width=d.width+h;b.size.height=d.height+a;b.position.top=f.top-a}b.position.left=f.left-h}}});var m=function(b){return parseInt(b,10)||0},k=function(b){return!isNaN(parseInt(b,10))}})(jQuery);
;/*
 * jQuery UI Selectable 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Selectables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(e){e.widget("ui.selectable",e.ui.mouse,{options:{appendTo:"body",autoRefresh:true,distance:0,filter:"*",tolerance:"touch"},_create:function(){var c=this;this.element.addClass("ui-selectable");this.dragged=false;var f;this.refresh=function(){f=e(c.options.filter,c.element[0]);f.each(function(){var d=e(this),b=d.offset();e.data(this,"selectable-item",{element:this,$element:d,left:b.left,top:b.top,right:b.left+d.outerWidth(),bottom:b.top+d.outerHeight(),startselected:false,selected:d.hasClass("ui-selected"),
selecting:d.hasClass("ui-selecting"),unselecting:d.hasClass("ui-unselecting")})})};this.refresh();this.selectees=f.addClass("ui-selectee");this._mouseInit();this.helper=e("<div class='ui-selectable-helper'></div>")},destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item");this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");this._mouseDestroy();return this},_mouseStart:function(c){var f=this;this.opos=[c.pageX,
c.pageY];if(!this.options.disabled){var d=this.options;this.selectees=e(d.filter,this.element[0]);this._trigger("start",c);e(d.appendTo).append(this.helper);this.helper.css({left:c.clientX,top:c.clientY,width:0,height:0});d.autoRefresh&&this.refresh();this.selectees.filter(".ui-selected").each(function(){var b=e.data(this,"selectable-item");b.startselected=true;if(!c.metaKey){b.$element.removeClass("ui-selected");b.selected=false;b.$element.addClass("ui-unselecting");b.unselecting=true;f._trigger("unselecting",
c,{unselecting:b.element})}});e(c.target).parents().andSelf().each(function(){var b=e.data(this,"selectable-item");if(b){var g=!c.metaKey||!b.$element.hasClass("ui-selected");b.$element.removeClass(g?"ui-unselecting":"ui-selected").addClass(g?"ui-selecting":"ui-unselecting");b.unselecting=!g;b.selecting=g;(b.selected=g)?f._trigger("selecting",c,{selecting:b.element}):f._trigger("unselecting",c,{unselecting:b.element});return false}})}},_mouseDrag:function(c){var f=this;this.dragged=true;if(!this.options.disabled){var d=
this.options,b=this.opos[0],g=this.opos[1],h=c.pageX,i=c.pageY;if(b>h){var j=h;h=b;b=j}if(g>i){j=i;i=g;g=j}this.helper.css({left:b,top:g,width:h-b,height:i-g});this.selectees.each(function(){var a=e.data(this,"selectable-item");if(!(!a||a.element==f.element[0])){var k=false;if(d.tolerance=="touch")k=!(a.left>h||a.right<b||a.top>i||a.bottom<g);else if(d.tolerance=="fit")k=a.left>b&&a.right<h&&a.top>g&&a.bottom<i;if(k){if(a.selected){a.$element.removeClass("ui-selected");a.selected=false}if(a.unselecting){a.$element.removeClass("ui-unselecting");
a.unselecting=false}if(!a.selecting){a.$element.addClass("ui-selecting");a.selecting=true;f._trigger("selecting",c,{selecting:a.element})}}else{if(a.selecting)if(c.metaKey&&a.startselected){a.$element.removeClass("ui-selecting");a.selecting=false;a.$element.addClass("ui-selected");a.selected=true}else{a.$element.removeClass("ui-selecting");a.selecting=false;if(a.startselected){a.$element.addClass("ui-unselecting");a.unselecting=true}f._trigger("unselecting",c,{unselecting:a.element})}if(a.selected)if(!c.metaKey&&
!a.startselected){a.$element.removeClass("ui-selected");a.selected=false;a.$element.addClass("ui-unselecting");a.unselecting=true;f._trigger("unselecting",c,{unselecting:a.element})}}}});return false}},_mouseStop:function(c){var f=this;this.dragged=false;e(".ui-unselecting",this.element[0]).each(function(){var d=e.data(this,"selectable-item");d.$element.removeClass("ui-unselecting");d.unselecting=false;d.startselected=false;f._trigger("unselected",c,{unselected:d.element})});e(".ui-selecting",this.element[0]).each(function(){var d=
e.data(this,"selectable-item");d.$element.removeClass("ui-selecting").addClass("ui-selected");d.selecting=false;d.selected=true;d.startselected=true;f._trigger("selected",c,{selected:d.element})});this._trigger("stop",c);this.helper.remove();return false}});e.extend(e.ui.selectable,{version:"1.8.16"})})(jQuery);
;/*
 * jQuery UI Sortable 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Sortables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.sortable",d.ui.mouse,{widgetEventPrefix:"sort",options:{appendTo:"parent",axis:false,connectWith:false,containment:false,cursor:"auto",cursorAt:false,dropOnEmpty:true,forcePlaceholderSize:false,forceHelperSize:false,grid:false,handle:false,helper:"original",items:"> *",opacity:false,placeholder:false,revert:false,scroll:true,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1E3},_create:function(){var a=this.options;this.containerCache={};this.element.addClass("ui-sortable");
this.refresh();this.floating=this.items.length?a.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):false;this.offset=this.element.offset();this._mouseInit()},destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");this._mouseDestroy();for(var a=this.items.length-1;a>=0;a--)this.items[a].item.removeData("sortable-item");return this},_setOption:function(a,b){if(a===
"disabled"){this.options[a]=b;this.widget()[b?"addClass":"removeClass"]("ui-sortable-disabled")}else d.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(a,b){if(this.reverting)return false;if(this.options.disabled||this.options.type=="static")return false;this._refreshItems(a);var c=null,e=this;d(a.target).parents().each(function(){if(d.data(this,"sortable-item")==e){c=d(this);return false}});if(d.data(a.target,"sortable-item")==e)c=d(a.target);if(!c)return false;if(this.options.handle&&
!b){var f=false;d(this.options.handle,c).find("*").andSelf().each(function(){if(this==a.target)f=true});if(!f)return false}this.currentItem=c;this._removeCurrentsFromItems();return true},_mouseStart:function(a,b,c){b=this.options;var e=this;this.currentContainer=this;this.refreshPositions();this.helper=this._createHelper(a);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,
left:this.offset.left-this.margins.left};this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");d.extend(this.offset,{click:{left:a.pageX-this.offset.left,top:a.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this._generatePosition(a);this.originalPageX=a.pageX;this.originalPageY=a.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};
this.helper[0]!=this.currentItem[0]&&this.currentItem.hide();this._createPlaceholder();b.containment&&this._setContainment();if(b.cursor){if(d("body").css("cursor"))this._storedCursor=d("body").css("cursor");d("body").css("cursor",b.cursor)}if(b.opacity){if(this.helper.css("opacity"))this._storedOpacity=this.helper.css("opacity");this.helper.css("opacity",b.opacity)}if(b.zIndex){if(this.helper.css("zIndex"))this._storedZIndex=this.helper.css("zIndex");this.helper.css("zIndex",b.zIndex)}if(this.scrollParent[0]!=
document&&this.scrollParent[0].tagName!="HTML")this.overflowOffset=this.scrollParent.offset();this._trigger("start",a,this._uiHash());this._preserveHelperProportions||this._cacheHelperProportions();if(!c)for(c=this.containers.length-1;c>=0;c--)this.containers[c]._trigger("activate",a,e._uiHash(this));if(d.ui.ddmanager)d.ui.ddmanager.current=this;d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,a);this.dragging=true;this.helper.addClass("ui-sortable-helper");this._mouseDrag(a);
return true},_mouseDrag:function(a){this.position=this._generatePosition(a);this.positionAbs=this._convertPositionTo("absolute");if(!this.lastPositionAbs)this.lastPositionAbs=this.positionAbs;if(this.options.scroll){var b=this.options,c=false;if(this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"){if(this.overflowOffset.top+this.scrollParent[0].offsetHeight-a.pageY<b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop+b.scrollSpeed;else if(a.pageY-this.overflowOffset.top<
b.scrollSensitivity)this.scrollParent[0].scrollTop=c=this.scrollParent[0].scrollTop-b.scrollSpeed;if(this.overflowOffset.left+this.scrollParent[0].offsetWidth-a.pageX<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft+b.scrollSpeed;else if(a.pageX-this.overflowOffset.left<b.scrollSensitivity)this.scrollParent[0].scrollLeft=c=this.scrollParent[0].scrollLeft-b.scrollSpeed}else{if(a.pageY-d(document).scrollTop()<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()-
b.scrollSpeed);else if(d(window).height()-(a.pageY-d(document).scrollTop())<b.scrollSensitivity)c=d(document).scrollTop(d(document).scrollTop()+b.scrollSpeed);if(a.pageX-d(document).scrollLeft()<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()-b.scrollSpeed);else if(d(window).width()-(a.pageX-d(document).scrollLeft())<b.scrollSensitivity)c=d(document).scrollLeft(d(document).scrollLeft()+b.scrollSpeed)}c!==false&&d.ui.ddmanager&&!b.dropBehaviour&&d.ui.ddmanager.prepareOffsets(this,
a)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(b=this.items.length-1;b>=0;b--){c=this.items[b];var e=c.item[0],f=this._intersectsWithPointer(c);if(f)if(e!=this.currentItem[0]&&this.placeholder[f==1?"next":"prev"]()[0]!=e&&!d.ui.contains(this.placeholder[0],e)&&(this.options.type=="semi-dynamic"?!d.ui.contains(this.element[0],
e):true)){this.direction=f==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(c))this._rearrange(a,c);else break;this._trigger("change",a,this._uiHash());break}}this._contactContainers(a);d.ui.ddmanager&&d.ui.ddmanager.drag(this,a);this._trigger("sort",a,this._uiHash());this.lastPositionAbs=this.positionAbs;return false},_mouseStop:function(a,b){if(a){d.ui.ddmanager&&!this.options.dropBehaviour&&d.ui.ddmanager.drop(this,a);if(this.options.revert){var c=this;b=c.placeholder.offset();
c.reverting=true;d(this.helper).animate({left:b.left-this.offset.parent.left-c.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:b.top-this.offset.parent.top-c.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){c._clear(a)})}else this._clear(a,b);return false}},cancel:function(){var a=this;if(this.dragging){this._mouseUp({target:null});this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):
this.currentItem.show();for(var b=this.containers.length-1;b>=0;b--){this.containers[b]._trigger("deactivate",null,a._uiHash(this));if(this.containers[b].containerCache.over){this.containers[b]._trigger("out",null,a._uiHash(this));this.containers[b].containerCache.over=0}}}if(this.placeholder){this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove();d.extend(this,{helper:null,
dragging:false,reverting:false,_noFinalSort:null});this.domPosition.prev?d(this.domPosition.prev).after(this.currentItem):d(this.domPosition.parent).prepend(this.currentItem)}return this},serialize:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};d(b).each(function(){var e=(d(a.item||this).attr(a.attribute||"id")||"").match(a.expression||/(.+)[-=_](.+)/);if(e)c.push((a.key||e[1]+"[]")+"="+(a.key&&a.expression?e[1]:e[2]))});!c.length&&a.key&&c.push(a.key+"=");return c.join("&")},
toArray:function(a){var b=this._getItemsAsjQuery(a&&a.connected),c=[];a=a||{};b.each(function(){c.push(d(a.item||this).attr(a.attribute||"id")||"")});return c},_intersectsWith:function(a){var b=this.positionAbs.left,c=b+this.helperProportions.width,e=this.positionAbs.top,f=e+this.helperProportions.height,g=a.left,h=g+a.width,i=a.top,k=i+a.height,j=this.offset.click.top,l=this.offset.click.left;j=e+j>i&&e+j<k&&b+l>g&&b+l<h;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||
this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>a[this.floating?"width":"height"]?j:g<b+this.helperProportions.width/2&&c-this.helperProportions.width/2<h&&i<e+this.helperProportions.height/2&&f-this.helperProportions.height/2<k},_intersectsWithPointer:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left,a.width);b=b&&a;a=this._getDragVerticalDirection();
var c=this._getDragHorizontalDirection();if(!b)return false;return this.floating?c&&c=="right"||a=="down"?2:1:a&&(a=="down"?2:1)},_intersectsWithSides:function(a){var b=d.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,a.top+a.height/2,a.height);a=d.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,a.left+a.width/2,a.width);var c=this._getDragVerticalDirection(),e=this._getDragHorizontalDirection();return this.floating&&e?e=="right"&&a||e=="left"&&!a:c&&(c=="down"&&b||c=="up"&&!b)},
_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;return a!=0&&(a>0?"down":"up")},_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return a!=0&&(a>0?"right":"left")},refresh:function(a){this._refreshItems(a);this.refreshPositions();return this},_connectWith:function(){var a=this.options;return a.connectWith.constructor==String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(a){var b=[],c=[],e=this._connectWith();
if(e&&a)for(a=e.length-1;a>=0;a--)for(var f=d(e[a]),g=f.length-1;g>=0;g--){var h=d.data(f[g],"sortable");if(h&&h!=this&&!h.options.disabled)c.push([d.isFunction(h.options.items)?h.options.items.call(h.element):d(h.options.items,h.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),h])}c.push([d.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):d(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
this]);for(a=c.length-1;a>=0;a--)c[a][0].each(function(){b.push(this)});return d(b)},_removeCurrentsFromItems:function(){for(var a=this.currentItem.find(":data(sortable-item)"),b=0;b<this.items.length;b++)for(var c=0;c<a.length;c++)a[c]==this.items[b].item[0]&&this.items.splice(b,1)},_refreshItems:function(a){this.items=[];this.containers=[this];var b=this.items,c=[[d.isFunction(this.options.items)?this.options.items.call(this.element[0],a,{item:this.currentItem}):d(this.options.items,this.element),
this]],e=this._connectWith();if(e)for(var f=e.length-1;f>=0;f--)for(var g=d(e[f]),h=g.length-1;h>=0;h--){var i=d.data(g[h],"sortable");if(i&&i!=this&&!i.options.disabled){c.push([d.isFunction(i.options.items)?i.options.items.call(i.element[0],a,{item:this.currentItem}):d(i.options.items,i.element),i]);this.containers.push(i)}}for(f=c.length-1;f>=0;f--){a=c[f][1];e=c[f][0];h=0;for(g=e.length;h<g;h++){i=d(e[h]);i.data("sortable-item",a);b.push({item:i,instance:a,width:0,height:0,left:0,top:0})}}},refreshPositions:function(a){if(this.offsetParent&&
this.helper)this.offset.parent=this._getParentOffset();for(var b=this.items.length-1;b>=0;b--){var c=this.items[b];if(!(c.instance!=this.currentContainer&&this.currentContainer&&c.item[0]!=this.currentItem[0])){var e=this.options.toleranceElement?d(this.options.toleranceElement,c.item):c.item;if(!a){c.width=e.outerWidth();c.height=e.outerHeight()}e=e.offset();c.left=e.left;c.top=e.top}}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(b=
this.containers.length-1;b>=0;b--){e=this.containers[b].element.offset();this.containers[b].containerCache.left=e.left;this.containers[b].containerCache.top=e.top;this.containers[b].containerCache.width=this.containers[b].element.outerWidth();this.containers[b].containerCache.height=this.containers[b].element.outerHeight()}return this},_createPlaceholder:function(a){var b=a||this,c=b.options;if(!c.placeholder||c.placeholder.constructor==String){var e=c.placeholder;c.placeholder={element:function(){var f=
d(document.createElement(b.currentItem[0].nodeName)).addClass(e||b.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];if(!e)f.style.visibility="hidden";return f},update:function(f,g){if(!(e&&!c.forcePlaceholderSize)){g.height()||g.height(b.currentItem.innerHeight()-parseInt(b.currentItem.css("paddingTop")||0,10)-parseInt(b.currentItem.css("paddingBottom")||0,10));g.width()||g.width(b.currentItem.innerWidth()-parseInt(b.currentItem.css("paddingLeft")||0,10)-parseInt(b.currentItem.css("paddingRight")||
0,10))}}}}b.placeholder=d(c.placeholder.element.call(b.element,b.currentItem));b.currentItem.after(b.placeholder);c.placeholder.update(b,b.placeholder)},_contactContainers:function(a){for(var b=null,c=null,e=this.containers.length-1;e>=0;e--)if(!d.ui.contains(this.currentItem[0],this.containers[e].element[0]))if(this._intersectsWith(this.containers[e].containerCache)){if(!(b&&d.ui.contains(this.containers[e].element[0],b.element[0]))){b=this.containers[e];c=e}}else if(this.containers[e].containerCache.over){this.containers[e]._trigger("out",
a,this._uiHash(this));this.containers[e].containerCache.over=0}if(b)if(this.containers.length===1){this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}else if(this.currentContainer!=this.containers[c]){b=1E4;e=null;for(var f=this.positionAbs[this.containers[c].floating?"left":"top"],g=this.items.length-1;g>=0;g--)if(d.ui.contains(this.containers[c].element[0],this.items[g].item[0])){var h=this.items[g][this.containers[c].floating?"left":"top"];if(Math.abs(h-
f)<b){b=Math.abs(h-f);e=this.items[g]}}if(e||this.options.dropOnEmpty){this.currentContainer=this.containers[c];e?this._rearrange(a,e,null,true):this._rearrange(a,null,this.containers[c].element,true);this._trigger("change",a,this._uiHash());this.containers[c]._trigger("change",a,this._uiHash(this));this.options.placeholder.update(this.currentContainer,this.placeholder);this.containers[c]._trigger("over",a,this._uiHash(this));this.containers[c].containerCache.over=1}}},_createHelper:function(a){var b=
this.options;a=d.isFunction(b.helper)?d(b.helper.apply(this.element[0],[a,this.currentItem])):b.helper=="clone"?this.currentItem.clone():this.currentItem;a.parents("body").length||d(b.appendTo!="parent"?b.appendTo:this.currentItem[0].parentNode)[0].appendChild(a[0]);if(a[0]==this.currentItem[0])this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")};if(a[0].style.width==
""||b.forceHelperSize)a.width(this.currentItem.width());if(a[0].style.height==""||b.forceHelperSize)a.height(this.currentItem.height());return a},_adjustOffsetFromHelper:function(a){if(typeof a=="string")a=a.split(" ");if(d.isArray(a))a={left:+a[0],top:+a[1]||0};if("left"in a)this.offset.click.left=a.left+this.margins.left;if("right"in a)this.offset.click.left=this.helperProportions.width-a.right+this.margins.left;if("top"in a)this.offset.click.top=a.top+this.margins.top;if("bottom"in a)this.offset.click.top=
this.helperProportions.height-a.bottom+this.margins.top},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var a=this.offsetParent.offset();if(this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0])){a.left+=this.scrollParent.scrollLeft();a.top+=this.scrollParent.scrollTop()}if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&d.browser.msie)a=
{top:0,left:0};return{top:a.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:a.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}else return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),
10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var a=this.options;if(a.containment=="parent")a.containment=this.helper[0].parentNode;if(a.containment=="document"||a.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,d(a.containment=="document"?
document:window).width()-this.helperProportions.width-this.margins.left,(d(a.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(a.containment)){var b=d(a.containment)[0];a=d(a.containment).offset();var c=d(b).css("overflow")!="hidden";this.containment=[a.left+(parseInt(d(b).css("borderLeftWidth"),10)||0)+(parseInt(d(b).css("paddingLeft"),10)||0)-this.margins.left,a.top+(parseInt(d(b).css("borderTopWidth"),
10)||0)+(parseInt(d(b).css("paddingTop"),10)||0)-this.margins.top,a.left+(c?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(d(b).css("borderLeftWidth"),10)||0)-(parseInt(d(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,a.top+(c?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(d(b).css("borderTopWidth"),10)||0)-(parseInt(d(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(a,b){if(!b)b=
this.position;a=a=="absolute"?1:-1;var c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);return{top:b.top+this.offset.relative.top*a+this.offset.parent.top*a-(d.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop())*a),left:b.left+this.offset.relative.left*a+this.offset.parent.left*a-(d.browser.safari&&
this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())*a)}},_generatePosition:function(a){var b=this.options,c=this.cssPosition=="absolute"&&!(this.scrollParent[0]!=document&&d.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(c[0].tagName);if(this.cssPosition=="relative"&&!(this.scrollParent[0]!=document&&this.scrollParent[0]!=this.offsetParent[0]))this.offset.relative=this._getRelativeOffset();
var f=a.pageX,g=a.pageY;if(this.originalPosition){if(this.containment){if(a.pageX-this.offset.click.left<this.containment[0])f=this.containment[0]+this.offset.click.left;if(a.pageY-this.offset.click.top<this.containment[1])g=this.containment[1]+this.offset.click.top;if(a.pageX-this.offset.click.left>this.containment[2])f=this.containment[2]+this.offset.click.left;if(a.pageY-this.offset.click.top>this.containment[3])g=this.containment[3]+this.offset.click.top}if(b.grid){g=this.originalPageY+Math.round((g-
this.originalPageY)/b.grid[1])*b.grid[1];g=this.containment?!(g-this.offset.click.top<this.containment[1]||g-this.offset.click.top>this.containment[3])?g:!(g-this.offset.click.top<this.containment[1])?g-b.grid[1]:g+b.grid[1]:g;f=this.originalPageX+Math.round((f-this.originalPageX)/b.grid[0])*b.grid[0];f=this.containment?!(f-this.offset.click.left<this.containment[0]||f-this.offset.click.left>this.containment[2])?f:!(f-this.offset.click.left<this.containment[0])?f-b.grid[0]:f+b.grid[0]:f}}return{top:g-
this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:c.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(d.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:c.scrollLeft())}},_rearrange:function(a,b,c,e){c?c[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],
this.direction=="down"?b.item[0]:b.item[0].nextSibling);this.counter=this.counter?++this.counter:1;var f=this,g=this.counter;window.setTimeout(function(){g==f.counter&&f.refreshPositions(!e)},0)},_clear:function(a,b){this.reverting=false;var c=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem);this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var e in this._storedCSS)if(this._storedCSS[e]=="auto"||this._storedCSS[e]=="static")this._storedCSS[e]=
"";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!b&&c.push(function(f){this._trigger("receive",f,this._uiHash(this.fromOutside))});if((this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!b)c.push(function(f){this._trigger("update",f,this._uiHash())});if(!d.ui.contains(this.element[0],this.currentItem[0])){b||c.push(function(f){this._trigger("remove",
f,this._uiHash())});for(e=this.containers.length-1;e>=0;e--)if(d.ui.contains(this.containers[e].element[0],this.currentItem[0])&&!b){c.push(function(f){return function(g){f._trigger("receive",g,this._uiHash(this))}}.call(this,this.containers[e]));c.push(function(f){return function(g){f._trigger("update",g,this._uiHash(this))}}.call(this,this.containers[e]))}}for(e=this.containers.length-1;e>=0;e--){b||c.push(function(f){return function(g){f._trigger("deactivate",g,this._uiHash(this))}}.call(this,
this.containers[e]));if(this.containers[e].containerCache.over){c.push(function(f){return function(g){f._trigger("out",g,this._uiHash(this))}}.call(this,this.containers[e]));this.containers[e].containerCache.over=0}}this._storedCursor&&d("body").css("cursor",this._storedCursor);this._storedOpacity&&this.helper.css("opacity",this._storedOpacity);if(this._storedZIndex)this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex);this.dragging=false;if(this.cancelHelperRemoval){if(!b){this._trigger("beforeStop",
a,this._uiHash());for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}return false}b||this._trigger("beforeStop",a,this._uiHash());this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.helper[0]!=this.currentItem[0]&&this.helper.remove();this.helper=null;if(!b){for(e=0;e<c.length;e++)c[e].call(this,a);this._trigger("stop",a,this._uiHash())}this.fromOutside=false;return true},_trigger:function(){d.Widget.prototype._trigger.apply(this,arguments)===false&&this.cancel()},
_uiHash:function(a){var b=a||this;return{helper:b.helper,placeholder:b.placeholder||d([]),position:b.position,originalPosition:b.originalPosition,offset:b.positionAbs,item:b.currentItem,sender:a?a.element:null}}});d.extend(d.ui.sortable,{version:"1.8.16"})})(jQuery);
;/*
 * jQuery UI Accordion 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Accordion
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(c){c.widget("ui.accordion",{options:{active:0,animated:"slide",autoHeight:true,clearStyle:false,collapsible:false,event:"click",fillSpace:false,header:"> li > :first-child,> :not(li):even",icons:{header:"ui-icon-triangle-1-e",headerSelected:"ui-icon-triangle-1-s"},navigation:false,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}},_create:function(){var a=this,b=a.options;a.running=0;a.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");
a.headers=a.element.find(b.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion",function(){b.disabled||c(this).addClass("ui-state-hover")}).bind("mouseleave.accordion",function(){b.disabled||c(this).removeClass("ui-state-hover")}).bind("focus.accordion",function(){b.disabled||c(this).addClass("ui-state-focus")}).bind("blur.accordion",function(){b.disabled||c(this).removeClass("ui-state-focus")});a.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
if(b.navigation){var d=a.element.find("a").filter(b.navigationFilter).eq(0);if(d.length){var h=d.closest(".ui-accordion-header");a.active=h.length?h:d.closest(".ui-accordion-content").prev()}}a.active=a._findActive(a.active||b.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");a.active.next().addClass("ui-accordion-content-active");a._createIcons();a.resize();a.element.attr("role","tablist");a.headers.attr("role","tab").bind("keydown.accordion",
function(f){return a._keydown(f)}).next().attr("role","tabpanel");a.headers.not(a.active||"").attr({"aria-expanded":"false","aria-selected":"false",tabIndex:-1}).next().hide();a.active.length?a.active.attr({"aria-expanded":"true","aria-selected":"true",tabIndex:0}):a.headers.eq(0).attr("tabIndex",0);c.browser.safari||a.headers.find("a").attr("tabIndex",-1);b.event&&a.headers.bind(b.event.split(" ").join(".accordion ")+".accordion",function(f){a._clickHandler.call(a,f,this);f.preventDefault()})},_createIcons:function(){var a=
this.options;if(a.icons){c("<span></span>").addClass("ui-icon "+a.icons.header).prependTo(this.headers);this.active.children(".ui-icon").toggleClass(a.icons.header).toggleClass(a.icons.headerSelected);this.element.addClass("ui-accordion-icons")}},_destroyIcons:function(){this.headers.children(".ui-icon").remove();this.element.removeClass("ui-accordion-icons")},destroy:function(){var a=this.options;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex");
this.headers.find("a").removeAttr("tabIndex");this._destroyIcons();var b=this.headers.next().css("display","").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");if(a.autoHeight||a.fillHeight)b.css("height","");return c.Widget.prototype.destroy.call(this)},_setOption:function(a,b){c.Widget.prototype._setOption.apply(this,arguments);a=="active"&&this.activate(b);if(a=="icons"){this._destroyIcons();
b&&this._createIcons()}if(a=="disabled")this.headers.add(this.headers.next())[b?"addClass":"removeClass"]("ui-accordion-disabled ui-state-disabled")},_keydown:function(a){if(!(this.options.disabled||a.altKey||a.ctrlKey)){var b=c.ui.keyCode,d=this.headers.length,h=this.headers.index(a.target),f=false;switch(a.keyCode){case b.RIGHT:case b.DOWN:f=this.headers[(h+1)%d];break;case b.LEFT:case b.UP:f=this.headers[(h-1+d)%d];break;case b.SPACE:case b.ENTER:this._clickHandler({target:a.target},a.target);
a.preventDefault()}if(f){c(a.target).attr("tabIndex",-1);c(f).attr("tabIndex",0);f.focus();return false}return true}},resize:function(){var a=this.options,b;if(a.fillSpace){if(c.browser.msie){var d=this.element.parent().css("overflow");this.element.parent().css("overflow","hidden")}b=this.element.parent().height();c.browser.msie&&this.element.parent().css("overflow",d);this.headers.each(function(){b-=c(this).outerHeight(true)});this.headers.next().each(function(){c(this).height(Math.max(0,b-c(this).innerHeight()+
c(this).height()))}).css("overflow","auto")}else if(a.autoHeight){b=0;this.headers.next().each(function(){b=Math.max(b,c(this).height("").height())}).height(b)}return this},activate:function(a){this.options.active=a;a=this._findActive(a)[0];this._clickHandler({target:a},a);return this},_findActive:function(a){return a?typeof a==="number"?this.headers.filter(":eq("+a+")"):this.headers.not(this.headers.not(a)):a===false?c([]):this.headers.filter(":eq(0)")},_clickHandler:function(a,b){var d=this.options;
if(!d.disabled)if(a.target){a=c(a.currentTarget||b);b=a[0]===this.active[0];d.active=d.collapsible&&b?false:this.headers.index(a);if(!(this.running||!d.collapsible&&b)){var h=this.active;j=a.next();g=this.active.next();e={options:d,newHeader:b&&d.collapsible?c([]):a,oldHeader:this.active,newContent:b&&d.collapsible?c([]):j,oldContent:g};var f=this.headers.index(this.active[0])>this.headers.index(a[0]);this.active=b?c([]):a;this._toggle(j,g,e,b,f);h.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header);
if(!b){a.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected);a.next().addClass("ui-accordion-content-active")}}}else if(d.collapsible){this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header);this.active.next().addClass("ui-accordion-content-active");var g=this.active.next(),
e={options:d,newHeader:c([]),oldHeader:d.active,newContent:c([]),oldContent:g},j=this.active=c([]);this._toggle(j,g,e)}},_toggle:function(a,b,d,h,f){var g=this,e=g.options;g.toShow=a;g.toHide=b;g.data=d;var j=function(){if(g)return g._completed.apply(g,arguments)};g._trigger("changestart",null,g.data);g.running=b.size()===0?a.size():b.size();if(e.animated){d={};d=e.collapsible&&h?{toShow:c([]),toHide:b,complete:j,down:f,autoHeight:e.autoHeight||e.fillSpace}:{toShow:a,toHide:b,complete:j,down:f,autoHeight:e.autoHeight||
e.fillSpace};if(!e.proxied)e.proxied=e.animated;if(!e.proxiedDuration)e.proxiedDuration=e.duration;e.animated=c.isFunction(e.proxied)?e.proxied(d):e.proxied;e.duration=c.isFunction(e.proxiedDuration)?e.proxiedDuration(d):e.proxiedDuration;h=c.ui.accordion.animations;var i=e.duration,k=e.animated;if(k&&!h[k]&&!c.easing[k])k="slide";h[k]||(h[k]=function(l){this.slide(l,{easing:k,duration:i||700})});h[k](d)}else{if(e.collapsible&&h)a.toggle();else{b.hide();a.show()}j(true)}b.prev().attr({"aria-expanded":"false",
"aria-selected":"false",tabIndex:-1}).blur();a.prev().attr({"aria-expanded":"true","aria-selected":"true",tabIndex:0}).focus()},_completed:function(a){this.running=a?0:--this.running;if(!this.running){this.options.clearStyle&&this.toShow.add(this.toHide).css({height:"",overflow:""});this.toHide.removeClass("ui-accordion-content-active");if(this.toHide.length)this.toHide.parent()[0].className=this.toHide.parent()[0].className;this._trigger("change",null,this.data)}}});c.extend(c.ui.accordion,{version:"1.8.16",
animations:{slide:function(a,b){a=c.extend({easing:"swing",duration:300},a,b);if(a.toHide.size())if(a.toShow.size()){var d=a.toShow.css("overflow"),h=0,f={},g={},e;b=a.toShow;e=b[0].style.width;b.width(parseInt(b.parent().width(),10)-parseInt(b.css("paddingLeft"),10)-parseInt(b.css("paddingRight"),10)-(parseInt(b.css("borderLeftWidth"),10)||0)-(parseInt(b.css("borderRightWidth"),10)||0));c.each(["height","paddingTop","paddingBottom"],function(j,i){g[i]="hide";j=(""+c.css(a.toShow[0],i)).match(/^([\d+-.]+)(.*)$/);
f[i]={value:j[1],unit:j[2]||"px"}});a.toShow.css({height:0,overflow:"hidden"}).show();a.toHide.filter(":hidden").each(a.complete).end().filter(":visible").animate(g,{step:function(j,i){if(i.prop=="height")h=i.end-i.start===0?0:(i.now-i.start)/(i.end-i.start);a.toShow[0].style[i.prop]=h*f[i.prop].value+f[i.prop].unit},duration:a.duration,easing:a.easing,complete:function(){a.autoHeight||a.toShow.css("height","");a.toShow.css({width:e,overflow:d});a.complete()}})}else a.toHide.animate({height:"hide",
paddingTop:"hide",paddingBottom:"hide"},a);else a.toShow.animate({height:"show",paddingTop:"show",paddingBottom:"show"},a)},bounceslide:function(a){this.slide(a,{easing:a.down?"easeOutBounce":"swing",duration:a.down?1E3:200})}}})})(jQuery);
;/*
 * jQuery UI Autocomplete 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Autocomplete
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.position.js
 */
(function(d){var e=0;d.widget("ui.autocomplete",{options:{appendTo:"body",autoFocus:false,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null},pending:0,_create:function(){var a=this,b=this.element[0].ownerDocument,g;this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(c){if(!(a.options.disabled||a.element.propAttr("readOnly"))){g=
false;var f=d.ui.keyCode;switch(c.keyCode){case f.PAGE_UP:a._move("previousPage",c);break;case f.PAGE_DOWN:a._move("nextPage",c);break;case f.UP:a._move("previous",c);c.preventDefault();break;case f.DOWN:a._move("next",c);c.preventDefault();break;case f.ENTER:case f.NUMPAD_ENTER:if(a.menu.active){g=true;c.preventDefault()}case f.TAB:if(!a.menu.active)return;a.menu.select(c);break;case f.ESCAPE:a.element.val(a.term);a.close(c);break;default:clearTimeout(a.searching);a.searching=setTimeout(function(){if(a.term!=
a.element.val()){a.selectedItem=null;a.search(null,c)}},a.options.delay);break}}}).bind("keypress.autocomplete",function(c){if(g){g=false;c.preventDefault()}}).bind("focus.autocomplete",function(){if(!a.options.disabled){a.selectedItem=null;a.previous=a.element.val()}}).bind("blur.autocomplete",function(c){if(!a.options.disabled){clearTimeout(a.searching);a.closing=setTimeout(function(){a.close(c);a._change(c)},150)}});this._initSource();this.response=function(){return a._response.apply(a,arguments)};
this.menu=d("<ul></ul>").addClass("ui-autocomplete").appendTo(d(this.options.appendTo||"body",b)[0]).mousedown(function(c){var f=a.menu.element[0];d(c.target).closest(".ui-menu-item").length||setTimeout(function(){d(document).one("mousedown",function(h){h.target!==a.element[0]&&h.target!==f&&!d.ui.contains(f,h.target)&&a.close()})},1);setTimeout(function(){clearTimeout(a.closing)},13)}).menu({focus:function(c,f){f=f.item.data("item.autocomplete");false!==a._trigger("focus",c,{item:f})&&/^key/.test(c.originalEvent.type)&&
a.element.val(f.value)},selected:function(c,f){var h=f.item.data("item.autocomplete"),i=a.previous;if(a.element[0]!==b.activeElement){a.element.focus();a.previous=i;setTimeout(function(){a.previous=i;a.selectedItem=h},1)}false!==a._trigger("select",c,{item:h})&&a.element.val(h.value);a.term=a.element.val();a.close(c);a.selectedItem=h},blur:function(){a.menu.element.is(":visible")&&a.element.val()!==a.term&&a.element.val(a.term)}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu");
d.fn.bgiframe&&this.menu.element.bgiframe()},destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");this.menu.element.remove();d.Widget.prototype.destroy.call(this)},_setOption:function(a,b){d.Widget.prototype._setOption.apply(this,arguments);a==="source"&&this._initSource();if(a==="appendTo")this.menu.element.appendTo(d(b||"body",this.element[0].ownerDocument)[0]);a==="disabled"&&
b&&this.xhr&&this.xhr.abort()},_initSource:function(){var a=this,b,g;if(d.isArray(this.options.source)){b=this.options.source;this.source=function(c,f){f(d.ui.autocomplete.filter(b,c.term))}}else if(typeof this.options.source==="string"){g=this.options.source;this.source=function(c,f){a.xhr&&a.xhr.abort();a.xhr=d.ajax({url:g,data:c,dataType:"json",autocompleteRequest:++e,success:function(h){this.autocompleteRequest===e&&f(h)},error:function(){this.autocompleteRequest===e&&f([])}})}}else this.source=
this.options.source},search:function(a,b){a=a!=null?a:this.element.val();this.term=this.element.val();if(a.length<this.options.minLength)return this.close(b);clearTimeout(this.closing);if(this._trigger("search",b)!==false)return this._search(a)},_search:function(a){this.pending++;this.element.addClass("ui-autocomplete-loading");this.source({term:a},this.response)},_response:function(a){if(!this.options.disabled&&a&&a.length){a=this._normalize(a);this._suggest(a);this._trigger("open")}else this.close();
this.pending--;this.pending||this.element.removeClass("ui-autocomplete-loading")},close:function(a){clearTimeout(this.closing);if(this.menu.element.is(":visible")){this.menu.element.hide();this.menu.deactivate();this._trigger("close",a)}},_change:function(a){this.previous!==this.element.val()&&this._trigger("change",a,{item:this.selectedItem})},_normalize:function(a){if(a.length&&a[0].label&&a[0].value)return a;return d.map(a,function(b){if(typeof b==="string")return{label:b,value:b};return d.extend({label:b.label||
b.value,value:b.value||b.label},b)})},_suggest:function(a){var b=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(b,a);this.menu.deactivate();this.menu.refresh();b.show();this._resizeMenu();b.position(d.extend({of:this.element},this.options.position));this.options.autoFocus&&this.menu.next(new d.Event("mouseover"))},_resizeMenu:function(){var a=this.menu.element;a.outerWidth(Math.max(a.width("").outerWidth(),this.element.outerWidth()))},_renderMenu:function(a,b){var g=this;
d.each(b,function(c,f){g._renderItem(a,f)})},_renderItem:function(a,b){return d("<li></li>").data("item.autocomplete",b).append(d("<a></a>").text(b.label)).appendTo(a)},_move:function(a,b){if(this.menu.element.is(":visible"))if(this.menu.first()&&/^previous/.test(a)||this.menu.last()&&/^next/.test(a)){this.element.val(this.term);this.menu.deactivate()}else this.menu[a](b);else this.search(null,b)},widget:function(){return this.menu.element}});d.extend(d.ui.autocomplete,{escapeRegex:function(a){return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,
"\\$&")},filter:function(a,b){var g=new RegExp(d.ui.autocomplete.escapeRegex(b),"i");return d.grep(a,function(c){return g.test(c.label||c.value||c)})}})})(jQuery);
(function(d){d.widget("ui.menu",{_create:function(){var e=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(a){if(d(a.target).closest(".ui-menu-item a").length){a.preventDefault();e.select(a)}});this.refresh()},refresh:function(){var e=this;this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem").children("a").addClass("ui-corner-all").attr("tabindex",
-1).mouseenter(function(a){e.activate(a,d(this).parent())}).mouseleave(function(){e.deactivate()})},activate:function(e,a){this.deactivate();if(this.hasScroll()){var b=a.offset().top-this.element.offset().top,g=this.element.scrollTop(),c=this.element.height();if(b<0)this.element.scrollTop(g+b);else b>=c&&this.element.scrollTop(g+b-c+a.height())}this.active=a.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end();this._trigger("focus",e,{item:a})},deactivate:function(){if(this.active){this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
this._trigger("blur");this.active=null}},next:function(e){this.move("next",".ui-menu-item:first",e)},previous:function(e){this.move("prev",".ui-menu-item:last",e)},first:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},last:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},move:function(e,a,b){if(this.active){e=this.active[e+"All"](".ui-menu-item").eq(0);e.length?this.activate(b,e):this.activate(b,this.element.children(a))}else this.activate(b,
this.element.children(a))},nextPage:function(e){if(this.hasScroll())if(!this.active||this.last())this.activate(e,this.element.children(".ui-menu-item:first"));else{var a=this.active.offset().top,b=this.element.height(),g=this.element.children(".ui-menu-item").filter(function(){var c=d(this).offset().top-a-b+d(this).height();return c<10&&c>-10});g.length||(g=this.element.children(".ui-menu-item:last"));this.activate(e,g)}else this.activate(e,this.element.children(".ui-menu-item").filter(!this.active||
this.last()?":first":":last"))},previousPage:function(e){if(this.hasScroll())if(!this.active||this.first())this.activate(e,this.element.children(".ui-menu-item:last"));else{var a=this.active.offset().top,b=this.element.height();result=this.element.children(".ui-menu-item").filter(function(){var g=d(this).offset().top-a+b-d(this).height();return g<10&&g>-10});result.length||(result=this.element.children(".ui-menu-item:first"));this.activate(e,result)}else this.activate(e,this.element.children(".ui-menu-item").filter(!this.active||
this.first()?":last":":first"))},hasScroll:function(){return this.element.height()<this.element[d.fn.prop?"prop":"attr"]("scrollHeight")},select:function(e){this._trigger("selected",e,{item:this.active})}})})(jQuery);
;/*
 * jQuery UI Button 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Button
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(b){var h,i,j,g,l=function(){var a=b(this).find(":ui-button");setTimeout(function(){a.button("refresh")},1)},k=function(a){var c=a.name,e=a.form,f=b([]);if(c)f=e?b(e).find("[name='"+c+"']"):b("[name='"+c+"']",a.ownerDocument).filter(function(){return!this.form});return f};b.widget("ui.button",{options:{disabled:null,text:true,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset.button").bind("reset.button",l);if(typeof this.options.disabled!==
"boolean")this.options.disabled=this.element.propAttr("disabled");this._determineButtonType();this.hasTitle=!!this.buttonElement.attr("title");var a=this,c=this.options,e=this.type==="checkbox"||this.type==="radio",f="ui-state-hover"+(!e?" ui-state-active":"");if(c.label===null)c.label=this.buttonElement.html();if(this.element.is(":disabled"))c.disabled=true;this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role","button").bind("mouseenter.button",function(){if(!c.disabled){b(this).addClass("ui-state-hover");
this===h&&b(this).addClass("ui-state-active")}}).bind("mouseleave.button",function(){c.disabled||b(this).removeClass(f)}).bind("click.button",function(d){if(c.disabled){d.preventDefault();d.stopImmediatePropagation()}});this.element.bind("focus.button",function(){a.buttonElement.addClass("ui-state-focus")}).bind("blur.button",function(){a.buttonElement.removeClass("ui-state-focus")});if(e){this.element.bind("change.button",function(){g||a.refresh()});this.buttonElement.bind("mousedown.button",function(d){if(!c.disabled){g=
false;i=d.pageX;j=d.pageY}}).bind("mouseup.button",function(d){if(!c.disabled)if(i!==d.pageX||j!==d.pageY)g=true})}if(this.type==="checkbox")this.buttonElement.bind("click.button",function(){if(c.disabled||g)return false;b(this).toggleClass("ui-state-active");a.buttonElement.attr("aria-pressed",a.element[0].checked)});else if(this.type==="radio")this.buttonElement.bind("click.button",function(){if(c.disabled||g)return false;b(this).addClass("ui-state-active");a.buttonElement.attr("aria-pressed","true");
var d=a.element[0];k(d).not(d).map(function(){return b(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")});else{this.buttonElement.bind("mousedown.button",function(){if(c.disabled)return false;b(this).addClass("ui-state-active");h=this;b(document).one("mouseup",function(){h=null})}).bind("mouseup.button",function(){if(c.disabled)return false;b(this).removeClass("ui-state-active")}).bind("keydown.button",function(d){if(c.disabled)return false;if(d.keyCode==b.ui.keyCode.SPACE||
d.keyCode==b.ui.keyCode.ENTER)b(this).addClass("ui-state-active")}).bind("keyup.button",function(){b(this).removeClass("ui-state-active")});this.buttonElement.is("a")&&this.buttonElement.keyup(function(d){d.keyCode===b.ui.keyCode.SPACE&&b(this).click()})}this._setOption("disabled",c.disabled);this._resetButton()},_determineButtonType:function(){this.type=this.element.is(":checkbox")?"checkbox":this.element.is(":radio")?"radio":this.element.is("input")?"input":"button";if(this.type==="checkbox"||this.type===
"radio"){var a=this.element.parents().filter(":last"),c="label[for='"+this.element.attr("id")+"']";this.buttonElement=a.find(c);if(!this.buttonElement.length){a=a.length?a.siblings():this.element.siblings();this.buttonElement=a.filter(c);if(!this.buttonElement.length)this.buttonElement=a.find(c)}this.element.addClass("ui-helper-hidden-accessible");(a=this.element.is(":checked"))&&this.buttonElement.addClass("ui-state-active");this.buttonElement.attr("aria-pressed",a)}else this.buttonElement=this.element},
widget:function(){return this.buttonElement},destroy:function(){this.element.removeClass("ui-helper-hidden-accessible");this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());this.hasTitle||this.buttonElement.removeAttr("title");
b.Widget.prototype.destroy.call(this)},_setOption:function(a,c){b.Widget.prototype._setOption.apply(this,arguments);if(a==="disabled")c?this.element.propAttr("disabled",true):this.element.propAttr("disabled",false);else this._resetButton()},refresh:function(){var a=this.element.is(":disabled");a!==this.options.disabled&&this._setOption("disabled",a);if(this.type==="radio")k(this.element[0]).each(function(){b(this).is(":checked")?b(this).button("widget").addClass("ui-state-active").attr("aria-pressed",
"true"):b(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")});else if(this.type==="checkbox")this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false")},_resetButton:function(){if(this.type==="input")this.options.label&&this.element.val(this.options.label);else{var a=this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"),
c=b("<span></span>").addClass("ui-button-text").html(this.options.label).appendTo(a.empty()).text(),e=this.options.icons,f=e.primary&&e.secondary,d=[];if(e.primary||e.secondary){if(this.options.text)d.push("ui-button-text-icon"+(f?"s":e.primary?"-primary":"-secondary"));e.primary&&a.prepend("<span class='ui-button-icon-primary ui-icon "+e.primary+"'></span>");e.secondary&&a.append("<span class='ui-button-icon-secondary ui-icon "+e.secondary+"'></span>");if(!this.options.text){d.push(f?"ui-button-icons-only":
"ui-button-icon-only");this.hasTitle||a.attr("title",c)}}else d.push("ui-button-text-only");a.addClass(d.join(" "))}}});b.widget("ui.buttonset",{options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(a,c){a==="disabled"&&this.buttons.button("option",a,c);b.Widget.prototype._setOption.apply(this,arguments)},refresh:function(){var a=this.element.css("direction")===
"ltr";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return b(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(a?"ui-corner-left":"ui-corner-right").end().filter(":last").addClass(a?"ui-corner-right":"ui-corner-left").end().end()},destroy:function(){this.element.removeClass("ui-buttonset");this.buttons.map(function(){return b(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy");
b.Widget.prototype.destroy.call(this)}})})(jQuery);
;/*
 * jQuery UI Dialog 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Dialog
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *  jquery.ui.button.js
 *	jquery.ui.draggable.js
 *	jquery.ui.mouse.js
 *	jquery.ui.position.js
 *	jquery.ui.resizable.js
 */
(function(c,l){var m={buttons:true,height:true,maxHeight:true,maxWidth:true,minHeight:true,minWidth:true,width:true},n={maxHeight:true,maxWidth:true,minHeight:true,minWidth:true},o=c.attrFn||{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true,click:true};c.widget("ui.dialog",{options:{autoOpen:true,buttons:{},closeOnEscape:true,closeText:"close",dialogClass:"",draggable:true,hide:null,height:"auto",maxHeight:false,maxWidth:false,minHeight:150,minWidth:150,modal:false,
position:{my:"center",at:"center",collision:"fit",using:function(a){var b=c(this).css(a).offset().top;b<0&&c(this).css("top",a.top-b)}},resizable:true,show:null,stack:true,title:"",width:300,zIndex:1E3},_create:function(){this.originalTitle=this.element.attr("title");if(typeof this.originalTitle!=="string")this.originalTitle="";this.options.title=this.options.title||this.originalTitle;var a=this,b=a.options,d=b.title||"&#160;",e=c.ui.dialog.getTitleId(a.element),g=(a.uiDialog=c("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+
b.dialogClass).css({zIndex:b.zIndex}).attr("tabIndex",-1).css("outline",0).keydown(function(i){if(b.closeOnEscape&&!i.isDefaultPrevented()&&i.keyCode&&i.keyCode===c.ui.keyCode.ESCAPE){a.close(i);i.preventDefault()}}).attr({role:"dialog","aria-labelledby":e}).mousedown(function(i){a.moveToTop(false,i)});a.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(g);var f=(a.uiDialogTitlebar=c("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(g),
h=c('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role","button").hover(function(){h.addClass("ui-state-hover")},function(){h.removeClass("ui-state-hover")}).focus(function(){h.addClass("ui-state-focus")}).blur(function(){h.removeClass("ui-state-focus")}).click(function(i){a.close(i);return false}).appendTo(f);(a.uiDialogTitlebarCloseText=c("<span></span>")).addClass("ui-icon ui-icon-closethick").text(b.closeText).appendTo(h);c("<span></span>").addClass("ui-dialog-title").attr("id",
e).html(d).prependTo(f);if(c.isFunction(b.beforeclose)&&!c.isFunction(b.beforeClose))b.beforeClose=b.beforeclose;f.find("*").add(f).disableSelection();b.draggable&&c.fn.draggable&&a._makeDraggable();b.resizable&&c.fn.resizable&&a._makeResizable();a._createButtons(b.buttons);a._isOpen=false;c.fn.bgiframe&&g.bgiframe()},_init:function(){this.options.autoOpen&&this.open()},destroy:function(){var a=this;a.overlay&&a.overlay.destroy();a.uiDialog.hide();a.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
a.uiDialog.remove();a.originalTitle&&a.element.attr("title",a.originalTitle);return a},widget:function(){return this.uiDialog},close:function(a){var b=this,d,e;if(false!==b._trigger("beforeClose",a)){b.overlay&&b.overlay.destroy();b.uiDialog.unbind("keypress.ui-dialog");b._isOpen=false;if(b.options.hide)b.uiDialog.hide(b.options.hide,function(){b._trigger("close",a)});else{b.uiDialog.hide();b._trigger("close",a)}c.ui.dialog.overlay.resize();if(b.options.modal){d=0;c(".ui-dialog").each(function(){if(this!==
b.uiDialog[0]){e=c(this).css("z-index");isNaN(e)||(d=Math.max(d,e))}});c.ui.dialog.maxZ=d}return b}},isOpen:function(){return this._isOpen},moveToTop:function(a,b){var d=this,e=d.options;if(e.modal&&!a||!e.stack&&!e.modal)return d._trigger("focus",b);if(e.zIndex>c.ui.dialog.maxZ)c.ui.dialog.maxZ=e.zIndex;if(d.overlay){c.ui.dialog.maxZ+=1;d.overlay.$el.css("z-index",c.ui.dialog.overlay.maxZ=c.ui.dialog.maxZ)}a={scrollTop:d.element.scrollTop(),scrollLeft:d.element.scrollLeft()};c.ui.dialog.maxZ+=1;
d.uiDialog.css("z-index",c.ui.dialog.maxZ);d.element.attr(a);d._trigger("focus",b);return d},open:function(){if(!this._isOpen){var a=this,b=a.options,d=a.uiDialog;a.overlay=b.modal?new c.ui.dialog.overlay(a):null;a._size();a._position(b.position);d.show(b.show);a.moveToTop(true);b.modal&&d.bind("keypress.ui-dialog",function(e){if(e.keyCode===c.ui.keyCode.TAB){var g=c(":tabbable",this),f=g.filter(":first");g=g.filter(":last");if(e.target===g[0]&&!e.shiftKey){f.focus(1);return false}else if(e.target===
f[0]&&e.shiftKey){g.focus(1);return false}}});c(a.element.find(":tabbable").get().concat(d.find(".ui-dialog-buttonpane :tabbable").get().concat(d.get()))).eq(0).focus();a._isOpen=true;a._trigger("open");return a}},_createButtons:function(a){var b=this,d=false,e=c("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),g=c("<div></div>").addClass("ui-dialog-buttonset").appendTo(e);b.uiDialog.find(".ui-dialog-buttonpane").remove();typeof a==="object"&&a!==null&&c.each(a,
function(){return!(d=true)});if(d){c.each(a,function(f,h){h=c.isFunction(h)?{click:h,text:f}:h;var i=c('<button type="button"></button>').click(function(){h.click.apply(b.element[0],arguments)}).appendTo(g);c.each(h,function(j,k){if(j!=="click")j in o?i[j](k):i.attr(j,k)});c.fn.button&&i.button()});e.appendTo(b.uiDialog)}},_makeDraggable:function(){function a(f){return{position:f.position,offset:f.offset}}var b=this,d=b.options,e=c(document),g;b.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",
handle:".ui-dialog-titlebar",containment:"document",start:function(f,h){g=d.height==="auto"?"auto":c(this).height();c(this).height(c(this).height()).addClass("ui-dialog-dragging");b._trigger("dragStart",f,a(h))},drag:function(f,h){b._trigger("drag",f,a(h))},stop:function(f,h){d.position=[h.position.left-e.scrollLeft(),h.position.top-e.scrollTop()];c(this).removeClass("ui-dialog-dragging").height(g);b._trigger("dragStop",f,a(h));c.ui.dialog.overlay.resize()}})},_makeResizable:function(a){function b(f){return{originalPosition:f.originalPosition,
originalSize:f.originalSize,position:f.position,size:f.size}}a=a===l?this.options.resizable:a;var d=this,e=d.options,g=d.uiDialog.css("position");a=typeof a==="string"?a:"n,e,s,w,se,sw,ne,nw";d.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:d.element,maxWidth:e.maxWidth,maxHeight:e.maxHeight,minWidth:e.minWidth,minHeight:d._minHeight(),handles:a,start:function(f,h){c(this).addClass("ui-dialog-resizing");d._trigger("resizeStart",f,b(h))},resize:function(f,h){d._trigger("resize",
f,b(h))},stop:function(f,h){c(this).removeClass("ui-dialog-resizing");e.height=c(this).height();e.width=c(this).width();d._trigger("resizeStop",f,b(h));c.ui.dialog.overlay.resize()}}).css("position",g).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var a=this.options;return a.height==="auto"?a.minHeight:Math.min(a.minHeight,a.height)},_position:function(a){var b=[],d=[0,0],e;if(a){if(typeof a==="string"||typeof a==="object"&&"0"in a){b=a.split?a.split(" "):
[a[0],a[1]];if(b.length===1)b[1]=b[0];c.each(["left","top"],function(g,f){if(+b[g]===b[g]){d[g]=b[g];b[g]=f}});a={my:b.join(" "),at:b.join(" "),offset:d.join(" ")}}a=c.extend({},c.ui.dialog.prototype.options.position,a)}else a=c.ui.dialog.prototype.options.position;(e=this.uiDialog.is(":visible"))||this.uiDialog.show();this.uiDialog.css({top:0,left:0}).position(c.extend({of:window},a));e||this.uiDialog.hide()},_setOptions:function(a){var b=this,d={},e=false;c.each(a,function(g,f){b._setOption(g,f);
if(g in m)e=true;if(g in n)d[g]=f});e&&this._size();this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",d)},_setOption:function(a,b){var d=this,e=d.uiDialog;switch(a){case "beforeclose":a="beforeClose";break;case "buttons":d._createButtons(b);break;case "closeText":d.uiDialogTitlebarCloseText.text(""+b);break;case "dialogClass":e.removeClass(d.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+b);break;case "disabled":b?e.addClass("ui-dialog-disabled"):
e.removeClass("ui-dialog-disabled");break;case "draggable":var g=e.is(":data(draggable)");g&&!b&&e.draggable("destroy");!g&&b&&d._makeDraggable();break;case "position":d._position(b);break;case "resizable":(g=e.is(":data(resizable)"))&&!b&&e.resizable("destroy");g&&typeof b==="string"&&e.resizable("option","handles",b);!g&&b!==false&&d._makeResizable(b);break;case "title":c(".ui-dialog-title",d.uiDialogTitlebar).html(""+(b||"&#160;"));break}c.Widget.prototype._setOption.apply(d,arguments)},_size:function(){var a=
this.options,b,d,e=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0});if(a.minWidth>a.width)a.width=a.minWidth;b=this.uiDialog.css({height:"auto",width:a.width}).height();d=Math.max(0,a.minHeight-b);if(a.height==="auto")if(c.support.minHeight)this.element.css({minHeight:d,height:"auto"});else{this.uiDialog.show();a=this.element.css("height","auto").height();e||this.uiDialog.hide();this.element.height(Math.max(a,d))}else this.element.height(Math.max(a.height-
b,0));this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}});c.extend(c.ui.dialog,{version:"1.8.16",uuid:0,maxZ:0,getTitleId:function(a){a=a.attr("id");if(!a){this.uuid+=1;a=this.uuid}return"ui-dialog-title-"+a},overlay:function(a){this.$el=c.ui.dialog.overlay.create(a)}});c.extend(c.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:c.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(a){return a+".dialog-overlay"}).join(" "),
create:function(a){if(this.instances.length===0){setTimeout(function(){c.ui.dialog.overlay.instances.length&&c(document).bind(c.ui.dialog.overlay.events,function(d){if(c(d.target).zIndex()<c.ui.dialog.overlay.maxZ)return false})},1);c(document).bind("keydown.dialog-overlay",function(d){if(a.options.closeOnEscape&&!d.isDefaultPrevented()&&d.keyCode&&d.keyCode===c.ui.keyCode.ESCAPE){a.close(d);d.preventDefault()}});c(window).bind("resize.dialog-overlay",c.ui.dialog.overlay.resize)}var b=(this.oldInstances.pop()||
c("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({width:this.width(),height:this.height()});c.fn.bgiframe&&b.bgiframe();this.instances.push(b);return b},destroy:function(a){var b=c.inArray(a,this.instances);b!=-1&&this.oldInstances.push(this.instances.splice(b,1)[0]);this.instances.length===0&&c([document,window]).unbind(".dialog-overlay");a.remove();var d=0;c.each(this.instances,function(){d=Math.max(d,this.css("z-index"))});this.maxZ=d},height:function(){var a,b;if(c.browser.msie&&
c.browser.version<7){a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight);b=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight);return a<b?c(window).height()+"px":a+"px"}else return c(document).height()+"px"},width:function(){var a,b;if(c.browser.msie){a=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth);b=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth);return a<b?c(window).width()+"px":a+"px"}else return c(document).width()+
"px"},resize:function(){var a=c([]);c.each(c.ui.dialog.overlay.instances,function(){a=a.add(this)});a.css({width:0,height:0}).css({width:c.ui.dialog.overlay.width(),height:c.ui.dialog.overlay.height()})}});c.extend(c.ui.dialog.overlay.prototype,{destroy:function(){c.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);
;/*
 * jQuery UI Slider 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Slider
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.slider",d.ui.mouse,{widgetEventPrefix:"slide",options:{animate:false,distance:0,max:100,min:0,orientation:"horizontal",range:false,step:1,value:0,values:null},_create:function(){var a=this,b=this.options,c=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),f=b.values&&b.values.length||1,e=[];this._mouseSliding=this._keySliding=false;this._animateOff=true;this._handleIndex=null;this._detectOrientation();this._mouseInit();this.element.addClass("ui-slider ui-slider-"+
this.orientation+" ui-widget ui-widget-content ui-corner-all"+(b.disabled?" ui-slider-disabled ui-disabled":""));this.range=d([]);if(b.range){if(b.range===true){if(!b.values)b.values=[this._valueMin(),this._valueMin()];if(b.values.length&&b.values.length!==2)b.values=[b.values[0],b.values[0]]}this.range=d("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(b.range==="min"||b.range==="max"?" ui-slider-range-"+b.range:""))}for(var j=c.length;j<f;j+=1)e.push("<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>");
this.handles=c.add(d(e.join("")).appendTo(a.element));this.handle=this.handles.eq(0);this.handles.add(this.range).filter("a").click(function(g){g.preventDefault()}).hover(function(){b.disabled||d(this).addClass("ui-state-hover")},function(){d(this).removeClass("ui-state-hover")}).focus(function(){if(b.disabled)d(this).blur();else{d(".ui-slider .ui-state-focus").removeClass("ui-state-focus");d(this).addClass("ui-state-focus")}}).blur(function(){d(this).removeClass("ui-state-focus")});this.handles.each(function(g){d(this).data("index.ui-slider-handle",
g)});this.handles.keydown(function(g){var k=true,l=d(this).data("index.ui-slider-handle"),i,h,m;if(!a.options.disabled){switch(g.keyCode){case d.ui.keyCode.HOME:case d.ui.keyCode.END:case d.ui.keyCode.PAGE_UP:case d.ui.keyCode.PAGE_DOWN:case d.ui.keyCode.UP:case d.ui.keyCode.RIGHT:case d.ui.keyCode.DOWN:case d.ui.keyCode.LEFT:k=false;if(!a._keySliding){a._keySliding=true;d(this).addClass("ui-state-active");i=a._start(g,l);if(i===false)return}break}m=a.options.step;i=a.options.values&&a.options.values.length?
(h=a.values(l)):(h=a.value());switch(g.keyCode){case d.ui.keyCode.HOME:h=a._valueMin();break;case d.ui.keyCode.END:h=a._valueMax();break;case d.ui.keyCode.PAGE_UP:h=a._trimAlignValue(i+(a._valueMax()-a._valueMin())/5);break;case d.ui.keyCode.PAGE_DOWN:h=a._trimAlignValue(i-(a._valueMax()-a._valueMin())/5);break;case d.ui.keyCode.UP:case d.ui.keyCode.RIGHT:if(i===a._valueMax())return;h=a._trimAlignValue(i+m);break;case d.ui.keyCode.DOWN:case d.ui.keyCode.LEFT:if(i===a._valueMin())return;h=a._trimAlignValue(i-
m);break}a._slide(g,l,h);return k}}).keyup(function(g){var k=d(this).data("index.ui-slider-handle");if(a._keySliding){a._keySliding=false;a._stop(g,k);a._change(g,k);d(this).removeClass("ui-state-active")}});this._refreshValue();this._animateOff=false},destroy:function(){this.handles.remove();this.range.remove();this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");this._mouseDestroy();
return this},_mouseCapture:function(a){var b=this.options,c,f,e,j,g;if(b.disabled)return false;this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()};this.elementOffset=this.element.offset();c=this._normValueFromMouse({x:a.pageX,y:a.pageY});f=this._valueMax()-this._valueMin()+1;j=this;this.handles.each(function(k){var l=Math.abs(c-j.values(k));if(f>l){f=l;e=d(this);g=k}});if(b.range===true&&this.values(1)===b.min){g+=1;e=d(this.handles[g])}if(this._start(a,g)===false)return false;
this._mouseSliding=true;j._handleIndex=g;e.addClass("ui-state-active").focus();b=e.offset();this._clickOffset=!d(a.target).parents().andSelf().is(".ui-slider-handle")?{left:0,top:0}:{left:a.pageX-b.left-e.width()/2,top:a.pageY-b.top-e.height()/2-(parseInt(e.css("borderTopWidth"),10)||0)-(parseInt(e.css("borderBottomWidth"),10)||0)+(parseInt(e.css("marginTop"),10)||0)};this.handles.hasClass("ui-state-hover")||this._slide(a,g,c);return this._animateOff=true},_mouseStart:function(){return true},_mouseDrag:function(a){var b=
this._normValueFromMouse({x:a.pageX,y:a.pageY});this._slide(a,this._handleIndex,b);return false},_mouseStop:function(a){this.handles.removeClass("ui-state-active");this._mouseSliding=false;this._stop(a,this._handleIndex);this._change(a,this._handleIndex);this._clickOffset=this._handleIndex=null;return this._animateOff=false},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(a){var b;if(this.orientation==="horizontal"){b=
this.elementSize.width;a=a.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)}else{b=this.elementSize.height;a=a.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)}b=a/b;if(b>1)b=1;if(b<0)b=0;if(this.orientation==="vertical")b=1-b;a=this._valueMax()-this._valueMin();return this._trimAlignValue(this._valueMin()+b*a)},_start:function(a,b){var c={handle:this.handles[b],value:this.value()};if(this.options.values&&this.options.values.length){c.value=this.values(b);
c.values=this.values()}return this._trigger("start",a,c)},_slide:function(a,b,c){var f;if(this.options.values&&this.options.values.length){f=this.values(b?0:1);if(this.options.values.length===2&&this.options.range===true&&(b===0&&c>f||b===1&&c<f))c=f;if(c!==this.values(b)){f=this.values();f[b]=c;a=this._trigger("slide",a,{handle:this.handles[b],value:c,values:f});this.values(b?0:1);a!==false&&this.values(b,c,true)}}else if(c!==this.value()){a=this._trigger("slide",a,{handle:this.handles[b],value:c});
a!==false&&this.value(c)}},_stop:function(a,b){var c={handle:this.handles[b],value:this.value()};if(this.options.values&&this.options.values.length){c.value=this.values(b);c.values=this.values()}this._trigger("stop",a,c)},_change:function(a,b){if(!this._keySliding&&!this._mouseSliding){var c={handle:this.handles[b],value:this.value()};if(this.options.values&&this.options.values.length){c.value=this.values(b);c.values=this.values()}this._trigger("change",a,c)}},value:function(a){if(arguments.length){this.options.value=
this._trimAlignValue(a);this._refreshValue();this._change(null,0)}else return this._value()},values:function(a,b){var c,f,e;if(arguments.length>1){this.options.values[a]=this._trimAlignValue(b);this._refreshValue();this._change(null,a)}else if(arguments.length)if(d.isArray(arguments[0])){c=this.options.values;f=arguments[0];for(e=0;e<c.length;e+=1){c[e]=this._trimAlignValue(f[e]);this._change(null,e)}this._refreshValue()}else return this.options.values&&this.options.values.length?this._values(a):
this.value();else return this._values()},_setOption:function(a,b){var c,f=0;if(d.isArray(this.options.values))f=this.options.values.length;d.Widget.prototype._setOption.apply(this,arguments);switch(a){case "disabled":if(b){this.handles.filter(".ui-state-focus").blur();this.handles.removeClass("ui-state-hover");this.handles.propAttr("disabled",true);this.element.addClass("ui-disabled")}else{this.handles.propAttr("disabled",false);this.element.removeClass("ui-disabled")}break;case "orientation":this._detectOrientation();
this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation);this._refreshValue();break;case "value":this._animateOff=true;this._refreshValue();this._change(null,0);this._animateOff=false;break;case "values":this._animateOff=true;this._refreshValue();for(c=0;c<f;c+=1)this._change(null,c);this._animateOff=false;break}},_value:function(){var a=this.options.value;return a=this._trimAlignValue(a)},_values:function(a){var b,c;if(arguments.length){b=this.options.values[a];
return b=this._trimAlignValue(b)}else{b=this.options.values.slice();for(c=0;c<b.length;c+=1)b[c]=this._trimAlignValue(b[c]);return b}},_trimAlignValue:function(a){if(a<=this._valueMin())return this._valueMin();if(a>=this._valueMax())return this._valueMax();var b=this.options.step>0?this.options.step:1,c=(a-this._valueMin())%b;a=a-c;if(Math.abs(c)*2>=b)a+=c>0?b:-b;return parseFloat(a.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var a=
this.options.range,b=this.options,c=this,f=!this._animateOff?b.animate:false,e,j={},g,k,l,i;if(this.options.values&&this.options.values.length)this.handles.each(function(h){e=(c.values(h)-c._valueMin())/(c._valueMax()-c._valueMin())*100;j[c.orientation==="horizontal"?"left":"bottom"]=e+"%";d(this).stop(1,1)[f?"animate":"css"](j,b.animate);if(c.options.range===true)if(c.orientation==="horizontal"){if(h===0)c.range.stop(1,1)[f?"animate":"css"]({left:e+"%"},b.animate);if(h===1)c.range[f?"animate":"css"]({width:e-
g+"%"},{queue:false,duration:b.animate})}else{if(h===0)c.range.stop(1,1)[f?"animate":"css"]({bottom:e+"%"},b.animate);if(h===1)c.range[f?"animate":"css"]({height:e-g+"%"},{queue:false,duration:b.animate})}g=e});else{k=this.value();l=this._valueMin();i=this._valueMax();e=i!==l?(k-l)/(i-l)*100:0;j[c.orientation==="horizontal"?"left":"bottom"]=e+"%";this.handle.stop(1,1)[f?"animate":"css"](j,b.animate);if(a==="min"&&this.orientation==="horizontal")this.range.stop(1,1)[f?"animate":"css"]({width:e+"%"},
b.animate);if(a==="max"&&this.orientation==="horizontal")this.range[f?"animate":"css"]({width:100-e+"%"},{queue:false,duration:b.animate});if(a==="min"&&this.orientation==="vertical")this.range.stop(1,1)[f?"animate":"css"]({height:e+"%"},b.animate);if(a==="max"&&this.orientation==="vertical")this.range[f?"animate":"css"]({height:100-e+"%"},{queue:false,duration:b.animate})}}});d.extend(d.ui.slider,{version:"1.8.16"})})(jQuery);
;/*
 * jQuery UI Tabs 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Tabs
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 */
(function(d,p){function u(){return++v}function w(){return++x}var v=0,x=0;d.widget("ui.tabs",{options:{add:null,ajaxOptions:null,cache:false,cookie:null,collapsible:false,disable:null,disabled:[],enable:null,event:"click",fx:null,idPrefix:"ui-tabs-",load:null,panelTemplate:"<div></div>",remove:null,select:null,show:null,spinner:"<em>Loading&#8230;</em>",tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},_create:function(){this._tabify(true)},_setOption:function(b,e){if(b=="selected")this.options.collapsible&&
e==this.options.selected||this.select(e);else{this.options[b]=e;this._tabify()}},_tabId:function(b){return b.title&&b.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF-]/g,"")||this.options.idPrefix+u()},_sanitizeSelector:function(b){return b.replace(/:/g,"\\:")},_cookie:function(){var b=this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+w());return d.cookie.apply(null,[b].concat(d.makeArray(arguments)))},_ui:function(b,e){return{tab:b,panel:e,index:this.anchors.index(b)}},_cleanup:function(){this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function(){var b=
d(this);b.html(b.data("label.tabs")).removeData("label.tabs")})},_tabify:function(b){function e(g,f){g.css("display","");!d.support.opacity&&f.opacity&&g[0].style.removeAttribute("filter")}var a=this,c=this.options,h=/^#.+/;this.list=this.element.find("ol,ul").eq(0);this.lis=d(" > li:has(a[href])",this.list);this.anchors=this.lis.map(function(){return d("a",this)[0]});this.panels=d([]);this.anchors.each(function(g,f){var i=d(f).attr("href"),l=i.split("#")[0],q;if(l&&(l===location.toString().split("#")[0]||
(q=d("base")[0])&&l===q.href)){i=f.hash;f.href=i}if(h.test(i))a.panels=a.panels.add(a.element.find(a._sanitizeSelector(i)));else if(i&&i!=="#"){d.data(f,"href.tabs",i);d.data(f,"load.tabs",i.replace(/#.*$/,""));i=a._tabId(f);f.href="#"+i;f=a.element.find("#"+i);if(!f.length){f=d(c.panelTemplate).attr("id",i).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(a.panels[g-1]||a.list);f.data("destroy.tabs",true)}a.panels=a.panels.add(f)}else c.disabled.push(g)});if(b){this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");this.lis.addClass("ui-state-default ui-corner-top");this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");if(c.selected===p){location.hash&&this.anchors.each(function(g,f){if(f.hash==location.hash){c.selected=g;return false}});if(typeof c.selected!=="number"&&c.cookie)c.selected=parseInt(a._cookie(),10);if(typeof c.selected!=="number"&&this.lis.filter(".ui-tabs-selected").length)c.selected=
this.lis.index(this.lis.filter(".ui-tabs-selected"));c.selected=c.selected||(this.lis.length?0:-1)}else if(c.selected===null)c.selected=-1;c.selected=c.selected>=0&&this.anchors[c.selected]||c.selected<0?c.selected:0;c.disabled=d.unique(c.disabled.concat(d.map(this.lis.filter(".ui-state-disabled"),function(g){return a.lis.index(g)}))).sort();d.inArray(c.selected,c.disabled)!=-1&&c.disabled.splice(d.inArray(c.selected,c.disabled),1);this.panels.addClass("ui-tabs-hide");this.lis.removeClass("ui-tabs-selected ui-state-active");
if(c.selected>=0&&this.anchors.length){a.element.find(a._sanitizeSelector(a.anchors[c.selected].hash)).removeClass("ui-tabs-hide");this.lis.eq(c.selected).addClass("ui-tabs-selected ui-state-active");a.element.queue("tabs",function(){a._trigger("show",null,a._ui(a.anchors[c.selected],a.element.find(a._sanitizeSelector(a.anchors[c.selected].hash))[0]))});this.load(c.selected)}d(window).bind("unload",function(){a.lis.add(a.anchors).unbind(".tabs");a.lis=a.anchors=a.panels=null})}else c.selected=this.lis.index(this.lis.filter(".ui-tabs-selected"));
this.element[c.collapsible?"addClass":"removeClass"]("ui-tabs-collapsible");c.cookie&&this._cookie(c.selected,c.cookie);b=0;for(var j;j=this.lis[b];b++)d(j)[d.inArray(b,c.disabled)!=-1&&!d(j).hasClass("ui-tabs-selected")?"addClass":"removeClass"]("ui-state-disabled");c.cache===false&&this.anchors.removeData("cache.tabs");this.lis.add(this.anchors).unbind(".tabs");if(c.event!=="mouseover"){var k=function(g,f){f.is(":not(.ui-state-disabled)")&&f.addClass("ui-state-"+g)},n=function(g,f){f.removeClass("ui-state-"+
g)};this.lis.bind("mouseover.tabs",function(){k("hover",d(this))});this.lis.bind("mouseout.tabs",function(){n("hover",d(this))});this.anchors.bind("focus.tabs",function(){k("focus",d(this).closest("li"))});this.anchors.bind("blur.tabs",function(){n("focus",d(this).closest("li"))})}var m,o;if(c.fx)if(d.isArray(c.fx)){m=c.fx[0];o=c.fx[1]}else m=o=c.fx;var r=o?function(g,f){d(g).closest("li").addClass("ui-tabs-selected ui-state-active");f.hide().removeClass("ui-tabs-hide").animate(o,o.duration||"normal",
function(){e(f,o);a._trigger("show",null,a._ui(g,f[0]))})}:function(g,f){d(g).closest("li").addClass("ui-tabs-selected ui-state-active");f.removeClass("ui-tabs-hide");a._trigger("show",null,a._ui(g,f[0]))},s=m?function(g,f){f.animate(m,m.duration||"normal",function(){a.lis.removeClass("ui-tabs-selected ui-state-active");f.addClass("ui-tabs-hide");e(f,m);a.element.dequeue("tabs")})}:function(g,f){a.lis.removeClass("ui-tabs-selected ui-state-active");f.addClass("ui-tabs-hide");a.element.dequeue("tabs")};
this.anchors.bind(c.event+".tabs",function(){var g=this,f=d(g).closest("li"),i=a.panels.filter(":not(.ui-tabs-hide)"),l=a.element.find(a._sanitizeSelector(g.hash));if(f.hasClass("ui-tabs-selected")&&!c.collapsible||f.hasClass("ui-state-disabled")||f.hasClass("ui-state-processing")||a.panels.filter(":animated").length||a._trigger("select",null,a._ui(this,l[0]))===false){this.blur();return false}c.selected=a.anchors.index(this);a.abort();if(c.collapsible)if(f.hasClass("ui-tabs-selected")){c.selected=
-1;c.cookie&&a._cookie(c.selected,c.cookie);a.element.queue("tabs",function(){s(g,i)}).dequeue("tabs");this.blur();return false}else if(!i.length){c.cookie&&a._cookie(c.selected,c.cookie);a.element.queue("tabs",function(){r(g,l)});a.load(a.anchors.index(this));this.blur();return false}c.cookie&&a._cookie(c.selected,c.cookie);if(l.length){i.length&&a.element.queue("tabs",function(){s(g,i)});a.element.queue("tabs",function(){r(g,l)});a.load(a.anchors.index(this))}else throw"jQuery UI Tabs: Mismatching fragment identifier.";
d.browser.msie&&this.blur()});this.anchors.bind("click.tabs",function(){return false})},_getIndex:function(b){if(typeof b=="string")b=this.anchors.index(this.anchors.filter("[href$="+b+"]"));return b},destroy:function(){var b=this.options;this.abort();this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");this.anchors.each(function(){var e=
d.data(this,"href.tabs");if(e)this.href=e;var a=d(this).unbind(".tabs");d.each(["href","load","cache"],function(c,h){a.removeData(h+".tabs")})});this.lis.unbind(".tabs").add(this.panels).each(function(){d.data(this,"destroy.tabs")?d(this).remove():d(this).removeClass("ui-state-default ui-corner-top ui-tabs-selected ui-state-active ui-state-hover ui-state-focus ui-state-disabled ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide")});b.cookie&&this._cookie(null,b.cookie);return this},add:function(b,
e,a){if(a===p)a=this.anchors.length;var c=this,h=this.options;e=d(h.tabTemplate.replace(/#\{href\}/g,b).replace(/#\{label\}/g,e));b=!b.indexOf("#")?b.replace("#",""):this._tabId(d("a",e)[0]);e.addClass("ui-state-default ui-corner-top").data("destroy.tabs",true);var j=c.element.find("#"+b);j.length||(j=d(h.panelTemplate).attr("id",b).data("destroy.tabs",true));j.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");if(a>=this.lis.length){e.appendTo(this.list);j.appendTo(this.list[0].parentNode)}else{e.insertBefore(this.lis[a]);
j.insertBefore(this.panels[a])}h.disabled=d.map(h.disabled,function(k){return k>=a?++k:k});this._tabify();if(this.anchors.length==1){h.selected=0;e.addClass("ui-tabs-selected ui-state-active");j.removeClass("ui-tabs-hide");this.element.queue("tabs",function(){c._trigger("show",null,c._ui(c.anchors[0],c.panels[0]))});this.load(0)}this._trigger("add",null,this._ui(this.anchors[a],this.panels[a]));return this},remove:function(b){b=this._getIndex(b);var e=this.options,a=this.lis.eq(b).remove(),c=this.panels.eq(b).remove();
if(a.hasClass("ui-tabs-selected")&&this.anchors.length>1)this.select(b+(b+1<this.anchors.length?1:-1));e.disabled=d.map(d.grep(e.disabled,function(h){return h!=b}),function(h){return h>=b?--h:h});this._tabify();this._trigger("remove",null,this._ui(a.find("a")[0],c[0]));return this},enable:function(b){b=this._getIndex(b);var e=this.options;if(d.inArray(b,e.disabled)!=-1){this.lis.eq(b).removeClass("ui-state-disabled");e.disabled=d.grep(e.disabled,function(a){return a!=b});this._trigger("enable",null,
this._ui(this.anchors[b],this.panels[b]));return this}},disable:function(b){b=this._getIndex(b);var e=this.options;if(b!=e.selected){this.lis.eq(b).addClass("ui-state-disabled");e.disabled.push(b);e.disabled.sort();this._trigger("disable",null,this._ui(this.anchors[b],this.panels[b]))}return this},select:function(b){b=this._getIndex(b);if(b==-1)if(this.options.collapsible&&this.options.selected!=-1)b=this.options.selected;else return this;this.anchors.eq(b).trigger(this.options.event+".tabs");return this},
load:function(b){b=this._getIndex(b);var e=this,a=this.options,c=this.anchors.eq(b)[0],h=d.data(c,"load.tabs");this.abort();if(!h||this.element.queue("tabs").length!==0&&d.data(c,"cache.tabs"))this.element.dequeue("tabs");else{this.lis.eq(b).addClass("ui-state-processing");if(a.spinner){var j=d("span",c);j.data("label.tabs",j.html()).html(a.spinner)}this.xhr=d.ajax(d.extend({},a.ajaxOptions,{url:h,success:function(k,n){e.element.find(e._sanitizeSelector(c.hash)).html(k);e._cleanup();a.cache&&d.data(c,
"cache.tabs",true);e._trigger("load",null,e._ui(e.anchors[b],e.panels[b]));try{a.ajaxOptions.success(k,n)}catch(m){}},error:function(k,n){e._cleanup();e._trigger("load",null,e._ui(e.anchors[b],e.panels[b]));try{a.ajaxOptions.error(k,n,b,c)}catch(m){}}}));e.element.dequeue("tabs");return this}},abort:function(){this.element.queue([]);this.panels.stop(false,true);this.element.queue("tabs",this.element.queue("tabs").splice(-2,2));if(this.xhr){this.xhr.abort();delete this.xhr}this._cleanup();return this},
url:function(b,e){this.anchors.eq(b).removeData("cache.tabs").data("load.tabs",e);return this},length:function(){return this.anchors.length}});d.extend(d.ui.tabs,{version:"1.8.16"});d.extend(d.ui.tabs.prototype,{rotation:null,rotate:function(b,e){var a=this,c=this.options,h=a._rotate||(a._rotate=function(j){clearTimeout(a.rotation);a.rotation=setTimeout(function(){var k=c.selected;a.select(++k<a.anchors.length?k:0)},b);j&&j.stopPropagation()});e=a._unrotate||(a._unrotate=!e?function(j){j.clientX&&
a.rotate(null)}:function(){t=c.selected;h()});if(b){this.element.bind("tabsshow",h);this.anchors.bind(c.event+".tabs",e);h()}else{clearTimeout(a.rotation);this.element.unbind("tabsshow",h);this.anchors.unbind(c.event+".tabs",e);delete this._rotate;delete this._unrotate}return this}})})(jQuery);
;/*
 * jQuery UI Datepicker 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Datepicker
 *
 * Depends:
 *	jquery.ui.core.js
 */
(function(d,C){function M(){this.debug=false;this._curInst=null;this._keyEvent=false;this._disabledInputs=[];this._inDialog=this._datepickerShowing=false;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass=
"ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su",
"Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:false,showMonthAfterYear:false,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:false,changeYear:false,yearRange:"c-10:c+10",showOtherMonths:false,selectOtherMonths:false,showWeek:false,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",
minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:true,showButtonPanel:false,autoSize:false,disabled:false};d.extend(this._defaults,this.regional[""]);this.dpDiv=N(d('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function N(a){return a.bind("mouseout",
function(b){b=d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");b.length&&b.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(b){b=d(b.target).closest("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a");if(!(d.datepicker._isDisabledDatepicker(J.inline?a.parent()[0]:J.input[0])||!b.length)){b.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
b.addClass("ui-state-hover");b.hasClass("ui-datepicker-prev")&&b.addClass("ui-datepicker-prev-hover");b.hasClass("ui-datepicker-next")&&b.addClass("ui-datepicker-next-hover")}})}function H(a,b){d.extend(a,b);for(var c in b)if(b[c]==null||b[c]==C)a[c]=b[c];return a}d.extend(d.ui,{datepicker:{version:"1.8.16"}});var B=(new Date).getTime(),J;d.extend(M.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},
setDefaults:function(a){H(this._defaults,a||{});return this},_attachDatepicker:function(a,b){var c=null;for(var e in this._defaults){var f=a.getAttribute("date:"+e);if(f){c=c||{};try{c[e]=eval(f)}catch(h){c[e]=f}}}e=a.nodeName.toLowerCase();f=e=="div"||e=="span";if(!a.id){this.uuid+=1;a.id="dp"+this.uuid}var i=this._newInst(d(a),f);i.settings=d.extend({},b||{},c||{});if(e=="input")this._connectDatepicker(a,i);else f&&this._inlineDatepicker(a,i)},_newInst:function(a,b){return{id:a[0].id.replace(/([^A-Za-z0-9_-])/g,
"\\\\$1"),input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:!b?this.dpDiv:N(d('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}},_connectDatepicker:function(a,b){var c=d(a);b.append=d([]);b.trigger=d([]);if(!c.hasClass(this.markerClassName)){this._attachments(c,b);c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",
function(e,f,h){b.settings[f]=h}).bind("getData.datepicker",function(e,f){return this._get(b,f)});this._autoSize(b);d.data(a,"datepicker",b);b.settings.disabled&&this._disableDatepicker(a)}},_attachments:function(a,b){var c=this._get(b,"appendText"),e=this._get(b,"isRTL");b.append&&b.append.remove();if(c){b.append=d('<span class="'+this._appendClass+'">'+c+"</span>");a[e?"before":"after"](b.append)}a.unbind("focus",this._showDatepicker);b.trigger&&b.trigger.remove();c=this._get(b,"showOn");if(c==
"focus"||c=="both")a.focus(this._showDatepicker);if(c=="button"||c=="both"){c=this._get(b,"buttonText");var f=this._get(b,"buttonImage");b.trigger=d(this._get(b,"buttonImageOnly")?d("<img/>").addClass(this._triggerClass).attr({src:f,alt:c,title:c}):d('<button type="button"></button>').addClass(this._triggerClass).html(f==""?c:d("<img/>").attr({src:f,alt:c,title:c})));a[e?"before":"after"](b.trigger);b.trigger.click(function(){d.datepicker._datepickerShowing&&d.datepicker._lastInput==a[0]?d.datepicker._hideDatepicker():
d.datepicker._showDatepicker(a[0]);return false})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var e=function(f){for(var h=0,i=0,g=0;g<f.length;g++)if(f[g].length>h){h=f[g].length;i=g}return i};b.setMonth(e(this._get(a,c.match(/MM/)?"monthNames":"monthNamesShort")));b.setDate(e(this._get(a,c.match(/DD/)?"dayNames":"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,
b){var c=d(a);if(!c.hasClass(this.markerClassName)){c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(e,f,h){b.settings[f]=h}).bind("getData.datepicker",function(e,f){return this._get(b,f)});d.data(a,"datepicker",b);this._setDate(b,this._getDefaultDate(b),true);this._updateDatepicker(b);this._updateAlternate(b);b.settings.disabled&&this._disableDatepicker(a);b.dpDiv.css("display","block")}},_dialogDatepicker:function(a,b,c,e,f){a=this._dialogInst;if(!a){this.uuid+=
1;this._dialogInput=d('<input type="text" id="'+("dp"+this.uuid)+'" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');this._dialogInput.keydown(this._doKeyDown);d("body").append(this._dialogInput);a=this._dialogInst=this._newInst(this._dialogInput,false);a.settings={};d.data(this._dialogInput[0],"datepicker",a)}H(a.settings,e||{});b=b&&b.constructor==Date?this._formatDate(a,b):b;this._dialogInput.val(b);this._pos=f?f.length?f:[f.pageX,f.pageY]:null;if(!this._pos)this._pos=[document.documentElement.clientWidth/
2-100+(document.documentElement.scrollLeft||document.body.scrollLeft),document.documentElement.clientHeight/2-150+(document.documentElement.scrollTop||document.body.scrollTop)];this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px");a.settings.onSelect=c;this._inDialog=true;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);d.blockUI&&d.blockUI(this.dpDiv);d.data(this._dialogInput[0],"datepicker",a);return this},_destroyDatepicker:function(a){var b=
d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();d.removeData(a,"datepicker");if(e=="input"){c.append.remove();c.trigger.remove();b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)}else if(e=="div"||e=="span")b.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(a){var b=d(a),c=d.data(a,"datepicker");if(b.hasClass(this.markerClassName)){var e=
a.nodeName.toLowerCase();if(e=="input"){a.disabled=false;c.trigger.filter("button").each(function(){this.disabled=false}).end().filter("img").css({opacity:"1.0",cursor:""})}else if(e=="div"||e=="span"){b=b.children("."+this._inlineClass);b.children().removeClass("ui-state-disabled");b.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")}this._disabledInputs=d.map(this._disabledInputs,function(f){return f==a?null:f})}},_disableDatepicker:function(a){var b=d(a),c=d.data(a,
"datepicker");if(b.hasClass(this.markerClassName)){var e=a.nodeName.toLowerCase();if(e=="input"){a.disabled=true;c.trigger.filter("button").each(function(){this.disabled=true}).end().filter("img").css({opacity:"0.5",cursor:"default"})}else if(e=="div"||e=="span"){b=b.children("."+this._inlineClass);b.children().addClass("ui-state-disabled");b.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled","disabled")}this._disabledInputs=d.map(this._disabledInputs,function(f){return f==
a?null:f});this._disabledInputs[this._disabledInputs.length]=a}},_isDisabledDatepicker:function(a){if(!a)return false;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return true;return false},_getInst:function(a){try{return d.data(a,"datepicker")}catch(b){throw"Missing instance data for this datepicker";}},_optionDatepicker:function(a,b,c){var e=this._getInst(a);if(arguments.length==2&&typeof b=="string")return b=="defaults"?d.extend({},d.datepicker._defaults):e?b=="all"?
d.extend({},e.settings):this._get(e,b):null;var f=b||{};if(typeof b=="string"){f={};f[b]=c}if(e){this._curInst==e&&this._hideDatepicker();var h=this._getDateDatepicker(a,true),i=this._getMinMaxDate(e,"min"),g=this._getMinMaxDate(e,"max");H(e.settings,f);if(i!==null&&f.dateFormat!==C&&f.minDate===C)e.settings.minDate=this._formatDate(e,i);if(g!==null&&f.dateFormat!==C&&f.maxDate===C)e.settings.maxDate=this._formatDate(e,g);this._attachments(d(a),e);this._autoSize(e);this._setDate(e,h);this._updateAlternate(e);
this._updateDatepicker(e)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){(a=this._getInst(a))&&this._updateDatepicker(a)},_setDateDatepicker:function(a,b){if(a=this._getInst(a)){this._setDate(a,b);this._updateDatepicker(a);this._updateAlternate(a)}},_getDateDatepicker:function(a,b){(a=this._getInst(a))&&!a.inline&&this._setDateFromField(a,b);return a?this._getDate(a):null},_doKeyDown:function(a){var b=d.datepicker._getInst(a.target),c=true,e=b.dpDiv.is(".ui-datepicker-rtl");
b._keyEvent=true;if(d.datepicker._datepickerShowing)switch(a.keyCode){case 9:d.datepicker._hideDatepicker();c=false;break;case 13:c=d("td."+d.datepicker._dayOverClass+":not(."+d.datepicker._currentClass+")",b.dpDiv);c[0]&&d.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,c[0]);if(a=d.datepicker._get(b,"onSelect")){c=d.datepicker._formatDate(b);a.apply(b.input?b.input[0]:null,[c,b])}else d.datepicker._hideDatepicker();return false;case 27:d.datepicker._hideDatepicker();break;case 33:d.datepicker._adjustDate(a.target,
a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 34:d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,"stepMonths"),"M");break;case 35:if(a.ctrlKey||a.metaKey)d.datepicker._clearDate(a.target);c=a.ctrlKey||a.metaKey;break;case 36:if(a.ctrlKey||a.metaKey)d.datepicker._gotoToday(a.target);c=a.ctrlKey||a.metaKey;break;case 37:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?+1:-1,"D");c=
a.ctrlKey||a.metaKey;if(a.originalEvent.altKey)d.datepicker._adjustDate(a.target,a.ctrlKey?-d.datepicker._get(b,"stepBigMonths"):-d.datepicker._get(b,"stepMonths"),"M");break;case 38:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,-7,"D");c=a.ctrlKey||a.metaKey;break;case 39:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,e?-1:+1,"D");c=a.ctrlKey||a.metaKey;if(a.originalEvent.altKey)d.datepicker._adjustDate(a.target,a.ctrlKey?+d.datepicker._get(b,"stepBigMonths"):+d.datepicker._get(b,
"stepMonths"),"M");break;case 40:if(a.ctrlKey||a.metaKey)d.datepicker._adjustDate(a.target,+7,"D");c=a.ctrlKey||a.metaKey;break;default:c=false}else if(a.keyCode==36&&a.ctrlKey)d.datepicker._showDatepicker(this);else c=false;if(c){a.preventDefault();a.stopPropagation()}},_doKeyPress:function(a){var b=d.datepicker._getInst(a.target);if(d.datepicker._get(b,"constrainInput")){b=d.datepicker._possibleChars(d.datepicker._get(b,"dateFormat"));var c=String.fromCharCode(a.charCode==C?a.keyCode:a.charCode);
return a.ctrlKey||a.metaKey||c<" "||!b||b.indexOf(c)>-1}},_doKeyUp:function(a){a=d.datepicker._getInst(a.target);if(a.input.val()!=a.lastVal)try{if(d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),a.input?a.input.val():null,d.datepicker._getFormatConfig(a))){d.datepicker._setDateFromField(a);d.datepicker._updateAlternate(a);d.datepicker._updateDatepicker(a)}}catch(b){d.datepicker.log(b)}return true},_showDatepicker:function(a){a=a.target||a;if(a.nodeName.toLowerCase()!="input")a=d("input",
a.parentNode)[0];if(!(d.datepicker._isDisabledDatepicker(a)||d.datepicker._lastInput==a)){var b=d.datepicker._getInst(a);if(d.datepicker._curInst&&d.datepicker._curInst!=b){d.datepicker._datepickerShowing&&d.datepicker._triggerOnClose(d.datepicker._curInst);d.datepicker._curInst.dpDiv.stop(true,true)}var c=d.datepicker._get(b,"beforeShow");c=c?c.apply(a,[a,b]):{};if(c!==false){H(b.settings,c);b.lastVal=null;d.datepicker._lastInput=a;d.datepicker._setDateFromField(b);if(d.datepicker._inDialog)a.value=
"";if(!d.datepicker._pos){d.datepicker._pos=d.datepicker._findPos(a);d.datepicker._pos[1]+=a.offsetHeight}var e=false;d(a).parents().each(function(){e|=d(this).css("position")=="fixed";return!e});if(e&&d.browser.opera){d.datepicker._pos[0]-=document.documentElement.scrollLeft;d.datepicker._pos[1]-=document.documentElement.scrollTop}c={left:d.datepicker._pos[0],top:d.datepicker._pos[1]};d.datepicker._pos=null;b.dpDiv.empty();b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});d.datepicker._updateDatepicker(b);
c=d.datepicker._checkOffset(b,c,e);b.dpDiv.css({position:d.datepicker._inDialog&&d.blockUI?"static":e?"fixed":"absolute",display:"none",left:c.left+"px",top:c.top+"px"});if(!b.inline){c=d.datepicker._get(b,"showAnim");var f=d.datepicker._get(b,"duration"),h=function(){var i=b.dpDiv.find("iframe.ui-datepicker-cover");if(i.length){var g=d.datepicker._getBorders(b.dpDiv);i.css({left:-g[0],top:-g[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex(d(a).zIndex()+1);d.datepicker._datepickerShowing=
true;d.effects&&d.effects[c]?b.dpDiv.show(c,d.datepicker._get(b,"showOptions"),f,h):b.dpDiv[c||"show"](c?f:null,h);if(!c||!f)h();b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus();d.datepicker._curInst=b}}}},_updateDatepicker:function(a){this.maxRows=4;var b=d.datepicker._getBorders(a.dpDiv);J=a;a.dpDiv.empty().append(this._generateHTML(a));var c=a.dpDiv.find("iframe.ui-datepicker-cover");c.length&&c.css({left:-b[0],top:-b[1],width:a.dpDiv.outerWidth(),height:a.dpDiv.outerHeight()});
a.dpDiv.find("."+this._dayOverClass+" a").mouseover();b=this._getNumberOfMonths(a);c=b[1];a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");c>1&&a.dpDiv.addClass("ui-datepicker-multi-"+c).css("width",17*c+"em");a.dpDiv[(b[0]!=1||b[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi");a.dpDiv[(this._get(a,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");a==d.datepicker._curInst&&d.datepicker._datepickerShowing&&a.input&&a.input.is(":visible")&&
!a.input.is(":disabled")&&a.input[0]!=document.activeElement&&a.input.focus();if(a.yearshtml){var e=a.yearshtml;setTimeout(function(){e===a.yearshtml&&a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);e=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(c){return{thin:1,medium:2,thick:3}[c]||c};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(a,b,c){var e=a.dpDiv.outerWidth(),f=a.dpDiv.outerHeight(),
h=a.input?a.input.outerWidth():0,i=a.input?a.input.outerHeight():0,g=document.documentElement.clientWidth+d(document).scrollLeft(),j=document.documentElement.clientHeight+d(document).scrollTop();b.left-=this._get(a,"isRTL")?e-h:0;b.left-=c&&b.left==a.input.offset().left?d(document).scrollLeft():0;b.top-=c&&b.top==a.input.offset().top+i?d(document).scrollTop():0;b.left-=Math.min(b.left,b.left+e>g&&g>e?Math.abs(b.left+e-g):0);b.top-=Math.min(b.top,b.top+f>j&&j>f?Math.abs(f+i):0);return b},_findPos:function(a){for(var b=
this._get(this._getInst(a),"isRTL");a&&(a.type=="hidden"||a.nodeType!=1||d.expr.filters.hidden(a));)a=a[b?"previousSibling":"nextSibling"];a=d(a).offset();return[a.left,a.top]},_triggerOnClose:function(a){var b=this._get(a,"onClose");if(b)b.apply(a.input?a.input[0]:null,[a.input?a.input.val():"",a])},_hideDatepicker:function(a){var b=this._curInst;if(!(!b||a&&b!=d.data(a,"datepicker")))if(this._datepickerShowing){a=this._get(b,"showAnim");var c=this._get(b,"duration"),e=function(){d.datepicker._tidyDialog(b);
this._curInst=null};d.effects&&d.effects[a]?b.dpDiv.hide(a,d.datepicker._get(b,"showOptions"),c,e):b.dpDiv[a=="slideDown"?"slideUp":a=="fadeIn"?"fadeOut":"hide"](a?c:null,e);a||e();d.datepicker._triggerOnClose(b);this._datepickerShowing=false;this._lastInput=null;if(this._inDialog){this._dialogInput.css({position:"absolute",left:"0",top:"-100px"});if(d.blockUI){d.unblockUI();d("body").append(this.dpDiv)}}this._inDialog=false}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},
_checkExternalClick:function(a){if(d.datepicker._curInst){a=d(a.target);a[0].id!=d.datepicker._mainDivId&&a.parents("#"+d.datepicker._mainDivId).length==0&&!a.hasClass(d.datepicker.markerClassName)&&!a.hasClass(d.datepicker._triggerClass)&&d.datepicker._datepickerShowing&&!(d.datepicker._inDialog&&d.blockUI)&&d.datepicker._hideDatepicker()}},_adjustDate:function(a,b,c){a=d(a);var e=this._getInst(a[0]);if(!this._isDisabledDatepicker(a[0])){this._adjustInstDate(e,b+(c=="M"?this._get(e,"showCurrentAtPos"):
0),c);this._updateDatepicker(e)}},_gotoToday:function(a){a=d(a);var b=this._getInst(a[0]);if(this._get(b,"gotoCurrent")&&b.currentDay){b.selectedDay=b.currentDay;b.drawMonth=b.selectedMonth=b.currentMonth;b.drawYear=b.selectedYear=b.currentYear}else{var c=new Date;b.selectedDay=c.getDate();b.drawMonth=b.selectedMonth=c.getMonth();b.drawYear=b.selectedYear=c.getFullYear()}this._notifyChange(b);this._adjustDate(a)},_selectMonthYear:function(a,b,c){a=d(a);var e=this._getInst(a[0]);e["selected"+(c=="M"?
"Month":"Year")]=e["draw"+(c=="M"?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10);this._notifyChange(e);this._adjustDate(a)},_selectDay:function(a,b,c,e){var f=d(a);if(!(d(e).hasClass(this._unselectableClass)||this._isDisabledDatepicker(f[0]))){f=this._getInst(f[0]);f.selectedDay=f.currentDay=d("a",e).html();f.selectedMonth=f.currentMonth=b;f.selectedYear=f.currentYear=c;this._selectDate(a,this._formatDate(f,f.currentDay,f.currentMonth,f.currentYear))}},_clearDate:function(a){a=d(a);
this._getInst(a[0]);this._selectDate(a,"")},_selectDate:function(a,b){a=this._getInst(d(a)[0]);b=b!=null?b:this._formatDate(a);a.input&&a.input.val(b);this._updateAlternate(a);var c=this._get(a,"onSelect");if(c)c.apply(a.input?a.input[0]:null,[b,a]);else a.input&&a.input.trigger("change");if(a.inline)this._updateDatepicker(a);else{this._hideDatepicker();this._lastInput=a.input[0];typeof a.input[0]!="object"&&a.input.focus();this._lastInput=null}},_updateAlternate:function(a){var b=this._get(a,"altField");
if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),e=this._getDate(a),f=this.formatDate(c,e,this._getFormatConfig(a));d(b).each(function(){d(this).val(f)})}},noWeekends:function(a){a=a.getDay();return[a>0&&a<6,""]},iso8601Week:function(a){a=new Date(a.getTime());a.setDate(a.getDate()+4-(a.getDay()||7));var b=a.getTime();a.setMonth(0);a.setDate(1);return Math.floor(Math.round((b-a)/864E5)/7)+1},parseDate:function(a,b,c){if(a==null||b==null)throw"Invalid arguments";b=typeof b=="object"?
b.toString():b+"";if(b=="")return null;var e=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff;e=typeof e!="string"?e:(new Date).getFullYear()%100+parseInt(e,10);for(var f=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,h=(c?c.dayNames:null)||this._defaults.dayNames,i=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,g=(c?c.monthNames:null)||this._defaults.monthNames,j=c=-1,l=-1,u=-1,k=false,o=function(p){(p=A+1<a.length&&a.charAt(A+1)==p)&&A++;return p},m=function(p){var D=
o(p);p=new RegExp("^\\d{1,"+(p=="@"?14:p=="!"?20:p=="y"&&D?4:p=="o"?3:2)+"}");p=b.substring(q).match(p);if(!p)throw"Missing number at position "+q;q+=p[0].length;return parseInt(p[0],10)},n=function(p,D,K){p=d.map(o(p)?K:D,function(w,x){return[[x,w]]}).sort(function(w,x){return-(w[1].length-x[1].length)});var E=-1;d.each(p,function(w,x){w=x[1];if(b.substr(q,w.length).toLowerCase()==w.toLowerCase()){E=x[0];q+=w.length;return false}});if(E!=-1)return E+1;else throw"Unknown name at position "+q;},s=
function(){if(b.charAt(q)!=a.charAt(A))throw"Unexpected literal at position "+q;q++},q=0,A=0;A<a.length;A++)if(k)if(a.charAt(A)=="'"&&!o("'"))k=false;else s();else switch(a.charAt(A)){case "d":l=m("d");break;case "D":n("D",f,h);break;case "o":u=m("o");break;case "m":j=m("m");break;case "M":j=n("M",i,g);break;case "y":c=m("y");break;case "@":var v=new Date(m("@"));c=v.getFullYear();j=v.getMonth()+1;l=v.getDate();break;case "!":v=new Date((m("!")-this._ticksTo1970)/1E4);c=v.getFullYear();j=v.getMonth()+
1;l=v.getDate();break;case "'":if(o("'"))s();else k=true;break;default:s()}if(q<b.length)throw"Extra/unparsed characters found in date: "+b.substring(q);if(c==-1)c=(new Date).getFullYear();else if(c<100)c+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c<=e?0:-100);if(u>-1){j=1;l=u;do{e=this._getDaysInMonth(c,j-1);if(l<=e)break;j++;l-=e}while(1)}v=this._daylightSavingAdjust(new Date(c,j-1,l));if(v.getFullYear()!=c||v.getMonth()+1!=j||v.getDate()!=l)throw"Invalid date";return v},ATOM:"yy-mm-dd",
COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1E7,formatDate:function(a,b,c){if(!b)return"";var e=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,h=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort;c=(c?c.monthNames:
null)||this._defaults.monthNames;var i=function(o){(o=k+1<a.length&&a.charAt(k+1)==o)&&k++;return o},g=function(o,m,n){m=""+m;if(i(o))for(;m.length<n;)m="0"+m;return m},j=function(o,m,n,s){return i(o)?s[m]:n[m]},l="",u=false;if(b)for(var k=0;k<a.length;k++)if(u)if(a.charAt(k)=="'"&&!i("'"))u=false;else l+=a.charAt(k);else switch(a.charAt(k)){case "d":l+=g("d",b.getDate(),2);break;case "D":l+=j("D",b.getDay(),e,f);break;case "o":l+=g("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-
(new Date(b.getFullYear(),0,0)).getTime())/864E5),3);break;case "m":l+=g("m",b.getMonth()+1,2);break;case "M":l+=j("M",b.getMonth(),h,c);break;case "y":l+=i("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100;break;case "@":l+=b.getTime();break;case "!":l+=b.getTime()*1E4+this._ticksTo1970;break;case "'":if(i("'"))l+="'";else u=true;break;default:l+=a.charAt(k)}return l},_possibleChars:function(a){for(var b="",c=false,e=function(h){(h=f+1<a.length&&a.charAt(f+1)==h)&&f++;return h},f=
0;f<a.length;f++)if(c)if(a.charAt(f)=="'"&&!e("'"))c=false;else b+=a.charAt(f);else switch(a.charAt(f)){case "d":case "m":case "y":case "@":b+="0123456789";break;case "D":case "M":return null;case "'":if(e("'"))b+="'";else c=true;break;default:b+=a.charAt(f)}return b},_get:function(a,b){return a.settings[b]!==C?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()!=a.lastVal){var c=this._get(a,"dateFormat"),e=a.lastVal=a.input?a.input.val():null,f,h;f=h=this._getDefaultDate(a);
var i=this._getFormatConfig(a);try{f=this.parseDate(c,e,i)||h}catch(g){this.log(g);e=b?"":e}a.selectedDay=f.getDate();a.drawMonth=a.selectedMonth=f.getMonth();a.drawYear=a.selectedYear=f.getFullYear();a.currentDay=e?f.getDate():0;a.currentMonth=e?f.getMonth():0;a.currentYear=e?f.getFullYear():0;this._adjustInstDate(a)}},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){var e=function(h){var i=new Date;
i.setDate(i.getDate()+h);return i},f=function(h){try{return d.datepicker.parseDate(d.datepicker._get(a,"dateFormat"),h,d.datepicker._getFormatConfig(a))}catch(i){}var g=(h.toLowerCase().match(/^c/)?d.datepicker._getDate(a):null)||new Date,j=g.getFullYear(),l=g.getMonth();g=g.getDate();for(var u=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,k=u.exec(h);k;){switch(k[2]||"d"){case "d":case "D":g+=parseInt(k[1],10);break;case "w":case "W":g+=parseInt(k[1],10)*7;break;case "m":case "M":l+=parseInt(k[1],10);g=
Math.min(g,d.datepicker._getDaysInMonth(j,l));break;case "y":case "Y":j+=parseInt(k[1],10);g=Math.min(g,d.datepicker._getDaysInMonth(j,l));break}k=u.exec(h)}return new Date(j,l,g)};if(b=(b=b==null||b===""?c:typeof b=="string"?f(b):typeof b=="number"?isNaN(b)?c:e(b):new Date(b.getTime()))&&b.toString()=="Invalid Date"?c:b){b.setHours(0);b.setMinutes(0);b.setSeconds(0);b.setMilliseconds(0)}return this._daylightSavingAdjust(b)},_daylightSavingAdjust:function(a){if(!a)return null;a.setHours(a.getHours()>
12?a.getHours()+2:0);return a},_setDate:function(a,b,c){var e=!b,f=a.selectedMonth,h=a.selectedYear;b=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();if((f!=a.selectedMonth||h!=a.selectedYear)&&!c)this._notifyChange(a);this._adjustInstDate(a);if(a.input)a.input.val(e?"":this._formatDate(a))},_getDate:function(a){return!a.currentYear||a.input&&
a.input.val()==""?null:this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay))},_generateHTML:function(a){var b=new Date;b=this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._get(a,"isRTL"),e=this._get(a,"showButtonPanel"),f=this._get(a,"hideIfNoPrevNext"),h=this._get(a,"navigationAsDateFormat"),i=this._getNumberOfMonths(a),g=this._get(a,"showCurrentAtPos"),j=this._get(a,"stepMonths"),l=i[0]!=1||i[1]!=1,u=this._daylightSavingAdjust(!a.currentDay?
new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)),k=this._getMinMaxDate(a,"min"),o=this._getMinMaxDate(a,"max");g=a.drawMonth-g;var m=a.drawYear;if(g<0){g+=12;m--}if(o){var n=this._daylightSavingAdjust(new Date(o.getFullYear(),o.getMonth()-i[0]*i[1]+1,o.getDate()));for(n=k&&n<k?k:n;this._daylightSavingAdjust(new Date(m,g,1))>n;){g--;if(g<0){g=11;m--}}}a.drawMonth=g;a.drawYear=m;n=this._get(a,"prevText");n=!h?n:this.formatDate(n,this._daylightSavingAdjust(new Date(m,g-j,1)),this._getFormatConfig(a));
n=this._canAdjustMonth(a,-1,m,g)?'<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_'+B+".datepicker._adjustDate('#"+a.id+"', -"+j+", 'M');\" title=\""+n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>":f?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+n+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+n+"</span></a>";var s=this._get(a,"nextText");s=!h?s:this.formatDate(s,this._daylightSavingAdjust(new Date(m,
g+j,1)),this._getFormatConfig(a));f=this._canAdjustMonth(a,+1,m,g)?'<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_'+B+".datepicker._adjustDate('#"+a.id+"', +"+j+", 'M');\" title=\""+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>":f?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>";j=this._get(a,"currentText");s=this._get(a,"gotoCurrent")&&
a.currentDay?u:b;j=!h?j:this.formatDate(j,s,this._getFormatConfig(a));h=!a.inline?'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_'+B+'.datepicker._hideDatepicker();">'+this._get(a,"closeText")+"</button>":"";e=e?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?h:"")+(this._isInRange(a,s)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_'+
B+".datepicker._gotoToday('#"+a.id+"');\">"+j+"</button>":"")+(c?"":h)+"</div>":"";h=parseInt(this._get(a,"firstDay"),10);h=isNaN(h)?0:h;j=this._get(a,"showWeek");s=this._get(a,"dayNames");this._get(a,"dayNamesShort");var q=this._get(a,"dayNamesMin"),A=this._get(a,"monthNames"),v=this._get(a,"monthNamesShort"),p=this._get(a,"beforeShowDay"),D=this._get(a,"showOtherMonths"),K=this._get(a,"selectOtherMonths");this._get(a,"calculateWeek");for(var E=this._getDefaultDate(a),w="",x=0;x<i[0];x++){var O=
"";this.maxRows=4;for(var G=0;G<i[1];G++){var P=this._daylightSavingAdjust(new Date(m,g,a.selectedDay)),t=" ui-corner-all",y="";if(l){y+='<div class="ui-datepicker-group';if(i[1]>1)switch(G){case 0:y+=" ui-datepicker-group-first";t=" ui-corner-"+(c?"right":"left");break;case i[1]-1:y+=" ui-datepicker-group-last";t=" ui-corner-"+(c?"left":"right");break;default:y+=" ui-datepicker-group-middle";t="";break}y+='">'}y+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+t+'">'+(/all|left/.test(t)&&
x==0?c?f:n:"")+(/all|right/.test(t)&&x==0?c?n:f:"")+this._generateMonthYearHeader(a,g,m,k,o,x>0||G>0,A,v)+'</div><table class="ui-datepicker-calendar"><thead><tr>';var z=j?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"";for(t=0;t<7;t++){var r=(t+h)%7;z+="<th"+((t+h+6)%7>=5?' class="ui-datepicker-week-end"':"")+'><span title="'+s[r]+'">'+q[r]+"</span></th>"}y+=z+"</tr></thead><tbody>";z=this._getDaysInMonth(m,g);if(m==a.selectedYear&&g==a.selectedMonth)a.selectedDay=Math.min(a.selectedDay,
z);t=(this._getFirstDayOfMonth(m,g)-h+7)%7;z=Math.ceil((t+z)/7);this.maxRows=z=l?this.maxRows>z?this.maxRows:z:z;r=this._daylightSavingAdjust(new Date(m,g,1-t));for(var Q=0;Q<z;Q++){y+="<tr>";var R=!j?"":'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(r)+"</td>";for(t=0;t<7;t++){var I=p?p.apply(a.input?a.input[0]:null,[r]):[true,""],F=r.getMonth()!=g,L=F&&!K||!I[0]||k&&r<k||o&&r>o;R+='<td class="'+((t+h+6)%7>=5?" ui-datepicker-week-end":"")+(F?" ui-datepicker-other-month":"")+(r.getTime()==
P.getTime()&&g==a.selectedMonth&&a._keyEvent||E.getTime()==r.getTime()&&E.getTime()==P.getTime()?" "+this._dayOverClass:"")+(L?" "+this._unselectableClass+" ui-state-disabled":"")+(F&&!D?"":" "+I[1]+(r.getTime()==u.getTime()?" "+this._currentClass:"")+(r.getTime()==b.getTime()?" ui-datepicker-today":""))+'"'+((!F||D)&&I[2]?' title="'+I[2]+'"':"")+(L?"":' onclick="DP_jQuery_'+B+".datepicker._selectDay('#"+a.id+"',"+r.getMonth()+","+r.getFullYear()+', this);return false;"')+">"+(F&&!D?"&#xa0;":L?'<span class="ui-state-default">'+
r.getDate()+"</span>":'<a class="ui-state-default'+(r.getTime()==b.getTime()?" ui-state-highlight":"")+(r.getTime()==u.getTime()?" ui-state-active":"")+(F?" ui-priority-secondary":"")+'" href="#">'+r.getDate()+"</a>")+"</td>";r.setDate(r.getDate()+1);r=this._daylightSavingAdjust(r)}y+=R+"</tr>"}g++;if(g>11){g=0;m++}y+="</tbody></table>"+(l?"</div>"+(i[0]>0&&G==i[1]-1?'<div class="ui-datepicker-row-break"></div>':""):"");O+=y}w+=O}w+=e+(d.browser.msie&&parseInt(d.browser.version,10)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':
"");a._keyEvent=false;return w},_generateMonthYearHeader:function(a,b,c,e,f,h,i,g){var j=this._get(a,"changeMonth"),l=this._get(a,"changeYear"),u=this._get(a,"showMonthAfterYear"),k='<div class="ui-datepicker-title">',o="";if(h||!j)o+='<span class="ui-datepicker-month">'+i[b]+"</span>";else{i=e&&e.getFullYear()==c;var m=f&&f.getFullYear()==c;o+='<select class="ui-datepicker-month" onchange="DP_jQuery_'+B+".datepicker._selectMonthYear('#"+a.id+"', this, 'M');\" >";for(var n=0;n<12;n++)if((!i||n>=e.getMonth())&&
(!m||n<=f.getMonth()))o+='<option value="'+n+'"'+(n==b?' selected="selected"':"")+">"+g[n]+"</option>";o+="</select>"}u||(k+=o+(h||!(j&&l)?"&#xa0;":""));if(!a.yearshtml){a.yearshtml="";if(h||!l)k+='<span class="ui-datepicker-year">'+c+"</span>";else{g=this._get(a,"yearRange").split(":");var s=(new Date).getFullYear();i=function(q){q=q.match(/c[+-].*/)?c+parseInt(q.substring(1),10):q.match(/[+-].*/)?s+parseInt(q,10):parseInt(q,10);return isNaN(q)?s:q};b=i(g[0]);g=Math.max(b,i(g[1]||""));b=e?Math.max(b,
e.getFullYear()):b;g=f?Math.min(g,f.getFullYear()):g;for(a.yearshtml+='<select class="ui-datepicker-year" onchange="DP_jQuery_'+B+".datepicker._selectMonthYear('#"+a.id+"', this, 'Y');\" >";b<=g;b++)a.yearshtml+='<option value="'+b+'"'+(b==c?' selected="selected"':"")+">"+b+"</option>";a.yearshtml+="</select>";k+=a.yearshtml;a.yearshtml=null}}k+=this._get(a,"yearSuffix");if(u)k+=(h||!(j&&l)?"&#xa0;":"")+o;k+="</div>";return k},_adjustInstDate:function(a,b,c){var e=a.drawYear+(c=="Y"?b:0),f=a.drawMonth+
(c=="M"?b:0);b=Math.min(a.selectedDay,this._getDaysInMonth(e,f))+(c=="D"?b:0);e=this._restrictMinMax(a,this._daylightSavingAdjust(new Date(e,f,b)));a.selectedDay=e.getDate();a.drawMonth=a.selectedMonth=e.getMonth();a.drawYear=a.selectedYear=e.getFullYear();if(c=="M"||c=="Y")this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min");a=this._getMinMaxDate(a,"max");b=c&&b<c?c:b;return b=a&&b>a?a:b},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");if(b)b.apply(a.input?
a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){a=this._get(a,"numberOfMonths");return a==null?[1,1]:typeof a=="number"?[1,a]:a},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,e){var f=this._getNumberOfMonths(a);c=this._daylightSavingAdjust(new Date(c,
e+(b<0?b:f[0]*f[1]),1));b<0&&c.setDate(this._getDaysInMonth(c.getFullYear(),c.getMonth()));return this._isInRange(a,c)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min");a=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!a||b.getTime()<=a.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff");b=typeof b!="string"?b:(new Date).getFullYear()%100+parseInt(b,10);return{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,
"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,"monthNames")}},_formatDate:function(a,b,c,e){if(!b){a.currentDay=a.selectedDay;a.currentMonth=a.selectedMonth;a.currentYear=a.selectedYear}b=b?typeof b=="object"?b:this._daylightSavingAdjust(new Date(e,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),b,this._getFormatConfig(a))}});d.fn.datepicker=function(a){if(!this.length)return this;
if(!d.datepicker.initialized){d(document).mousedown(d.datepicker._checkExternalClick).find("body").append(d.datepicker.dpDiv);d.datepicker.initialized=true}var b=Array.prototype.slice.call(arguments,1);if(typeof a=="string"&&(a=="isDisabled"||a=="getDate"||a=="widget"))return d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b));if(a=="option"&&arguments.length==2&&typeof arguments[1]=="string")return d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this[0]].concat(b));return this.each(function(){typeof a==
"string"?d.datepicker["_"+a+"Datepicker"].apply(d.datepicker,[this].concat(b)):d.datepicker._attachDatepicker(this,a)})};d.datepicker=new M;d.datepicker.initialized=false;d.datepicker.uuid=(new Date).getTime();d.datepicker.version="1.8.16";window["DP_jQuery_"+B]=d})(jQuery);
;/*
 * jQuery UI Progressbar 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Progressbar
 *
 * Depends:
 *   jquery.ui.core.js
 *   jquery.ui.widget.js
 */
(function(b,d){b.widget("ui.progressbar",{options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()});this.valueDiv=b("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);this.oldValue=this._value();this._refreshValue()},destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
this.valueDiv.remove();b.Widget.prototype.destroy.apply(this,arguments)},value:function(a){if(a===d)return this._value();this._setOption("value",a);return this},_setOption:function(a,c){if(a==="value"){this.options.value=c;this._refreshValue();this._value()===this.options.max&&this._trigger("complete")}b.Widget.prototype._setOption.apply(this,arguments)},_value:function(){var a=this.options.value;if(typeof a!=="number")a=0;return Math.min(this.options.max,Math.max(this.min,a))},_percentage:function(){return 100*
this._value()/this.options.max},_refreshValue:function(){var a=this.value(),c=this._percentage();if(this.oldValue!==a){this.oldValue=a;this._trigger("change")}this.valueDiv.toggle(a>this.min).toggleClass("ui-corner-right",a===this.options.max).width(c.toFixed(0)+"%");this.element.attr("aria-valuenow",a)}});b.extend(b.ui.progressbar,{version:"1.8.16"})})(jQuery);
;/*
 * jQuery UI Effects 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/
 */
jQuery.effects||function(f,j){function m(c){var a;if(c&&c.constructor==Array&&c.length==3)return c;if(a=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(c))return[parseInt(a[1],10),parseInt(a[2],10),parseInt(a[3],10)];if(a=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(c))return[parseFloat(a[1])*2.55,parseFloat(a[2])*2.55,parseFloat(a[3])*2.55];if(a=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(c))return[parseInt(a[1],
16),parseInt(a[2],16),parseInt(a[3],16)];if(a=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(c))return[parseInt(a[1]+a[1],16),parseInt(a[2]+a[2],16),parseInt(a[3]+a[3],16)];if(/rgba\(0, 0, 0, 0\)/.exec(c))return n.transparent;return n[f.trim(c).toLowerCase()]}function s(c,a){var b;do{b=f.curCSS(c,a);if(b!=""&&b!="transparent"||f.nodeName(c,"body"))break;a="backgroundColor"}while(c=c.parentNode);return m(b)}function o(){var c=document.defaultView?document.defaultView.getComputedStyle(this,null):this.currentStyle,
a={},b,d;if(c&&c.length&&c[0]&&c[c[0]])for(var e=c.length;e--;){b=c[e];if(typeof c[b]=="string"){d=b.replace(/\-(\w)/g,function(g,h){return h.toUpperCase()});a[d]=c[b]}}else for(b in c)if(typeof c[b]==="string")a[b]=c[b];return a}function p(c){var a,b;for(a in c){b=c[a];if(b==null||f.isFunction(b)||a in t||/scrollbar/.test(a)||!/color/i.test(a)&&isNaN(parseFloat(b)))delete c[a]}return c}function u(c,a){var b={_:0},d;for(d in a)if(c[d]!=a[d])b[d]=a[d];return b}function k(c,a,b,d){if(typeof c=="object"){d=
a;b=null;a=c;c=a.effect}if(f.isFunction(a)){d=a;b=null;a={}}if(typeof a=="number"||f.fx.speeds[a]){d=b;b=a;a={}}if(f.isFunction(b)){d=b;b=null}a=a||{};b=b||a.duration;b=f.fx.off?0:typeof b=="number"?b:b in f.fx.speeds?f.fx.speeds[b]:f.fx.speeds._default;d=d||a.complete;return[c,a,b,d]}function l(c){if(!c||typeof c==="number"||f.fx.speeds[c])return true;if(typeof c==="string"&&!f.effects[c])return true;return false}f.effects={};f.each(["backgroundColor","borderBottomColor","borderLeftColor","borderRightColor",
"borderTopColor","borderColor","color","outlineColor"],function(c,a){f.fx.step[a]=function(b){if(!b.colorInit){b.start=s(b.elem,a);b.end=m(b.end);b.colorInit=true}b.elem.style[a]="rgb("+Math.max(Math.min(parseInt(b.pos*(b.end[0]-b.start[0])+b.start[0],10),255),0)+","+Math.max(Math.min(parseInt(b.pos*(b.end[1]-b.start[1])+b.start[1],10),255),0)+","+Math.max(Math.min(parseInt(b.pos*(b.end[2]-b.start[2])+b.start[2],10),255),0)+")"}});var n={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,
0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,
211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0],transparent:[255,255,255]},q=["add","remove","toggle"],t={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};f.effects.animateClass=function(c,a,b,
d){if(f.isFunction(b)){d=b;b=null}return this.queue(function(){var e=f(this),g=e.attr("style")||" ",h=p(o.call(this)),r,v=e.attr("class");f.each(q,function(w,i){c[i]&&e[i+"Class"](c[i])});r=p(o.call(this));e.attr("class",v);e.animate(u(h,r),{queue:false,duration:a,easing:b,complete:function(){f.each(q,function(w,i){c[i]&&e[i+"Class"](c[i])});if(typeof e.attr("style")=="object"){e.attr("style").cssText="";e.attr("style").cssText=g}else e.attr("style",g);d&&d.apply(this,arguments);f.dequeue(this)}})})};
f.fn.extend({_addClass:f.fn.addClass,addClass:function(c,a,b,d){return a?f.effects.animateClass.apply(this,[{add:c},a,b,d]):this._addClass(c)},_removeClass:f.fn.removeClass,removeClass:function(c,a,b,d){return a?f.effects.animateClass.apply(this,[{remove:c},a,b,d]):this._removeClass(c)},_toggleClass:f.fn.toggleClass,toggleClass:function(c,a,b,d,e){return typeof a=="boolean"||a===j?b?f.effects.animateClass.apply(this,[a?{add:c}:{remove:c},b,d,e]):this._toggleClass(c,a):f.effects.animateClass.apply(this,
[{toggle:c},a,b,d])},switchClass:function(c,a,b,d,e){return f.effects.animateClass.apply(this,[{add:a,remove:c},b,d,e])}});f.extend(f.effects,{version:"1.8.16",save:function(c,a){for(var b=0;b<a.length;b++)a[b]!==null&&c.data("ec.storage."+a[b],c[0].style[a[b]])},restore:function(c,a){for(var b=0;b<a.length;b++)a[b]!==null&&c.css(a[b],c.data("ec.storage."+a[b]))},setMode:function(c,a){if(a=="toggle")a=c.is(":hidden")?"show":"hide";return a},getBaseline:function(c,a){var b;switch(c[0]){case "top":b=
0;break;case "middle":b=0.5;break;case "bottom":b=1;break;default:b=c[0]/a.height}switch(c[1]){case "left":c=0;break;case "center":c=0.5;break;case "right":c=1;break;default:c=c[1]/a.width}return{x:c,y:b}},createWrapper:function(c){if(c.parent().is(".ui-effects-wrapper"))return c.parent();var a={width:c.outerWidth(true),height:c.outerHeight(true),"float":c.css("float")},b=f("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),
d=document.activeElement;c.wrap(b);if(c[0]===d||f.contains(c[0],d))f(d).focus();b=c.parent();if(c.css("position")=="static"){b.css({position:"relative"});c.css({position:"relative"})}else{f.extend(a,{position:c.css("position"),zIndex:c.css("z-index")});f.each(["top","left","bottom","right"],function(e,g){a[g]=c.css(g);if(isNaN(parseInt(a[g],10)))a[g]="auto"});c.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})}return b.css(a).show()},removeWrapper:function(c){var a,b=document.activeElement;
if(c.parent().is(".ui-effects-wrapper")){a=c.parent().replaceWith(c);if(c[0]===b||f.contains(c[0],b))f(b).focus();return a}return c},setTransition:function(c,a,b,d){d=d||{};f.each(a,function(e,g){unit=c.cssUnit(g);if(unit[0]>0)d[g]=unit[0]*b+unit[1]});return d}});f.fn.extend({effect:function(c){var a=k.apply(this,arguments),b={options:a[1],duration:a[2],callback:a[3]};a=b.options.mode;var d=f.effects[c];if(f.fx.off||!d)return a?this[a](b.duration,b.callback):this.each(function(){b.callback&&b.callback.call(this)});
return d.call(this,b)},_show:f.fn.show,show:function(c){if(l(c))return this._show.apply(this,arguments);else{var a=k.apply(this,arguments);a[1].mode="show";return this.effect.apply(this,a)}},_hide:f.fn.hide,hide:function(c){if(l(c))return this._hide.apply(this,arguments);else{var a=k.apply(this,arguments);a[1].mode="hide";return this.effect.apply(this,a)}},__toggle:f.fn.toggle,toggle:function(c){if(l(c)||typeof c==="boolean"||f.isFunction(c))return this.__toggle.apply(this,arguments);else{var a=k.apply(this,
arguments);a[1].mode="toggle";return this.effect.apply(this,a)}},cssUnit:function(c){var a=this.css(c),b=[];f.each(["em","px","%","pt"],function(d,e){if(a.indexOf(e)>0)b=[parseFloat(a),e]});return b}});f.easing.jswing=f.easing.swing;f.extend(f.easing,{def:"easeOutQuad",swing:function(c,a,b,d,e){return f.easing[f.easing.def](c,a,b,d,e)},easeInQuad:function(c,a,b,d,e){return d*(a/=e)*a+b},easeOutQuad:function(c,a,b,d,e){return-d*(a/=e)*(a-2)+b},easeInOutQuad:function(c,a,b,d,e){if((a/=e/2)<1)return d/
2*a*a+b;return-d/2*(--a*(a-2)-1)+b},easeInCubic:function(c,a,b,d,e){return d*(a/=e)*a*a+b},easeOutCubic:function(c,a,b,d,e){return d*((a=a/e-1)*a*a+1)+b},easeInOutCubic:function(c,a,b,d,e){if((a/=e/2)<1)return d/2*a*a*a+b;return d/2*((a-=2)*a*a+2)+b},easeInQuart:function(c,a,b,d,e){return d*(a/=e)*a*a*a+b},easeOutQuart:function(c,a,b,d,e){return-d*((a=a/e-1)*a*a*a-1)+b},easeInOutQuart:function(c,a,b,d,e){if((a/=e/2)<1)return d/2*a*a*a*a+b;return-d/2*((a-=2)*a*a*a-2)+b},easeInQuint:function(c,a,b,
d,e){return d*(a/=e)*a*a*a*a+b},easeOutQuint:function(c,a,b,d,e){return d*((a=a/e-1)*a*a*a*a+1)+b},easeInOutQuint:function(c,a,b,d,e){if((a/=e/2)<1)return d/2*a*a*a*a*a+b;return d/2*((a-=2)*a*a*a*a+2)+b},easeInSine:function(c,a,b,d,e){return-d*Math.cos(a/e*(Math.PI/2))+d+b},easeOutSine:function(c,a,b,d,e){return d*Math.sin(a/e*(Math.PI/2))+b},easeInOutSine:function(c,a,b,d,e){return-d/2*(Math.cos(Math.PI*a/e)-1)+b},easeInExpo:function(c,a,b,d,e){return a==0?b:d*Math.pow(2,10*(a/e-1))+b},easeOutExpo:function(c,
a,b,d,e){return a==e?b+d:d*(-Math.pow(2,-10*a/e)+1)+b},easeInOutExpo:function(c,a,b,d,e){if(a==0)return b;if(a==e)return b+d;if((a/=e/2)<1)return d/2*Math.pow(2,10*(a-1))+b;return d/2*(-Math.pow(2,-10*--a)+2)+b},easeInCirc:function(c,a,b,d,e){return-d*(Math.sqrt(1-(a/=e)*a)-1)+b},easeOutCirc:function(c,a,b,d,e){return d*Math.sqrt(1-(a=a/e-1)*a)+b},easeInOutCirc:function(c,a,b,d,e){if((a/=e/2)<1)return-d/2*(Math.sqrt(1-a*a)-1)+b;return d/2*(Math.sqrt(1-(a-=2)*a)+1)+b},easeInElastic:function(c,a,b,
d,e){c=1.70158;var g=0,h=d;if(a==0)return b;if((a/=e)==1)return b+d;g||(g=e*0.3);if(h<Math.abs(d)){h=d;c=g/4}else c=g/(2*Math.PI)*Math.asin(d/h);return-(h*Math.pow(2,10*(a-=1))*Math.sin((a*e-c)*2*Math.PI/g))+b},easeOutElastic:function(c,a,b,d,e){c=1.70158;var g=0,h=d;if(a==0)return b;if((a/=e)==1)return b+d;g||(g=e*0.3);if(h<Math.abs(d)){h=d;c=g/4}else c=g/(2*Math.PI)*Math.asin(d/h);return h*Math.pow(2,-10*a)*Math.sin((a*e-c)*2*Math.PI/g)+d+b},easeInOutElastic:function(c,a,b,d,e){c=1.70158;var g=
0,h=d;if(a==0)return b;if((a/=e/2)==2)return b+d;g||(g=e*0.3*1.5);if(h<Math.abs(d)){h=d;c=g/4}else c=g/(2*Math.PI)*Math.asin(d/h);if(a<1)return-0.5*h*Math.pow(2,10*(a-=1))*Math.sin((a*e-c)*2*Math.PI/g)+b;return h*Math.pow(2,-10*(a-=1))*Math.sin((a*e-c)*2*Math.PI/g)*0.5+d+b},easeInBack:function(c,a,b,d,e,g){if(g==j)g=1.70158;return d*(a/=e)*a*((g+1)*a-g)+b},easeOutBack:function(c,a,b,d,e,g){if(g==j)g=1.70158;return d*((a=a/e-1)*a*((g+1)*a+g)+1)+b},easeInOutBack:function(c,a,b,d,e,g){if(g==j)g=1.70158;
if((a/=e/2)<1)return d/2*a*a*(((g*=1.525)+1)*a-g)+b;return d/2*((a-=2)*a*(((g*=1.525)+1)*a+g)+2)+b},easeInBounce:function(c,a,b,d,e){return d-f.easing.easeOutBounce(c,e-a,0,d,e)+b},easeOutBounce:function(c,a,b,d,e){return(a/=e)<1/2.75?d*7.5625*a*a+b:a<2/2.75?d*(7.5625*(a-=1.5/2.75)*a+0.75)+b:a<2.5/2.75?d*(7.5625*(a-=2.25/2.75)*a+0.9375)+b:d*(7.5625*(a-=2.625/2.75)*a+0.984375)+b},easeInOutBounce:function(c,a,b,d,e){if(a<e/2)return f.easing.easeInBounce(c,a*2,0,d,e)*0.5+b;return f.easing.easeOutBounce(c,
a*2-e,0,d,e)*0.5+d*0.5+b}})}(jQuery);
;/*
 * jQuery UI Effects Blind 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Blind
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.blind=function(c){return this.queue(function(){var a=b(this),g=["position","top","bottom","left","right"],f=b.effects.setMode(a,c.options.mode||"hide"),d=c.options.direction||"vertical";b.effects.save(a,g);a.show();var e=b.effects.createWrapper(a).css({overflow:"hidden"}),h=d=="vertical"?"height":"width";d=d=="vertical"?e.height():e.width();f=="show"&&e.css(h,0);var i={};i[h]=f=="show"?d:0;e.animate(i,c.duration,c.options.easing,function(){f=="hide"&&a.hide();b.effects.restore(a,
g);b.effects.removeWrapper(a);c.callback&&c.callback.apply(a[0],arguments);a.dequeue()})})}})(jQuery);
;/*
 * jQuery UI Effects Bounce 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Bounce
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(e){e.effects.bounce=function(b){return this.queue(function(){var a=e(this),l=["position","top","bottom","left","right"],h=e.effects.setMode(a,b.options.mode||"effect"),d=b.options.direction||"up",c=b.options.distance||20,m=b.options.times||5,i=b.duration||250;/show|hide/.test(h)&&l.push("opacity");e.effects.save(a,l);a.show();e.effects.createWrapper(a);var f=d=="up"||d=="down"?"top":"left";d=d=="up"||d=="left"?"pos":"neg";c=b.options.distance||(f=="top"?a.outerHeight({margin:true})/3:a.outerWidth({margin:true})/
3);if(h=="show")a.css("opacity",0).css(f,d=="pos"?-c:c);if(h=="hide")c/=m*2;h!="hide"&&m--;if(h=="show"){var g={opacity:1};g[f]=(d=="pos"?"+=":"-=")+c;a.animate(g,i/2,b.options.easing);c/=2;m--}for(g=0;g<m;g++){var j={},k={};j[f]=(d=="pos"?"-=":"+=")+c;k[f]=(d=="pos"?"+=":"-=")+c;a.animate(j,i/2,b.options.easing).animate(k,i/2,b.options.easing);c=h=="hide"?c*2:c/2}if(h=="hide"){g={opacity:0};g[f]=(d=="pos"?"-=":"+=")+c;a.animate(g,i/2,b.options.easing,function(){a.hide();e.effects.restore(a,l);e.effects.removeWrapper(a);
b.callback&&b.callback.apply(this,arguments)})}else{j={};k={};j[f]=(d=="pos"?"-=":"+=")+c;k[f]=(d=="pos"?"+=":"-=")+c;a.animate(j,i/2,b.options.easing).animate(k,i/2,b.options.easing,function(){e.effects.restore(a,l);e.effects.removeWrapper(a);b.callback&&b.callback.apply(this,arguments)})}a.queue("fx",function(){a.dequeue()});a.dequeue()})}})(jQuery);
;/*
 * jQuery UI Effects Clip 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Clip
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.clip=function(e){return this.queue(function(){var a=b(this),i=["position","top","bottom","left","right","height","width"],f=b.effects.setMode(a,e.options.mode||"hide"),c=e.options.direction||"vertical";b.effects.save(a,i);a.show();var d=b.effects.createWrapper(a).css({overflow:"hidden"});d=a[0].tagName=="IMG"?d:a;var g={size:c=="vertical"?"height":"width",position:c=="vertical"?"top":"left"};c=c=="vertical"?d.height():d.width();if(f=="show"){d.css(g.size,0);d.css(g.position,
c/2)}var h={};h[g.size]=f=="show"?c:0;h[g.position]=f=="show"?0:c/2;d.animate(h,{queue:false,duration:e.duration,easing:e.options.easing,complete:function(){f=="hide"&&a.hide();b.effects.restore(a,i);b.effects.removeWrapper(a);e.callback&&e.callback.apply(a[0],arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Drop 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Drop
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.drop=function(d){return this.queue(function(){var a=c(this),h=["position","top","bottom","left","right","opacity"],e=c.effects.setMode(a,d.options.mode||"hide"),b=d.options.direction||"left";c.effects.save(a,h);a.show();c.effects.createWrapper(a);var f=b=="up"||b=="down"?"top":"left";b=b=="up"||b=="left"?"pos":"neg";var g=d.options.distance||(f=="top"?a.outerHeight({margin:true})/2:a.outerWidth({margin:true})/2);if(e=="show")a.css("opacity",0).css(f,b=="pos"?-g:g);var i={opacity:e==
"show"?1:0};i[f]=(e=="show"?b=="pos"?"+=":"-=":b=="pos"?"-=":"+=")+g;a.animate(i,{queue:false,duration:d.duration,easing:d.options.easing,complete:function(){e=="hide"&&a.hide();c.effects.restore(a,h);c.effects.removeWrapper(a);d.callback&&d.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Explode 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Explode
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(j){j.effects.explode=function(a){return this.queue(function(){var c=a.options.pieces?Math.round(Math.sqrt(a.options.pieces)):3,d=a.options.pieces?Math.round(Math.sqrt(a.options.pieces)):3;a.options.mode=a.options.mode=="toggle"?j(this).is(":visible")?"hide":"show":a.options.mode;var b=j(this).show().css("visibility","hidden"),g=b.offset();g.top-=parseInt(b.css("marginTop"),10)||0;g.left-=parseInt(b.css("marginLeft"),10)||0;for(var h=b.outerWidth(true),i=b.outerHeight(true),e=0;e<c;e++)for(var f=
0;f<d;f++)b.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-f*(h/d),top:-e*(i/c)}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:h/d,height:i/c,left:g.left+f*(h/d)+(a.options.mode=="show"?(f-Math.floor(d/2))*(h/d):0),top:g.top+e*(i/c)+(a.options.mode=="show"?(e-Math.floor(c/2))*(i/c):0),opacity:a.options.mode=="show"?0:1}).animate({left:g.left+f*(h/d)+(a.options.mode=="show"?0:(f-Math.floor(d/2))*(h/d)),top:g.top+
e*(i/c)+(a.options.mode=="show"?0:(e-Math.floor(c/2))*(i/c)),opacity:a.options.mode=="show"?1:0},a.duration||500);setTimeout(function(){a.options.mode=="show"?b.css({visibility:"visible"}):b.css({visibility:"visible"}).hide();a.callback&&a.callback.apply(b[0]);b.dequeue();j("div.ui-effects-explode").remove()},a.duration||500)})}})(jQuery);
;/*
 * jQuery UI Effects Fade 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Fade
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.fade=function(a){return this.queue(function(){var c=b(this),d=b.effects.setMode(c,a.options.mode||"hide");c.animate({opacity:d},{queue:false,duration:a.duration,easing:a.options.easing,complete:function(){a.callback&&a.callback.apply(this,arguments);c.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Fold 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Fold
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.fold=function(a){return this.queue(function(){var b=c(this),j=["position","top","bottom","left","right"],d=c.effects.setMode(b,a.options.mode||"hide"),g=a.options.size||15,h=!!a.options.horizFirst,k=a.duration?a.duration/2:c.fx.speeds._default/2;c.effects.save(b,j);b.show();var e=c.effects.createWrapper(b).css({overflow:"hidden"}),f=d=="show"!=h,l=f?["width","height"]:["height","width"];f=f?[e.width(),e.height()]:[e.height(),e.width()];var i=/([0-9]+)%/.exec(g);if(i)g=parseInt(i[1],
10)/100*f[d=="hide"?0:1];if(d=="show")e.css(h?{height:0,width:g}:{height:g,width:0});h={};i={};h[l[0]]=d=="show"?f[0]:g;i[l[1]]=d=="show"?f[1]:0;e.animate(h,k,a.options.easing).animate(i,k,a.options.easing,function(){d=="hide"&&b.hide();c.effects.restore(b,j);c.effects.removeWrapper(b);a.callback&&a.callback.apply(b[0],arguments);b.dequeue()})})}})(jQuery);
;/*
 * jQuery UI Effects Highlight 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Highlight
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(b){b.effects.highlight=function(c){return this.queue(function(){var a=b(this),e=["backgroundImage","backgroundColor","opacity"],d=b.effects.setMode(a,c.options.mode||"show"),f={backgroundColor:a.css("backgroundColor")};if(d=="hide")f.opacity=0;b.effects.save(a,e);a.show().css({backgroundImage:"none",backgroundColor:c.options.color||"#ffff99"}).animate(f,{queue:false,duration:c.duration,easing:c.options.easing,complete:function(){d=="hide"&&a.hide();b.effects.restore(a,e);d=="show"&&!b.support.opacity&&
this.style.removeAttribute("filter");c.callback&&c.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Pulsate 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Pulsate
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(d){d.effects.pulsate=function(a){return this.queue(function(){var b=d(this),c=d.effects.setMode(b,a.options.mode||"show");times=(a.options.times||5)*2-1;duration=a.duration?a.duration/2:d.fx.speeds._default/2;isVisible=b.is(":visible");animateTo=0;if(!isVisible){b.css("opacity",0).show();animateTo=1}if(c=="hide"&&isVisible||c=="show"&&!isVisible)times--;for(c=0;c<times;c++){b.animate({opacity:animateTo},duration,a.options.easing);animateTo=(animateTo+1)%2}b.animate({opacity:animateTo},duration,
a.options.easing,function(){animateTo==0&&b.hide();a.callback&&a.callback.apply(this,arguments)});b.queue("fx",function(){b.dequeue()}).dequeue()})}})(jQuery);
;/*
 * jQuery UI Effects Scale 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Scale
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.puff=function(b){return this.queue(function(){var a=c(this),e=c.effects.setMode(a,b.options.mode||"hide"),g=parseInt(b.options.percent,10)||150,h=g/100,i={height:a.height(),width:a.width()};c.extend(b.options,{fade:true,mode:e,percent:e=="hide"?g:100,from:e=="hide"?i:{height:i.height*h,width:i.width*h}});a.effect("scale",b.options,b.duration,b.callback);a.dequeue()})};c.effects.scale=function(b){return this.queue(function(){var a=c(this),e=c.extend(true,{},b.options),g=c.effects.setMode(a,
b.options.mode||"effect"),h=parseInt(b.options.percent,10)||(parseInt(b.options.percent,10)==0?0:g=="hide"?0:100),i=b.options.direction||"both",f=b.options.origin;if(g!="effect"){e.origin=f||["middle","center"];e.restore=true}f={height:a.height(),width:a.width()};a.from=b.options.from||(g=="show"?{height:0,width:0}:f);h={y:i!="horizontal"?h/100:1,x:i!="vertical"?h/100:1};a.to={height:f.height*h.y,width:f.width*h.x};if(b.options.fade){if(g=="show"){a.from.opacity=0;a.to.opacity=1}if(g=="hide"){a.from.opacity=
1;a.to.opacity=0}}e.from=a.from;e.to=a.to;e.mode=g;a.effect("size",e,b.duration,b.callback);a.dequeue()})};c.effects.size=function(b){return this.queue(function(){var a=c(this),e=["position","top","bottom","left","right","width","height","overflow","opacity"],g=["position","top","bottom","left","right","overflow","opacity"],h=["width","height","overflow"],i=["fontSize"],f=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],k=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],
p=c.effects.setMode(a,b.options.mode||"effect"),n=b.options.restore||false,m=b.options.scale||"both",l=b.options.origin,j={height:a.height(),width:a.width()};a.from=b.options.from||j;a.to=b.options.to||j;if(l){l=c.effects.getBaseline(l,j);a.from.top=(j.height-a.from.height)*l.y;a.from.left=(j.width-a.from.width)*l.x;a.to.top=(j.height-a.to.height)*l.y;a.to.left=(j.width-a.to.width)*l.x}var d={from:{y:a.from.height/j.height,x:a.from.width/j.width},to:{y:a.to.height/j.height,x:a.to.width/j.width}};
if(m=="box"||m=="both"){if(d.from.y!=d.to.y){e=e.concat(f);a.from=c.effects.setTransition(a,f,d.from.y,a.from);a.to=c.effects.setTransition(a,f,d.to.y,a.to)}if(d.from.x!=d.to.x){e=e.concat(k);a.from=c.effects.setTransition(a,k,d.from.x,a.from);a.to=c.effects.setTransition(a,k,d.to.x,a.to)}}if(m=="content"||m=="both")if(d.from.y!=d.to.y){e=e.concat(i);a.from=c.effects.setTransition(a,i,d.from.y,a.from);a.to=c.effects.setTransition(a,i,d.to.y,a.to)}c.effects.save(a,n?e:g);a.show();c.effects.createWrapper(a);
a.css("overflow","hidden").css(a.from);if(m=="content"||m=="both"){f=f.concat(["marginTop","marginBottom"]).concat(i);k=k.concat(["marginLeft","marginRight"]);h=e.concat(f).concat(k);a.find("*[width]").each(function(){child=c(this);n&&c.effects.save(child,h);var o={height:child.height(),width:child.width()};child.from={height:o.height*d.from.y,width:o.width*d.from.x};child.to={height:o.height*d.to.y,width:o.width*d.to.x};if(d.from.y!=d.to.y){child.from=c.effects.setTransition(child,f,d.from.y,child.from);
child.to=c.effects.setTransition(child,f,d.to.y,child.to)}if(d.from.x!=d.to.x){child.from=c.effects.setTransition(child,k,d.from.x,child.from);child.to=c.effects.setTransition(child,k,d.to.x,child.to)}child.css(child.from);child.animate(child.to,b.duration,b.options.easing,function(){n&&c.effects.restore(child,h)})})}a.animate(a.to,{queue:false,duration:b.duration,easing:b.options.easing,complete:function(){a.to.opacity===0&&a.css("opacity",a.from.opacity);p=="hide"&&a.hide();c.effects.restore(a,
n?e:g);c.effects.removeWrapper(a);b.callback&&b.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Shake 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Shake
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(d){d.effects.shake=function(a){return this.queue(function(){var b=d(this),j=["position","top","bottom","left","right"];d.effects.setMode(b,a.options.mode||"effect");var c=a.options.direction||"left",e=a.options.distance||20,l=a.options.times||3,f=a.duration||a.options.duration||140;d.effects.save(b,j);b.show();d.effects.createWrapper(b);var g=c=="up"||c=="down"?"top":"left",h=c=="up"||c=="left"?"pos":"neg";c={};var i={},k={};c[g]=(h=="pos"?"-=":"+=")+e;i[g]=(h=="pos"?"+=":"-=")+e*2;k[g]=
(h=="pos"?"-=":"+=")+e*2;b.animate(c,f,a.options.easing);for(e=1;e<l;e++)b.animate(i,f,a.options.easing).animate(k,f,a.options.easing);b.animate(i,f,a.options.easing).animate(c,f/2,a.options.easing,function(){d.effects.restore(b,j);d.effects.removeWrapper(b);a.callback&&a.callback.apply(this,arguments)});b.queue("fx",function(){b.dequeue()});b.dequeue()})}})(jQuery);
;/*
 * jQuery UI Effects Slide 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Slide
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(c){c.effects.slide=function(d){return this.queue(function(){var a=c(this),h=["position","top","bottom","left","right"],f=c.effects.setMode(a,d.options.mode||"show"),b=d.options.direction||"left";c.effects.save(a,h);a.show();c.effects.createWrapper(a).css({overflow:"hidden"});var g=b=="up"||b=="down"?"top":"left";b=b=="up"||b=="left"?"pos":"neg";var e=d.options.distance||(g=="top"?a.outerHeight({margin:true}):a.outerWidth({margin:true}));if(f=="show")a.css(g,b=="pos"?isNaN(e)?"-"+e:-e:e);
var i={};i[g]=(f=="show"?b=="pos"?"+=":"-=":b=="pos"?"-=":"+=")+e;a.animate(i,{queue:false,duration:d.duration,easing:d.options.easing,complete:function(){f=="hide"&&a.hide();c.effects.restore(a,h);c.effects.removeWrapper(a);d.callback&&d.callback.apply(this,arguments);a.dequeue()}})})}})(jQuery);
;/*
 * jQuery UI Effects Transfer 1.8.16
 *
 * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Effects/Transfer
 *
 * Depends:
 *	jquery.effects.core.js
 */
(function(e){e.effects.transfer=function(a){return this.queue(function(){var b=e(this),c=e(a.options.to),d=c.offset();c={top:d.top,left:d.left,height:c.innerHeight(),width:c.innerWidth()};d=b.offset();var f=e('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(a.options.className).css({top:d.top,left:d.left,height:b.innerHeight(),width:b.innerWidth(),position:"absolute"}).animate(c,a.duration,a.options.easing,function(){f.remove();a.callback&&a.callback.apply(b[0],arguments);
b.dequeue()})})}})(jQuery);
;//
// @source = muni.js
//
var muniArray = new Array();
muniArray["1100"] = '1,北海道,1100,札幌市,さっぽろし,141.3543886,43.06208877';
muniArray["1101"] = '1,北海道,1101,札幌市　中央区,さっぽろし　ちゅうおうく,141.3409671,43.0553865';
muniArray["1102"] = '1,北海道,1102,札幌市　北区,さっぽろし　きたく,141.3408807,43.09079296';
muniArray["1103"] = '1,北海道,1103,札幌市　東区,さっぽろし　ひがしく,141.3636111,43.07611111';
muniArray["1104"] = '1,北海道,1104,札幌市　白石区,さっぽろし　しろいしく,141.40522,43.04756872';
muniArray["1105"] = '1,北海道,1105,札幌市　豊平区,さっぽろし　とよひらく,141.3800612,43.03134414';
muniArray["1106"] = '1,北海道,1106,札幌市　南区,さっぽろし　みなみく,141.3533998,42.99000828';
muniArray["1107"] = '1,北海道,1107,札幌市　西区,さっぽろし　にしく,141.3008974,43.0744547';
muniArray["1108"] = '1,北海道,1108,札幌市　厚別区,さっぽろし　あつべつく,141.4747615,43.03639318';
muniArray["1109"] = '1,北海道,1109,札幌市　手稲区,さっぽろし　ていねく,141.2457843,43.12187423';
muniArray["1110"] = '1,北海道,1110,札幌市　清田区,さっぽろし　きよたく,141.4437927,42.99951523';
muniArray["1202"] = '1,北海道,1202,函館市,はこだてし,140.7290679,41.76864057';
muniArray["1203"] = '1,北海道,1203,小樽市,おたるし,140.9944857,43.19070647';
muniArray["1204"] = '1,北海道,1204,旭川市,あさひかわし,142.365,43.77083333';
muniArray["1205"] = '1,北海道,1205,室蘭市,むろらんし,140.9736731,42.31520812';
muniArray["1206"] = '1,北海道,1206,釧路市,くしろし,144.3817102,42.98492315';
muniArray["1207"] = '1,北海道,1207,帯広市,おびひろし,143.1962056,42.92405501';
muniArray["1208"] = '1,北海道,1208,北見市,きたみし,143.8957877,43.80392712';
muniArray["1209"] = '1,北海道,1209,夕張市,ゆうばりし,141.9740889,43.0568559';
muniArray["1210"] = '1,北海道,1210,岩見沢市,いわみざわし,141.7758333,43.19611111';
muniArray["1211"] = '1,北海道,1211,網走市,あばしりし,144.2734742,44.02063505';
muniArray["1212"] = '1,北海道,1212,留萌市,るもいし,141.6369314,43.94100709';
muniArray["1213"] = '1,北海道,1213,苫小牧市,とまこまいし,141.6055556,42.63416667';
muniArray["1214"] = '1,北海道,1214,稚内市,わっかないし,141.6730675,45.41563748';
muniArray["1215"] = '1,北海道,1215,美唄市,びばいし,141.8540435,43.3330171';
muniArray["1216"] = '1,北海道,1216,芦別市,あしべつし,142.1894862,43.51821332';
muniArray["1217"] = '1,北海道,1217,江別市,えべつし,141.5360696,43.10365105';
muniArray["1218"] = '1,北海道,1218,赤平市,あかびらし,142.0441993,43.55798822';
muniArray["1219"] = '1,北海道,1219,紋別市,もんべつし,143.3541667,44.35638889';
muniArray["1220"] = '1,北海道,1220,士別市,しべつし,142.4001608,44.17857528';
muniArray["1221"] = '1,北海道,1221,名寄市,なよろし,142.4631835,44.3559089';
muniArray["1222"] = '1,北海道,1222,三笠市,みかさし,141.8753755,43.24565996';
muniArray["1223"] = '1,北海道,1223,根室市,ねむろし,145.5828718,43.33007352';
muniArray["1224"] = '1,北海道,1224,千歳市,ちとせし,141.6510058,42.82100926';
muniArray["1225"] = '1,北海道,1225,滝川市,たきかわし,141.9103899,43.55772933';
muniArray["1226"] = '1,北海道,1226,砂川市,すながわし,141.9034778,43.49478639';
muniArray["1227"] = '1,北海道,1227,歌志内市,うたしないし,142.0352778,43.52166667';
muniArray["1228"] = '1,北海道,1228,深川市,ふかがわし,142.0535134,43.72319472';
muniArray["1229"] = '1,北海道,1229,富良野市,ふらのし,142.3831468,43.34200922';
muniArray["1230"] = '1,北海道,1230,登別市,のぼりべつし,141.1066667,42.41277778';
muniArray["1231"] = '1,北海道,1231,恵庭市,えにわし,141.5777691,42.88258231';
muniArray["1233"] = '1,北海道,1233,伊達市,だてし,140.8647222,42.47194444';
muniArray["1234"] = '1,北海道,1234,北広島市,きたひろしまし,141.5635545,42.98566933';
muniArray["1235"] = '1,北海道,1235,石狩市,いしかりし,141.3155556,43.17138889';
muniArray["1236"] = '1,北海道,1236,北斗市,ほくとし,140.6530556,41.82416667';
muniArray["1303"] = '1,北海道,1303,当別町,とうべつちょう,141.5171281,43.22381951';
muniArray["1304"] = '1,北海道,1304,新篠津村,しんしのつむら,141.6492815,43.22541251';
muniArray["1331"] = '1,北海道,1331,松前町,まつまえちょう,140.1103613,41.42996802';
muniArray["1332"] = '1,北海道,1332,福島町,ふくしまちょう,140.2512881,41.48374263';
muniArray["1333"] = '1,北海道,1333,知内町,しりうちちょう,140.4188889,41.59833333';
muniArray["1334"] = '1,北海道,1334,木古内町,きこないちょう,140.4376294,41.6783268';
muniArray["1337"] = '1,北海道,1337,七飯町,ななえちょう,140.6944054,41.89571953';
muniArray["1343"] = '1,北海道,1343,鹿部町,しかべちょう,140.8158333,42.03861111';
muniArray["1345"] = '1,北海道,1345,森町,もりまち,140.5764167,42.10496108';
muniArray["1346"] = '1,北海道,1346,八雲町,やくもちょう,140.2651921,42.25589383';
muniArray["1347"] = '1,北海道,1347,長万部町,おしゃまんべちょう,140.3801967,42.51340337';
muniArray["1361"] = '1,北海道,1361,江差町,えさしちょう,140.1275909,41.86928745';
muniArray["1362"] = '1,北海道,1362,上ノ国町,かみのくにちょう,140.1213889,41.80111111';
muniArray["1363"] = '1,北海道,1363,厚沢部町,あっさぶちょう,140.2253619,41.92094925';
muniArray["1364"] = '1,北海道,1364,乙部町,おとべちょう,140.1353881,41.96854529';
muniArray["1367"] = '1,北海道,1367,奥尻町,おくしりちょう,139.5141374,42.17228824';
muniArray["1370"] = '1,北海道,1370,今金町,いまかねちょう,140.0086423,42.42937171';
muniArray["1371"] = '1,北海道,1371,せたな町,せたなちょう,139.8833333,42.41694444';
muniArray["1391"] = '1,北海道,1391,島牧村,しままきむら,140.0615316,42.70049649';
muniArray["1392"] = '1,北海道,1392,寿都町,すっつちょう,140.2288275,42.7910538';
muniArray["1393"] = '1,北海道,1393,黒松内町,くろまつないちょう,140.3077778,42.66777778';
muniArray["1394"] = '1,北海道,1394,蘭越町,らんこしちょう,140.5283803,42.80923992';
muniArray["1395"] = '1,北海道,1395,ニセコ町,にせこちょう,140.6875294,42.80480026';
muniArray["1396"] = '1,北海道,1396,真狩村,まっかりむら,140.8036719,42.7630045';
muniArray["1397"] = '1,北海道,1397,留寿都村,るすつむら,140.8756242,42.73730784';
muniArray["1398"] = '1,北海道,1398,喜茂別町,きもべつちょう,140.9345372,42.79543379';
muniArray["1399"] = '1,北海道,1399,京極町,きょうごくちょう,140.8841146,42.8582269';
muniArray["1400"] = '1,北海道,1400,倶知安町,くっちゃんちょう,140.7590211,42.90171229';
muniArray["1401"] = '1,北海道,1401,共和町,きょうわちょう,140.6114265,42.98040776';
muniArray["1402"] = '1,北海道,1402,岩内町,いわないちょう,140.5091811,42.97878475';
muniArray["1403"] = '1,北海道,1403,泊村,とまりむら,140.4989034,43.06300163';
muniArray["1404"] = '1,北海道,1404,神恵内村,かもえないむら,140.4309293,43.14380532';
muniArray["1405"] = '1,北海道,1405,積丹町,しゃこたんちょう,140.5979824,43.29874919';
muniArray["1406"] = '1,北海道,1406,古平町,ふるびらちょう,140.6389515,43.26533414';
muniArray["1407"] = '1,北海道,1407,仁木町,にきちょう,140.7661111,43.15166667';
muniArray["1408"] = '1,北海道,1408,余市町,よいちちょう,140.7835239,43.19531756';
muniArray["1409"] = '1,北海道,1409,赤井川村,あかいがわむら,140.8136322,43.08349202';
muniArray["1423"] = '1,北海道,1423,南幌町,なんぽろちょう,141.6502959,43.06371295';
muniArray["1424"] = '1,北海道,1424,奈井江町,ないえちょう,141.8827778,43.42527778';
muniArray["1425"] = '1,北海道,1425,上砂川町,かみすながわちょう,141.9835294,43.482118';
muniArray["1427"] = '1,北海道,1427,由仁町,ゆにちょう,141.79028,42.99960678';
muniArray["1428"] = '1,北海道,1428,長沼町,ながぬまちょう,141.6954173,43.01036818';
muniArray["1429"] = '1,北海道,1429,栗山町,くりやまちょう,141.7840938,43.05630081';
muniArray["1430"] = '1,北海道,1430,月形町,つきがたちょう,141.6695448,43.33839288';
muniArray["1431"] = '1,北海道,1431,浦臼町,うらうすちょう,141.8187355,43.43036951';
muniArray["1432"] = '1,北海道,1432,新十津川町,しんとつかわちょう,141.8770965,43.54847601';
muniArray["1433"] = '1,北海道,1433,妹背牛町,もせうしちょう,141.9615052,43.70017033';
muniArray["1434"] = '1,北海道,1434,秩父別町,ちっぷべつちょう,141.9578543,43.76701307';
muniArray["1436"] = '1,北海道,1436,雨竜町,うりゅうちょう,141.8890417,43.64396502';
muniArray["1437"] = '1,北海道,1437,北竜町,ほくりゅうちょう,141.8791667,43.73138889';
muniArray["1438"] = '1,北海道,1438,沼田町,ぬまたちょう,141.9336905,43.80670325';
muniArray["1452"] = '1,北海道,1452,鷹栖町,たかすちょう,142.3544444,43.84333333';
muniArray["1453"] = '1,北海道,1453,東神楽町,ひがしかぐらちょう,142.4515003,43.69638494';
muniArray["1454"] = '1,北海道,1454,当麻町,とうまちょう,142.5083928,43.82813767';
muniArray["1455"] = '1,北海道,1455,比布町,ぴっぷちょう,142.4776752,43.87500414';
muniArray["1456"] = '1,北海道,1456,愛別町,あいべつちょう,142.5778203,43.90667341';
muniArray["1457"] = '1,北海道,1457,上川町,かみかわちょう,142.7704637,43.84712409';
muniArray["1458"] = '1,北海道,1458,東川町,ひがしかわちょう,142.5101593,43.6988984';
muniArray["1459"] = '1,北海道,1459,美瑛町,びえいちょう,142.4670597,43.5883298';
muniArray["1460"] = '1,北海道,1460,上富良野町,かみふらのちょう,142.4671231,43.45561409';
muniArray["1461"] = '1,北海道,1461,中富良野町,なかふらのちょう,142.4252778,43.40583333';
muniArray["1462"] = '1,北海道,1462,南富良野町,みなみふらのちょう,142.5683333,43.16416667';
muniArray["1463"] = '1,北海道,1463,占冠村,しむかっぷむら,142.3985363,42.97987952';
muniArray["1464"] = '1,北海道,1464,和寒町,わっさむちょう,142.4134008,44.02312874';
muniArray["1465"] = '1,北海道,1465,剣淵町,けんぶちちょう,142.3613267,44.09576224';
muniArray["1468"] = '1,北海道,1468,下川町,しもかわちょう,142.6352023,44.3025664';
muniArray["1469"] = '1,北海道,1469,美深町,びふかちょう,142.3430577,44.48102079';
muniArray["1470"] = '1,北海道,1470,音威子府村,おといねっぷむら,142.2622139,44.72504179';
muniArray["1471"] = '1,北海道,1471,中川町,なかがわちょう,142.0713889,44.81138889';
muniArray["1472"] = '1,北海道,1472,幌加内町,ほろかないちょう,142.1538298,44.00979823';
muniArray["1481"] = '1,北海道,1481,増毛町,ましけちょう,141.5249105,43.85605933';
muniArray["1482"] = '1,北海道,1482,小平町,おびらちょう,141.6627616,44.01546152';
muniArray["1483"] = '1,北海道,1483,苫前町,とままえちょう,141.6529088,44.30614209';
muniArray["1484"] = '1,北海道,1484,羽幌町,はぼろちょう,141.6973205,44.36054972';
muniArray["1485"] = '1,北海道,1485,初山別村,しょさんべつむら,141.7663169,44.53214682';
muniArray["1486"] = '1,北海道,1486,遠別町,えんべつちょう,141.7923268,44.7225084';
muniArray["1487"] = '1,北海道,1487,天塩町,てしおちょう,141.7453521,44.88817257';
muniArray["1511"] = '1,北海道,1511,猿払村,さるふつむら,142.1089722,45.3306092';
muniArray["1512"] = '1,北海道,1512,浜頓別町,はまとんべつちょう,142.3597348,45.1237794';
muniArray["1513"] = '1,北海道,1513,中頓別町,なかとんべつちょう,142.2867365,44.96976136';
muniArray["1514"] = '1,北海道,1514,枝幸町,えさしちょう,142.5814043,44.93873333';
muniArray["1516"] = '1,北海道,1516,豊富町,とよとみちょう,141.7775026,45.10285676';
muniArray["1517"] = '1,北海道,1517,礼文町,れぶんちょう,141.0477509,45.30308199';
muniArray["1518"] = '1,北海道,1518,利尻町,りしりちょう,141.1395796,45.18701663';
muniArray["1519"] = '1,北海道,1519,利尻富士町,りしりふじちょう,141.2147222,45.2475';
muniArray["1520"] = '1,北海道,1520,幌延町,ほろのべちょう,141.8494444,45.01777778';
muniArray["1543"] = '1,北海道,1543,美幌町,びほろちょう,144.1071991,43.82371383';
muniArray["1544"] = '1,北海道,1544,津別町,つべつちょう,144.0248025,43.70633069';
muniArray["1545"] = '1,北海道,1545,斜里町,しゃりちょう,144.6708333,43.91138889';
muniArray["1546"] = '1,北海道,1546,清里町,きよさとちょう,144.5946817,43.83523767';
muniArray["1547"] = '1,北海道,1547,小清水町,こしみずちょう,144.4620985,43.85674521';
muniArray["1549"] = '1,北海道,1549,訓子府町,くんねっぷちょう,143.7416617,43.72536829';
muniArray["1550"] = '1,北海道,1550,置戸町,おけとちょう,143.5863889,43.67638889';
muniArray["1552"] = '1,北海道,1552,佐呂間町,さろまちょう,143.7747668,44.01785206';
muniArray["1555"] = '1,北海道,1555,遠軽町,えんがるちょう,143.5280486,44.06196432';
muniArray["1559"] = '1,北海道,1559,湧別町,ゆうべつちょう,143.573035,44.15160274';
muniArray["1560"] = '1,北海道,1560,滝上町,たきのうえちょう,143.0777778,44.19222222';
muniArray["1561"] = '1,北海道,1561,興部町,おこっぺちょう,143.1239513,44.46985058';
muniArray["1562"] = '1,北海道,1562,西興部村,にしおこっぺむら,142.9444613,44.32880793';
muniArray["1563"] = '1,北海道,1563,雄武町,おうむちょう,142.9618577,44.58248425';
muniArray["1564"] = '1,北海道,1564,大空町,おおぞらちょう,144.1725,43.91194444';
muniArray["1571"] = '1,北海道,1571,豊浦町,とようらちょう,140.711966,42.583409';
muniArray["1575"] = '1,北海道,1575,壮瞥町,そうべつちょう,140.885836,42.55210949';
muniArray["1578"] = '1,北海道,1578,白老町,しらおいちょう,141.3558661,42.55131326';
muniArray["1581"] = '1,北海道,1581,厚真町,あつまちょう,141.8778914,42.72363661';
muniArray["1584"] = '1,北海道,1584,洞爺湖町,とうやこちょう,140.7642741,42.55111704';
muniArray["1585"] = '1,北海道,1585,安平町,あびらちょう,141.8180556,42.76277778';
muniArray["1586"] = '1,北海道,1586,むかわ町,むかわちょう,141.9267449,42.57474771';
muniArray["1601"] = '1,北海道,1601,日高町,ひだかちょう,142.0742968,42.48033565';
muniArray["1602"] = '1,北海道,1602,平取町,びらとりちょう,142.1286988,42.58514013';
muniArray["1604"] = '1,北海道,1604,新冠町,にいかっぷちょう,142.3184391,42.36244309';
muniArray["1607"] = '1,北海道,1607,浦河町,うらかわちょう,142.7682026,42.16834176';
muniArray["1608"] = '1,北海道,1608,様似町,さまにちょう,142.9338889,42.12777778';
muniArray["1609"] = '1,北海道,1609,えりも町,えりもちょう,143.1483333,42.01638889';
muniArray["1610"] = '1,北海道,1610,新ひだか町,しんひだかちょう,142.3686044,42.34125547';
muniArray["1631"] = '1,北海道,1631,音更町,おとふけちょう,143.1978925,42.99413757';
muniArray["1632"] = '1,北海道,1632,士幌町,しほろちょう,143.2414601,43.16805004';
muniArray["1633"] = '1,北海道,1633,上士幌町,かみしほろちょう,143.2961787,43.23263469';
muniArray["1634"] = '1,北海道,1634,鹿追町,しかおいちょう,142.9889704,43.09887653';
muniArray["1635"] = '1,北海道,1635,新得町,しんとくちょう,142.8389096,43.07975642';
muniArray["1636"] = '1,北海道,1636,清水町,しみずちょう,142.8845411,43.01143823';
muniArray["1637"] = '1,北海道,1637,芽室町,めむろちょう,143.0508333,42.91194444';
muniArray["1638"] = '1,北海道,1638,中札内村,なかさつないむら,143.1323696,42.69757305';
muniArray["1639"] = '1,北海道,1639,更別村,さらべつむら,143.1878416,42.65038621';
muniArray["1641"] = '1,北海道,1641,大樹町,たいきちょう,143.2788889,42.4975';
muniArray["1642"] = '1,北海道,1642,広尾町,ひろおちょう,143.3116286,42.28593132';
muniArray["1643"] = '1,北海道,1643,幕別町,まくべつちょう,143.3561006,42.9082019';
muniArray["1644"] = '1,北海道,1644,池田町,いけだちょう,143.4485303,42.92900742';
muniArray["1645"] = '1,北海道,1645,豊頃町,とよころちょう,143.5058896,42.80102049';
muniArray["1646"] = '1,北海道,1646,本別町,ほんべつちょう,143.6105661,43.12467344';
muniArray["1647"] = '1,北海道,1647,足寄町,あしょろちょう,143.5540526,43.24480211';
muniArray["1648"] = '1,北海道,1648,陸別町,りくべつちょう,143.7472222,43.46888889';
muniArray["1649"] = '1,北海道,1649,浦幌町,うらほろちょう,143.6585781,42.80895698';
muniArray["1661"] = '1,北海道,1661,釧路町,くしろちょう,144.4660793,42.99617231';
muniArray["1662"] = '1,北海道,1662,厚岸町,あっけしちょう,144.8475,43.05194444';
muniArray["1663"] = '1,北海道,1663,浜中町,はまなかちょう,145.1295118,43.07711177';
muniArray["1664"] = '1,北海道,1664,標茶町,しべちゃちょう,144.6006586,43.30334699';
muniArray["1665"] = '1,北海道,1665,弟子屈町,てしかがちょう,144.4593251,43.48521336';
muniArray["1667"] = '1,北海道,1667,鶴居村,つるいむら,144.3211866,43.23007174';
muniArray["1668"] = '1,北海道,1668,白糠町,しらぬかちょう,144.0717316,42.95616451';
muniArray["1691"] = '1,北海道,1691,別海町,べつかいちょう,145.1173283,43.3940015';
muniArray["1692"] = '1,北海道,1692,中標津町,なかしべつちょう,144.971387,43.55520483';
muniArray["1693"] = '1,北海道,1693,標津町,しべつちょう,145.1313251,43.66126914';
muniArray["1694"] = '1,北海道,1694,羅臼町,らうすちょう,145.1894444,44.02194444';
muniArray["1695"] = '1,北海道,1695,色丹村,しこたんむら,146.8127778,43.8680556';
muniArray["1696"] = '1,北海道,1696,泊村,とまりむら,145.5097222,43.7358333';
muniArray["1697"] = '1,北海道,1697,留夜別村,るよべつむら,146.172777,44.2725000';
muniArray["1698"] = '1,北海道,1698,留別村,るべつむら,147.6975000,45.0961111';
muniArray["1699"] = '1,北海道,1699,紗那村,しゃなむら,147.8777778,45.2286111';
muniArray["1700"] = '1,北海道,1700,蘂取村,しべとろむら,148.6075000,45.4886111';
muniArray["2201"] = '2,青森県,2201,青森市,あおもりし,140.7475,40.82222222';
muniArray["2202"] = '2,青森県,2202,弘前市,ひろさきし,140.4641667,40.60305556';
muniArray["2203"] = '2,青森県,2203,八戸市,はちのへし,141.4883333,40.51222222';
muniArray["2204"] = '2,青森県,2204,黒石市,くろいしし,140.5944444,40.64277778';
muniArray["2205"] = '2,青森県,2205,五所川原市,ごしょがわらし,140.44,40.80805556';
muniArray["2206"] = '2,青森県,2206,十和田市,とわだし,141.2058333,40.61277778';
muniArray["2207"] = '2,青森県,2207,三沢市,みさわし,141.3688889,40.68333333';
muniArray["2208"] = '2,青森県,2208,むつ市,むつし,141.1830556,41.29305556';
muniArray["2209"] = '2,青森県,2209,つがる市,つがるし,140.38,40.80888889';
muniArray["2210"] = '2,青森県,2210,平川市,ひらかわし,140.5663889,40.58416667';
muniArray["2301"] = '2,青森県,2301,平内町,ひらないまち,140.9561111,40.92611111';
muniArray["2303"] = '2,青森県,2303,今別町,いまべつまち,140.4816667,41.18194444';
muniArray["2304"] = '2,青森県,2304,蓬田村,よもぎたむら,140.6558333,40.97194444';
muniArray["2307"] = '2,青森県,2307,外ヶ浜町,そとがはままち,140.6325,41.04333333';
muniArray["2321"] = '2,青森県,2321,鰺ヶ沢町,あじがさわまち,140.2088889,40.78';
muniArray["2323"] = '2,青森県,2323,深浦町,ふかうらまち,139.9277778,40.64805556';
muniArray["2343"] = '2,青森県,2343,西目屋村,にしめやむら,140.2963889,40.57694444';
muniArray["2361"] = '2,青森県,2361,藤崎町,ふじさきまち,140.5025,40.65611111';
muniArray["2362"] = '2,青森県,2362,大鰐町,おおわにまち,140.5677778,40.51833333';
muniArray["2367"] = '2,青森県,2367,田舎館村,いなかだてむら,140.55,40.63166667';
muniArray["2381"] = '2,青森県,2381,板柳町,いたやなぎまち,140.4575,40.69611111';
muniArray["2384"] = '2,青森県,2384,鶴田町,つるたまち,140.4286111,40.75888889';
muniArray["2387"] = '2,青森県,2387,中泊町,なかどまりまち,140.4397222,40.96527778';
muniArray["2401"] = '2,青森県,2401,野辺地町,のへじまち,141.1286111,40.86444444';
muniArray["2402"] = '2,青森県,2402,七戸町,しちのへまち,141.1577778,40.74472222';
muniArray["2405"] = '2,青森県,2405,六戸町,ろくのへまち,141.3247222,40.60972222';
muniArray["2406"] = '2,青森県,2406,横浜町,よこはままち,141.2475,41.08333333';
muniArray["2408"] = '2,青森県,2408,東北町,とうほくまち,141.2577778,40.72805556';
muniArray["2411"] = '2,青森県,2411,六ヶ所村,ろっかしょむら,141.3744444,40.9675';
muniArray["2412"] = '2,青森県,2412,おいらせ町,おいらせちょう,141.3977778,40.59916667';
muniArray["2423"] = '2,青森県,2423,大間町,おおままち,140.9072222,41.52666667';
muniArray["2424"] = '2,青森県,2424,東通村,ひがしどおりむら,141.3294444,41.27805556';
muniArray["2425"] = '2,青森県,2425,風間浦村,かざまうらむら,140.9955556,41.4875';
muniArray["2426"] = '2,青森県,2426,佐井村,さいむら,140.8591667,41.42972222';
muniArray["2441"] = '2,青森県,2441,三戸町,さんのへまち,141.2586111,40.37833333';
muniArray["2442"] = '2,青森県,2442,五戸町,ごのへまち,141.3077778,40.53111111';
muniArray["2443"] = '2,青森県,2443,田子町,たっこまち,141.1519444,40.34';
muniArray["2445"] = '2,青森県,2445,南部町,なんぶちょう,141.3816667,40.46694444';
muniArray["2446"] = '2,青森県,2446,階上町,はしかみちょう,141.6211111,40.4525';
muniArray["2450"] = '2,青森県,2450,新郷村,しんごうむら,141.1733333,40.46583333';
muniArray["3201"] = '3,岩手県,3201,盛岡市,もりおかし,141.1541667,39.70194444';
muniArray["3202"] = '3,岩手県,3202,宮古市,みやこし,141.9572222,39.64138889';
muniArray["3203"] = '3,岩手県,3203,大船渡市,おおふなとし,141.7083333,39.08222222';
muniArray["3205"] = '3,岩手県,3205,花巻市,はなまきし,141.1166667,39.38861111';
muniArray["3206"] = '3,岩手県,3206,北上市,きたかみし,141.1130556,39.28666667';
muniArray["3207"] = '3,岩手県,3207,久慈市,くじし,141.7752778,40.19027778';
muniArray["3208"] = '3,岩手県,3208,遠野市,とおのし,141.5336111,39.3275';
muniArray["3209"] = '3,岩手県,3209,一関市,いちのせきし,141.1263889,38.93444444';
muniArray["3210"] = '3,岩手県,3210,陸前高田市,りくぜんたかたし,141.6294444,39.01527778';
muniArray["3211"] = '3,岩手県,3211,釜石市,かまいしし,141.8855556,39.27583333';
muniArray["3213"] = '3,岩手県,3213,二戸市,にのへし,141.3047222,40.27111111';
muniArray["3214"] = '3,岩手県,3214,八幡平市,はちまんたいし,141.0952778,39.92638889';
muniArray["3215"] = '3,岩手県,3215,奥州市,おうしゅうし,141.1388889,39.14444444';
muniArray["3216"] = '3,岩手県,3216,滝沢市,たきざわし,141.0769444,39.73472222';
muniArray["3301"] = '3,岩手県,3301,雫石町,しずくいしちょう,140.9755556,39.69611111';
muniArray["3302"] = '3,岩手県,3302,葛巻町,くずまきまち,141.4363889,40.03972222';
muniArray["3303"] = '3,岩手県,3303,岩手町,いわてまち,141.2125,39.9725';
muniArray["3321"] = '3,岩手県,3321,紫波町,しわちょう,141.1677778,39.55472222';
muniArray["3322"] = '3,岩手県,3322,矢巾町,やはばちょう,141.1430556,39.60583333';
muniArray["3366"] = '3,岩手県,3366,西和賀町,にしわがまち,140.7791667,39.31777778';
muniArray["3381"] = '3,岩手県,3381,金ケ崎町,かねがさきちょう,141.1161111,39.19555556';
muniArray["3402"] = '3,岩手県,3402,平泉町,ひらいずみちょう,141.1141667,38.98666667';
muniArray["3441"] = '3,岩手県,3441,住田町,すみたちょう,141.5758333,39.14194444';
muniArray["3461"] = '3,岩手県,3461,大槌町,おおつちちょう,141.9063889,39.35972222';
muniArray["3482"] = '3,岩手県,3482,山田町,やまだまち,141.9488889,39.4675';
muniArray["3483"] = '3,岩手県,3483,岩泉町,いわいずみちょう,141.7966667,39.84305556';
muniArray["3484"] = '3,岩手県,3484,田野畑村,たのはたむら,141.8888889,39.93027778';
muniArray["3485"] = '3,岩手県,3485,普代村,ふだいむら,141.8861111,40.00527778';
muniArray["3501"] = '3,岩手県,3501,軽米町,かるまいまち,141.4605556,40.32666667';
muniArray["3503"] = '3,岩手県,3503,野田村,のだむら,141.8180556,40.11';
muniArray["3506"] = '3,岩手県,3506,九戸村,くのへむら,141.4188889,40.21138889';
muniArray["3507"] = '3,岩手県,3507,洋野町,ひろのちょう,141.7180556,40.40861111';
muniArray["3524"] = '3,岩手県,3524,一戸町,いちのへまち,141.2952778,40.21305556';
muniArray["4100"] = '4,宮城県,4100,仙台市,せんだいし,140.8697222,38.26805556';
muniArray["4101"] = '4,宮城県,4101,仙台市　青葉区,せんだいし　あおばく,140.8705556,38.26916667';
muniArray["4102"] = '4,宮城県,4102,仙台市　宮城野区,せんだいし　みやぎのく,140.9102778,38.26638889';
muniArray["4103"] = '4,宮城県,4103,仙台市　若林区,せんだいし　わかばやしく,140.9008333,38.24416667';
muniArray["4104"] = '4,宮城県,4104,仙台市　太白区,せんだいし　たいはくく,140.8772222,38.22444444';
muniArray["4105"] = '4,宮城県,4105,仙台市　泉区,せんだいし　いずみく,140.8813889,38.32638889';
muniArray["4202"] = '4,宮城県,4202,石巻市,いしのまきし,141.3027778,38.43416667';
muniArray["4203"] = '4,宮城県,4203,塩竈市,しおがまし,141.0222222,38.31444444';
muniArray["4205"] = '4,宮城県,4205,気仙沼市,けせんぬまし,141.57,38.90833333';
muniArray["4206"] = '4,宮城県,4206,白石市,しろいしし,140.6197222,38.00222222';
muniArray["4207"] = '4,宮城県,4207,名取市,なとりし,140.8919444,38.17166667';
muniArray["4208"] = '4,宮城県,4208,角田市,かくだし,140.7819444,37.97722222';
muniArray["4209"] = '4,宮城県,4209,多賀城市,たがじょうし,141.0044444,38.29388889';
muniArray["4211"] = '4,宮城県,4211,岩沼市,いわぬまし,140.87,38.10444444';
muniArray["4212"] = '4,宮城県,4212,登米市,とめし,141.1877778,38.69194444';
muniArray["4213"] = '4,宮城県,4213,栗原市,くりはらし,141.0213889,38.73027778';
muniArray["4214"] = '4,宮城県,4214,東松島市,ひがしまつしまし,141.2105556,38.42638889';
muniArray["4215"] = '4,宮城県,4215,大崎市,おおさきし,140.9555556,38.57722222';
muniArray["4301"] = '4,宮城県,4301,蔵王町,ざおうまち,140.6588889,38.09805556';
muniArray["4302"] = '4,宮城県,4302,七ケ宿町,しちかしゅくまち,140.4416667,37.99305556';
muniArray["4321"] = '4,宮城県,4321,大河原町,おおがわらまち,140.7308333,38.04944444';
muniArray["4322"] = '4,宮城県,4322,村田町,むらたまち,140.7225,38.11861111';
muniArray["4323"] = '4,宮城県,4323,柴田町,しばたまち,140.7658333,38.05638889';
muniArray["4324"] = '4,宮城県,4324,川崎町,かわさきまち,140.6436111,38.17777778';
muniArray["4341"] = '4,宮城県,4341,丸森町,まるもりまち,140.7655556,37.91138889';
muniArray["4361"] = '4,宮城県,4361,亘理町,わたりちょう,140.8527778,38.03777778';
muniArray["4362"] = '4,宮城県,4362,山元町,やまもとちょう,140.8777778,37.9625';
muniArray["4401"] = '4,宮城県,4401,松島町,まつしままち,141.0691667,38.38138889';
muniArray["4404"] = '4,宮城県,4404,七ヶ浜町,しちがはままち,141.0594444,38.30472222';
muniArray["4406"] = '4,宮城県,4406,利府町,りふちょう,140.9755556,38.33027778';
muniArray["4421"] = '4,宮城県,4421,大和町,たいわちょう,140.8863889,38.4375';
muniArray["4422"] = '4,宮城県,4422,大郷町,おおさとちょう,141.0044444,38.42444444';
muniArray["4423"] = '4,宮城県,4423,富谷町,とみやまち,140.8952778,38.4';
muniArray["4424"] = '4,宮城県,4424,大衡村,おおひらむら,140.8802778,38.4675';
muniArray["4444"] = '4,宮城県,4444,色麻町,しかまちょう,140.85,38.54888889';
muniArray["4445"] = '4,宮城県,4445,加美町,かみまち,140.855,38.57194444';
muniArray["4501"] = '4,宮城県,4501,涌谷町,わくやちょう,141.1283333,38.53972222';
muniArray["4505"] = '4,宮城県,4505,美里町,みさとまち,141.0569444,38.54444444';
muniArray["4581"] = '4,宮城県,4581,女川町,おながわちょう,141.4444444,38.44555556';
muniArray["4606"] = '4,宮城県,4606,南三陸町,みなみさんりくちょう,141.4463889,38.67777778';
muniArray["5201"] = '5,秋田県,5201,秋田市,あきたし,140.1025,39.71972222';
muniArray["5202"] = '5,秋田県,5202,能代市,のしろし,140.0266667,40.21222222';
muniArray["5203"] = '5,秋田県,5203,横手市,よこてし,140.5533333,39.31055556';
muniArray["5204"] = '5,秋田県,5204,大館市,おおだてし,140.5647222,40.27166667';
muniArray["5206"] = '5,秋田県,5206,男鹿市,おがし,139.8477778,39.88666667';
muniArray["5207"] = '5,秋田県,5207,湯沢市,ゆざわし,140.495,39.16388889';
muniArray["5209"] = '5,秋田県,5209,鹿角市,かづのし,140.7883333,40.21583333';
muniArray["5210"] = '5,秋田県,5210,由利本荘市,ゆりほんじょうし,140.0488889,39.38583333';
muniArray["5211"] = '5,秋田県,5211,潟上市,かたがみし,139.9888889,39.88333333';
muniArray["5212"] = '5,秋田県,5212,大仙市,だいせんし,140.4755556,39.45305556';
muniArray["5213"] = '5,秋田県,5213,北秋田市,きたあきたし,140.3708333,40.22611111';
muniArray["5214"] = '5,秋田県,5214,にかほ市,にかほし,139.9077778,39.20305556';
muniArray["5215"] = '5,秋田県,5215,仙北市,せんぼくし,140.7305556,39.7';
muniArray["5303"] = '5,秋田県,5303,小坂町,こさかまち,140.7469444,40.32777778';
muniArray["5327"] = '5,秋田県,5327,上小阿仁村,かみこあにむら,140.2958333,40.06333333';
muniArray["5346"] = '5,秋田県,5346,藤里町,ふじさとまち,140.2619444,40.27833333';
muniArray["5348"] = '5,秋田県,5348,三種町,みたねちょう,140.005,40.10166667';
muniArray["5349"] = '5,秋田県,5349,八峰町,はっぽうちょう,140.0386111,40.31888889';
muniArray["5361"] = '5,秋田県,5361,五城目町,ごじょうめまち,140.1116667,39.94416667';
muniArray["5363"] = '5,秋田県,5363,八郎潟町,はちろうがたまち,140.0733333,39.94944444';
muniArray["5366"] = '5,秋田県,5366,井川町,いかわまち,140.0816667,39.91416667';
muniArray["5368"] = '5,秋田県,5368,大潟村,おおがたむら,139.96,40.01777778';
muniArray["5434"] = '5,秋田県,5434,美郷町,みさとちょう,140.5825,39.46166667';
muniArray["5463"] = '5,秋田県,5463,羽後町,うごまち,140.4130556,39.19944444';
muniArray["5464"] = '5,秋田県,5464,東成瀬村,ひがしなるせむら,140.6488889,39.17888889';
muniArray["6201"] = '6,山形県,6201,山形市,やまがたし,140.3397222,38.25555556';
muniArray["6202"] = '6,山形県,6202,米沢市,よねざわし,140.1169444,37.92222222';
muniArray["6203"] = '6,山形県,6203,鶴岡市,つるおかし,139.8266667,38.72722222';
muniArray["6204"] = '6,山形県,6204,酒田市,さかたし,139.8363889,38.91444444';
muniArray["6205"] = '6,山形県,6205,新庄市,しんじょうし,140.3019444,38.76472222';
muniArray["6206"] = '6,山形県,6206,寒河江市,さがえし,140.2761111,38.38111111';
muniArray["6207"] = '6,山形県,6207,上山市,かみのやまし,140.2677778,38.14972222';
muniArray["6208"] = '6,山形県,6208,村山市,むらやまし,140.3805556,38.48361111';
muniArray["6209"] = '6,山形県,6209,長井市,ながいし,140.0405556,38.10777778';
muniArray["6210"] = '6,山形県,6210,天童市,てんどうし,140.3783333,38.36222222';
muniArray["6211"] = '6,山形県,6211,東根市,ひがしねし,140.3911111,38.43138889';
muniArray["6212"] = '6,山形県,6212,尾花沢市,おばなざわし,140.4058333,38.60083333';
muniArray["6213"] = '6,山形県,6213,南陽市,なんようし,140.1483333,38.05527778';
muniArray["6301"] = '6,山形県,6301,山辺町,やまのべまち,140.2625,38.28916667';
muniArray["6302"] = '6,山形県,6302,中山町,なかやままち,140.2830556,38.33333333';
muniArray["6321"] = '6,山形県,6321,河北町,かほくちょう,140.3144444,38.42638889';
muniArray["6322"] = '6,山形県,6322,西川町,にしかわまち,140.1477778,38.42666667';
muniArray["6323"] = '6,山形県,6323,朝日町,あさひまち,140.1458333,38.29916667';
muniArray["6324"] = '6,山形県,6324,大江町,おおえまち,140.2066667,38.38083333';
muniArray["6341"] = '6,山形県,6341,大石田町,おおいしだまち,140.3727778,38.59388889';
muniArray["6361"] = '6,山形県,6361,金山町,かねやままち,140.3394444,38.88333333';
muniArray["6362"] = '6,山形県,6362,最上町,もがみまち,140.5194444,38.75861111';
muniArray["6363"] = '6,山形県,6363,舟形町,ふながたまち,140.32,38.69166667';
muniArray["6364"] = '6,山形県,6364,真室川町,まむろがわまち,140.2525,38.85777778';
muniArray["6365"] = '6,山形県,6365,大蔵村,おおくらむら,140.2305556,38.70416667';
muniArray["6366"] = '6,山形県,6366,鮭川村,さけがわむら,140.2216667,38.79611111';
muniArray["6367"] = '6,山形県,6367,戸沢村,とざわむら,140.1436111,38.73777778';
muniArray["6381"] = '6,山形県,6381,高畠町,たかはたまち,140.1891667,38.00277778';
muniArray["6382"] = '6,山形県,6382,川西町,かわにしまち,140.0458333,38.00444444';
muniArray["6401"] = '6,山形県,6401,小国町,おぐにまち,139.7433333,38.06138889';
muniArray["6402"] = '6,山形県,6402,白鷹町,しらたかまち,140.0986111,38.18305556';
muniArray["6403"] = '6,山形県,6403,飯豊町,いいでまち,139.9875,38.04583333';
muniArray["6426"] = '6,山形県,6426,三川町,みかわまち,139.8497222,38.79444444';
muniArray["6428"] = '6,山形県,6428,庄内町,しょうないまち,139.9047222,38.84972222';
muniArray["6461"] = '6,山形県,6461,遊佐町,ゆざまち,139.9075,39.01472222';
muniArray["7201"] = '7,福島県,7201,福島市,ふくしまし,140.4747222,37.76083333';
muniArray["7202"] = '7,福島県,7202,会津若松市,あいづわかまつし,139.9297222,37.49472222';
muniArray["7203"] = '7,福島県,7203,郡山市,こおりやまし,140.3597222,37.40055556';
muniArray["7204"] = '7,福島県,7204,いわき市,いわきし,140.8877778,37.05055556';
muniArray["7205"] = '7,福島県,7205,白河市,しらかわし,140.2108333,37.12638889';
muniArray["7207"] = '7,福島県,7207,須賀川市,すかがわし,140.3727778,37.28666667';
muniArray["7208"] = '7,福島県,7208,喜多方市,きたかたし,139.8744444,37.65111111';
muniArray["7209"] = '7,福島県,7209,相馬市,そうまし,140.9197222,37.79666667';
muniArray["7210"] = '7,福島県,7210,二本松市,にほんまつし,140.4313889,37.58472222';
muniArray["7211"] = '7,福島県,7211,田村市,たむらし,140.5691667,37.44138889';
muniArray["7212"] = '7,福島県,7212,南相馬市,みなみそうまし,140.9572222,37.64222222';
muniArray["7213"] = '7,福島県,7213,伊達市,だてし,140.5630556,37.81888889';
muniArray["7214"] = '7,福島県,7214,本宮市,もとみやし,140.3938889,37.51333333';
muniArray["7301"] = '7,福島県,7301,桑折町,こおりまち,140.5163889,37.84944444';
muniArray["7303"] = '7,福島県,7303,国見町,くにみまち,140.5494444,37.87694444';
muniArray["7308"] = '7,福島県,7308,川俣町,かわまたまち,140.5983333,37.665';
muniArray["7322"] = '7,福島県,7322,大玉村,おおたまむら,140.3711111,37.53444444';
muniArray["7342"] = '7,福島県,7342,鏡石町,かがみいしまち,140.3436111,37.25277778';
muniArray["7344"] = '7,福島県,7344,天栄村,てんえいむら,140.2472222,37.25527778';
muniArray["7362"] = '7,福島県,7362,下郷町,しもごうまち,139.8722222,37.25555556';
muniArray["7364"] = '7,福島県,7364,檜枝岐村,ひのえまたむら,139.3888889,37.02416667';
muniArray["7367"] = '7,福島県,7367,只見町,ただみまち,139.3158333,37.34861111';
muniArray["7368"] = '7,福島県,7368,南会津町,みなみあいづまち,139.7733333,37.20027778';
muniArray["7402"] = '7,福島県,7402,北塩原村,きたしおばらむら,139.9377778,37.65583333';
muniArray["7405"] = '7,福島県,7405,西会津町,にしあいづまち,139.6475,37.58888889';
muniArray["7407"] = '7,福島県,7407,磐梯町,ばんだいまち,139.9883333,37.56194444';
muniArray["7408"] = '7,福島県,7408,猪苗代町,いなわしろまち,140.1047222,37.55777778';
muniArray["7421"] = '7,福島県,7421,会津坂下町,あいづばんげまち,139.8216667,37.56138889';
muniArray["7422"] = '7,福島県,7422,湯川村,ゆがわむら,139.8866667,37.56583333';
muniArray["7423"] = '7,福島県,7423,柳津町,やないづまち,139.7194444,37.52611111';
muniArray["7444"] = '7,福島県,7444,三島町,みしままち,139.6444444,37.47027778';
muniArray["7445"] = '7,福島県,7445,金山町,かねやままち,139.5247222,37.45388889';
muniArray["7446"] = '7,福島県,7446,昭和村,しょうわむら,139.6105556,37.33583333';
muniArray["7447"] = '7,福島県,7447,会津美里町,あいづみさとまち,139.8411111,37.46';
muniArray["7461"] = '7,福島県,7461,西郷村,にしごうむら,140.1552778,37.14194444';
muniArray["7464"] = '7,福島県,7464,泉崎村,いずみざきむら,140.2952778,37.15694444';
muniArray["7465"] = '7,福島県,7465,中島村,なかじまむら,140.3502778,37.14861111';
muniArray["7466"] = '7,福島県,7466,矢吹町,やぶきまち,140.3386111,37.20111111';
muniArray["7481"] = '7,福島県,7481,棚倉町,たなぐらまち,140.3797222,37.02972222';
muniArray["7482"] = '7,福島県,7482,矢祭町,やまつりまち,140.4247222,36.87138889';
muniArray["7483"] = '7,福島県,7483,塙町,はなわまち,140.4097222,36.95722222';
muniArray["7484"] = '7,福島県,7484,鮫川村,さめがわむら,140.5097222,37.0425';
muniArray["7501"] = '7,福島県,7501,石川町,いしかわまち,140.4522222,37.14416667';
muniArray["7502"] = '7,福島県,7502,玉川村,たまかわむら,140.4088889,37.21083333';
muniArray["7503"] = '7,福島県,7503,平田村,ひらたむら,140.5702778,37.21805556';
muniArray["7504"] = '7,福島県,7504,浅川町,あさかわまち,140.4127778,37.08083333';
muniArray["7505"] = '7,福島県,7505,古殿町,ふるどのまち,140.5558333,37.08916667';
muniArray["7521"] = '7,福島県,7521,三春町,みはるまち,140.4927778,37.44111111';
muniArray["7522"] = '7,福島県,7522,小野町,おのまち,140.6263889,37.28694444';
muniArray["7541"] = '7,福島県,7541,広野町,ひろのまち,140.9947222,37.21444444';
muniArray["7542"] = '7,福島県,7542,楢葉町,ならはまち,140.9936111,37.2825';
muniArray["7543"] = '7,福島県,7543,富岡町,とみおかまち,141.0086111,37.34555556';
muniArray["7544"] = '7,福島県,7544,川内村,かわうちむら,140.8094444,37.3375';
muniArray["7545"] = '7,福島県,7545,大熊町,おおくままち,140.9836111,37.40444444';
muniArray["7546"] = '7,福島県,7546,双葉町,ふたばまち,141.0125,37.44916667';
muniArray["7547"] = '7,福島県,7547,浪江町,なみえまち,141.0008333,37.49472222';
muniArray["7548"] = '7,福島県,7548,葛尾村,かつらおむら,140.7644444,37.50361111';
muniArray["7561"] = '7,福島県,7561,新地町,しんちまち,140.9194444,37.87611111';
muniArray["7564"] = '7,福島県,7564,飯舘村,いいたてむら,140.7355556,37.67916667';
muniArray["8201"] = '8,茨城県,8201,水戸市,みとし,140.4713889,36.36583333';
muniArray["8202"] = '8,茨城県,8202,日立市,ひたちし,140.6516667,36.59916667';
muniArray["8203"] = '8,茨城県,8203,土浦市,つちうらし,140.1961111,36.07194444';
muniArray["8204"] = '8,茨城県,8204,古河市,こがし,139.7558333,36.17888889';
muniArray["8205"] = '8,茨城県,8205,石岡市,いしおかし,140.2872222,36.19083333';
muniArray["8207"] = '8,茨城県,8207,結城市,ゆうきし,139.8775,36.30527778';
muniArray["8208"] = '8,茨城県,8208,龍ケ崎市,りゅうがさきし,140.1822222,35.91166667';
muniArray["8210"] = '8,茨城県,8210,下妻市,しもつまし,139.9675,36.18444444';
muniArray["8211"] = '8,茨城県,8211,常総市,じょうそうし,139.9938889,36.02361111';
muniArray["8212"] = '8,茨城県,8212,常陸太田市,ひたちおおたし,140.5311111,36.53833333';
muniArray["8214"] = '8,茨城県,8214,高萩市,たかはぎし,140.7097222,36.71361111';
muniArray["8215"] = '8,茨城県,8215,北茨城市,きたいばらきし,140.7511111,36.80194444';
muniArray["8216"] = '8,茨城県,8216,笠間市,かさまし,140.3041667,36.345';
muniArray["8217"] = '8,茨城県,8217,取手市,とりでし,140.0502778,35.91138889';
muniArray["8219"] = '8,茨城県,8219,牛久市,うしくし,140.1497222,35.97944444';
muniArray["8220"] = '8,茨城県,8220,つくば市,つくばし,140.0763889,36.08361111';
muniArray["8221"] = '8,茨城県,8221,ひたちなか市,ひたちなかし,140.5344444,36.39638889';
muniArray["8222"] = '8,茨城県,8222,鹿嶋市,かしまし,140.645,35.96583333';
muniArray["8223"] = '8,茨城県,8223,潮来市,いたこし,140.5552778,35.94722222';
muniArray["8224"] = '8,茨城県,8224,守谷市,もりやし,139.9755556,35.95138889';
muniArray["8225"] = '8,茨城県,8225,常陸大宮市,ひたちおおみやし,140.4108333,36.5425';
muniArray["8226"] = '8,茨城県,8226,那珂市,なかし,140.4866667,36.4575';
muniArray["8227"] = '8,茨城県,8227,筑西市,ちくせいし,139.9830556,36.30722222';
muniArray["8228"] = '8,茨城県,8228,坂東市,ばんどうし,139.8888889,36.04833333';
muniArray["8229"] = '8,茨城県,8229,稲敷市,いなしきし,140.3238889,35.95666667';
muniArray["8230"] = '8,茨城県,8230,かすみがうら市,かすみがうらし,140.2372222,36.15194444';
muniArray["8231"] = '8,茨城県,8231,桜川市,さくらがわし,140.0905556,36.32722222';
muniArray["8232"] = '8,茨城県,8232,神栖市,かみすし,140.6647222,35.89';
muniArray["8233"] = '8,茨城県,8233,行方市,なめがたし,140.4891667,35.99027778';
muniArray["8234"] = '8,茨城県,8234,鉾田市,ほこたし,140.5163889,36.15861111';
muniArray["8235"] = '8,茨城県,8235,つくばみらい市,つくばみらいし,140.0372222,35.96305556';
muniArray["8236"] = '8,茨城県,8236,小美玉市,おみたまし,140.3525,36.23944444';
muniArray["8302"] = '8,茨城県,8302,茨城町,いばらきまち,140.4247222,36.28694444';
muniArray["8309"] = '8,茨城県,8309,大洗町,おおあらいまち,140.575,36.31333333';
muniArray["8310"] = '8,茨城県,8310,城里町,しろさとまち,140.3763889,36.47916667';
muniArray["8341"] = '8,茨城県,8341,東海村,とうかいむら,140.5661111,36.47305556';
muniArray["8364"] = '8,茨城県,8364,大子町,だいごまち,140.3552778,36.76805556';
muniArray["8442"] = '8,茨城県,8442,美浦村,みほむら,140.3019444,36.00444444';
muniArray["8443"] = '8,茨城県,8443,阿見町,あみまち,140.215,36.03083333';
muniArray["8447"] = '8,茨城県,8447,河内町,かわちまち,140.2444444,35.88472222';
muniArray["8521"] = '8,茨城県,8521,八千代町,やちよまち,139.8913889,36.18138889';
muniArray["8542"] = '8,茨城県,8542,五霞町,ごかまち,139.7452778,36.11444444';
muniArray["8546"] = '8,茨城県,8546,境町,さかいまち,139.795,36.10861111';
muniArray["8564"] = '8,茨城県,8564,利根町,とねまち,140.1394444,35.85777778';
muniArray["9201"] = '9,栃木県,9201,宇都宮市,うつのみやし,139.8827778,36.55527778';
muniArray["9202"] = '9,栃木県,9202,足利市,あしかがし,139.4497222,36.34027778';
muniArray["9203"] = '9,栃木県,9203,栃木市,とちぎし,139.7302778,36.38138889';
muniArray["9204"] = '9,栃木県,9204,佐野市,さのし,139.5783333,36.31444444';
muniArray["9205"] = '9,栃木県,9205,鹿沼市,かぬまし,139.745,36.56722222';
muniArray["9206"] = '9,栃木県,9206,日光市,にっこうし,139.6983333,36.72';
muniArray["9208"] = '9,栃木県,9208,小山市,おやまし,139.8002778,36.31472222';
muniArray["9209"] = '9,栃木県,9209,真岡市,もおかし,140.0130556,36.44027778';
muniArray["9210"] = '9,栃木県,9210,大田原市,おおたわらし,140.0155556,36.87083333';
muniArray["9211"] = '9,栃木県,9211,矢板市,やいたし,139.9241667,36.80666667';
muniArray["9213"] = '9,栃木県,9213,那須塩原市,なすしおばらし,140.0461111,36.96166667';
muniArray["9214"] = '9,栃木県,9214,さくら市,さくらし,139.9663889,36.68527778';
muniArray["9215"] = '9,栃木県,9215,那須烏山市,なすからすやまし,140.1516667,36.65694444';
muniArray["9216"] = '9,栃木県,9216,下野市,しもつけし,139.8422222,36.38722222';
muniArray["9301"] = '9,栃木県,9301,上三川町,かみのかわまち,139.91,36.43916667';
muniArray["9342"] = '9,栃木県,9342,益子町,ましこまち,140.0930556,36.4675';
muniArray["9343"] = '9,栃木県,9343,茂木町,もてぎまち,140.1875,36.53222222';
muniArray["9344"] = '9,栃木県,9344,市貝町,いちかいまち,140.1022222,36.54333333';
muniArray["9345"] = '9,栃木県,9345,芳賀町,はがまち,140.0580556,36.54805556';
muniArray["9361"] = '9,栃木県,9361,壬生町,みぶまち,139.8038889,36.42722222';
muniArray["9364"] = '9,栃木県,9364,野木町,のぎまち,139.7408333,36.23305556';
muniArray["9367"] = '9,栃木県,9367,岩舟町,いわふねまち,139.6561111,36.31888889';
muniArray["9384"] = '9,栃木県,9384,塩谷町,しおやまち,139.8505556,36.7775';
muniArray["9386"] = '9,栃木県,9386,高根沢町,たかねざわまち,139.9866667,36.63111111';
muniArray["9407"] = '9,栃木県,9407,那須町,なすまち,140.1211111,37.01972222';
muniArray["9411"] = '9,栃木県,9411,那珂川町,なかがわまち,140.1713889,36.73833333';
muniArray["10201"] = '10,群馬県,10201,前橋市,まえばしし,139.0636111,36.38916667';
muniArray["10202"] = '10,群馬県,10202,高崎市,たかさきし,139.0036111,36.32194444';
muniArray["10203"] = '10,群馬県,10203,桐生市,きりゅうし,139.3305556,36.40527778';
muniArray["10204"] = '10,群馬県,10204,伊勢崎市,いせさきし,139.1966667,36.31138889';
muniArray["10205"] = '10,群馬県,10205,太田市,おおたし,139.3758333,36.29166667';
muniArray["10206"] = '10,群馬県,10206,沼田市,ぬまたし,139.0441667,36.64583333';
muniArray["10207"] = '10,群馬県,10207,館林市,たてばやしし,139.5422222,36.245';
muniArray["10208"] = '10,群馬県,10208,渋川市,しぶかわし,139.0005556,36.48944444';
muniArray["10209"] = '10,群馬県,10209,藤岡市,ふじおかし,139.0747222,36.25861111';
muniArray["10210"] = '10,群馬県,10210,富岡市,とみおかし,138.89,36.26';
muniArray["10211"] = '10,群馬県,10211,安中市,あんなかし,138.8872222,36.32638889';
muniArray["10212"] = '10,群馬県,10212,みどり市,みどりし,139.2811111,36.39472222';
muniArray["10344"] = '10,群馬県,10344,榛東村,しんとうむら,138.9813889,36.44027778';
muniArray["10345"] = '10,群馬県,10345,吉岡町,よしおかまち,139.0102778,36.4475';
muniArray["10366"] = '10,群馬県,10366,上野村,うえのむら,138.7772222,36.08333333';
muniArray["10367"] = '10,群馬県,10367,神流町,かんなまち,138.9169444,36.11611111';
muniArray["10382"] = '10,群馬県,10382,下仁田町,しもにたまち,138.7891667,36.2125';
muniArray["10383"] = '10,群馬県,10383,南牧村,なんもくむら,138.7113889,36.15861111';
muniArray["10384"] = '10,群馬県,10384,甘楽町,かんらまち,138.9219444,36.24305556';
muniArray["10421"] = '10,群馬県,10421,中之条町,なかのじょうまち,138.8411111,36.59';
muniArray["10424"] = '10,群馬県,10424,長野原町,ながのはらまち,138.6375,36.55222222';
muniArray["10425"] = '10,群馬県,10425,嬬恋村,つまごいむら,138.5302778,36.51666667';
muniArray["10426"] = '10,群馬県,10426,草津町,くさつまち,138.5961111,36.62055556';
muniArray["10428"] = '10,群馬県,10428,高山村,たかやまむら,138.9436111,36.62083333';
muniArray["10429"] = '10,群馬県,10429,東吾妻町,ひがしあがつままち,138.8255556,36.57138889';
muniArray["10443"] = '10,群馬県,10443,片品村,かたしなむら,139.2252778,36.7725';
muniArray["10444"] = '10,群馬県,10444,川場村,かわばむら,139.1066667,36.69472222';
muniArray["10448"] = '10,群馬県,10448,昭和村,しょうわむら,139.0658333,36.63972222';
muniArray["10449"] = '10,群馬県,10449,みなかみ町,みなかみまち,138.9991667,36.67888889';
muniArray["10464"] = '10,群馬県,10464,玉村町,たまむらまち,139.115,36.30444444';
muniArray["10521"] = '10,群馬県,10521,板倉町,いたくらまち,139.6102778,36.22305556';
muniArray["10522"] = '10,群馬県,10522,明和町,めいわまち,139.5341667,36.21138889';
muniArray["10523"] = '10,群馬県,10523,千代田町,ちよだまち,139.4425,36.21777778';
muniArray["10524"] = '10,群馬県,10524,大泉町,おおいずみまち,139.405,36.24777778';
muniArray["10525"] = '10,群馬県,10525,邑楽町,おうらまち,139.4625,36.2525';
muniArray["11100"] = '11,埼玉県,11100,さいたま市,さいたまし,139.6452778,35.86166667';
muniArray["11101"] = '11,埼玉県,11101,さいたま市　西区,さいたまし　にしく,139.5797222,35.925';
muniArray["11102"] = '11,埼玉県,11102,さいたま市　北区,さいたまし　きたく,139.62,35.93083333';
muniArray["11103"] = '11,埼玉県,11103,さいたま市　大宮区,さいたまし　おおみやく,139.6286111,35.90611111';
muniArray["11104"] = '11,埼玉県,11104,さいたま市　見沼区,さいたまし　みぬまく,139.6544444,35.93527778';
muniArray["11105"] = '11,埼玉県,11105,さいたま市　中央区,さいたまし　ちゅうおうく,139.6261111,35.88388889';
muniArray["11106"] = '11,埼玉県,11106,さいたま市　桜区,さいたまし　さくらく,139.6094444,35.85694444';
muniArray["11107"] = '11,埼玉県,11107,さいたま市　浦和区,さいたまし　うらわく,139.6452778,35.86166667';
muniArray["11108"] = '11,埼玉県,11108,さいたま市　南区,さいたまし　みなみく,139.6480556,35.84638889';
muniArray["11109"] = '11,埼玉県,11109,さいたま市　緑区,さいたまし　みどりく,139.6838889,35.87111111';
muniArray["11110"] = '11,埼玉県,11110,さいたま市　岩槻区,さいたまし　いわつきく,139.6941694,35.94972146';
muniArray["11201"] = '11,埼玉県,11201,川越市,かわごえし,139.4858333,35.925';
muniArray["11202"] = '11,埼玉県,11202,熊谷市,くまがやし,139.3886111,36.14722222';
muniArray["11203"] = '11,埼玉県,11203,川口市,かわぐちし,139.7241667,35.80777778';
muniArray["11206"] = '11,埼玉県,11206,行田市,ぎょうだし,139.4558333,36.13888889';
muniArray["11207"] = '11,埼玉県,11207,秩父市,ちちぶし,139.0855556,35.99166667';
muniArray["11208"] = '11,埼玉県,11208,所沢市,ところざわし,139.4688889,35.79944444';
muniArray["11209"] = '11,埼玉県,11209,飯能市,はんのうし,139.3277778,35.85583333';
muniArray["11210"] = '11,埼玉県,11210,加須市,かぞし,139.6019444,36.13138889';
muniArray["11211"] = '11,埼玉県,11211,本庄市,ほんじょうし,139.1902778,36.24388889';
muniArray["11212"] = '11,埼玉県,11212,東松山市,ひがしまつやまし,139.4,36.04222222';
muniArray["11214"] = '11,埼玉県,11214,春日部市,かすかべし,139.7525,35.97527778';
muniArray["11215"] = '11,埼玉県,11215,狭山市,さやまし,139.4122222,35.85305556';
muniArray["11216"] = '11,埼玉県,11216,羽生市,はにゅうし,139.5486111,36.17277778';
muniArray["11217"] = '11,埼玉県,11217,鴻巣市,こうのすし,139.5222222,36.06583333';
muniArray["11218"] = '11,埼玉県,11218,深谷市,ふかやし,139.2813889,36.1975';
muniArray["11219"] = '11,埼玉県,11219,上尾市,あげおし,139.5933333,35.9775';
muniArray["11221"] = '11,埼玉県,11221,草加市,そうかし,139.8055556,35.82555556';
muniArray["11222"] = '11,埼玉県,11222,越谷市,こしがやし,139.7908333,35.89111111';
muniArray["11223"] = '11,埼玉県,11223,蕨市,わらびし,139.6794444,35.82555556';
muniArray["11224"] = '11,埼玉県,11224,戸田市,とだし,139.6777778,35.8175';
muniArray["11225"] = '11,埼玉県,11225,入間市,いるまし,139.3911111,35.83583333';
muniArray["11227"] = '11,埼玉県,11227,朝霞市,あさかし,139.5936111,35.79722222';
muniArray["11228"] = '11,埼玉県,11228,志木市,しきし,139.5802778,35.83666667';
muniArray["11229"] = '11,埼玉県,11229,和光市,わこうし,139.6058333,35.78138889';
muniArray["11230"] = '11,埼玉県,11230,新座市,にいざし,139.5652778,35.79333333';
muniArray["11231"] = '11,埼玉県,11231,桶川市,おけがわし,139.5583333,36.00277778';
muniArray["11232"] = '11,埼玉県,11232,久喜市,くきし,139.6669444,36.06222222';
muniArray["11233"] = '11,埼玉県,11233,北本市,きたもとし,139.5302778,36.02722222';
muniArray["11234"] = '11,埼玉県,11234,八潮市,やしおし,139.8391667,35.82277778';
muniArray["11235"] = '11,埼玉県,11235,富士見市,ふじみし,139.5491667,35.85666667';
muniArray["11237"] = '11,埼玉県,11237,三郷市,みさとし,139.8725,35.83027778';
muniArray["11238"] = '11,埼玉県,11238,蓮田市,はすだし,139.6622222,35.99416667';
muniArray["11239"] = '11,埼玉県,11239,坂戸市,さかどし,139.4030556,35.95722222';
muniArray["11240"] = '11,埼玉県,11240,幸手市,さってし,139.7258333,36.07805556';
muniArray["11241"] = '11,埼玉県,11241,鶴ヶ島市,つるがしまし,139.3930556,35.93444444';
muniArray["11242"] = '11,埼玉県,11242,日高市,ひだかし,139.3391667,35.90777778';
muniArray["11243"] = '11,埼玉県,11243,吉川市,よしかわし,139.8413889,35.89111111';
muniArray["11245"] = '11,埼玉県,11245,ふじみ野市,ふじみのし,139.5197222,35.87944444';
muniArray["11301"] = '11,埼玉県,11301,伊奈町,いなまち,139.6238889,36';
muniArray["11324"] = '11,埼玉県,11324,三芳町,みよしまち,139.5266667,35.82833333';
muniArray["11326"] = '11,埼玉県,11326,毛呂山町,もろやままち,139.3161111,35.94166667';
muniArray["11327"] = '11,埼玉県,11327,越生町,おごせまち,139.2941667,35.96444444';
muniArray["11341"] = '11,埼玉県,11341,滑川町,なめがわまち,139.3608333,36.06611111';
muniArray["11342"] = '11,埼玉県,11342,嵐山町,らんざんまち,139.3202778,36.05666667';
muniArray["11343"] = '11,埼玉県,11343,小川町,おがわまち,139.2619444,36.05666667';
muniArray["11346"] = '11,埼玉県,11346,川島町,かわじままち,139.4816667,35.98138889';
muniArray["11347"] = '11,埼玉県,11347,吉見町,よしみまち,139.4538889,36.04';
muniArray["11348"] = '11,埼玉県,11348,鳩山町,はとやままち,139.3341667,35.98166667';
muniArray["11349"] = '11,埼玉県,11349,ときがわ町,ときがわまち,139.2969444,36.00861111';
muniArray["11361"] = '11,埼玉県,11361,横瀬町,よこぜまち,139.1002778,35.98722222';
muniArray["11362"] = '11,埼玉県,11362,皆野町,みなのまち,139.0988889,36.07083333';
muniArray["11363"] = '11,埼玉県,11363,長瀞町,ながとろまち,139.11,36.11472222';
muniArray["11365"] = '11,埼玉県,11365,小鹿野町,おがのまち,139.0086111,36.01722222';
muniArray["11369"] = '11,埼玉県,11369,東秩父村,ひがしちちぶむら,139.1947222,36.05805556';
muniArray["11381"] = '11,埼玉県,11381,美里町,みさとまち,139.1813889,36.17722222';
muniArray["11383"] = '11,埼玉県,11383,神川町,かみかわまち,139.1019444,36.21388889';
muniArray["11385"] = '11,埼玉県,11385,上里町,かみさとまち,139.1447222,36.25194444';
muniArray["11408"] = '11,埼玉県,11408,寄居町,よりいまち,139.1930556,36.11833333';
muniArray["11442"] = '11,埼玉県,11442,宮代町,みやしろまち,139.7227778,36.0225';
muniArray["11246"] = '11,埼玉県,11246,白岡市,しらおかし,139.6769444,36.01888889';
muniArray["11464"] = '11,埼玉県,11464,杉戸町,すぎとまち,139.7366667,36.02555556';
muniArray["11465"] = '11,埼玉県,11465,松伏町,まつぶしまち,139.8152778,35.92583333';
muniArray["12100"] = '12,千葉県,12100,千葉市,ちばし,140.1063889,35.60722222';
muniArray["12101"] = '12,千葉県,12101,千葉市　中央区,ちばし　ちゅうおうく,140.1247222,35.60888889';
muniArray["12102"] = '12,千葉県,12102,千葉市　花見川区,ちばし　はなみがわく,140.0691667,35.66277778';
muniArray["12103"] = '12,千葉県,12103,千葉市　稲毛区,ちばし　いなげく,140.1072222,35.63638889';
muniArray["12104"] = '12,千葉県,12104,千葉市　若葉区,ちばし　わかばく,140.1555556,35.63416667';
muniArray["12105"] = '12,千葉県,12105,千葉市　緑区,ちばし　みどりく,140.1763889,35.56027778';
muniArray["12106"] = '12,千葉県,12106,千葉市　美浜区,ちばし　みはまく,140.0630556,35.64027778';
muniArray["12202"] = '12,千葉県,12202,銚子市,ちょうしし,140.8266667,35.73472222';
muniArray["12203"] = '12,千葉県,12203,市川市,いちかわし,139.9311111,35.72194444';
muniArray["12204"] = '12,千葉県,12204,船橋市,ふなばしし,139.9825,35.69472222';
muniArray["12205"] = '12,千葉県,12205,館山市,たてやまし,139.87,34.99666667';
muniArray["12206"] = '12,千葉県,12206,木更津市,きさらづし,139.9169444,35.37611111';
muniArray["12207"] = '12,千葉県,12207,松戸市,まつどし,139.9030556,35.78777778';
muniArray["12208"] = '12,千葉県,12208,野田市,のだし,139.8747222,35.955';
muniArray["12210"] = '12,千葉県,12210,茂原市,もばらし,140.2880556,35.42833333';
muniArray["12211"] = '12,千葉県,12211,成田市,なりたし,140.3183333,35.77666667';
muniArray["12212"] = '12,千葉県,12212,佐倉市,さくらし,140.2238889,35.72388889';
muniArray["12213"] = '12,千葉県,12213,東金市,とうがねし,140.3661111,35.56';
muniArray["12215"] = '12,千葉県,12215,旭市,あさひし,140.6466667,35.72027778';
muniArray["12216"] = '12,千葉県,12216,習志野市,ならしのし,140.0266667,35.68083333';
muniArray["12217"] = '12,千葉県,12217,柏市,かしわし,139.9763889,35.86805556';
muniArray["12218"] = '12,千葉県,12218,勝浦市,かつうらし,140.3211111,35.1525';
muniArray["12219"] = '12,千葉県,12219,市原市,いちはらし,140.1155556,35.49805556';
muniArray["12220"] = '12,千葉県,12220,流山市,ながれやまし,139.9025,35.85611111';
muniArray["12221"] = '12,千葉県,12221,八千代市,やちよし,140.0997222,35.7225';
muniArray["12222"] = '12,千葉県,12222,我孫子市,あびこし,140.0283333,35.86416667';
muniArray["12223"] = '12,千葉県,12223,鴨川市,かもがわし,140.0988889,35.11416667';
muniArray["12224"] = '12,千葉県,12224,鎌ケ谷市,かまがやし,140.0008333,35.77694444';
muniArray["12225"] = '12,千葉県,12225,君津市,きみつし,139.9025,35.33055556';
muniArray["12226"] = '12,千葉県,12226,富津市,ふっつし,139.8569444,35.30416667';
muniArray["12227"] = '12,千葉県,12227,浦安市,うらやすし,139.9016667,35.65361111';
muniArray["12228"] = '12,千葉県,12228,四街道市,よつかいどうし,140.1683333,35.67';
muniArray["12229"] = '12,千葉県,12229,袖ケ浦市,そでがうらし,139.9547222,35.43';
muniArray["12230"] = '12,千葉県,12230,八街市,やちまたし,140.3183333,35.66583333';
muniArray["12231"] = '12,千葉県,12231,印西市,いんざいし,140.1458333,35.83222222';
muniArray["12232"] = '12,千葉県,12232,白井市,しろいし,140.0563889,35.79166667';
muniArray["12233"] = '12,千葉県,12233,富里市,とみさとし,140.3430556,35.72666667';
muniArray["12234"] = '12,千葉県,12234,南房総市,みなみぼうそうし,139.8402778,35.04333333';
muniArray["12235"] = '12,千葉県,12235,匝瑳市,そうさし,140.5644444,35.70777778';
muniArray["12236"] = '12,千葉県,12236,香取市,かとりし,140.4991667,35.89777778';
muniArray["12237"] = '12,千葉県,12237,山武市,さんむし,140.4136111,35.60277778';
muniArray["12238"] = '12,千葉県,12238,いすみ市,いすみし,140.3852778,35.25388889';
muniArray["12322"] = '12,千葉県,12322,酒々井町,しすいまち,140.2694444,35.725';
muniArray["12329"] = '12,千葉県,12329,栄町,さかえまち,140.2438889,35.84083333';
muniArray["12342"] = '12,千葉県,12342,神崎町,こうざきまち,140.4052778,35.90166667';
muniArray["12347"] = '12,千葉県,12347,多古町,たこまち,140.4677778,35.73555556';
muniArray["12349"] = '12,千葉県,12349,東庄町,とうのしょうまち,140.6688889,35.83722222';
muniArray["12239"] = '12,千葉県,12239,大網白里市,おおあみしらさとし,140.3211111,35.52166667';
muniArray["12403"] = '12,千葉県,12403,九十九里町,くじゅうくりまち,140.4405556,35.535';
muniArray["12409"] = '12,千葉県,12409,芝山町,しばやままち,140.4141667,35.69305556';
muniArray["12410"] = '12,千葉県,12410,横芝光町,よこしばひかりまち,140.5041667,35.66555556';
muniArray["12421"] = '12,千葉県,12421,一宮町,いちのみやまち,140.3688889,35.37277778';
muniArray["12422"] = '12,千葉県,12422,睦沢町,むつざわまち,140.3191667,35.36111111';
muniArray["12423"] = '12,千葉県,12423,長生村,ちょうせいむら,140.3541667,35.41222222';
muniArray["12424"] = '12,千葉県,12424,白子町,しらこまち,140.3744444,35.45444444';
muniArray["12426"] = '12,千葉県,12426,長柄町,ながらまち,140.2269444,35.43111111';
muniArray["12427"] = '12,千葉県,12427,長南町,ちょうなんまち,140.2372222,35.38666667';
muniArray["12441"] = '12,千葉県,12441,大多喜町,おおたきまち,140.2455556,35.285';
muniArray["12443"] = '12,千葉県,12443,御宿町,おんじゅくまち,140.3486111,35.19166667';
muniArray["12463"] = '12,千葉県,12463,鋸南町,きょなんまち,139.8355556,35.11111111';
muniArray["13101"] = '13,東京都,13101,千代田区,ちよだく,139.7536111,35.69388889';
muniArray["13102"] = '13,東京都,13102,中央区,ちゅうおうく,139.7722222,35.67083333';
muniArray["13103"] = '13,東京都,13103,港区,みなとく,139.7516667,35.65805556';
muniArray["13104"] = '13,東京都,13104,新宿区,しんじゅくく,139.7036111,35.69388889';
muniArray["13105"] = '13,東京都,13105,文京区,ぶんきょうく,139.7522222,35.70805556';
muniArray["13106"] = '13,東京都,13106,台東区,たいとうく,139.78,35.71277778';
muniArray["13107"] = '13,東京都,13107,墨田区,すみだく,139.8016667,35.71055556';
muniArray["13108"] = '13,東京都,13108,江東区,こうとうく,139.8172222,35.67305556';
muniArray["13109"] = '13,東京都,13109,品川区,しながわく,139.7302778,35.60888889';
muniArray["13110"] = '13,東京都,13110,目黒区,めぐろく,139.6983333,35.64138889';
muniArray["13111"] = '13,東京都,13111,大田区,おおたく,139.7161111,35.56138889';
muniArray["13112"] = '13,東京都,13112,世田谷区,せたがやく,139.6530556,35.64611111';
muniArray["13113"] = '13,東京都,13113,渋谷区,しぶやく,139.6980556,35.66388889';
muniArray["13114"] = '13,東京都,13114,中野区,なかのく,139.6638889,35.7075';
muniArray["13115"] = '13,東京都,13115,杉並区,すぎなみく,139.6363889,35.69944444';
muniArray["13116"] = '13,東京都,13116,豊島区,としまく,139.7155556,35.73222222';
muniArray["13117"] = '13,東京都,13117,北区,きたく,139.7336111,35.75277778';
muniArray["13118"] = '13,東京都,13118,荒川区,あらかわく,139.7833333,35.73611111';
muniArray["13119"] = '13,東京都,13119,板橋区,いたばしく,139.7094444,35.75111111';
muniArray["13120"] = '13,東京都,13120,練馬区,ねりまく,139.6522222,35.73555556';
muniArray["13121"] = '13,東京都,13121,足立区,あだちく,139.8047222,35.775';
muniArray["13122"] = '13,東京都,13122,葛飾区,かつしかく,139.8472222,35.74333333';
muniArray["13123"] = '13,東京都,13123,江戸川区,えどがわく,139.8683333,35.70666667';
muniArray["13201"] = '13,東京都,13201,八王子市,はちおうじし,139.3158333,35.66666667';
muniArray["13202"] = '13,東京都,13202,立川市,たちかわし,139.4077778,35.71388888';
muniArray["13203"] = '13,東京都,13203,武蔵野市,むさしのし,139.5661111,35.71777778';
muniArray["13204"] = '13,東京都,13204,三鷹市,みたかし,139.5594444,35.68333333';
muniArray["13205"] = '13,東京都,13205,青梅市,おうめし,139.2758333,35.78777778';
muniArray["13206"] = '13,東京都,13206,府中市,ふちゅうし,139.4777778,35.66888889';
muniArray["13207"] = '13,東京都,13207,昭島市,あきしまし,139.3536111,35.70555556';
muniArray["13208"] = '13,東京都,13208,調布市,ちょうふし,139.5408333,35.65055556';
muniArray["13209"] = '13,東京都,13209,町田市,まちだし,139.4466667,35.54861111';
muniArray["13210"] = '13,東京都,13210,小金井市,こがねいし,139.5030556,35.69944444';
muniArray["13211"] = '13,東京都,13211,小平市,こだいらし,139.4775,35.72861111';
muniArray["13212"] = '13,東京都,13212,日野市,ひのし,139.395,35.67138889';
muniArray["13213"] = '13,東京都,13213,東村山市,ひがしむらやまし,139.4686111,35.75472222';
muniArray["13214"] = '13,東京都,13214,国分寺市,こくぶんじし,139.4622222,35.71083333';
muniArray["13215"] = '13,東京都,13215,国立市,くにたちし,139.4413889,35.68388889';
muniArray["13218"] = '13,東京都,13218,福生市,ふっさし,139.3266667,35.73861111';
muniArray["13219"] = '13,東京都,13219,狛江市,こまえし,139.5786111,35.63472222';
muniArray["13220"] = '13,東京都,13220,東大和市,ひがしやまとし,139.4266667,35.74555556';
muniArray["13221"] = '13,東京都,13221,清瀬市,きよせし,139.5263889,35.78583333';
muniArray["13222"] = '13,東京都,13222,東久留米市,ひがしくるめし,139.5297222,35.75805556';
muniArray["13223"] = '13,東京都,13223,武蔵村山市,むさしむらやまし,139.3875,35.75472222';
muniArray["13224"] = '13,東京都,13224,多摩市,たまし,139.4463889,35.63694444';
muniArray["13225"] = '13,東京都,13225,稲城市,いなぎし,139.5047222,35.63805556';
muniArray["13227"] = '13,東京都,13227,羽村市,はむらし,139.3111111,35.76722222';
muniArray["13228"] = '13,東京都,13228,あきる野市,あきるのし,139.2941667,35.72888889';
muniArray["13229"] = '13,東京都,13229,西東京市,にしとうきょうし,139.5386111,35.72583333';
muniArray["13303"] = '13,東京都,13303,瑞穂町,みずほまち,139.3538889,35.77194444';
muniArray["13305"] = '13,東京都,13305,日の出町,ひのでまち,139.2575,35.74222222';
muniArray["13307"] = '13,東京都,13307,檜原村,ひのはらむら,139.1488889,35.72694444';
muniArray["13308"] = '13,東京都,13308,奥多摩町,おくたままち,139.0963889,35.80972222';
muniArray["13361"] = '13,東京都,13361,大島町,おおしままち,139.3558333,34.75';
muniArray["13362"] = '13,東京都,13362,利島村,としまむら,139.2822222,34.52944444';
muniArray["13363"] = '13,東京都,13363,新島村,にいじまむら,139.2572222,34.37694444';
muniArray["13364"] = '13,東京都,13364,神津島村,こうづしまむら,139.1347222,34.20555556';
muniArray["13381"] = '13,東京都,13381,三宅村,みやけむら,139.4797222,34.07583333';
muniArray["13382"] = '13,東京都,13382,御蔵島村,みくらじまむら,139.5958333,33.89722222';
muniArray["13401"] = '13,東京都,13401,八丈町,はちじょうまち,139.7908333,33.10944444';
muniArray["13402"] = '13,東京都,13402,青ヶ島村,あおがしまむら,139.7633333,32.46694444';
muniArray["13421"] = '13,東京都,13421,小笠原村,おがさわらむら,142.1919444,27.09444444';
muniArray["14100"] = '14,神奈川県,14100,横浜市,よこはまし,139.6380556,35.44416667';
muniArray["14101"] = '14,神奈川県,14101,横浜市　鶴見区,よこはまし　つるみく,139.6825,35.50833333';
muniArray["14102"] = '14,神奈川県,14102,横浜市　神奈川区,よこはまし　かながわく,139.6294444,35.47694444';
muniArray["14103"] = '14,神奈川県,14103,横浜市　西区,よこはまし　にしく,139.6169444,35.45361111';
muniArray["14104"] = '14,神奈川県,14104,横浜市　中区,よこはまし　なかく,139.6422222,35.44472222';
muniArray["14105"] = '14,神奈川県,14105,横浜市　南区,よこはまし　みなみく,139.6088889,35.43138889';
muniArray["14106"] = '14,神奈川県,14106,横浜市　保土ケ谷区,よこはまし　ほどがやく,139.5961111,35.46';
muniArray["14107"] = '14,神奈川県,14107,横浜市　磯子区,よこはまし　いそごく,139.6188889,35.40222222';
muniArray["14108"] = '14,神奈川県,14108,横浜市　金沢区,よこはまし　かなざわく,139.6244444,35.3375';
muniArray["14109"] = '14,神奈川県,14109,横浜市　港北区,よこはまし　こうほくく,139.6330556,35.51888889';
muniArray["14110"] = '14,神奈川県,14110,横浜市　戸塚区,よこはまし　とつかく,139.5325,35.39638889';
muniArray["14111"] = '14,神奈川県,14111,横浜市　港南区,よこはまし　こうなんく,139.5913889,35.40055556';
muniArray["14112"] = '14,神奈川県,14112,横浜市　旭区,よこはまし　あさひく,139.5447222,35.47472222';
muniArray["14113"] = '14,神奈川県,14113,横浜市　緑区,よこはまし　みどりく,139.5380556,35.5125';
muniArray["14114"] = '14,神奈川県,14114,横浜市　瀬谷区,よこはまし　せやく,139.4991667,35.46638889';
muniArray["14115"] = '14,神奈川県,14115,横浜市　栄区,よこはまし　さかえく,139.5541667,35.36444444';
muniArray["14116"] = '14,神奈川県,14116,横浜市　泉区,よこはまし　いずみく,139.4886111,35.41777778';
muniArray["14117"] = '14,神奈川県,14117,横浜市　青葉区,よこはまし　あおばく,139.5372222,35.55277778';
muniArray["14118"] = '14,神奈川県,14118,横浜市　都筑区,よこはまし　つづきく,139.5705556,35.54472222';
muniArray["14130"] = '14,神奈川県,14130,川崎市,かわさきし,139.7030556,35.53083333';
muniArray["14131"] = '14,神奈川県,14131,川崎市　川崎区,かわさきし　かわさきく,139.7038889,35.52972222';
muniArray["14132"] = '14,神奈川県,14132,川崎市　幸区,かわさきし　さいわいく,139.6875,35.54444444';
muniArray["14133"] = '14,神奈川県,14133,川崎市　中原区,かわさきし　なかはらく,139.6558333,35.57611111';
muniArray["14134"] = '14,神奈川県,14134,川崎市　高津区,かわさきし　たかつく,139.6080556,35.59944444';
muniArray["14135"] = '14,神奈川県,14135,川崎市　多摩区,かわさきし　たまく,139.5619444,35.61972222';
muniArray["14136"] = '14,神奈川県,14136,川崎市　宮前区,かわさきし　みやまえく,139.5786111,35.58916667';
muniArray["14137"] = '14,神奈川県,14137,川崎市　麻生区,かわさきし　あさおく,139.5058333,35.60388889';
muniArray["14150"] = '14,神奈川県,14150,相模原市,さがみはらし,139.3733333,35.57138889';
muniArray["14151"] = '14,神奈川県,14151,相模原市　緑区,さがみはらし　みどりく,139.345,35.59611111';
muniArray["14152"] = '14,神奈川県,14152,相模原市　中央区,さがみはらし　ちゅうおうく,139.3733333,35.57138889';
muniArray["14153"] = '14,神奈川県,14153,相模原市　南区,さがみはらし　みなみく,139.4302778,35.53027778';
muniArray["14201"] = '14,神奈川県,14201,横須賀市,よこすかし,139.6722222,35.28138889';
muniArray["14203"] = '14,神奈川県,14203,平塚市,ひらつかし,139.3497222,35.33555556';
muniArray["14204"] = '14,神奈川県,14204,鎌倉市,かまくらし,139.5469444,35.31916667';
muniArray["14205"] = '14,神奈川県,14205,藤沢市,ふじさわし,139.4913889,35.33916667';
muniArray["14206"] = '14,神奈川県,14206,小田原市,おだわらし,139.1522222,35.26472222';
muniArray["14207"] = '14,神奈川県,14207,茅ヶ崎市,ちがさきし,139.4047222,35.33388889';
muniArray["14208"] = '14,神奈川県,14208,逗子市,ずしし,139.5802778,35.29555556';
muniArray["14210"] = '14,神奈川県,14210,三浦市,みうらし,139.6205556,35.14416667';
muniArray["14211"] = '14,神奈川県,14211,秦野市,はだのし,139.2202778,35.37472222';
muniArray["14212"] = '14,神奈川県,14212,厚木市,あつぎし,139.3625,35.44305556';
muniArray["14213"] = '14,神奈川県,14213,大和市,やまとし,139.4580556,35.4875';
muniArray["14214"] = '14,神奈川県,14214,伊勢原市,いせはらし,139.315,35.40277778';
muniArray["14215"] = '14,神奈川県,14215,海老名市,えびなし,139.3908333,35.44638889';
muniArray["14216"] = '14,神奈川県,14216,座間市,ざまし,139.4075,35.48861111';
muniArray["14217"] = '14,神奈川県,14217,南足柄市,みなみあしがらし,139.1,35.32055556';
muniArray["14218"] = '14,神奈川県,14218,綾瀬市,あやせし,139.4269444,35.43722222';
muniArray["14301"] = '14,神奈川県,14301,葉山町,はやままち,139.5863889,35.27194444';
muniArray["14321"] = '14,神奈川県,14321,寒川町,さむかわまち,139.3841667,35.37305556';
muniArray["14341"] = '14,神奈川県,14341,大磯町,おおいそまち,139.3113889,35.30694444';
muniArray["14342"] = '14,神奈川県,14342,二宮町,にのみやまち,139.2552778,35.29944444';
muniArray["14361"] = '14,神奈川県,14361,中井町,なかいまち,139.2188889,35.33083333';
muniArray["14362"] = '14,神奈川県,14362,大井町,おおいまち,139.1563889,35.32666667';
muniArray["14363"] = '14,神奈川県,14363,松田町,まつだまち,139.1394444,35.34833333';
muniArray["14364"] = '14,神奈川県,14364,山北町,やまきたまち,139.0838889,35.36055556';
muniArray["14366"] = '14,神奈川県,14366,開成町,かいせいまち,139.1233333,35.33638889';
muniArray["14382"] = '14,神奈川県,14382,箱根町,はこねまち,139.1069444,35.2325';
muniArray["14383"] = '14,神奈川県,14383,真鶴町,まなづるまち,139.1372222,35.15833333';
muniArray["14384"] = '14,神奈川県,14384,湯河原町,ゆがわらまち,139.1083333,35.14777778';
muniArray["14401"] = '14,神奈川県,14401,愛川町,あいかわまち,139.3216667,35.52888889';
muniArray["14402"] = '14,神奈川県,14402,清川村,きよかわむら,139.2763889,35.48222222';
muniArray["15100"] = '15,新潟県,15100,新潟市,にいがたし,139.0363889,37.91611111';
muniArray["15101"] = '15,新潟県,15101,新潟市　北区,にいがたし　きたく,139.2186111,37.91638889';
muniArray["15102"] = '15,新潟県,15102,新潟市　東区,にいがたし　ひがしく,139.0925915,37.92477958';
muniArray["15103"] = '15,新潟県,15103,新潟市　中央区,にいがたし　ちゅうおうく,139.0363889,37.91611111';
muniArray["15104"] = '15,新潟県,15104,新潟市　江南区,にいがたし　こうなんく,139.0941667,37.86777778';
muniArray["15105"] = '15,新潟県,15105,新潟市　秋葉区,にいがたし　あきはく,139.1144444,37.78861111';
muniArray["15106"] = '15,新潟県,15106,新潟市　南区,にいがたし　みなみく,139.0191667,37.76583333';
muniArray["15107"] = '15,新潟県,15107,新潟市　西区,にいがたし　にしく,138.9716667,37.87388889';
muniArray["15108"] = '15,新潟県,15108,新潟市　西蒲区,にいがたし　にしかんく,138.8891667,37.76055556';
muniArray["15202"] = '15,新潟県,15202,長岡市,ながおかし,138.8388889,37.43638889';
muniArray["15204"] = '15,新潟県,15204,三条市,さんじょうし,138.9616667,37.63638889';
muniArray["15205"] = '15,新潟県,15205,柏崎市,かしわざきし,138.5588889,37.37194444';
muniArray["15206"] = '15,新潟県,15206,新発田市,しばたし,139.3277778,37.95083333';
muniArray["15208"] = '15,新潟県,15208,小千谷市,おぢやし,138.795,37.31444444';
muniArray["15209"] = '15,新潟県,15209,加茂市,かもし,139.0402778,37.66638889';
muniArray["15210"] = '15,新潟県,15210,十日町市,とおかまちし,138.7555556,37.1275';
muniArray["15211"] = '15,新潟県,15211,見附市,みつけし,138.9127778,37.53138889';
muniArray["15212"] = '15,新潟県,15212,村上市,むらかみし,139.48,38.22416667';
muniArray["15213"] = '15,新潟県,15213,燕市,つばめし,138.88,37.68611111';
muniArray["15216"] = '15,新潟県,15216,糸魚川市,いといがわし,137.8627778,37.03888889';
muniArray["15217"] = '15,新潟県,15217,妙高市,みょうこうし,138.2533423,37.02526874';
muniArray["15218"] = '15,新潟県,15218,五泉市,ごせんし,139.1825,37.74472222';
muniArray["15222"] = '15,新潟県,15222,上越市,じょうえつし,138.2361111,37.14805556';
muniArray["15223"] = '15,新潟県,15223,阿賀野市,あがのし,139.2258333,37.83444444';
muniArray["15224"] = '15,新潟県,15224,佐渡市,さどし,138.3683333,38.01805556';
muniArray["15225"] = '15,新潟県,15225,魚沼市,うおぬまし,138.9616667,37.23027778';
muniArray["15226"] = '15,新潟県,15226,南魚沼市,みなみうおぬまし,138.8761111,37.06555556';
muniArray["15227"] = '15,新潟県,15227,胎内市,たいないし,139.4102778,38.05972222';
muniArray["15307"] = '15,新潟県,15307,聖籠町,せいろうまち,139.2744444,37.97444444';
muniArray["15342"] = '15,新潟県,15342,弥彦村,やひこむら,138.8552778,37.69111111';
muniArray["15361"] = '15,新潟県,15361,田上町,たがみまち,139.0580556,37.69888889';
muniArray["15385"] = '15,新潟県,15385,阿賀町,あがまち,139.4586111,37.67555556';
muniArray["15405"] = '15,新潟県,15405,出雲崎町,いずもざきまち,138.7094444,37.53083333';
muniArray["15461"] = '15,新潟県,15461,湯沢町,ゆざわまち,138.8175,36.93388889';
muniArray["15482"] = '15,新潟県,15482,津南町,つなんまち,138.6525,37.01416667';
muniArray["15504"] = '15,新潟県,15504,刈羽村,かりわむら,138.6225,37.42222222';
muniArray["15581"] = '15,新潟県,15581,関川村,せきかわむら,139.565,38.08944444';
muniArray["15586"] = '15,新潟県,15586,粟島浦村,あわしまうらむら,139.2547222,38.46833333';
muniArray["16201"] = '16,富山県,16201,富山市,とやまし,137.2136111,36.69583333';
muniArray["16202"] = '16,富山県,16202,高岡市,たかおかし,137.0261111,36.75416667';
muniArray["16204"] = '16,富山県,16204,魚津市,うおづし,137.4091667,36.8275';
muniArray["16205"] = '16,富山県,16205,氷見市,ひみし,136.9863889,36.85722222';
muniArray["16206"] = '16,富山県,16206,滑川市,なめりかわし,137.3411111,36.76444444';
muniArray["16207"] = '16,富山県,16207,黒部市,くろべし,137.4491667,36.87361111';
muniArray["16208"] = '16,富山県,16208,砺波市,となみし,136.9622222,36.6475';
muniArray["16209"] = '16,富山県,16209,小矢部市,おやべし,136.8686111,36.67555556';
muniArray["16210"] = '16,富山県,16210,南砺市,なんとし,136.9194444,36.58777778';
muniArray["16211"] = '16,富山県,16211,射水市,いみずし,137.0997222,36.71222222';
muniArray["16321"] = '16,富山県,16321,舟橋村,ふなはしむら,137.3075,36.70361111';
muniArray["16322"] = '16,富山県,16322,上市町,かみいちまち,137.3625,36.69833333';
muniArray["16323"] = '16,富山県,16323,立山町,たてやままち,137.3136111,36.66333333';
muniArray["16342"] = '16,富山県,16342,入善町,にゅうぜんまち,137.5022222,36.93361111';
muniArray["16343"] = '16,富山県,16343,朝日町,あさひまち,137.56,36.94638889';
muniArray["17201"] = '17,石川県,17201,金沢市,かなざわし,136.6566667,36.56083333';
muniArray["17202"] = '17,石川県,17202,七尾市,ななおし,136.9672222,37.04305556';
muniArray["17203"] = '17,石川県,17203,小松市,こまつし,136.4455556,36.40861111';
muniArray["17204"] = '17,石川県,17204,輪島市,わじまし,136.8991667,37.39055556';
muniArray["17205"] = '17,石川県,17205,珠洲市,すずし,137.2602778,37.43638889';
muniArray["17206"] = '17,石川県,17206,加賀市,かがし,136.315,36.30277778';
muniArray["17207"] = '17,石川県,17207,羽咋市,はくいし,136.7788889,36.89361111';
muniArray["17209"] = '17,石川県,17209,かほく市,かほくし,136.7066667,36.72';
muniArray["17210"] = '17,石川県,17210,白山市,はくさんし,136.5655556,36.51444444';
muniArray["17211"] = '17,石川県,17211,能美市,のみし,136.4961111,36.4375';
muniArray["17212"] = '17,石川県,17212,野々市市,ののいちし,136.6097222,36.51944444';
muniArray["17324"] = '17,石川県,17324,川北町,かわきたまち,136.5422222,36.46861111';
muniArray["17361"] = '17,石川県,17361,津幡町,つばたまち,136.7283333,36.66861111';
muniArray["17365"] = '17,石川県,17365,内灘町,うちなだまち,136.645,36.65361111';
muniArray["17384"] = '17,石川県,17384,志賀町,しかまち,136.7780556,37.00638889';
muniArray["17386"] = '17,石川県,17386,宝達志水町,ほうだつしみずちょう,136.7977778,36.86277778';
muniArray["17407"] = '17,石川県,17407,中能登町,なかのとまち,136.9016667,36.98888889';
muniArray["17461"] = '17,石川県,17461,穴水町,あなみずまち,136.9125,37.23111111';
muniArray["17463"] = '17,石川県,17463,能登町,のとちょう,137.15,37.30666667';
muniArray["18201"] = '18,福井県,18201,福井市,ふくいし,136.2194444,36.06416667';
muniArray["18202"] = '18,福井県,18202,敦賀市,つるがし,136.0555556,35.64527778';
muniArray["18204"] = '18,福井県,18204,小浜市,おばまし,135.7466667,35.49555556';
muniArray["18205"] = '18,福井県,18205,大野市,おおのし,136.4875,35.98055556';
muniArray["18206"] = '18,福井県,18206,勝山市,かつやまし,136.5005556,36.06083333';
muniArray["18207"] = '18,福井県,18207,鯖江市,さばえし,136.1844444,35.95666667';
muniArray["18208"] = '18,福井県,18208,あわら市,あわらし,136.2288889,36.21138889';
muniArray["18209"] = '18,福井県,18209,越前市,えちぜんし,136.1691667,35.90333333';
muniArray["18210"] = '18,福井県,18210,坂井市,さかいし,136.2316667,36.16694444';
muniArray["18322"] = '18,福井県,18322,永平寺町,えいへいじちょう,136.2986111,36.09222222';
muniArray["18382"] = '18,福井県,18382,池田町,いけだちょう,136.3441667,35.89027778';
muniArray["18404"] = '18,福井県,18404,南越前町,みなみえちぜんちょう,136.1944444,35.835';
muniArray["18423"] = '18,福井県,18423,越前町,えちぜんちょう,136.1297222,35.97416667';
muniArray["18442"] = '18,福井県,18442,美浜町,みはまちょう,135.9405556,35.60055556';
muniArray["18481"] = '18,福井県,18481,高浜町,たかはまちょう,135.5511111,35.49027778';
muniArray["18483"] = '18,福井県,18483,おおい町,おおいちょう,135.6177778,35.48111111';
muniArray["18501"] = '18,福井県,18501,若狭町,わかさちょう,135.9083333,35.54888889';
muniArray["19201"] = '19,山梨県,19201,甲府市,こうふし,138.5683333,35.66222222';
muniArray["19202"] = '19,山梨県,19202,富士吉田市,ふじよしだし,138.8080556,35.4875';
muniArray["19204"] = '19,山梨県,19204,都留市,つるし,138.9055556,35.55138889';
muniArray["19205"] = '19,山梨県,19205,山梨市,やまなしし,138.6872222,35.69333333';
muniArray["19206"] = '19,山梨県,19206,大月市,おおつきし,138.94,35.61055556';
muniArray["19207"] = '19,山梨県,19207,韮崎市,にらさきし,138.4463889,35.70888889';
muniArray["19208"] = '19,山梨県,19208,南アルプス市,みなみあるぷすし,138.465,35.60833333';
muniArray["19209"] = '19,山梨県,19209,北杜市,ほくとし,138.4236111,35.77666667';
muniArray["19210"] = '19,山梨県,19210,甲斐市,かいし,138.5158333,35.66083333';
muniArray["19211"] = '19,山梨県,19211,笛吹市,ふえふきし,138.64,35.64722222';
muniArray["19212"] = '19,山梨県,19212,上野原市,うえのはらし,139.1086111,35.63027778';
muniArray["19213"] = '19,山梨県,19213,甲州市,こうしゅうし,138.7294444,35.70416666';
muniArray["19214"] = '19,山梨県,19214,中央市,ちゅうおうし,138.5172222,35.59972222';
muniArray["19346"] = '19,山梨県,19346,市川三郷町,いちかわみさとちょう,138.5022222,35.56527778';
muniArray["19364"] = '19,山梨県,19364,早川町,はやかわちょう,138.3630556,35.41277778';
muniArray["19365"] = '19,山梨県,19365,身延町,みのぶちょう,138.4425,35.4675';
muniArray["19366"] = '19,山梨県,19366,南部町,なんぶちょう,138.4861111,35.2425';
muniArray["19368"] = '19,山梨県,19368,富士川町,ふじかわちょう,138.4613889,35.56111111';
muniArray["19384"] = '19,山梨県,19384,昭和町,しょうわちょう,138.535,35.62805556';
muniArray["19422"] = '19,山梨県,19422,道志村,どうしむら,139.0336111,35.52805556';
muniArray["19423"] = '19,山梨県,19423,西桂町,にしかつらちょう,138.8469444,35.52416667';
muniArray["19424"] = '19,山梨県,19424,忍野村,おしのむら,138.8477778,35.46';
muniArray["19425"] = '19,山梨県,19425,山中湖村,やまなかこむら,138.8608333,35.41055556';
muniArray["19429"] = '19,山梨県,19429,鳴沢村,なるさわむら,138.7066667,35.48138889';
muniArray["19430"] = '19,山梨県,19430,富士河口湖町,ふじかわぐちこまち,138.755,35.49722222';
muniArray["19442"] = '19,山梨県,19442,小菅村,こすげむら,138.9402778,35.76027778';
muniArray["19443"] = '19,山梨県,19443,丹波山村,たばやまむら,138.9222222,35.78972222';
muniArray["20201"] = '20,長野県,20201,長野市,ながのし,138.1944444,36.64861111';
muniArray["20202"] = '20,長野県,20202,松本市,まつもとし,137.9719444,36.23805556';
muniArray["20203"] = '20,長野県,20203,上田市,うえだし,138.2491667,36.40194444';
muniArray["20204"] = '20,長野県,20204,岡谷市,おかやし,138.0494444,36.06694444';
muniArray["20205"] = '20,長野県,20205,飯田市,いいだし,137.8219444,35.51472222';
muniArray["20206"] = '20,長野県,20206,諏訪市,すわし,138.1141667,36.03916667';
muniArray["20207"] = '20,長野県,20207,須坂市,すざかし,138.3069444,36.65111111';
muniArray["20208"] = '20,長野県,20208,小諸市,こもろし,138.4261111,36.32694444';
muniArray["20209"] = '20,長野県,20209,伊那市,いなし,137.9538889,35.8275';
muniArray["20210"] = '20,長野県,20210,駒ヶ根市,こまがねし,137.9338889,35.72888889';
muniArray["20211"] = '20,長野県,20211,中野市,なかのし,138.3694444,36.74194444';
muniArray["20212"] = '20,長野県,20212,大町市,おおまちし,137.8508333,36.50305556';
muniArray["20213"] = '20,長野県,20213,飯山市,いいやまし,138.3655556,36.85166667';
muniArray["20214"] = '20,長野県,20214,茅野市,ちのし,138.1588889,35.99555556';
muniArray["20215"] = '20,長野県,20215,塩尻市,しおじりし,137.9536111,36.115';
muniArray["20217"] = '20,長野県,20217,佐久市,さくし,138.4769444,36.24888889';
muniArray["20218"] = '20,長野県,20218,千曲市,ちくまし,138.12,36.53388889';
muniArray["20219"] = '20,長野県,20219,東御市,とうみし,138.3305556,36.35944444';
muniArray["20220"] = '20,長野県,20220,安曇野市,あづみのし,137.8997222,36.30277778';
muniArray["20303"] = '20,長野県,20303,小海町,こうみまち,138.4836111,36.095';
muniArray["20304"] = '20,長野県,20304,川上村,かわかみむら,138.5783333,35.97555556';
muniArray["20305"] = '20,長野県,20305,南牧村,みなみまきむら,138.4922222,36.02083333';
muniArray["20306"] = '20,長野県,20306,南相木村,みなみあいきむら,138.5469444,36.03611111';
muniArray["20307"] = '20,長野県,20307,北相木村,きたあいきむら,138.5511111,36.05916667';
muniArray["20309"] = '20,長野県,20309,佐久穂町,さくほまち,138.4833333,36.16111111';
muniArray["20321"] = '20,長野県,20321,軽井沢町,かるいざわまち,138.5969444,36.34833333';
muniArray["20323"] = '20,長野県,20323,御代田町,みよたまち,138.5088889,36.32138889';
muniArray["20324"] = '20,長野県,20324,立科町,たてしなまち,138.3161111,36.27194444';
muniArray["20349"] = '20,長野県,20349,青木村,あおきむら,138.1286111,36.37';
muniArray["20350"] = '20,長野県,20350,長和町,ながわまち,138.2677778,36.25611111';
muniArray["20361"] = '20,長野県,20361,下諏訪町,しもすわまち,138.0802778,36.06972222';
muniArray["20362"] = '20,長野県,20362,富士見町,ふじみまち,138.2408333,35.91472222';
muniArray["20363"] = '20,長野県,20363,原村,はらむら,138.2175,35.96444444';
muniArray["20382"] = '20,長野県,20382,辰野町,たつのまち,137.9875,35.9825';
muniArray["20383"] = '20,長野県,20383,箕輪町,みのわまち,137.9819444,35.915';
muniArray["20384"] = '20,長野県,20384,飯島町,いいじままち,137.9194444,35.67638889';
muniArray["20385"] = '20,長野県,20385,南箕輪村,みなみみのわむら,137.9752778,35.87277778';
muniArray["20386"] = '20,長野県,20386,中川村,なかがわむら,137.9461111,35.63444444';
muniArray["20388"] = '20,長野県,20388,宮田村,みやだむら,137.9444444,35.76888889';
muniArray["20402"] = '20,長野県,20402,松川町,まつかわまち,137.9097222,35.59722222';
muniArray["20403"] = '20,長野県,20403,高森町,たかもりまち,137.8786111,35.55138889';
muniArray["20404"] = '20,長野県,20404,阿南町,あなんちょう,137.8161111,35.32361111';
muniArray["20407"] = '20,長野県,20407,阿智村,あちむら,137.7475,35.44388889';
muniArray["20409"] = '20,長野県,20409,平谷村,ひらやむら,137.6302778,35.32333333';
muniArray["20410"] = '20,長野県,20410,根羽村,ねばむら,137.5811111,35.25305556';
muniArray["20411"] = '20,長野県,20411,下條村,しもじょうむら,137.7861111,35.3975';
muniArray["20412"] = '20,長野県,20412,売木村,うるぎむら,137.7111111,35.27111111';
muniArray["20413"] = '20,長野県,20413,天龍村,てんりゅうむら,137.8544444,35.27638889';
muniArray["20414"] = '20,長野県,20414,泰阜村,やすおかむら,137.8458333,35.37722222';
muniArray["20415"] = '20,長野県,20415,喬木村,たかぎむら,137.8738889,35.51388889';
muniArray["20416"] = '20,長野県,20416,豊丘村,とよおかむら,137.8958333,35.55138889';
muniArray["20417"] = '20,長野県,20417,大鹿村,おおしかむら,138.0341667,35.57833333';
muniArray["20422"] = '20,長野県,20422,上松町,あげまつまち,137.6941667,35.78388889';
muniArray["20423"] = '20,長野県,20423,南木曽町,なぎそまち,137.6088889,35.60361111';
muniArray["20425"] = '20,長野県,20425,木祖村,きそむら,137.7830556,35.93638889';
muniArray["20429"] = '20,長野県,20429,王滝村,おうたきむら,137.5511111,35.80944444';
muniArray["20430"] = '20,長野県,20430,大桑村,おおくわむら,137.665,35.68277778';
muniArray["20432"] = '20,長野県,20432,木曽町,きそまち,137.6916667,35.8425';
muniArray["20446"] = '20,長野県,20446,麻績村,おみむら,138.0452778,36.45611111';
muniArray["20448"] = '20,長野県,20448,生坂村,いくさかむら,137.9275,36.42527778';
muniArray["20450"] = '20,長野県,20450,山形村,やまがたむら,137.8788889,36.16805556';
muniArray["20451"] = '20,長野県,20451,朝日村,あさひむら,137.8663889,36.12361111';
muniArray["20452"] = '20,長野県,20452,筑北村,ちくほくむら,138.0152778,36.42638889';
muniArray["20481"] = '20,長野県,20481,池田町,いけだまち,137.8747222,36.42138889';
muniArray["20482"] = '20,長野県,20482,松川村,まつかわむら,137.8544444,36.42416667';
muniArray["20485"] = '20,長野県,20485,白馬村,はくばむら,137.8622222,36.69833333';
muniArray["20486"] = '20,長野県,20486,小谷村,おたりむら,137.9083333,36.77916667';
muniArray["20521"] = '20,長野県,20521,坂城町,さかきまち,138.1802778,36.46194444';
muniArray["20541"] = '20,長野県,20541,小布施町,おぶせまち,138.3122222,36.69777778';
muniArray["20543"] = '20,長野県,20543,高山村,たかやまむら,138.3630556,36.67972222';
muniArray["20561"] = '20,長野県,20561,山ノ内町,やまのうちまち,138.4125,36.74472222';
muniArray["20562"] = '20,長野県,20562,木島平村,きじまだいらむら,138.4066667,36.85861111';
muniArray["20563"] = '20,長野県,20563,野沢温泉村,のざわおんせんむら,138.4405556,36.92277778';
muniArray["20583"] = '20,長野県,20583,信濃町,しなのまち,138.2069444,36.80638889';
muniArray["20588"] = '20,長野県,20588,小川村,おがわむら,137.9744444,36.61694444';
muniArray["20590"] = '20,長野県,20590,飯綱町,いいづなまち,138.2355556,36.755';
muniArray["20602"] = '20,長野県,20602,栄村,さかえむら,138.5775,36.9875';
muniArray["21201"] = '21,岐阜県,21201,岐阜市,ぎふし,136.7608333,35.42333333';
muniArray["21202"] = '21,岐阜県,21202,大垣市,おおがきし,136.6127778,35.35944444';
muniArray["21203"] = '21,岐阜県,21203,高山市,たかやまし,137.2522222,36.14583333';
muniArray["21204"] = '21,岐阜県,21204,多治見市,たじみし,137.1322222,35.33277778';
muniArray["21205"] = '21,岐阜県,21205,関市,せきし,136.9177778,35.49583333';
muniArray["21206"] = '21,岐阜県,21206,中津川市,なかつがわし,137.5005556,35.4875';
muniArray["21207"] = '21,岐阜県,21207,美濃市,みのし,136.9075,35.54472222';
muniArray["21208"] = '21,岐阜県,21208,瑞浪市,みずなみし,137.2544444,35.36194444';
muniArray["21209"] = '21,岐阜県,21209,羽島市,はしまし,136.7033333,35.32';
muniArray["21210"] = '21,岐阜県,21210,恵那市,えなし,137.4127778,35.44944444';
muniArray["21211"] = '21,岐阜県,21211,美濃加茂市,みのかもし,137.0155556,35.44027778';
muniArray["21212"] = '21,岐阜県,21212,土岐市,ときし,137.1833333,35.3525';
muniArray["21213"] = '21,岐阜県,21213,各務原市,かかみがはらし,136.8486111,35.39888889';
muniArray["21214"] = '21,岐阜県,21214,可児市,かにし,137.0611111,35.42583333';
muniArray["21215"] = '21,岐阜県,21215,山県市,やまがたし,136.7813889,35.50611111';
muniArray["21216"] = '21,岐阜県,21216,瑞穂市,みずほし,136.6908333,35.39194444';
muniArray["21217"] = '21,岐阜県,21217,飛騨市,ひだし,137.1861111,36.23833333';
muniArray["21218"] = '21,岐阜県,21218,本巣市,もとすし,136.6786111,35.48305556';
muniArray["21219"] = '21,岐阜県,21219,郡上市,ぐじょうし,136.9644444,35.74861111';
muniArray["21220"] = '21,岐阜県,21220,下呂市,げろし,137.2441667,35.80583333';
muniArray["21221"] = '21,岐阜県,21221,海津市,かいづし,136.6366667,35.22055556';
muniArray["21302"] = '21,岐阜県,21302,岐南町,ぎなんちょう,136.7827778,35.38972222';
muniArray["21303"] = '21,岐阜県,21303,笠松町,かさまつちょう,136.7633333,35.36722222';
muniArray["21341"] = '21,岐阜県,21341,養老町,ようろうちょう,136.5613889,35.30833333';
muniArray["21361"] = '21,岐阜県,21361,垂井町,たるいちょう,136.5269444,35.37027778';
muniArray["21362"] = '21,岐阜県,21362,関ケ原町,せきがはらちょう,136.4672222,35.36527778';
muniArray["21381"] = '21,岐阜県,21381,神戸町,ごうどちょう,136.6086111,35.4175';
muniArray["21382"] = '21,岐阜県,21382,輪之内町,わのうちちょう,136.6375,35.285';
muniArray["21383"] = '21,岐阜県,21383,安八町,あんぱちちょう,136.6655556,35.33555556';
muniArray["21401"] = '21,岐阜県,21401,揖斐川町,いびがわちょう,136.5680556,35.48694444';
muniArray["21403"] = '21,岐阜県,21403,大野町,おおのちょう,136.6275,35.47055556';
muniArray["21404"] = '21,岐阜県,21404,池田町,いけだちょう,136.5730556,35.44222222';
muniArray["21421"] = '21,岐阜県,21421,北方町,きたがたちょう,136.6861111,35.43694444';
muniArray["21501"] = '21,岐阜県,21501,坂祝町,さかほぎちょう,136.9852778,35.42666667';
muniArray["21502"] = '21,岐阜県,21502,富加町,とみかちょう,136.9797222,35.48472222';
muniArray["21503"] = '21,岐阜県,21503,川辺町,かわべちょう,137.0705556,35.48666667';
muniArray["21504"] = '21,岐阜県,21504,七宗町,ひちそうちょう,137.12,35.54388889';
muniArray["21505"] = '21,岐阜県,21505,八百津町,やおつちょう,137.1416667,35.47611111';
muniArray["21506"] = '21,岐阜県,21506,白川町,しらかわちょう,137.1883333,35.58222222';
muniArray["21507"] = '21,岐阜県,21507,東白川村,ひがししらかわむら,137.3238889,35.6425';
muniArray["21521"] = '21,岐阜県,21521,御嵩町,みたけちょう,137.1308333,35.43444444';
muniArray["21604"] = '21,岐阜県,21604,白川村,しらかわむら,136.8986111,36.27083333';
muniArray["22100"] = '22,静岡県,22100,静岡市,しずおかし,138.3827778,34.97555556';
muniArray["22101"] = '22,静岡県,22101,静岡市　葵区,しずおかし　あおいく,138.3830556,34.97527778';
muniArray["22102"] = '22,静岡県,22102,静岡市　駿河区,しずおかし　するがく,138.4041667,34.96055556';
muniArray["22103"] = '22,静岡県,22103,静岡市　清水区,しずおかし　しみずく,138.4897222,35.01583333';
muniArray["22130"] = '22,静岡県,22130,浜松市,はままつし,137.7266667,34.71083333';
muniArray["22131"] = '22,静岡県,22131,浜松市　中区,はままつし　なかく,137.7266667,34.71111111';
muniArray["22132"] = '22,静岡県,22132,浜松市　東区,はままつし　ひがしく,137.7916667,34.74138889';
muniArray["22133"] = '22,静岡県,22133,浜松市　西区,はままつし　にしく,137.6452778,34.69277778';
muniArray["22134"] = '22,静岡県,22134,浜松市　南区,はままつし　みなみく,137.7522222,34.66722222';
muniArray["22135"] = '22,静岡県,22135,浜松市　北区,はままつし　きたく,137.6511111,34.80611111';
muniArray["22136"] = '22,静岡県,22136,浜松市　浜北区,はままつし　はまきたく,137.79,34.79305556';
muniArray["22137"] = '22,静岡県,22137,浜松市　天竜区,はままつし　てんりゅうく,137.8161111,34.87277778';
muniArray["22203"] = '22,静岡県,22203,沼津市,ぬまづし,138.8636111,35.09555556';
muniArray["22205"] = '22,静岡県,22205,熱海市,あたみし,139.0716667,35.09611111';
muniArray["22206"] = '22,静岡県,22206,三島市,みしまし,138.9186111,35.11861111';
muniArray["22207"] = '22,静岡県,22207,富士宮市,ふじのみやし,138.6213889,35.22222222';
muniArray["22208"] = '22,静岡県,22208,伊東市,いとうし,139.1019444,34.96583333';
muniArray["22209"] = '22,静岡県,22209,島田市,しまだし,138.1761111,34.83638889';
muniArray["22210"] = '22,静岡県,22210,富士市,ふじし,138.6763889,35.16138889';
muniArray["22211"] = '22,静岡県,22211,磐田市,いわたし,137.8513889,34.71777778';
muniArray["22212"] = '22,静岡県,22212,焼津市,やいづし,138.3230556,34.86694444';
muniArray["22213"] = '22,静岡県,22213,掛川市,かけがわし,137.9983333,34.76861111';
muniArray["22214"] = '22,静岡県,22214,藤枝市,ふじえだし,138.2577778,34.8675';
muniArray["22215"] = '22,静岡県,22215,御殿場市,ごてんばし,138.935,35.30861111';
muniArray["22216"] = '22,静岡県,22216,袋井市,ふくろいし,137.925,34.75027778';
muniArray["22219"] = '22,静岡県,22219,下田市,しもだし,138.9452778,34.67944444';
muniArray["22220"] = '22,静岡県,22220,裾野市,すそのし,138.9066667,35.17388889';
muniArray["22221"] = '22,静岡県,22221,湖西市,こさいし,137.5316667,34.71861111';
muniArray["22222"] = '22,静岡県,22222,伊豆市,いずし,138.9469444,34.97666667';
muniArray["22223"] = '22,静岡県,22223,御前崎市,おまえざきし,138.1280556,34.63805556';
muniArray["22224"] = '22,静岡県,22224,菊川市,きくがわし,138.0841667,34.75777778';
muniArray["22225"] = '22,静岡県,22225,伊豆の国市,いずのくにし,138.9288889,35.02777778';
muniArray["22226"] = '22,静岡県,22226,牧之原市,まきのはらし,138.2247222,34.74';
muniArray["22301"] = '22,静岡県,22301,東伊豆町,ひがしいずちょう,139.0413889,34.77277778';
muniArray["22302"] = '22,静岡県,22302,河津町,かわづちょう,138.9875,34.75722222';
muniArray["22304"] = '22,静岡県,22304,南伊豆町,みなみいずちょう,138.8591667,34.65055556';
muniArray["22305"] = '22,静岡県,22305,松崎町,まつざきちょう,138.7788889,34.75305556';
muniArray["22306"] = '22,静岡県,22306,西伊豆町,にしいずちょう,138.7752778,34.77166667';
muniArray["22325"] = '22,静岡県,22325,函南町,かんなみちょう,138.9533333,35.08888888';
muniArray["22341"] = '22,静岡県,22341,清水町,しみずちょう,138.9027778,35.09916667';
muniArray["22342"] = '22,静岡県,22342,長泉町,ながいずみちょう,138.8972222,35.13777778';
muniArray["22344"] = '22,静岡県,22344,小山町,おやまちょう,138.9875,35.36';
muniArray["22424"] = '22,静岡県,22424,吉田町,よしだちょう,138.2519444,34.77083333';
muniArray["22429"] = '22,静岡県,22429,川根本町,かわねほんちょう,138.0816667,35.04694444';
muniArray["22461"] = '22,静岡県,22461,森町,もりまち,137.9272222,34.83555556';
muniArray["23100"] = '23,愛知県,23100,名古屋市,なごやし,136.9063889,35.18166667';
muniArray["23101"] = '23,愛知県,23101,名古屋市　千種区,なごやし　ちくさく,136.9463889,35.16638889';
muniArray["23102"] = '23,愛知県,23102,名古屋市　東区,なごやし　ひがしく,136.9261111,35.17944444';
muniArray["23103"] = '23,愛知県,23103,名古屋市　北区,なごやし　きたく,136.9116667,35.19416667';
muniArray["23104"] = '23,愛知県,23104,名古屋市　西区,なごやし　にしく,136.89,35.18916666';
muniArray["23105"] = '23,愛知県,23105,名古屋市　中村区,なごやし　なかむらく,136.8730556,35.16861111';
muniArray["23106"] = '23,愛知県,23106,名古屋市　中区,なごやし　なかく,136.9102778,35.16861111';
muniArray["23107"] = '23,愛知県,23107,名古屋市　昭和区,なごやし　しょうわく,136.9341667,35.15027778';
muniArray["23108"] = '23,愛知県,23108,名古屋市　瑞穂区,なごやし　みずほく,136.935,35.13166667';
muniArray["23109"] = '23,愛知県,23109,名古屋市　熱田区,なごやし　あつたく,136.9105556,35.12833333';
muniArray["23110"] = '23,愛知県,23110,名古屋市　中川区,なごやし　なかがわく,136.855,35.14166667';
muniArray["23111"] = '23,愛知県,23111,名古屋市　港区,なごやし　みなとく,136.8855556,35.10777778';
muniArray["23112"] = '23,愛知県,23112,名古屋市　南区,なごやし　みなみく,136.9311111,35.095';
muniArray["23113"] = '23,愛知県,23113,名古屋市　守山区,なごやし　もりやまく,136.9766667,35.20333333';
muniArray["23114"] = '23,愛知県,23114,名古屋市　緑区,なごやし　みどりく,136.9522222,35.07083333';
muniArray["23115"] = '23,愛知県,23115,名古屋市　名東区,なごやし　めいとうく,137.0102778,35.17583333';
muniArray["23116"] = '23,愛知県,23116,名古屋市　天白区,なごやし　てんぱくく,136.975,35.12277778';
muniArray["23201"] = '23,愛知県,23201,豊橋市,とよはしし,137.3913889,34.76916667';
muniArray["23202"] = '23,愛知県,23202,岡崎市,おかざきし,137.1730556,34.95472222';
muniArray["23203"] = '23,愛知県,23203,一宮市,いちのみやし,136.8025,35.30416667';
muniArray["23204"] = '23,愛知県,23204,瀬戸市,せとし,137.0841667,35.22333333';
muniArray["23205"] = '23,愛知県,23205,半田市,はんだし,136.9377778,34.8925';
muniArray["23206"] = '23,愛知県,23206,春日井市,かすがいし,136.9722222,35.2475';
muniArray["23207"] = '23,愛知県,23207,豊川市,とよかわし,137.3758333,34.82694444';
muniArray["23208"] = '23,愛知県,23208,津島市,つしまし,136.7413889,35.17722222';
muniArray["23209"] = '23,愛知県,23209,碧南市,へきなんし,136.9936111,34.88472222';
muniArray["23210"] = '23,愛知県,23210,刈谷市,かりやし,137.0025,34.98916667';
muniArray["23211"] = '23,愛知県,23211,豊田市,とよたし,137.1563889,35.08333333';
muniArray["23212"] = '23,愛知県,23212,安城市,あんじょうし,137.0802809,34.95861426';
muniArray["23213"] = '23,愛知県,23213,西尾市,にしおし,137.0619444,34.86194444';
muniArray["23214"] = '23,愛知県,23214,蒲郡市,がまごおりし,137.2197222,34.82638889';
muniArray["23215"] = '23,愛知県,23215,犬山市,いぬやまし,136.9441667,35.37861111';
muniArray["23216"] = '23,愛知県,23216,常滑市,とこなめし,136.8325,34.88666667';
muniArray["23217"] = '23,愛知県,23217,江南市,こうなんし,136.8708333,35.33222222';
muniArray["23219"] = '23,愛知県,23219,小牧市,こまきし,136.9122222,35.29111111';
muniArray["23220"] = '23,愛知県,23220,稲沢市,いなざわし,136.7802778,35.24805556';
muniArray["23221"] = '23,愛知県,23221,新城市,しんしろし,137.4986111,34.89916667';
muniArray["23222"] = '23,愛知県,23222,東海市,とうかいし,136.9025,35.02305556';
muniArray["23223"] = '23,愛知県,23223,大府市,おおぶし,136.9633333,35.01222222';
muniArray["23224"] = '23,愛知県,23224,知多市,ちたし,136.8647222,34.99666667';
muniArray["23225"] = '23,愛知県,23225,知立市,ちりゅうし,137.0505556,35.00138889';
muniArray["23226"] = '23,愛知県,23226,尾張旭市,おわりあさひし,137.0352778,35.21638889';
muniArray["23227"] = '23,愛知県,23227,高浜市,たかはまし,136.9877778,34.9275';
muniArray["23228"] = '23,愛知県,23228,岩倉市,いわくらし,136.8713889,35.28';
muniArray["23229"] = '23,愛知県,23229,豊明市,とよあけし,137.0127778,35.05388889';
muniArray["23230"] = '23,愛知県,23230,日進市,にっしんし,137.0394444,35.13194444';
muniArray["23231"] = '23,愛知県,23231,田原市,たはらし,137.2636111,34.66916667';
muniArray["23232"] = '23,愛知県,23232,愛西市,あいさいし,136.7283333,35.15277778';
muniArray["23233"] = '23,愛知県,23233,清須市,きよすし,136.8527778,35.19972222';
muniArray["23234"] = '23,愛知県,23234,北名古屋市,きたなごやし,136.8661111,35.24555556';
muniArray["23235"] = '23,愛知県,23235,弥富市,やとみし,136.7247222,35.11';
muniArray["23236"] = '23,愛知県,23236,みよし市,みよしし,137.0744444,35.08972222';
muniArray["23237"] = '23,愛知県,23237,あま市,あまし,136.7836111,35.20055556';
muniArray["23238"] = '23,愛知県,23238,長久手市,ながくてし,137.0486111,35.18416667';
muniArray["23302"] = '23,愛知県,23302,東郷町,とうごうちょう,137.0525,35.09694444';
muniArray["23342"] = '23,愛知県,23342,豊山町,とよやまちょう,136.9122222,35.25083333';
muniArray["23361"] = '23,愛知県,23361,大口町,おおぐちちょう,136.9077778,35.3325';
muniArray["23362"] = '23,愛知県,23362,扶桑町,ふそうちょう,136.9130556,35.35916667';
muniArray["23424"] = '23,愛知県,23424,大治町,おおはるちょう,136.82,35.175';
muniArray["23425"] = '23,愛知県,23425,蟹江町,かにえちょう,136.7869444,35.13222222';
muniArray["23427"] = '23,愛知県,23427,飛島村,とびしまむら,136.7913889,35.07888889';
muniArray["23441"] = '23,愛知県,23441,阿久比町,あぐいちょう,136.9155556,34.9325';
muniArray["23442"] = '23,愛知県,23442,東浦町,ひがしうらちょう,136.9655556,34.97722222';
muniArray["23445"] = '23,愛知県,23445,南知多町,みなみちたちょう,136.9297222,34.71527778';
muniArray["23446"] = '23,愛知県,23446,美浜町,みはまちょう,136.9083333,34.77888889';
muniArray["23447"] = '23,愛知県,23447,武豊町,たけとよちょう,136.915,34.85138889';
muniArray["23501"] = '23,愛知県,23501,幸田町,こうたちょう,137.1655556,34.86472222';
muniArray["23561"] = '23,愛知県,23561,設楽町,したらちょう,137.57,35.0975';
muniArray["23562"] = '23,愛知県,23562,東栄町,とうえいちょう,137.6977778,35.07694444';
muniArray["23563"] = '23,愛知県,23563,豊根村,とよねむら,137.7197222,35.14638889';
muniArray["24201"] = '24,三重県,24201,津市,つし,136.5055556,34.71861111';
muniArray["24202"] = '24,三重県,24202,四日市市,よっかいちし,136.6244444,34.965';
muniArray["24203"] = '24,三重県,24203,伊勢市,いせし,136.7094444,34.4875';
muniArray["24204"] = '24,三重県,24204,松阪市,まつさかし,136.5275,34.57805556';
muniArray["24205"] = '24,三重県,24205,桑名市,くわなし,136.6838889,35.06222222';
muniArray["24207"] = '24,三重県,24207,鈴鹿市,すずかし,136.5841667,34.88222222';
muniArray["24208"] = '24,三重県,24208,名張市,なばりし,136.1083333,34.6275';
muniArray["24209"] = '24,三重県,24209,尾鷲市,おわせし,136.1911111,34.07083333';
muniArray["24210"] = '24,三重県,24210,亀山市,かめやまし,136.4516667,34.85583333';
muniArray["24211"] = '24,三重県,24211,鳥羽市,とばし,136.8436111,34.48138889';
muniArray["24212"] = '24,三重県,24212,熊野市,くまのし,136.1002778,33.88861111';
muniArray["24214"] = '24,三重県,24214,いなべ市,いなべし,136.5613889,35.11583333';
muniArray["24215"] = '24,三重県,24215,志摩市,しまし,136.8297222,34.32833333';
muniArray["24216"] = '24,三重県,24216,伊賀市,いがし,136.13,34.76861111';
muniArray["24303"] = '24,三重県,24303,木曽岬町,きそさきちょう,136.7311111,35.07583333';
muniArray["24324"] = '24,三重県,24324,東員町,とういんちょう,136.5836111,35.07416667';
muniArray["24341"] = '24,三重県,24341,菰野町,こものちょう,136.5075,35.02';
muniArray["24343"] = '24,三重県,24343,朝日町,あさひちょう,136.6644444,35.03416667';
muniArray["24344"] = '24,三重県,24344,川越町,かわごえちょう,136.6738889,35.02305556';
muniArray["24441"] = '24,三重県,24441,多気町,たきちょう,136.5461111,34.49611111';
muniArray["24442"] = '24,三重県,24442,明和町,めいわちょう,136.6236111,34.54777778';
muniArray["24443"] = '24,三重県,24443,大台町,おおだいちょう,136.4080556,34.39333333';
muniArray["24461"] = '24,三重県,24461,玉城町,たまきちょう,136.6308333,34.49027778';
muniArray["24470"] = '24,三重県,24470,度会町,わたらいちょう,136.6225,34.43888889';
muniArray["24471"] = '24,三重県,24471,大紀町,たいきちょう,136.4158333,34.35805556';
muniArray["24472"] = '24,三重県,24472,南伊勢町,みなみいせちょう,136.7038889,34.35194444';
muniArray["24543"] = '24,三重県,24543,紀北町,きほくちょう,136.2313889,34.10916667';
muniArray["24561"] = '24,三重県,24561,御浜町,みはまちょう,136.0488889,33.81444444';
muniArray["24562"] = '24,三重県,24562,紀宝町,きほうちょう,136.0097222,33.73388889';
muniArray["25201"] = '25,滋賀県,25201,大津市,おおつし,135.8547222,35.01777778';
muniArray["25202"] = '25,滋賀県,25202,彦根市,ひこねし,136.2597222,35.27444444';
muniArray["25203"] = '25,滋賀県,25203,長浜市,ながはまし,136.2755556,35.38138889';
muniArray["25204"] = '25,滋賀県,25204,近江八幡市,おうみはちまんし,136.0980556,35.12833333';
muniArray["25206"] = '25,滋賀県,25206,草津市,くさつし,135.96,35.01305556';
muniArray["25207"] = '25,滋賀県,25207,守山市,もりやまし,135.9944444,35.05888889';
muniArray["25208"] = '25,滋賀県,25208,栗東市,りっとうし,135.9980556,35.02166667';
muniArray["25209"] = '25,滋賀県,25209,甲賀市,こうかし,136.1672222,34.96611111';
muniArray["25210"] = '25,滋賀県,25210,野洲市,やすし,136.0258333,35.0675';
muniArray["25211"] = '25,滋賀県,25211,湖南市,こなんし,136.085,35.00416667';
muniArray["25212"] = '25,滋賀県,25212,高島市,たかしまし,136.0355556,35.35277778';
muniArray["25213"] = '25,滋賀県,25213,東近江市,ひがしおうみし,136.2077778,35.11277778';
muniArray["25214"] = '25,滋賀県,25214,米原市,まいばらし,136.2838889,35.31527778';
muniArray["25383"] = '25,滋賀県,25383,日野町,ひのちょう,136.2461111,35.01805556';
muniArray["25384"] = '25,滋賀県,25384,竜王町,りゅうおうちょう,136.1244444,35.06083333';
muniArray["25425"] = '25,滋賀県,25425,愛荘町,あいしょうちょう,136.2125,35.16888889';
muniArray["25441"] = '25,滋賀県,25441,豊郷町,とよさとちょう,136.23,35.20055556';
muniArray["25442"] = '25,滋賀県,25442,甲良町,こうらちょう,136.2613889,35.20416667';
muniArray["25443"] = '25,滋賀県,25443,多賀町,たがちょう,136.2922222,35.22194444';
muniArray["26100"] = '26,京都府,26100,京都市,きょうとし,135.7683333,35.01166667';
muniArray["26101"] = '26,京都府,26101,京都市　北区,きょうとし　きたく,135.7541667,35.04111111';
muniArray["26102"] = '26,京都府,26102,京都市　上京区,きょうとし　かみぎょうく,135.7566667,35.02972222';
muniArray["26103"] = '26,京都府,26103,京都市　左京区,きょうとし　さきょうく,135.7785389,35.04860433';
muniArray["26104"] = '26,京都府,26104,京都市　中京区,きょうとし　なかぎょうく,135.7513889,35.01';
muniArray["26105"] = '26,京都府,26105,京都市　東山区,きょうとし　ひがしやまく,135.7763889,34.99694444';
muniArray["26106"] = '26,京都府,26106,京都市　下京区,きょうとし　しもぎょうく,135.7555556,34.9875';
muniArray["26107"] = '26,京都府,26107,京都市　南区,きょうとし　みなみく,135.7466667,34.97666667';
muniArray["26108"] = '26,京都府,26108,京都市　右京区,きょうとし　うきょうく,135.7158333,35.01027778';
muniArray["26109"] = '26,京都府,26109,京都市　伏見区,きょうとし　ふしみく,135.7613889,34.93611111';
muniArray["26110"] = '26,京都府,26110,京都市　山科区,きょうとし　やましなく,135.8136111,34.9725';
muniArray["26111"] = '26,京都府,26111,京都市　西京区,きょうとし　にしきょうく,135.6933333,34.985';
muniArray["26201"] = '26,京都府,26201,福知山市,ふくちやまし,135.1263889,35.29666667';
muniArray["26202"] = '26,京都府,26202,舞鶴市,まいづるし,135.3861111,35.47472222';
muniArray["26203"] = '26,京都府,26203,綾部市,あやべし,135.2586111,35.29888889';
muniArray["26204"] = '26,京都府,26204,宇治市,うじし,135.7997222,34.88444444';
muniArray["26205"] = '26,京都府,26205,宮津市,みやづし,135.1955556,35.53555556';
muniArray["26206"] = '26,京都府,26206,亀岡市,かめおかし,135.5738889,35.01361111';
muniArray["26207"] = '26,京都府,26207,城陽市,じょうようし,135.78,34.85305556';
muniArray["26208"] = '26,京都府,26208,向日市,むこうし,135.6983333,34.94861111';
muniArray["26209"] = '26,京都府,26209,長岡京市,ながおかきょうし,135.6955556,34.92666667';
muniArray["26210"] = '26,京都府,26210,八幡市,やわたし,135.7077778,34.87555556';
muniArray["26211"] = '26,京都府,26211,京田辺市,きょうたなべし,135.7677778,34.81444444';
muniArray["26212"] = '26,京都府,26212,京丹後市,きょうたんごし,135.0611111,35.62416667';
muniArray["26213"] = '26,京都府,26213,南丹市,なんたんし,135.47,35.10722222';
muniArray["26214"] = '26,京都府,26214,木津川市,きづがわし,135.8208333,34.73694444';
muniArray["26303"] = '26,京都府,26303,大山崎町,おおやまざきちょう,135.6886111,34.90277778';
muniArray["26322"] = '26,京都府,26322,久御山町,くみやまちょう,135.7327778,34.88138889';
muniArray["26343"] = '26,京都府,26343,井手町,いでちょう,135.8033333,34.79861111';
muniArray["26344"] = '26,京都府,26344,宇治田原町,うじたわらちょう,135.8569444,34.85277778';
muniArray["26364"] = '26,京都府,26364,笠置町,かさぎちょう,135.9394444,34.76055556';
muniArray["26365"] = '26,京都府,26365,和束町,わづかちょう,135.905,34.79583333';
muniArray["26366"] = '26,京都府,26366,精華町,せいかちょう,135.7858333,34.76083333';
muniArray["26367"] = '26,京都府,26367,南山城村,みなみやましろむら,135.9938889,34.77277778';
muniArray["26407"] = '26,京都府,26407,京丹波町,きょうたんばちょう,135.4233333,35.16444444';
muniArray["26463"] = '26,京都府,26463,伊根町,いねちょう,135.2727778,35.67527777';
muniArray["26465"] = '26,京都府,26465,与謝野町,よさのちょう,135.1527778,35.56527778';
muniArray["27100"] = '27,大阪府,27100,大阪市,おおさかし,135.5022222,34.69388889';
muniArray["27102"] = '27,大阪府,27102,大阪市　都島区,おおさかし　みやこじまく,135.5280556,34.70138889';
muniArray["27103"] = '27,大阪府,27103,大阪市　福島区,おおさかし　ふくしまく,135.4722222,34.69222222';
muniArray["27104"] = '27,大阪府,27104,大阪市　此花区,おおさかし　このはなく,135.4522222,34.68305556';
muniArray["27106"] = '27,大阪府,27106,大阪市　西区,おおさかし　にしく,135.4861111,34.67638889';
muniArray["27107"] = '27,大阪府,27107,大阪市　港区,おおさかし　みなとく,135.4608333,34.66388889';
muniArray["27108"] = '27,大阪府,27108,大阪市　大正区,おおさかし　たいしょうく,135.4727778,34.65027778';
muniArray["27109"] = '27,大阪府,27109,大阪市　天王寺区,おおさかし　てんのうじく,135.5194444,34.65777778';
muniArray["27111"] = '27,大阪府,27111,大阪市　浪速区,おおさかし　なにわく,135.4997222,34.65944444';
muniArray["27113"] = '27,大阪府,27113,大阪市　西淀川区,おおさかし　にしよどがわく,135.4561111,34.71138889';
muniArray["27114"] = '27,大阪府,27114,大阪市　東淀川区,おおさかし　ひがしよどがわく,135.5294444,34.74111111';
muniArray["27115"] = '27,大阪府,27115,大阪市　東成区,おおさかし　ひがしなりく,135.5411111,34.67';
muniArray["27116"] = '27,大阪府,27116,大阪市　生野区,おおさかし　いくのく,135.5344444,34.65361111';
muniArray["27117"] = '27,大阪府,27117,大阪市　旭区,おおさかし　あさひく,135.5441667,34.72138889';
muniArray["27118"] = '27,大阪府,27118,大阪市　城東区,おおさかし　じょうとうく,135.5461111,34.70194444';
muniArray["27119"] = '27,大阪府,27119,大阪市　阿倍野区,おおさかし　あべのく,135.5186111,34.63861111';
muniArray["27120"] = '27,大阪府,27120,大阪市　住吉区,おおさかし　すみよしく,135.5005556,34.60361111';
muniArray["27121"] = '27,大阪府,27121,大阪市　東住吉区,おおさかし　ひがしすみよしく,135.5269444,34.62194444';
muniArray["27122"] = '27,大阪府,27122,大阪市　西成区,おおさかし　にしなりく,135.4944444,34.635';
muniArray["27123"] = '27,大阪府,27123,大阪市　淀川区,おおさかし　よどがわく,135.4866667,34.72111111';
muniArray["27124"] = '27,大阪府,27124,大阪市　鶴見区,おおさかし　つるみく,135.5741667,34.70444444';
muniArray["27125"] = '27,大阪府,27125,大阪市　住之江区,おおさかし　すみのえく,135.4827778,34.60944444';
muniArray["27126"] = '27,大阪府,27126,大阪市　平野区,おおさかし　ひらのく,135.5461111,34.62111111';
muniArray["27127"] = '27,大阪府,27127,大阪市　北区,おおさかし　きたく,135.51,34.70555556';
muniArray["27128"] = '27,大阪府,27128,大阪市　中央区,おおさかし　ちゅうおうく,135.5097222,34.68111111';
muniArray["27140"] = '27,大阪府,27140,堺市,さかいし,135.4830556,34.57333333';
muniArray["27141"] = '27,大阪府,27141,堺市　堺区,さかいし　さかいく,135.4830556,34.57333333';
muniArray["27142"] = '27,大阪府,27142,堺市　中区,さかいし　なかく,135.4988889,34.52833333';
muniArray["27143"] = '27,大阪府,27143,堺市　東区,さかいし　ひがしく,135.5363889,34.53805556';
muniArray["27144"] = '27,大阪府,27144,堺市　西区,さかいし　にしく,135.4638889,34.535';
muniArray["27145"] = '27,大阪府,27145,堺市　南区,さかいし　みなみく,135.4902778,34.48638889';
muniArray["27146"] = '27,大阪府,27146,堺市　北区,さかいし　きたく,135.5172222,34.56555556';
muniArray["27147"] = '27,大阪府,27147,堺市　美原区,さかいし　みはらく,135.5608333,34.53861111';
muniArray["27202"] = '27,大阪府,27202,岸和田市,きしわだし,135.3711111,34.46027778';
muniArray["27203"] = '27,大阪府,27203,豊中市,とよなかし,135.47,34.78138889';
muniArray["27204"] = '27,大阪府,27204,池田市,いけだし,135.4286111,34.82166667';
muniArray["27205"] = '27,大阪府,27205,吹田市,すいたし,135.5169444,34.75944444';
muniArray["27206"] = '27,大阪府,27206,泉大津市,いずみおおつし,135.4102778,34.50444444';
muniArray["27207"] = '27,大阪府,27207,高槻市,たかつきし,135.6172222,34.84611111';
muniArray["27208"] = '27,大阪府,27208,貝塚市,かいづかし,135.3586111,34.43777778';
muniArray["27209"] = '27,大阪府,27209,守口市,もりぐちし,135.5641667,34.7375';
muniArray["27210"] = '27,大阪府,27210,枚方市,ひらかたし,135.6508333,34.81444444';
muniArray["27211"] = '27,大阪府,27211,茨木市,いばらきし,135.5686111,34.81638889';
muniArray["27212"] = '27,大阪府,27212,八尾市,やおし,135.6008333,34.62694444';
muniArray["27213"] = '27,大阪府,27213,泉佐野市,いずみさのし,135.3275,34.40666667';
muniArray["27214"] = '27,大阪府,27214,富田林市,とんだばやしし,135.5972222,34.49916667';
muniArray["27215"] = '27,大阪府,27215,寝屋川市,ねやがわし,135.6280556,34.76611111';
muniArray["27216"] = '27,大阪府,27216,河内長野市,かわちながのし,135.5641667,34.45833333';
muniArray["27217"] = '27,大阪府,27217,松原市,まつばらし,135.5516667,34.57805556';
muniArray["27218"] = '27,大阪府,27218,大東市,だいとうし,135.6233333,34.71194444';
muniArray["27219"] = '27,大阪府,27219,和泉市,いずみし,135.4236111,34.48361111';
muniArray["27220"] = '27,大阪府,27220,箕面市,みのおし,135.4705556,34.82694444';
muniArray["27221"] = '27,大阪府,27221,柏原市,かしわらし,135.6286111,34.57916667';
muniArray["27222"] = '27,大阪府,27222,羽曳野市,はびきのし,135.6061111,34.55777778';
muniArray["27223"] = '27,大阪府,27223,門真市,かどまし,135.5869444,34.73916667';
muniArray["27224"] = '27,大阪府,27224,摂津市,せっつし,135.5622222,34.77722222';
muniArray["27225"] = '27,大阪府,27225,高石市,たかいしし,135.4422222,34.52055556';
muniArray["27226"] = '27,大阪府,27226,藤井寺市,ふじいでらし,135.5975,34.57472222';
muniArray["27227"] = '27,大阪府,27227,東大阪市,ひがしおおさかし,135.6008333,34.67944444';
muniArray["27228"] = '27,大阪府,27228,泉南市,せんなんし,135.2736111,34.36583333';
muniArray["27229"] = '27,大阪府,27229,四條畷市,しじょうなわてし,135.6394444,34.74';
muniArray["27230"] = '27,大阪府,27230,交野市,かたのし,135.68,34.78805556';
muniArray["27231"] = '27,大阪府,27231,大阪狭山市,おおさかさやまし,135.5555556,34.50361111';
muniArray["27232"] = '27,大阪府,27232,阪南市,はんなんし,135.2397222,34.35944444';
muniArray["27301"] = '27,大阪府,27301,島本町,しまもとちょう,135.6627778,34.88388889';
muniArray["27321"] = '27,大阪府,27321,豊能町,とよのちょう,135.4941667,34.91888889';
muniArray["27322"] = '27,大阪府,27322,能勢町,のせちょう,135.4141667,34.9725';
muniArray["27341"] = '27,大阪府,27341,忠岡町,ただおかちょう,135.4011111,34.48694444';
muniArray["27361"] = '27,大阪府,27361,熊取町,くまとりちょう,135.3561111,34.40138889';
muniArray["27362"] = '27,大阪府,27362,田尻町,たじりちょう,135.2911111,34.39361111';
muniArray["27366"] = '27,大阪府,27366,岬町,みさきちょう,135.1422222,34.31694444';
muniArray["27381"] = '27,大阪府,27381,太子町,たいしちょう,135.6480556,34.51861111';
muniArray["27382"] = '27,大阪府,27382,河南町,かなんちょう,135.6297222,34.49166667';
muniArray["27383"] = '27,大阪府,27383,千早赤阪村,ちはやあかさかむ,135.6225,34.46444444';
muniArray["28100"] = '28,兵庫県,28100,神戸市,こうべし,135.1955556,34.69';
muniArray["28101"] = '28,兵庫県,28101,神戸市　東灘区,こうべし　ひがしなだく,135.2655556,34.72027778';
muniArray["28102"] = '28,兵庫県,28102,神戸市　灘区,こうべし　なだく,135.2394444,34.7125';
muniArray["28105"] = '28,兵庫県,28105,神戸市　兵庫区,こうべし　ひょうごく,135.1652778,34.68055556';
muniArray["28106"] = '28,兵庫県,28106,神戸市　長田区,こうべし　ながたく,135.1508333,34.66555556';
muniArray["28107"] = '28,兵庫県,28107,神戸市　須磨区,こうべし　すまく,135.1302778,34.65027778';
muniArray["28108"] = '28,兵庫県,28108,神戸市　垂水区,こうべし　たるみく,135.0569444,34.63055556';
muniArray["28109"] = '28,兵庫県,28109,神戸市　北区,こうべし　きたく,135.1444444,34.72722222';
muniArray["28110"] = '28,兵庫県,28110,神戸市　中央区,こうべし　ちゅうおうく,135.1977778,34.695';
muniArray["28111"] = '28,兵庫県,28111,神戸市　西区,こうべし　にしく,134.9816667,34.68305556';
muniArray["28201"] = '28,兵庫県,28201,姫路市,ひめじし,134.6855556,34.81527778';
muniArray["28202"] = '28,兵庫県,28202,尼崎市,あまがさきし,135.4063889,34.73333333';
muniArray["28203"] = '28,兵庫県,28203,明石市,あかしし,134.9975,34.64305556';
muniArray["28204"] = '28,兵庫県,28204,西宮市,にしのみやし,135.3419444,34.73777778';
muniArray["28205"] = '28,兵庫県,28205,洲本市,すもとし,134.8955556,34.3425';
muniArray["28206"] = '28,兵庫県,28206,芦屋市,あしやし,135.3044444,34.72694444';
muniArray["28207"] = '28,兵庫県,28207,伊丹市,いたみし,135.4008333,34.78416667';
muniArray["28208"] = '28,兵庫県,28208,相生市,あいおいし,134.4680556,34.80361111';
muniArray["28209"] = '28,兵庫県,28209,豊岡市,とよおかし,134.82,35.54444444';
muniArray["28210"] = '28,兵庫県,28210,加古川市,かこがわし,134.8413889,34.75694444';
muniArray["28212"] = '28,兵庫県,28212,赤穂市,あこうし,134.3902778,34.755';
muniArray["28213"] = '28,兵庫県,28213,西脇市,にしわきし,134.9694444,34.99333333';
muniArray["28214"] = '28,兵庫県,28214,宝塚市,たからづかし,135.3602778,34.8';
muniArray["28215"] = '28,兵庫県,28215,三木市,みきし,134.99,34.79666667';
muniArray["28216"] = '28,兵庫県,28216,高砂市,たかさごし,134.7905556,34.76583333';
muniArray["28217"] = '28,兵庫県,28217,川西市,かわにしし,135.4172222,34.83';
muniArray["28218"] = '28,兵庫県,28218,小野市,おのし,134.9316667,34.85305556';
muniArray["28219"] = '28,兵庫県,28219,三田市,さんだし,135.2252778,34.88944444';
muniArray["28220"] = '28,兵庫県,28220,加西市,かさいし,134.8419444,34.92777778';
muniArray["28221"] = '28,兵庫県,28221,篠山市,ささやまし,135.2191667,35.07583333';
muniArray["28222"] = '28,兵庫県,28222,養父市,やぶし,134.7675,35.40472222';
muniArray["28223"] = '28,兵庫県,28223,丹波市,たんばし,135.0358333,35.17722222';
muniArray["28224"] = '28,兵庫県,28224,南あわじ市,みなみあわじし,134.7791667,34.29583333';
muniArray["28225"] = '28,兵庫県,28225,朝来市,あさごし,134.8530556,35.33972222';
muniArray["28226"] = '28,兵庫県,28226,淡路市,あわじし,134.9147222,34.44';
muniArray["28227"] = '28,兵庫県,28227,宍粟市,しそうし,134.5494444,35.00444444';
muniArray["28228"] = '28,兵庫県,28228,加東市,かとうし,134.9736111,34.9175';
muniArray["28229"] = '28,兵庫県,28229,たつの市,たつのし,134.5455556,34.85805556';
muniArray["28301"] = '28,兵庫県,28301,猪名川町,いながわちょう,135.3761111,34.895';
muniArray["28365"] = '28,兵庫県,28365,多可町,たかちょう,134.9233333,35.05027778';
muniArray["28381"] = '28,兵庫県,28381,稲美町,いなみちょう,134.9136111,34.74888889';
muniArray["28382"] = '28,兵庫県,28382,播磨町,はりまちょう,134.8680556,34.71527778';
muniArray["28442"] = '28,兵庫県,28442,市川町,いちかわちょう,134.7630556,34.98944444';
muniArray["28443"] = '28,兵庫県,28443,福崎町,ふくさきちょう,134.7602778,34.95027778';
muniArray["28446"] = '28,兵庫県,28446,神河町,かみかわちょう,134.7394444,35.06416667';
muniArray["28464"] = '28,兵庫県,28464,太子町,たいしちょう,134.5780556,34.83361111';
muniArray["28481"] = '28,兵庫県,28481,上郡町,かみごおりちょう,134.3561111,34.87361111';
muniArray["28501"] = '28,兵庫県,28501,佐用町,さようちょう,134.3558333,35.00416667';
muniArray["28585"] = '28,兵庫県,28585,香美町,かみちょう,134.6291667,35.63222222';
muniArray["28586"] = '28,兵庫県,28586,新温泉町,しんおんせんちょう,134.4491667,35.62333333';
muniArray["29201"] = '29,奈良県,29201,奈良市,ならし,135.8047222,34.685';
muniArray["29202"] = '29,奈良県,29202,大和高田市,やまとたかだし,135.7363889,34.515';
muniArray["29203"] = '29,奈良県,29203,大和郡山市,やまとこおりやまし,135.7827778,34.64944444';
muniArray["29204"] = '29,奈良県,29204,天理市,てんりし,135.8372222,34.59666667';
muniArray["29205"] = '29,奈良県,29205,橿原市,かしはらし,135.7925,34.50916667';
muniArray["29206"] = '29,奈良県,29206,桜井市,さくらいし,135.8433333,34.51861111';
muniArray["29207"] = '29,奈良県,29207,五條市,ごじょうし,135.6938889,34.35194444';
muniArray["29208"] = '29,奈良県,29208,御所市,ごせし,135.7402778,34.46333333';
muniArray["29209"] = '29,奈良県,29209,生駒市,いこまし,135.7005556,34.69194444';
muniArray["29210"] = '29,奈良県,29210,香芝市,かしばし,135.6991667,34.54138889';
muniArray["29211"] = '29,奈良県,29211,葛城市,かつらぎし,135.7266667,34.48916667';
muniArray["29212"] = '29,奈良県,29212,宇陀市,うだし,135.9525,34.52777778';
muniArray["29322"] = '29,奈良県,29322,山添村,やまぞえむら,136.0438889,34.68138889';
muniArray["29342"] = '29,奈良県,29342,平群町,へぐりちょう,135.7005556,34.62916667';
muniArray["29343"] = '29,奈良県,29343,三郷町,さんごうちょう,135.6955556,34.60027778';
muniArray["29344"] = '29,奈良県,29344,斑鳩町,いかるがちょう,135.7305556,34.60888889';
muniArray["29345"] = '29,奈良県,29345,安堵町,あんどちょう,135.7566667,34.60666667';
muniArray["29361"] = '29,奈良県,29361,川西町,かわにしちょう,135.7741667,34.58444444';
muniArray["29362"] = '29,奈良県,29362,三宅町,みやけちょう,135.7730556,34.57361111';
muniArray["29363"] = '29,奈良県,29363,田原本町,たわらもとちょう,135.795,34.55666667';
muniArray["29385"] = '29,奈良県,29385,曽爾村,そにむら,136.1247222,34.51055556';
muniArray["29386"] = '29,奈良県,29386,御杖村,みつえむら,136.1661111,34.48805556';
muniArray["29401"] = '29,奈良県,29401,高取町,たかとりちょう,135.7930556,34.44944444';
muniArray["29402"] = '29,奈良県,29402,明日香村,あすかむら,135.8205556,34.47111111';
muniArray["29424"] = '29,奈良県,29424,上牧町,かんまきちょう,135.7166667,34.56277778';
muniArray["29425"] = '29,奈良県,29425,王寺町,おうじちょう,135.7069444,34.59472222';
muniArray["29426"] = '29,奈良県,29426,広陵町,こうりょうちょう,135.7508333,34.54277778';
muniArray["29427"] = '29,奈良県,29427,河合町,かわいちょう,135.7366667,34.57833333';
muniArray["29441"] = '29,奈良県,29441,吉野町,よしのちょう,135.8577778,34.39611111';
muniArray["29442"] = '29,奈良県,29442,大淀町,おおよどちょう,135.79,34.39055556';
muniArray["29443"] = '29,奈良県,29443,下市町,しもいちちょう,135.7919444,34.36111111';
muniArray["29444"] = '29,奈良県,29444,黒滝村,くろたきむら,135.8522222,34.30916667';
muniArray["29446"] = '29,奈良県,29446,天川村,てんかわむら,135.8552778,34.24194444';
muniArray["29447"] = '29,奈良県,29447,野迫川村,のせがわむら,135.6330556,34.16638889';
muniArray["29449"] = '29,奈良県,29449,十津川村,とつかわむら,135.7925,33.98861111';
muniArray["29450"] = '29,奈良県,29450,下北山村,しもきたやまむら,135.9552778,34.005';
muniArray["29451"] = '29,奈良県,29451,上北山村,かみきたやまむら,136.0002778,34.13444444';
muniArray["29452"] = '29,奈良県,29452,川上村,かわかみむら,135.9544444,34.33833333';
muniArray["29453"] = '29,奈良県,29453,東吉野村,ひがしよしのむら,135.9683333,34.40361111';
muniArray["30201"] = '30,和歌山県,30201,和歌山市,わかやまし,135.1708333,34.23055556';
muniArray["30202"] = '30,和歌山県,30202,海南市,かいなんし,135.2091667,34.15555556';
muniArray["30203"] = '30,和歌山県,30203,橋本市,はしもとし,135.6052778,34.31472222';
muniArray["30204"] = '30,和歌山県,30204,有田市,ありだし,135.1277778,34.08305556';
muniArray["30205"] = '30,和歌山県,30205,御坊市,ごぼうし,135.1525,33.89138889';
muniArray["30206"] = '30,和歌山県,30206,田辺市,たなべし,135.3777778,33.72805556';
muniArray["30207"] = '30,和歌山県,30207,新宮市,しんぐうし,135.9925,33.72416667';
muniArray["30208"] = '30,和歌山県,30208,紀の川市,きのかわし,135.3625,34.26972222';
muniArray["30209"] = '30,和歌山県,30209,岩出市,いわでし,135.3111111,34.25638889';
muniArray["30304"] = '30,和歌山県,30304,紀美野町,きみのちょう,135.3080556,34.16694444';
muniArray["30341"] = '30,和歌山県,30341,かつらぎ町,かつらぎちょう,135.5041667,34.29638889';
muniArray["30343"] = '30,和歌山県,30343,九度山町,くどやまちょう,135.5622222,34.28722222';
muniArray["30344"] = '30,和歌山県,30344,高野町,こうやちょう,135.5866667,34.21611111';
muniArray["30361"] = '30,和歌山県,30361,湯浅町,ゆあさちょう,135.1786111,34.03305556';
muniArray["30362"] = '30,和歌山県,30362,広川町,ひろがわちょう,135.1730556,34.03';
muniArray["30366"] = '30,和歌山県,30366,有田川町,ありだがわちょう,135.2161111,34.0575';
muniArray["30381"] = '30,和歌山県,30381,美浜町,みはまちょう,135.1333333,33.89361111';
muniArray["30382"] = '30,和歌山県,30382,日高町,ひだかちょう,135.1408333,33.92555556';
muniArray["30383"] = '30,和歌山県,30383,由良町,ゆらちょう,135.1183333,33.95944444';
muniArray["30390"] = '30,和歌山県,30390,印南町,いなみちょう,135.2180556,33.81833333';
muniArray["30391"] = '30,和歌山県,30391,みなべ町,みなべちょう,135.3216667,33.7725';
muniArray["30392"] = '30,和歌山県,30392,日高川町,ひだかがわちょう,135.1861111,33.91166667';
muniArray["30401"] = '30,和歌山県,30401,白浜町,しらはまちょう,135.3480556,33.67805556';
muniArray["30404"] = '30,和歌山県,30404,上富田町,かみとんだちょう,135.4288889,33.69611111';
muniArray["30406"] = '30,和歌山県,30406,すさみ町,すさみちょう,135.4966667,33.55027778';
muniArray["30421"] = '30,和歌山県,30421,那智勝浦町,なちかつうらちょう,135.9408333,33.62611111';
muniArray["30422"] = '30,和歌山県,30422,太地町,たいじちょう,135.9438889,33.59416667';
muniArray["30424"] = '30,和歌山県,30424,古座川町,こざがわちょう,135.8147222,33.53194444';
muniArray["30427"] = '30,和歌山県,30427,北山村,きたやまむら,135.9694444,33.93194444';
muniArray["30428"] = '30,和歌山県,30428,串本町,くしもとちょう,135.7813889,33.4725';
muniArray["31201"] = '31,鳥取県,31201,鳥取市,とっとりし,134.2352778,35.50111111';
muniArray["31202"] = '31,鳥取県,31202,米子市,よなごし,133.3311111,35.42805556';
muniArray["31203"] = '31,鳥取県,31203,倉吉市,くらよしし,133.8255556,35.43';
muniArray["31204"] = '31,鳥取県,31204,境港市,さかいみなとし,133.2316667,35.53972222';
muniArray["31302"] = '31,鳥取県,31302,岩美町,いわみちょう,134.3319444,35.57583333';
muniArray["31325"] = '31,鳥取県,31325,若桜町,わかさちょう,134.4008333,35.34';
muniArray["31328"] = '31,鳥取県,31328,智頭町,ちづちょう,134.2266667,35.265';
muniArray["31329"] = '31,鳥取県,31329,八頭町,やずちょう,134.2508333,35.40916667';
muniArray["31364"] = '31,鳥取県,31364,三朝町,みささちょう,133.8625,35.40861111';
muniArray["31370"] = '31,鳥取県,31370,湯梨浜町,ゆりはまちょう,133.8647222,35.49';
muniArray["31371"] = '31,鳥取県,31371,琴浦町,ことうらちょう,133.6927778,35.49527778';
muniArray["31372"] = '31,鳥取県,31372,北栄町,ほくえいちょう,133.7586111,35.49';
muniArray["31384"] = '31,鳥取県,31384,日吉津村,ひえづそん,133.3805556,35.44027778';
muniArray["31386"] = '31,鳥取県,31386,大山町,だいせんちょう,133.4961111,35.51083333';
muniArray["31389"] = '31,鳥取県,31389,南部町,なんぶちょう,133.3266667,35.34027778';
muniArray["31390"] = '31,鳥取県,31390,伯耆町,ほうきちょう,133.4075,35.38527778';
muniArray["31401"] = '31,鳥取県,31401,日南町,にちなんちょう,133.3061111,35.16305556';
muniArray["31402"] = '31,鳥取県,31402,日野町,ひのちょう,133.4427778,35.24083333';
muniArray["31403"] = '31,鳥取県,31403,江府町,こうふちょう,133.4886111,35.28305556';
muniArray["32201"] = '32,島根県,32201,松江市,まつえし,133.0486111,35.46805556';
muniArray["32202"] = '32,島根県,32202,浜田市,はまだし,132.08,34.89916667';
muniArray["32203"] = '32,島根県,32203,出雲市,いずもし,132.7547222,35.36694444';
muniArray["32204"] = '32,島根県,32204,益田市,ますだし,131.8427778,34.675';
muniArray["32205"] = '32,島根県,32205,大田市,おおだし,132.4997222,35.19222222';
muniArray["32206"] = '32,島根県,32206,安来市,やすぎし,133.2508333,35.43166667';
muniArray["32207"] = '32,島根県,32207,江津市,ごうつし,132.2211111,35.01138889';
muniArray["32209"] = '32,島根県,32209,雲南市,うんなんし,132.9005556,35.28777778';
muniArray["32343"] = '32,島根県,32343,奥出雲町,おくいずもちょう,133.0025,35.1975';
muniArray["32386"] = '32,島根県,32386,飯南町,いいなんちょう,132.7138889,35';
muniArray["32441"] = '32,島根県,32441,川本町,かわもとまち,132.4952778,34.99416667';
muniArray["32448"] = '32,島根県,32448,美郷町,みさとちょう,132.5911111,35.07666667';
muniArray["32449"] = '32,島根県,32449,邑南町,おおなんちょう,132.4377778,34.89388889';
muniArray["32501"] = '32,島根県,32501,津和野町,つわのちょう,131.8383333,34.54361111';
muniArray["32505"] = '32,島根県,32505,吉賀町,よしかちょう,131.935,34.35361111';
muniArray["32525"] = '32,島根県,32525,海士町,あまちょう,133.0969444,36.09666667';
muniArray["32526"] = '32,島根県,32526,西ノ島町,にしのしまちょう,132.9944444,36.09333333';
muniArray["32527"] = '32,島根県,32527,知夫村,ちぶむら,133.0397222,36.01416667';
muniArray["32528"] = '32,島根県,32528,隠岐の島町,おきのしまちょう,133.3219444,36.20916667';
muniArray["33100"] = '33,岡山県,33100,岡山市,おかやまし,133.9197222,34.655';
muniArray["33101"] = '33,岡山県,33101,岡山市　北区,おかやまし　きたく,133.9197222,34.655';
muniArray["33102"] = '33,岡山県,33102,岡山市　中区,おかやまし　なかく,133.9430556,34.67083333';
muniArray["33103"] = '33,岡山県,33103,岡山市　東区,おかやまし　ひがしく,134.0363889,34.65833333';
muniArray["33104"] = '33,岡山県,33104,岡山市　南区,おかやまし　みなみく,133.8652778,34.54388889';
muniArray["33202"] = '33,岡山県,33202,倉敷市,くらしきし,133.7719444,34.585';
muniArray["33203"] = '33,岡山県,33203,津山市,つやまし,134.0044444,35.06944444';
muniArray["33204"] = '33,岡山県,33204,玉野市,たまのし,133.9458333,34.49194444';
muniArray["33205"] = '33,岡山県,33205,笠岡市,かさおかし,133.5072222,34.50722222';
muniArray["33207"] = '33,岡山県,33207,井原市,いばらし,133.4638889,34.59777778';
muniArray["33208"] = '33,岡山県,33208,総社市,そうじゃし,133.7466667,34.67277778';
muniArray["33209"] = '33,岡山県,33209,高梁市,たかはしし,133.6166667,34.79138889';
muniArray["33210"] = '33,岡山県,33210,新見市,にいみし,133.4702778,34.97722222';
muniArray["33211"] = '33,岡山県,33211,備前市,びぜんし,134.1880556,34.745';
muniArray["33212"] = '33,岡山県,33212,瀬戸内市,せとうちし,134.0927778,34.665';
muniArray["33213"] = '33,岡山県,33213,赤磐市,あかいわし,134.0188889,34.75527778';
muniArray["33214"] = '33,岡山県,33214,真庭市,まにわし,133.7527778,35.07555556';
muniArray["33215"] = '33,岡山県,33215,美作市,みまさかし,134.1486111,35.00861111';
muniArray["33216"] = '33,岡山県,33216,浅口市,あさくちし,133.585,34.52777778';
muniArray["33346"] = '33,岡山県,33346,和気町,わけちょう,134.1575,34.80277778';
muniArray["33423"] = '33,岡山県,33423,早島町,はやしまちょう,133.8283333,34.60055556';
muniArray["33445"] = '33,岡山県,33445,里庄町,さとしょうちょう,133.5569444,34.51361111';
muniArray["33461"] = '33,岡山県,33461,矢掛町,やかげちょう,133.5872222,34.62777778';
muniArray["33586"] = '33,岡山県,33586,新庄村,しんじょうそん,133.5677778,35.17944444';
muniArray["33606"] = '33,岡山県,33606,鏡野町,かがみのちょう,133.9330556,35.09194444';
muniArray["33622"] = '33,岡山県,33622,勝央町,しょうおうちょう,134.1161111,35.04194444';
muniArray["33623"] = '33,岡山県,33623,奈義町,なぎちょう,134.1775,35.12305556';
muniArray["33643"] = '33,岡山県,33643,西粟倉村,にしあわくらそん,134.3363889,35.17138889';
muniArray["33663"] = '33,岡山県,33663,久米南町,くめなんちょう,133.9608333,34.92916667';
muniArray["33666"] = '33,岡山県,33666,美咲町,みさきちょう,133.9583333,34.99777778';
muniArray["33681"] = '33,岡山県,33681,吉備中央町,きびちゅうおうちょう,133.6938889,34.8625';
muniArray["34100"] = '34,広島県,34100,広島市,ひろしまし,132.4552778,34.38527778';
muniArray["34101"] = '34,広島県,34101,広島市　中区,ひろしまし　なかく,132.4552778,34.38611111';
muniArray["34102"] = '34,広島県,34102,広島市　東区,ひろしまし　ひがしく,132.4827778,34.39527778';
muniArray["34103"] = '34,広島県,34103,広島市　南区,ひろしまし　みなみく,132.4691667,34.38';
muniArray["34104"] = '34,広島県,34104,広島市　西区,ひろしまし　にしく,132.4344444,34.39388889';
muniArray["34105"] = '34,広島県,34105,広島市　安佐南区,ひろしまし　あさみなみく,132.4716667,34.45194444';
muniArray["34106"] = '34,広島県,34106,広島市　安佐北区,ひろしまし　あさきたく,132.5077778,34.51833333';
muniArray["34107"] = '34,広島県,34107,広島市　安芸区,ひろしまし　あきく,132.5255556,34.37166667';
muniArray["34108"] = '34,広島県,34108,広島市　佐伯区,ひろしまし　さえきく,132.3608333,34.36444444';
muniArray["34202"] = '34,広島県,34202,呉市,くれし,132.5658333,34.24916667';
muniArray["34203"] = '34,広島県,34203,竹原市,たけはらし,132.9069444,34.34166667';
muniArray["34204"] = '34,広島県,34204,三原市,みはらし,133.0786111,34.3975';
muniArray["34205"] = '34,広島県,34205,尾道市,おのみちし,133.205,34.40888889';
muniArray["34207"] = '34,広島県,34207,福山市,ふくやまし,133.3625,34.48583333';
muniArray["34208"] = '34,広島県,34208,府中市,ふちゅうし,133.2363889,34.56833333';
muniArray["34209"] = '34,広島県,34209,三次市,みよしし,132.8516667,34.80583333';
muniArray["34210"] = '34,広島県,34210,庄原市,しょうばらし,133.0166667,34.85777778';
muniArray["34211"] = '34,広島県,34211,大竹市,おおたけし,132.2222222,34.23805556';
muniArray["34212"] = '34,広島県,34212,東広島市,ひがしひろしまし,132.7436111,34.42694444';
muniArray["34213"] = '34,広島県,34213,廿日市市,はつかいちし,132.3316667,34.34861111';
muniArray["34214"] = '34,広島県,34214,安芸高田市,あきたかたし,132.7038889,34.66638889';
muniArray["34215"] = '34,広島県,34215,江田島市,えたじまし,132.4441667,34.22277778';
muniArray["34302"] = '34,広島県,34302,府中町,ふちゅうちょう,132.5044444,34.3925';
muniArray["34304"] = '34,広島県,34304,海田町,かいたちょう,132.5361111,34.37222222';
muniArray["34307"] = '34,広島県,34307,熊野町,くまのちょう,132.5844444,34.33583333';
muniArray["34309"] = '34,広島県,34309,坂町,さかちょう,132.5138889,34.34138889';
muniArray["34368"] = '34,広島県,34368,安芸太田町,あきおおたちょう,132.2269444,34.57666667';
muniArray["34369"] = '34,広島県,34369,北広島町,きたひろしまちょう,132.5383333,34.67444444';
muniArray["34431"] = '34,広島県,34431,大崎上島町,おおさきかみじまちょう,132.9152778,34.26972222';
muniArray["34462"] = '34,広島県,34462,世羅町,せらちょう,133.0566667,34.58666667';
muniArray["34545"] = '34,広島県,34545,神石高原町,じんせきこうげんちょう,133.2477778,34.70361111';
muniArray["35201"] = '35,山口県,35201,下関市,しものせきし,130.9413889,33.95777778';
muniArray["35202"] = '35,山口県,35202,宇部市,うべし,131.2466667,33.95166667';
muniArray["35203"] = '35,山口県,35203,山口市,やまぐちし,131.4738889,34.17833333';
muniArray["35204"] = '35,山口県,35204,萩市,はぎし,131.3991667,34.40805556';
muniArray["35206"] = '35,山口県,35206,防府市,ほうふし,131.5627778,34.05194444';
muniArray["35207"] = '35,山口県,35207,下松市,くだまつし,131.8702778,34.015';
muniArray["35208"] = '35,山口県,35208,岩国市,いわくにし,132.2197222,34.16694444';
muniArray["35210"] = '35,山口県,35210,光市,ひかりし,131.9422222,33.96166667';
muniArray["35211"] = '35,山口県,35211,長門市,ながとし,131.1822222,34.37111111';
muniArray["35212"] = '35,山口県,35212,柳井市,やないし,132.1016667,33.96388889';
muniArray["35213"] = '35,山口県,35213,美祢市,みねし,131.2058333,34.16666667';
muniArray["35215"] = '35,山口県,35215,周南市,しゅうなんし,131.8061111,34.05527778';
muniArray["35216"] = '35,山口県,35216,山陽小野田市,さんようおのだし,131.1819444,34.00333333';
muniArray["35305"] = '35,山口県,35305,周防大島町,すおうおおしまちょう,132.1952778,33.9275';
muniArray["35321"] = '35,山口県,35321,和木町,わきちょう,132.2202778,34.20222222';
muniArray["35341"] = '35,山口県,35341,上関町,かみのせきちょう,132.1108333,33.83083333';
muniArray["35343"] = '35,山口県,35343,田布施町,たぶせちょう,132.0413889,33.95472222';
muniArray["35344"] = '35,山口県,35344,平生町,ひらおちょう,132.0733333,33.93805556';
muniArray["35502"] = '35,山口県,35502,阿武町,あぶちょう,131.4711111,34.50333333';
muniArray["36201"] = '36,徳島県,36201,徳島市,とくしまし,134.5547222,34.07027778';
muniArray["36202"] = '36,徳島県,36202,鳴門市,なるとし,134.6088889,34.1725';
muniArray["36203"] = '36,徳島県,36203,小松島市,こまつしまし,134.5905556,34.00472222';
muniArray["36204"] = '36,徳島県,36204,阿南市,あなんし,134.6594444,33.92166667';
muniArray["36205"] = '36,徳島県,36205,吉野川市,よしのがわし,134.3586111,34.06638889';
muniArray["36206"] = '36,徳島県,36206,阿波市,あわし,134.2358333,34.08222222';
muniArray["36207"] = '36,徳島県,36207,美馬市,みまし,134.17,34.05333333';
muniArray["36208"] = '36,徳島県,36208,三好市,みよしし,133.8072222,34.02583333';
muniArray["36301"] = '36,徳島県,36301,勝浦町,かつうらちょう,134.5113889,33.93138889';
muniArray["36302"] = '36,徳島県,36302,上勝町,かみかつちょう,134.4019444,33.88888889';
muniArray["36321"] = '36,徳島県,36321,佐那河内村,さなごうちそん,134.4533333,33.99305556';
muniArray["36341"] = '36,徳島県,36341,石井町,いしいちょう,134.4405556,34.07472222';
muniArray["36342"] = '36,徳島県,36342,神山町,かみやまちょう,134.3505556,33.96722222';
muniArray["36368"] = '36,徳島県,36368,那賀町,なかちょう,134.4958333,33.85722222';
muniArray["36383"] = '36,徳島県,36383,牟岐町,むぎちょう,134.4208333,33.66833333';
muniArray["36387"] = '36,徳島県,36387,美波町,みなみちょう,134.5355556,33.73472222';
muniArray["36388"] = '36,徳島県,36388,海陽町,かいようちょう,134.3519444,33.60194444';
muniArray["36401"] = '36,徳島県,36401,松茂町,まつしげちょう,134.5802778,34.13388889';
muniArray["36402"] = '36,徳島県,36402,北島町,きたじまちょう,134.5469444,34.12555556';
muniArray["36403"] = '36,徳島県,36403,藍住町,あいずみちょう,134.495,34.12666667';
muniArray["36404"] = '36,徳島県,36404,板野町,いたのちょう,134.4625,34.14416667';
muniArray["36405"] = '36,徳島県,36405,上板町,かみいたちょう,134.405,34.12138889';
muniArray["36468"] = '36,徳島県,36468,つるぎ町,つるぎちょう,134.0641667,34.03722222';
muniArray["36489"] = '36,徳島県,36489,東みよし町,ひがしみよしちょう,133.9369444,34.03666667';
muniArray["37201"] = '37,香川県,37201,高松市,たかまつし,134.0466667,34.34277778';
muniArray["37202"] = '37,香川県,37202,丸亀市,まるがめし,133.7977778,34.28944444';
muniArray["37203"] = '37,香川県,37203,坂出市,さかいでし,133.8605556,34.31638889';
muniArray["37204"] = '37,香川県,37204,善通寺市,ぜんつうじし,133.7872222,34.22833333';
muniArray["37205"] = '37,香川県,37205,観音寺市,かんおんじし,133.6616667,34.12722222';
muniArray["37206"] = '37,香川県,37206,さぬき市,さぬきし,134.1722222,34.32527778';
muniArray["37207"] = '37,香川県,37207,東かがわ市,ひがしかがわし,134.3588889,34.24388889';
muniArray["37208"] = '37,香川県,37208,三豊市,みとよし,133.715,34.18277777';
muniArray["37322"] = '37,香川県,37322,土庄町,とのしょうちょう,134.1858333,34.48611111';
muniArray["37324"] = '37,香川県,37324,小豆島町,しょうどしまちょう,134.2336111,34.48194444';
muniArray["37341"] = '37,香川県,37341,三木町,みきちょう,134.1344444,34.26833333';
muniArray["37364"] = '37,香川県,37364,直島町,なおしまちょう,133.9955556,34.46';
muniArray["37386"] = '37,香川県,37386,宇多津町,うたづちょう,133.8255556,34.31055556';
muniArray["37387"] = '37,香川県,37387,綾川町,あやがわちょう,133.9230556,34.24944444';
muniArray["37403"] = '37,香川県,37403,琴平町,ことひらちょう,133.8233333,34.19138889';
muniArray["37404"] = '37,香川県,37404,多度津町,たどつちょう,133.7536111,34.2725';
muniArray["37406"] = '37,香川県,37406,まんのう町,まんのうちょう,133.8413889,34.19222222';
muniArray["38201"] = '38,愛媛県,38201,松山市,まつやまし,132.7655556,33.83916667';
muniArray["38202"] = '38,愛媛県,38202,今治市,いまばりし,132.9977778,34.06611111';
muniArray["38203"] = '38,愛媛県,38203,宇和島市,うわじまし,132.5605556,33.22333333';
muniArray["38204"] = '38,愛媛県,38204,八幡浜市,やわたはまし,132.4233333,33.46305556';
muniArray["38205"] = '38,愛媛県,38205,新居浜市,にいはまし,133.2833333,33.96027778';
muniArray["38206"] = '38,愛媛県,38206,西条市,さいじょうし,133.1811111,33.91972222';
muniArray["38207"] = '38,愛媛県,38207,大洲市,おおずし,132.5447222,33.50638889';
muniArray["38210"] = '38,愛媛県,38210,伊予市,いよし,132.7038889,33.7575';
muniArray["38213"] = '38,愛媛県,38213,四国中央市,しこくちゅうおうし,133.5491667,33.98083333';
muniArray["38214"] = '38,愛媛県,38214,西予市,せいよし,132.5111111,33.36305556';
muniArray["38215"] = '38,愛媛県,38215,東温市,とうおんし,132.8719444,33.79111111';
muniArray["38356"] = '38,愛媛県,38356,上島町,かみじまちょう,133.2044444,34.2575';
muniArray["38386"] = '38,愛媛県,38386,久万高原町,くまこうげんちょう,132.9016667,33.65555556';
muniArray["38401"] = '38,愛媛県,38401,松前町,まさきちょう,132.7113889,33.7875';
muniArray["38402"] = '38,愛媛県,38402,砥部町,とべちょう,132.7922222,33.74916667';
muniArray["38422"] = '38,愛媛県,38422,内子町,うちこちょう,132.6580556,33.53305556';
muniArray["38442"] = '38,愛媛県,38442,伊方町,いかたちょう,132.3541667,33.48833333';
muniArray["38484"] = '38,愛媛県,38484,松野町,まつのちょう,132.7108333,33.22722222';
muniArray["38488"] = '38,愛媛県,38488,鬼北町,きほくちょう,132.6841667,33.25583333';
muniArray["38506"] = '38,愛媛県,38506,愛南町,あいなんちょう,132.5833333,32.96222222';
muniArray["39201"] = '39,高知県,39201,高知市,こうちし,133.5313889,33.55888889';
muniArray["39202"] = '39,高知県,39202,室戸市,むろとし,134.1519444,33.29';
muniArray["39203"] = '39,高知県,39203,安芸市,あきし,133.9072222,33.5025';
muniArray["39204"] = '39,高知県,39204,南国市,なんこくし,133.6413889,33.57555556';
muniArray["39205"] = '39,高知県,39205,土佐市,とさし,133.4252778,33.49611111';
muniArray["39206"] = '39,高知県,39206,須崎市,すさきし,133.2830556,33.40083333';
muniArray["39208"] = '39,高知県,39208,宿毛市,すくもし,132.7261111,32.93888889';
muniArray["39209"] = '39,高知県,39209,土佐清水市,とさしみずし,132.955,32.78138889';
muniArray["39210"] = '39,高知県,39210,四万十市,しまんとし,132.9338889,32.99138889';
muniArray["39211"] = '39,高知県,39211,香南市,こうなんし,133.7005556,33.56416667';
muniArray["39212"] = '39,高知県,39212,香美市,かみし,133.6861111,33.60388889';
muniArray["39301"] = '39,高知県,39301,東洋町,とうようちょう,134.28,33.52805556';
muniArray["39302"] = '39,高知県,39302,奈半利町,なはりちょう,134.0211111,33.42416667';
muniArray["39303"] = '39,高知県,39303,田野町,たのちょう,134.0083333,33.42777778';
muniArray["39304"] = '39,高知県,39304,安田町,やすだちょう,133.9811111,33.43833333';
muniArray["39305"] = '39,高知県,39305,北川村,きたがわむら,134.0422222,33.44777778';
muniArray["39306"] = '39,高知県,39306,馬路村,うまじむら,134.0480556,33.55527778';
muniArray["39307"] = '39,高知県,39307,芸西村,げいせいむら,133.8091667,33.52694444';
muniArray["39341"] = '39,高知県,39341,本山町,もとやまちょう,133.5916667,33.75694444';
muniArray["39344"] = '39,高知県,39344,大豊町,おおとよちょう,133.6641667,33.76416667';
muniArray["39363"] = '39,高知県,39363,土佐町,とさちょう,133.5322222,33.73694444';
muniArray["39364"] = '39,高知県,39364,大川村,おおかわむら,133.4666667,33.78361111';
muniArray["39386"] = '39,高知県,39386,いの町,いのちょう,133.4277778,33.54861111';
muniArray["39387"] = '39,高知県,39387,仁淀川町,によどがわちょう,133.1683333,33.57527778';
muniArray["39401"] = '39,高知県,39401,中土佐町,なかとさちょう,133.2283333,33.3275';
muniArray["39402"] = '39,高知県,39402,佐川町,さかわちょう,133.2866667,33.50083333';
muniArray["39403"] = '39,高知県,39403,越知町,おちちょう,133.2519444,33.53277778';
muniArray["39405"] = '39,高知県,39405,梼原町,ゆすはらちょう,132.9269444,33.39194444';
muniArray["39410"] = '39,高知県,39410,日高村,ひだかむら,133.3733333,33.53472222';
muniArray["39411"] = '39,高知県,39411,津野町,つのちょう,133.1994444,33.44666667';
muniArray["39412"] = '39,高知県,39412,四万十町,しまんとちょう,133.1355556,33.20833333';
muniArray["39424"] = '39,高知県,39424,大月町,おおつきちょう,132.7069444,32.84138889';
muniArray["39427"] = '39,高知県,39427,三原村,みはらむら,132.8472222,32.90611111';
muniArray["39428"] = '39,高知県,39428,黒潮町,くろしおちょう,133.0108333,33.025';
muniArray["40100"] = '40,福岡県,40100,北九州市,きたきゅうしゅうし,130.8752778,33.88333333';
muniArray["40101"] = '40,福岡県,40101,北九州市　門司区,きたきゅうしゅうし　もじく,130.9597222,33.94111111';
muniArray["40103"] = '40,福岡県,40103,北九州市　若松区,きたきゅうしゅうし　わかまつく,130.8111111,33.90555556';
muniArray["40105"] = '40,福岡県,40105,北九州市　戸畑区,きたきゅうしゅうし　とばたく,130.8297222,33.89333333';
muniArray["40106"] = '40,福岡県,40106,北九州市　小倉北区,きたきゅうしゅうし　こくらきたく,130.8736111,33.88083333';
muniArray["40107"] = '40,福岡県,40107,北九州市　小倉南区,きたきゅうしゅうし　こくらみなみく,130.8847222,33.84638889';
muniArray["40108"] = '40,福岡県,40108,北九州市　八幡東区,きたきゅうしゅうし　やはたひがしく,130.8119444,33.86361111';
muniArray["40109"] = '40,福岡県,40109,北九州市　八幡西区,きたきゅうしゅうし　やはたにしく,130.7602778,33.86138889';
muniArray["40130"] = '40,福岡県,40130,福岡市,ふくおかし,130.4016667,33.59';
muniArray["40131"] = '40,福岡県,40131,福岡市　東区,ふくおかし　ひがしく,130.4175,33.61777778';
muniArray["40132"] = '40,福岡県,40132,福岡市　博多区,ふくおかし　はかたく,130.415,33.59138889';
muniArray["40133"] = '40,福岡県,40133,福岡市　中央区,ふくおかし　ちゅうおうく,130.3930556,33.58916667';
muniArray["40134"] = '40,福岡県,40134,福岡市　南区,ふくおかし　みなみく,130.4266667,33.56166667';
muniArray["40135"] = '40,福岡県,40135,福岡市　西区,ふくおかし　にしく,130.3230556,33.58277778';
muniArray["40136"] = '40,福岡県,40136,福岡市　城南区,ふくおかし　じょうなんく,130.37,33.57583333';
muniArray["40137"] = '40,福岡県,40137,福岡市　早良区,ふくおかし　さわらく,130.3483333,33.58194444';
muniArray["40202"] = '40,福岡県,40202,大牟田市,おおむたし,130.4461111,33.03027778';
muniArray["40203"] = '40,福岡県,40203,久留米市,くるめし,130.5083333,33.31944444';
muniArray["40204"] = '40,福岡県,40204,直方市,のおがたし,130.7297222,33.74388889';
muniArray["40205"] = '40,福岡県,40205,飯塚市,いいづかし,130.6913889,33.64583333';
muniArray["40206"] = '40,福岡県,40206,田川市,たがわし,130.8061111,33.63888889';
muniArray["40207"] = '40,福岡県,40207,柳川市,やながわし,130.4061111,33.16305556';
muniArray["40210"] = '40,福岡県,40210,八女市,やめし,130.5577778,33.21194444';
muniArray["40211"] = '40,福岡県,40211,筑後市,ちくごし,130.5022222,33.21222222';
muniArray["40212"] = '40,福岡県,40212,大川市,おおかわし,130.3838889,33.20666667';
muniArray["40213"] = '40,福岡県,40213,行橋市,ゆくはしし,130.9830556,33.72861111';
muniArray["40214"] = '40,福岡県,40214,豊前市,ぶぜんし,131.1302778,33.61166667';
muniArray["40215"] = '40,福岡県,40215,中間市,なかまし,130.7091667,33.81666667';
muniArray["40216"] = '40,福岡県,40216,小郡市,おごおりし,130.5555556,33.39638889';
muniArray["40217"] = '40,福岡県,40217,筑紫野市,ちくしのし,130.5155556,33.49638889';
muniArray["40218"] = '40,福岡県,40218,春日市,かすがし,130.4702778,33.53277778';
muniArray["40219"] = '40,福岡県,40219,大野城市,おおのじょうし,130.4788889,33.53638889';
muniArray["40220"] = '40,福岡県,40220,宗像市,むなかたし,130.5405556,33.80555556';
muniArray["40221"] = '40,福岡県,40221,太宰府市,だざいふし,130.5238889,33.51277778';
muniArray["40223"] = '40,福岡県,40223,古賀市,こがし,130.47,33.72888889';
muniArray["40224"] = '40,福岡県,40224,福津市,ふくつし,130.4911111,33.76694444';
muniArray["40225"] = '40,福岡県,40225,うきは市,うきはし,130.755,33.34722222';
muniArray["40226"] = '40,福岡県,40226,宮若市,みやわかし,130.6666667,33.72361111';
muniArray["40227"] = '40,福岡県,40227,嘉麻市,かまし,130.7116667,33.56333333';
muniArray["40228"] = '40,福岡県,40228,朝倉市,あさくらし,130.6655556,33.42333333';
muniArray["40229"] = '40,福岡県,40229,みやま市,みやまし,130.4747222,33.1525';
muniArray["40230"] = '40,福岡県,40230,糸島市,いとしまし,130.1955556,33.55722222';
muniArray["40305"] = '40,福岡県,40305,那珂川町,なかがわまち,130.4222222,33.49944444';
muniArray["40341"] = '40,福岡県,40341,宇美町,うみまち,130.5111111,33.56777778';
muniArray["40342"] = '40,福岡県,40342,篠栗町,ささぐりまち,130.5263889,33.62388889';
muniArray["40343"] = '40,福岡県,40343,志免町,しめまち,130.4797222,33.59138889';
muniArray["40344"] = '40,福岡県,40344,須恵町,すえまち,130.5072222,33.58722222';
muniArray["40345"] = '40,福岡県,40345,新宮町,しんぐうまち,130.4466667,33.71527778';
muniArray["40348"] = '40,福岡県,40348,久山町,ひさやままち,130.5,33.64666667';
muniArray["40349"] = '40,福岡県,40349,粕屋町,かすやまち,130.4805556,33.61083333';
muniArray["40381"] = '40,福岡県,40381,芦屋町,あしやまち,130.6638889,33.89388889';
muniArray["40382"] = '40,福岡県,40382,水巻町,みずまきまち,130.6947222,33.85472222';
muniArray["40383"] = '40,福岡県,40383,岡垣町,おかがきまち,130.6113889,33.85361111';
muniArray["40384"] = '40,福岡県,40384,遠賀町,おんがちょう,130.6683333,33.84805556';
muniArray["40401"] = '40,福岡県,40401,小竹町,こたけまち,130.7127778,33.6925';
muniArray["40402"] = '40,福岡県,40402,鞍手町,くらてまち,130.6741667,33.79194444';
muniArray["40421"] = '40,福岡県,40421,桂川町,けいせんまち,130.6780556,33.57888889';
muniArray["40447"] = '40,福岡県,40447,筑前町,ちくぜんまち,130.5952778,33.45694444';
muniArray["40448"] = '40,福岡県,40448,東峰村,とうほうむら,130.87,33.39722222';
muniArray["40503"] = '40,福岡県,40503,大刀洗町,たちあらいまち,130.6225,33.3725';
muniArray["40522"] = '40,福岡県,40522,大木町,おおきまち,130.4397222,33.21055556';
muniArray["40544"] = '40,福岡県,40544,広川町,ひろかわまち,130.5513889,33.24138889';
muniArray["40601"] = '40,福岡県,40601,香春町,かわらまち,130.8472222,33.66805556';
muniArray["40602"] = '40,福岡県,40602,添田町,そえだまち,130.8541667,33.57166667';
muniArray["40604"] = '40,福岡県,40604,糸田町,いとだまち,130.7791667,33.65277778';
muniArray["40605"] = '40,福岡県,40605,川崎町,かわさきまち,130.8152778,33.6';
muniArray["40608"] = '40,福岡県,40608,大任町,おおとうまち,130.8522222,33.61222222';
muniArray["40609"] = '40,福岡県,40609,赤村,あかむら,130.8708333,33.61666667';
muniArray["40610"] = '40,福岡県,40610,福智町,ふくちまち,130.78,33.68333333';
muniArray["40621"] = '40,福岡県,40621,苅田町,かんだまち,130.9805556,33.77611111';
muniArray["40625"] = '40,福岡県,40625,みやこ町,みやこまち,130.9205556,33.69916667';
muniArray["40642"] = '40,福岡県,40642,吉富町,よしとみまち,131.1761111,33.60277778';
muniArray["40646"] = '40,福岡県,40646,上毛町,こうげまち,131.1644444,33.57833333';
muniArray["40647"] = '40,福岡県,40647,築上町,ちくじょうまち,131.0561111,33.65611111';
muniArray["41201"] = '41,佐賀県,41201,佐賀市,さがし,130.3008333,33.26333333';
muniArray["41202"] = '41,佐賀県,41202,唐津市,からつし,129.9686111,33.45';
muniArray["41203"] = '41,佐賀県,41203,鳥栖市,とすし,130.5061111,33.37777778';
muniArray["41204"] = '41,佐賀県,41204,多久市,たくし,130.1102778,33.28861111';
muniArray["41205"] = '41,佐賀県,41205,伊万里市,いまりし,129.8808333,33.26472222';
muniArray["41206"] = '41,佐賀県,41206,武雄市,たけおし,130.0191667,33.19388889';
muniArray["41207"] = '41,佐賀県,41207,鹿島市,かしまし,130.0986111,33.10416667';
muniArray["41208"] = '41,佐賀県,41208,小城市,おぎし,130.2016667,33.25055556';
muniArray["41209"] = '41,佐賀県,41209,嬉野市,うれしのし,130.06,33.12777778';
muniArray["41210"] = '41,佐賀県,41210,神埼市,かんざきし,130.3730556,33.31083333';
muniArray["41327"] = '41,佐賀県,41327,吉野ヶ里町,よしのがりちょう,130.3988889,33.32111111';
muniArray["41341"] = '41,佐賀県,41341,基山町,きやまちょう,130.5230556,33.42694444';
muniArray["41345"] = '41,佐賀県,41345,上峰町,かみみねちょう,130.4261111,33.31944444';
muniArray["41346"] = '41,佐賀県,41346,みやき町,みやきちょう,130.4544444,33.325';
muniArray["41387"] = '41,佐賀県,41387,玄海町,げんかいちょう,129.8747222,33.47222222';
muniArray["41401"] = '41,佐賀県,41401,有田町,ありたちょう,129.8491667,33.21055556';
muniArray["41423"] = '41,佐賀県,41423,大町町,おおまちちょう,130.1161111,33.21388889';
muniArray["41424"] = '41,佐賀県,41424,江北町,こうほくまち,130.1572222,33.22055556';
muniArray["41425"] = '41,佐賀県,41425,白石町,しろいしちょう,130.1433333,33.18083333';
muniArray["41441"] = '41,佐賀県,41441,太良町,たらちょう,130.1791667,33.01944444';
muniArray["42201"] = '42,長崎県,42201,長崎市,ながさきし,129.8777778,32.75027778';
muniArray["42202"] = '42,長崎県,42202,佐世保市,させぼし,129.7155556,33.18';
muniArray["42203"] = '42,長崎県,42203,島原市,しまばらし,130.3705556,32.78805556';
muniArray["42204"] = '42,長崎県,42204,諫早市,いさはやし,130.0536111,32.84416667';
muniArray["42205"] = '42,長崎県,42205,大村市,おおむらし,129.9583333,32.9';
muniArray["42207"] = '42,長崎県,42207,平戸市,ひらどし,129.5538889,33.36805556';
muniArray["42208"] = '42,長崎県,42208,松浦市,まつうらし,129.7091667,33.34111111';
muniArray["42209"] = '42,長崎県,42209,対馬市,つしまし,129.2875,34.20277778';
muniArray["42210"] = '42,長崎県,42210,壱岐市,いきし,129.6911111,33.75';
muniArray["42211"] = '42,長崎県,42211,五島市,ごとうし,128.8408333,32.69555556';
muniArray["42212"] = '42,長崎県,42212,西海市,さいかいし,129.6430556,32.93305556';
muniArray["42213"] = '42,長崎県,42213,雲仙市,うんぜんし,130.1875,32.835';
muniArray["42214"] = '42,長崎県,42214,南島原市,みなみしまばらし,130.2977778,32.65972222';
muniArray["42307"] = '42,長崎県,42307,長与町,ながよちょう,129.875,32.82527778';
muniArray["42308"] = '42,長崎県,42308,時津町,とぎつちょう,129.8486111,32.82888889';
muniArray["42321"] = '42,長崎県,42321,東彼杵町,ひがしそのぎちょう,129.9172222,33.03694444';
muniArray["42322"] = '42,長崎県,42322,川棚町,かわたなちょう,129.8613889,33.07277778';
muniArray["42323"] = '42,長崎県,42323,波佐見町,はさみちょう,129.8955556,33.13805556';
muniArray["42383"] = '42,長崎県,42383,小値賀町,おぢかちょう,129.0591667,33.19111111';
muniArray["42391"] = '42,長崎県,42391,佐々町,さざちょう,129.6505556,33.23833333';
muniArray["42411"] = '42,長崎県,42411,新上五島町,しんかみごとうちょう,129.0733333,32.98444444';
muniArray["43100"] = '43,熊本県,43100,熊本市,くまもとし,130.7080556,32.80333333';
muniArray["43101"] = '43,熊本県,43101,熊本市　中央区,くまもとし　ちゅうおうく,130.708129,32.80328437';
muniArray["43102"] = '43,熊本県,43102,熊本市　東区,くまもとし　ひがしく,130.7672631,32.78026533';
muniArray["43103"] = '43,熊本県,43103,熊本市　西区,くまもとし　にしく,130.6475529,32.77648925';
muniArray["43104"] = '43,熊本県,43104,熊本市　南区,くまもとし　みなみく,130.6789092,32.71526057';
muniArray["43105"] = '43,熊本県,43105,熊本市　北区,くまもとし　きたく,130.694254,32.9036181';
muniArray["43202"] = '43,熊本県,43202,八代市,やつしろし,130.6019444,32.5075';
muniArray["43203"] = '43,熊本県,43203,人吉市,ひとよしし,130.7625,32.21';
muniArray["43204"] = '43,熊本県,43204,荒尾市,あらおし,130.4333333,32.98666667';
muniArray["43205"] = '43,熊本県,43205,水俣市,みなまたし,130.4088889,32.21194444';
muniArray["43206"] = '43,熊本県,43206,玉名市,たまなし,130.5597222,32.92805556';
muniArray["43208"] = '43,熊本県,43208,山鹿市,やまがし,130.6913889,33.01666667';
muniArray["43210"] = '43,熊本県,43210,菊池市,きくちし,130.8130556,32.97972222';
muniArray["43211"] = '43,熊本県,43211,宇土市,うとし,130.6586359,32.68722715';
muniArray["43212"] = '43,熊本県,43212,上天草市,かみあまくさし,130.4305556,32.5875';
muniArray["43213"] = '43,熊本県,43213,宇城市,うきし,130.6841667,32.64777778';
muniArray["43214"] = '43,熊本県,43214,阿蘇市,あそし,131.1213889,32.95222222';
muniArray["43215"] = '43,熊本県,43215,天草市,あまくさし,130.1930556,32.45861111';
muniArray["43216"] = '43,熊本県,43216,合志市,こうしし,130.7897222,32.88583333';
muniArray["43348"] = '43,熊本県,43348,美里町,みさとまち,130.7888889,32.63972222';
muniArray["43364"] = '43,熊本県,43364,玉東町,ぎょくとうまち,130.6286111,32.91888889';
muniArray["43367"] = '43,熊本県,43367,南関町,なんかんまち,130.5413889,33.06166667';
muniArray["43368"] = '43,熊本県,43368,長洲町,ながすまち,130.4527778,32.92972222';
muniArray["43369"] = '43,熊本県,43369,和水町,なごみまち,130.6058333,32.97805556';
muniArray["43403"] = '43,熊本県,43403,大津町,おおづまち,130.8683333,32.87888889';
muniArray["43404"] = '43,熊本県,43404,菊陽町,きくようまち,130.8286111,32.8625';
muniArray["43423"] = '43,熊本県,43423,南小国町,みなみおぐにまち,131.0708333,33.09833333';
muniArray["43424"] = '43,熊本県,43424,小国町,おぐにまち,131.0683333,33.12138889';
muniArray["43425"] = '43,熊本県,43425,産山村,うぶやまむら,131.2169444,32.99555556';
muniArray["43428"] = '43,熊本県,43428,高森町,たかもりまち,131.1219444,32.82722222';
muniArray["43432"] = '43,熊本県,43432,西原村,にしはらむら,130.9030556,32.83472222';
muniArray["43433"] = '43,熊本県,43433,南阿蘇村,みなみあそむら,131.0313889,32.8225';
muniArray["43441"] = '43,熊本県,43441,御船町,みふねまち,130.8019444,32.71444444';
muniArray["43442"] = '43,熊本県,43442,嘉島町,かしままち,130.7572222,32.74';
muniArray["43443"] = '43,熊本県,43443,益城町,ましきまち,130.8163889,32.79138889';
muniArray["43444"] = '43,熊本県,43444,甲佐町,こうさまち,130.8116667,32.65138889';
muniArray["43447"] = '43,熊本県,43447,山都町,やまとちょう,130.99,32.685';
muniArray["43468"] = '43,熊本県,43468,氷川町,ひかわちょう,130.6736111,32.5825';
muniArray["43482"] = '43,熊本県,43482,芦北町,あしきたまち,130.4930556,32.29888889';
muniArray["43484"] = '43,熊本県,43484,津奈木町,つなぎまち,130.4402778,32.23388889';
muniArray["43501"] = '43,熊本県,43501,錦町,にしきまち,130.8411111,32.20111111';
muniArray["43505"] = '43,熊本県,43505,多良木町,たらぎまち,130.9358333,32.26416667';
muniArray["43506"] = '43,熊本県,43506,湯前町,ゆのまえまち,130.9811111,32.27611111';
muniArray["43507"] = '43,熊本県,43507,水上村,みずかみむら,131.0094444,32.31444444';
muniArray["43510"] = '43,熊本県,43510,相良村,さがらむら,130.7980556,32.23527778';
muniArray["43511"] = '43,熊本県,43511,五木村,いつきむら,130.8277778,32.39694444';
muniArray["43512"] = '43,熊本県,43512,山江村,やまえむら,130.7672222,32.24638889';
muniArray["43513"] = '43,熊本県,43513,球磨村,くまむら,130.6513889,32.25277778';
muniArray["43514"] = '43,熊本県,43514,あさぎり町,あさぎりちょう,130.8980556,32.24027778';
muniArray["43531"] = '43,熊本県,43531,苓北町,れいほくまち,130.0547222,32.51305556';
muniArray["44201"] = '44,大分県,44201,大分市,おおいたし,131.6097222,33.23944444';
muniArray["44202"] = '44,大分県,44202,別府市,べっぷし,131.4911111,33.28472222';
muniArray["44203"] = '44,大分県,44203,中津市,なかつし,131.1883333,33.59833333';
muniArray["44204"] = '44,大分県,44204,日田市,ひたし,130.9413889,33.32111111';
muniArray["44205"] = '44,大分県,44205,佐伯市,さいきし,131.8994444,32.96027778';
muniArray["44206"] = '44,大分県,44206,臼杵市,うすきし,131.8047222,33.12583333';
muniArray["44207"] = '44,大分県,44207,津久見市,つくみし,131.8611111,33.0725';
muniArray["44208"] = '44,大分県,44208,竹田市,たけたし,131.3983333,32.97305556';
muniArray["44209"] = '44,大分県,44209,豊後高田市,ぶんごたかだし,131.4447222,33.55722222';
muniArray["44210"] = '44,大分県,44210,杵築市,きつきし,131.6161111,33.41694444';
muniArray["44211"] = '44,大分県,44211,宇佐市,うさし,131.3494444,33.53194444';
muniArray["44212"] = '44,大分県,44212,豊後大野市,ぶんごおおのし,131.585,32.97805556';
muniArray["44213"] = '44,大分県,44213,由布市,ゆふし,131.4266667,33.18';
muniArray["44214"] = '44,大分県,44214,国東市,くにさきし,131.7316667,33.56527778';
muniArray["44322"] = '44,大分県,44322,姫島村,ひめしまむら,131.6452778,33.72444444';
muniArray["44341"] = '44,大分県,44341,日出町,ひじまち,131.5325,33.36944444';
muniArray["44461"] = '44,大分県,44461,九重町,ここのえまち,131.1888889,33.22833333';
muniArray["44462"] = '44,大分県,44462,玖珠町,くすまち,131.1513889,33.28333333';
muniArray["45201"] = '45,宮崎県,45201,宮崎市,みやざきし,131.4202778,31.90777778';
muniArray["45202"] = '45,宮崎県,45202,都城市,みやこのじょうし,131.0616667,31.71972222';
muniArray["45203"] = '45,宮崎県,45203,延岡市,のべおかし,131.665,32.58222222';
muniArray["45204"] = '45,宮崎県,45204,日南市,にちなんし,131.3788889,31.60194444';
muniArray["45205"] = '45,宮崎県,45205,小林市,こばやしし,130.9727778,31.99666667';
muniArray["45206"] = '45,宮崎県,45206,日向市,ひゅうがし,131.6238889,32.42277778';
muniArray["45207"] = '45,宮崎県,45207,串間市,くしまし,131.2286111,31.46472222';
muniArray["45208"] = '45,宮崎県,45208,西都市,さいとし,131.4013889,32.10861111';
muniArray["45209"] = '45,宮崎県,45209,えびの市,えびのし,130.8111111,32.04555556';
muniArray["45341"] = '45,宮崎県,45341,三股町,みまたちょう,131.125,31.73083333';
muniArray["45361"] = '45,宮崎県,45361,高原町,たかはるちょう,131.0077778,31.92833333';
muniArray["45382"] = '45,宮崎県,45382,国富町,くにとみちょう,131.3236111,31.99055556';
muniArray["45383"] = '45,宮崎県,45383,綾町,あやちょう,131.2530556,31.99916667';
muniArray["45401"] = '45,宮崎県,45401,高鍋町,たかなべちょう,131.5033333,32.12833333';
muniArray["45402"] = '45,宮崎県,45402,新富町,しんとみちょう,131.4877778,32.06888889';
muniArray["45403"] = '45,宮崎県,45403,西米良村,にしめらそん,131.1544444,32.22638889';
muniArray["45404"] = '45,宮崎県,45404,木城町,きじょうちょう,131.4733333,32.16388889';
muniArray["45405"] = '45,宮崎県,45405,川南町,かわみなみちょう,131.5258333,32.19194444';
muniArray["45406"] = '45,宮崎県,45406,都農町,つのちょう,131.5597222,32.25666667';
muniArray["45421"] = '45,宮崎県,45421,門川町,かどがわちょう,131.6488889,32.46972222';
muniArray["45429"] = '45,宮崎県,45429,諸塚村,もろつかそん,131.3302778,32.51222222';
muniArray["45430"] = '45,宮崎県,45430,椎葉村,しいばそん,131.1575,32.46666667';
muniArray["45431"] = '45,宮崎県,45431,美郷町,みさとちょう,131.4233333,32.44027778';
muniArray["45441"] = '45,宮崎県,45441,高千穂町,たかちほちょう,131.3077778,32.71166667';
muniArray["45442"] = '45,宮崎県,45442,日之影町,ひのかげちょう,131.3880556,32.65388889';
muniArray["45443"] = '45,宮崎県,45443,五ヶ瀬町,ごかせちょう,131.1961111,32.68305556';
muniArray["46201"] = '46,鹿児島県,46201,鹿児島市,かごしまし,130.5572222,31.59694444';
muniArray["46203"] = '46,鹿児島県,46203,鹿屋市,かのやし,130.8522222,31.37833333';
muniArray["46204"] = '46,鹿児島県,46204,枕崎市,まくらざきし,130.2969444,31.27277778';
muniArray["46206"] = '46,鹿児島県,46206,阿久根市,あくねし,130.1927778,32.01444444';
muniArray["46208"] = '46,鹿児島県,46208,出水市,いずみし,130.3527778,32.09055556';
muniArray["46210"] = '46,鹿児島県,46210,指宿市,いぶすきし,130.6330556,31.25277778';
muniArray["46213"] = '46,鹿児島県,46213,西之表市,にしのおもてし,130.9975,30.7325';
muniArray["46214"] = '46,鹿児島県,46214,垂水市,たるみずし,130.7011111,31.49277778';
muniArray["46215"] = '46,鹿児島県,46215,薩摩川内市,さつませんだいし,130.3041667,31.81333333';
muniArray["46216"] = '46,鹿児島県,46216,日置市,ひおきし,130.4022222,31.63361111';
muniArray["46217"] = '46,鹿児島県,46217,曽於市,そおし,131.0191667,31.65361111';
muniArray["46218"] = '46,鹿児島県,46218,霧島市,きりしまし,130.7630556,31.74111111';
muniArray["46219"] = '46,鹿児島県,46219,いちき串木野市,いちきくしきのし,130.2719444,31.71472222';
muniArray["46220"] = '46,鹿児島県,46220,南さつま市,みなみさつまし,130.3233333,31.41666667';
muniArray["46221"] = '46,鹿児島県,46221,志布志市,しぶしし,131.0455556,31.49527778';
muniArray["46222"] = '46,鹿児島県,46222,奄美市,あまみし,129.4938889,28.37722222';
muniArray["46223"] = '46,鹿児島県,46223,南九州市,みなみきゅうしゅうし,130.4416667,31.37833333';
muniArray["46224"] = '46,鹿児島県,46224,伊佐市,いさし,130.6130556,32.05722222';
muniArray["46225"] = '46,鹿児島県,46225,姶良市,あいらし,130.6277778,31.72833333';
muniArray["46303"] = '46,鹿児島県,46303,三島村,みしまむら,130.5608333,31.59444444';
muniArray["46304"] = '46,鹿児島県,46304,十島村,としまむら,130.5605556,31.59305556';
muniArray["46392"] = '46,鹿児島県,46392,さつま町,さつまちょう,130.4552778,31.90638889';
muniArray["46404"] = '46,鹿児島県,46404,長島町,ながしまちょう,130.1769444,32.19916667';
muniArray["46452"] = '46,鹿児島県,46452,湧水町,ゆうすいちょう,130.7211111,31.95166667';
muniArray["46468"] = '46,鹿児島県,46468,大崎町,おおさきちょう,131.0058333,31.42916667';
muniArray["46482"] = '46,鹿児島県,46482,東串良町,ひがしくしらちょう,130.9733333,31.38583333';
muniArray["46490"] = '46,鹿児島県,46490,錦江町,きんこうちょう,130.7877778,31.24361111';
muniArray["46491"] = '46,鹿児島県,46491,南大隅町,みなみおおすみちょう,130.7683333,31.21722222';
muniArray["46492"] = '46,鹿児島県,46492,肝付町,きもつきちょう,130.9452778,31.34472222';
muniArray["46501"] = '46,鹿児島県,46501,中種子町,なかたねちょう,130.9586111,30.53305556';
muniArray["46502"] = '46,鹿児島県,46502,南種子町,みなみたねちょう,130.9008333,30.41361111';
muniArray["46505"] = '46,鹿児島県,46505,屋久島町,やくしまちょう,130.665,30.37111111';
muniArray["46523"] = '46,鹿児島県,46523,大和村,やまとそん,129.3952778,28.35805556';
muniArray["46524"] = '46,鹿児島県,46524,宇検村,うけんそん,129.2975,28.28083333';
muniArray["46525"] = '46,鹿児島県,46525,瀬戸内町,せとうちちょう,129.3147222,28.14638889';
muniArray["46527"] = '46,鹿児島県,46527,龍郷町,たつごうちょう,129.5894444,28.41305556';
muniArray["46529"] = '46,鹿児島県,46529,喜界町,きかいちょう,129.94,28.31694444';
muniArray["46530"] = '46,鹿児島県,46530,徳之島町,とくのしまちょう,129.0186111,27.72666667';
muniArray["46531"] = '46,鹿児島県,46531,天城町,あまぎちょう,128.8977778,27.80916667';
muniArray["46532"] = '46,鹿児島県,46532,伊仙町,いせんちょう,128.9375,27.67361111';
muniArray["46533"] = '46,鹿児島県,46533,和泊町,わどまりちょう,128.6552778,27.39222222';
muniArray["46534"] = '46,鹿児島県,46534,知名町,ちなちょう,128.5736111,27.33361111';
muniArray["46535"] = '46,鹿児島県,46535,与論町,よろんちょう,128.4147222,27.04861111';
muniArray["47201"] = '47,沖縄県,47201,那覇市,なはし,127.688855,26.22880945';
muniArray["47205"] = '47,沖縄県,47205,宜野湾市,ぎのわんし,127.7783333,26.28166667';
muniArray["47207"] = '47,沖縄県,47207,石垣市,いしがきし,124.1555556,24.34055556';
muniArray["47208"] = '47,沖縄県,47208,浦添市,うらそえし,127.7219444,26.24583333';
muniArray["47209"] = '47,沖縄県,47209,名護市,なごし,127.9775,26.59166667';
muniArray["47210"] = '47,沖縄県,47210,糸満市,いとまんし,127.6658333,26.12361111';
muniArray["47211"] = '47,沖縄県,47211,沖縄市,おきなわし,127.8055556,26.33416667';
muniArray["47212"] = '47,沖縄県,47212,豊見城市,とみぐすくし,127.6688889,26.16111111';
muniArray["47213"] = '47,沖縄県,47213,うるま市,うるまし,127.8575,26.37916667';
muniArray["47214"] = '47,沖縄県,47214,宮古島市,みやこじまし,125.2811111,24.80555556';
muniArray["47215"] = '47,沖縄県,47215,南城市,なんじょうし,127.7669444,26.14444444';
muniArray["47301"] = '47,沖縄県,47301,国頭村,くにがみそん,128.1780556,26.74583333';
muniArray["47302"] = '47,沖縄県,47302,大宜味村,おおぎみそん,128.1202778,26.70166667';
muniArray["47303"] = '47,沖縄県,47303,東村,ひがしそん,128.1569444,26.63333333';
muniArray["47306"] = '47,沖縄県,47306,今帰仁村,なきじんそん,127.9727778,26.6825';
muniArray["47308"] = '47,沖縄県,47308,本部町,もとぶちょう,127.8980556,26.65805556';
muniArray["47311"] = '47,沖縄県,47311,恩納村,おんなそん,127.8536111,26.4975';
muniArray["47313"] = '47,沖縄県,47313,宜野座村,ぎのざそん,127.9755556,26.48166667';
muniArray["47314"] = '47,沖縄県,47314,金武町,きんちょう,127.9261111,26.45611111';
muniArray["47315"] = '47,沖縄県,47315,伊江村,いえそん,127.8072222,26.71333333';
muniArray["47324"] = '47,沖縄県,47324,読谷村,よみたんそん,127.7444444,26.39611111';
muniArray["47325"] = '47,沖縄県,47325,嘉手納町,かでなちょう,127.7552778,26.36166667';
muniArray["47326"] = '47,沖縄県,47326,北谷町,ちゃたんちょう,127.7638889,26.32';
muniArray["47327"] = '47,沖縄県,47327,北中城村,きたなかぐすくそん,127.7930556,26.30111111';
muniArray["47328"] = '47,沖縄県,47328,中城村,なかぐすくそん,127.7911111,26.26722222';
muniArray["47329"] = '47,沖縄県,47329,西原町,にしはらちょう,127.7655556,26.22611111';
muniArray["47348"] = '47,沖縄県,47348,与那原町,よなばるちょう,127.7547222,26.19944444';
muniArray["47350"] = '47,沖縄県,47350,南風原町,はえばるちょう,127.7286111,26.19111111';
muniArray["47353"] = '47,沖縄県,47353,渡嘉敷村,とかしきそん,127.3644444,26.1975';
muniArray["47354"] = '47,沖縄県,47354,座間味村,ざまみそん,127.3033333,26.22888889';
muniArray["47355"] = '47,沖縄県,47355,粟国村,あぐにそん,127.2272222,26.5825';
muniArray["47356"] = '47,沖縄県,47356,渡名喜村,となきそん,127.1411111,26.37222222';
muniArray["47357"] = '47,沖縄県,47357,南大東村,みなみだいとうそん,131.2319444,25.82888889';
muniArray["47358"] = '47,沖縄県,47358,北大東村,きただいとうそん,131.2988889,25.94583333';
muniArray["47359"] = '47,沖縄県,47359,伊平屋村,いへやそん,127.9686111,27.03916667';
muniArray["47360"] = '47,沖縄県,47360,伊是名村,いぜなそん,127.9411111,26.92833333';
muniArray["47361"] = '47,沖縄県,47361,久米島町,くめじまちょう,126.805,26.34083333';
muniArray["47362"] = '47,沖縄県,47362,八重瀬町,やえせちょう,127.7425,26.12166667';
muniArray["47375"] = '47,沖縄県,47375,多良間村,たらまそん,124.7016667,24.66944444';
muniArray["47381"] = '47,沖縄県,47381,竹富町,たけとみちょう,124.1544444,24.33972222';
muniArray["47382"] = '47,沖縄県,47382,与那国町,よなぐにちょう,123.0047222,24.46805556';
//
// @source = GsiJsLibrary.js
//
//**************************************
//
//  コンストラクタ
//
//**************************************
GsiJsLibrary = function(arg1, arg2, arg3) {
    if (arg2 == undefined) arg2 = '';
    if (arg3 == undefined) arg3 = '';
    this.arg1 = arg1;
    this.arg2 = arg2;
    this.arg3 = arg3;
};

GsiJsLibrary.prototype = {

    //**************************************
    //
    //  市区町村リスト作成
    //
    //**************************************
    getMunicipalityList : function(){

        var responseData = '';
        var xmlHttp;
        var searchFlg;
        var count = 0;
        var lineData = '';
        var jsonData = '';
        var xmlData = '';
        var muniData = muniArray;

        if(this.arg1 == null || this.arg1 == ''){
            // arg1がnull、または空欄の場合、処理を終了する
            return '';
        } else{
            // arg1が数字かどうか判定
            if(isNaN(this.arg1)){
                // 都道府県名だった場合
                searchFlg = 1;
                if(this.arg1.length < 2){
                    // 都道府県名が1文字以下の場合、県名を
                    // 1つに特定することは困難なため、処理を終了する
                    return '';
                }
            } else{
                // 都道府県コードだった場合
                searchFlg = 0;
            }
        }
// bug fix 2012/10/4 start muni.dat->muni.jsに変更し、htmlの冒頭で読み込ませる方法に変更
//      xmlHttp.open("GET", root() + "/muni.dat", false);
//      xmlHttp.send(null);
//      responseData = xmlHttp.responseText;
//      muniData = responseData.split("\n");
// bug fix 2012/10/4 end

        if(this.arg2 == ''){
            // this.arg2が未指定の場合はJSON形式でデータを作成
            for(i in muniData){
                if(muniData[i] != ''){
                    lineData = muniData[i].split(",");

                    // 検索条件が都道府県コードだった場合
                    if(searchFlg == 0){
                        // 検索条件が都道府県コードだった場合
                        // 都道府県コードを2桁で0埋めし、第1引数の都道府県コード(this.arg1)と比較
                        if(('00' + lineData[0]).slice(-2) == ('00' + this.arg1).slice(-2)){
                            // 都道府県コードが一致したら、jsonデータを作成
                            if(count == 0){
                                jsonData += '{"result":['
                            } else{
                                jsonData += ','
                            }
                            jsonData += '{"muniCd":"' + lineData[2]
                                        + '","muniNm":"' + lineData[3]
                                        + '","muniKana":"' + lineData[4]
                                        + '","longitude":' + lineData[5]
                                        + ' ,"latitude":' + lineData[6] + '}';
                            count++;
                        }
                    // 検索条件が都道府県名だった場合
                    } else{
                        // 都道府県名で検索(前方一致)
                        if((" " + lineData[1]).indexOf(" " + this.arg1) != -1){
                            // 都道府県名が一致したら、jsonデータを作成
                            if(count == 0){
                                jsonData += '{"result":['
                            } else{
                                jsonData += ','
                            }
                            jsonData += '{"muniCd":"' + lineData[2]
                                        + '","muniNm":"' + lineData[3]
                                        + '","muniKana":"' + lineData[4]
                                        + '","longitude":' + lineData[5]
                                        + ' ,"latitude":' + lineData[6] + '}';
                            count++;
                        }
                    }
                }
            }
            if(count > 0){
                jsonData += ']}'
            }
            // 結果を返す
            return jsonData;

        } else if(this.arg2 == 'xml') {
            // this.arg2に[xml]と指定がある場合は、XML形式でデータを作成
            var result = document.createElement('result');
            var record  = document.createElement('record');
            var code, name, kana, lon, lan;
            var xml = '';
            xml += "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";

            // 検索条件が都道府県コードだった場合
            if(searchFlg == 0){
                for(i in muniData){
                    lineData = muniData[i].split(",");
                    if(muniData[i] != ''){
                        // 都道府県コードを2桁で0埋めし、第1引数の都道府県コード(this.arg1)と比較
                        if(('00' + lineData[0]).slice(-2) == ('00' + this.arg1).slice(-2)){
                            // 都道府県コードが一致したら、xmlデータを作成
                            code = document.createElement('muniCd');
                            code.appendChild(document.createTextNode(lineData[2]));
                            record.appendChild(code);

                            name = document.createElement('muniNm');
                            name.appendChild(document.createTextNode(lineData[3]));
                            record.appendChild(name);

                            kana = document.createElement('muniKana');
                            kana.appendChild(document.createTextNode(lineData[4]));
                            record.appendChild(kana);

                            lon = document.createElement('longitude');
                            lon.appendChild(document.createTextNode(lineData[5]));
                            record.appendChild(lon);

                            lan = document.createElement('latitude');
                            lan.appendChild(document.createTextNode(lineData[6]));
                            record.appendChild(lan);

                            if(window.XMLSerializer){
                              // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                              xml = new XMLSerializer().serializeToString(record);
                            } else if(record.outerHTML){
                              // 使用ブラウザがIEの場合
                              result.appendChild(record);
                            } else{
                                // ブラウザが判断できない場合は、処理を終了する
                                return '';
                            }
                        }
                    }
                }
            // 検索条件が都道府県名だった場合
            } else{
                for(i in muniData){
                    lineData = muniData[i].split(",");
                    if(muniData[i] != ''){
                        // 都道府県名で検索(前方一致)
                        if((" " + lineData[1]).indexOf(" " + this.arg1) != -1){
                            // 都道府県名が一致したら、xmlデータを作成
                            code = document.createElement('muniCd');
                            code.appendChild(document.createTextNode(lineData[2]));
                            record.appendChild(code);

                            name = document.createElement('muniNm');
                            name.appendChild(document.createTextNode(lineData[3]));
                            record.appendChild(name);

                            kana = document.createElement('muniKana');
                            kana.appendChild(document.createTextNode(lineData[4]));
                            record.appendChild(kana);

                            lon = document.createElement('longitude');
                            lon.appendChild(document.createTextNode(lineData[5]));
                            record.appendChild(lon);

                            lan = document.createElement('latitude');
                            lan.appendChild(document.createTextNode(lineData[6]));
                            record.appendChild(lan);

                            result.appendChild(record);
                        }
                    }
                }
            }

            if(window.XMLSerializer){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                xml += new XMLSerializer().serializeToString(record);
            } else if(record.outerHTML){
                // 使用ブラウザがIEの場合
                xml += result.outerHTML;
            } else{
                // ブラウザが判断できない場合は、処理を終了する
                return '';
            }

            if(window.DOMParser){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                var xmldom = new DOMParser();
                xmldom.async = false;
                var dom = xmldom.parseFromString(xml, "application/xml");
                if (!dom) return '';
                xmlData = document.createElement("result");
                xmlData.innerHTML = xml;

            } else if(window.ActiveXObject){
                // 使用ブラウザがIEの場合
                var xmldom = new ActiveXObject('MSXML2.DOMDocument.6.0');
                xmldom.async = false;
                xmldom.loadXML(xml);
                xmlData = xmldom.documentElement;
            }
            // 結果を返す
            return xmlData;

        } else {
            // this.arg2の指定が未指定と[xml]以外は、データを作成しない
            return '';
        }
    },

    //**************************************
    //
    //  市区町村データ(単一)作成
    //
    //**************************************
    getMunicipality : function(){

        var responseData = '';
        var xmlHttp;
        var searchFlg;
        var count = 0;
        var lineData = '';
        var jsonData = '';
        var xmlData = '';
        var muniData = muniArray;

        if(this.arg1 == null || this.arg1 == ''){
            // 市区町村コード(arg1)がnull、または空欄の場合、処理を終了する
            return '';
        }
// bug fix 2012/10/4 start muni.dat->muni.jsに変更し、htmlの冒頭で読み込ませる方法に変更
//      xmlHttp.open("GET", root() + "/muni.dat", false);
//      xmlHttp.send(null);
//      responseData = xmlHttp.responseText;
//      muniData = responseData.split("\n");
// bug fix 2012/10/4 end
        if(this.arg2 == ''){
            // this.arg2が未指定の場合はJSON形式でデータを作成
            for(i in muniData){
                lineData = muniData[i].split(",");
                if(muniData[i] != ''){
                    // 市区町村コードを2桁で0埋めし、第1引数の市区町村コード(this.arg1)と比較
                    if(('00' + lineData[2]).slice(-5) == ('00' + this.arg1).slice(-5)){
                        // 市区町村コードが一致したら、jsonデータを作成
                        if(count == 0){
                            jsonData += '{"result":['
                        } else{
                            jsonData += ','
                        }
                        jsonData += '{"prefNm":"' + lineData[1]
                                    + '","muniCd":"' + lineData[2]
                                    + '","muniNm":"' + lineData[3]
                                    + '","muniKana":"' + lineData[4]
                                    + '","longitude":' + lineData[5]
                                    + ' ,"latitude":' + lineData[6] + '}';
                        count++;
                    }
                }
            }
            if(count > 0){
                jsonData += ']}'
            }
            // 結果を返す
            return jsonData;

        } else if(this.arg2 == 'xml') {
            // this.arg2に[xml]と指定がある場合は、XML形式でデータを作成
            var result = document.createElement('result');
            var record  = document.createElement('record');
            var code, name, kana, lon, lan;
            var xml = '';
            var xml = xml + "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";

            for(i in muniData){
                lineData = muniData[i].split(",");
                if(muniData[i] != ''){
                    // 市区町村コードを2桁で0埋めし、第1引数の市区町村コード(this.arg1)と比較
                    if(('00' + lineData[2]).slice(-5) == ('00' + this.arg1).slice(-5)){
                        // 市区町村コードが一致したら、xmlデータを作成
                        code = document.createElement('prefNm');
                        code.appendChild(document.createTextNode(lineData[1]));
                        record.appendChild(code);
                        
                        code = document.createElement('muniCd');
                        code.appendChild(document.createTextNode(lineData[2]));
                        record.appendChild(code);

                        name = document.createElement('muniNm');
                        name.appendChild(document.createTextNode(lineData[3]));
                        record.appendChild(name);

                        kana = document.createElement('muniKana');
                        kana.appendChild(document.createTextNode(lineData[4]));
                        record.appendChild(kana);

                        lon = document.createElement('longitude');
                        lon.appendChild(document.createTextNode(lineData[5]));
                        record.appendChild(lon);

                        lan = document.createElement('latitude');
                        lan.appendChild(document.createTextNode(lineData[6]));
                        record.appendChild(lan);

                        result.appendChild(record);
                    }
                }
            }

            if(window.XMLSerializer){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                xml += new XMLSerializer().serializeToString(record);
            } else if(record.outerHTML){
                // 使用ブラウザがIEの場合
                xml += result.outerHTML;
            } else{
                // ブラウザが判断できない場合は、処理を終了する
                return '';
            }

            if(window.DOMParser){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                var xmldom = new DOMParser();
                xmldom.async = false;
                var dom = xmldom.parseFromString(xml, "application/xml");
                if (!dom) return '';
                xmlData = document.createElement("result");
                xmlData.innerHTML = xml;

            } else if(window.ActiveXObject){
                // 使用ブラウザがIEの場合
                var xmldom = new ActiveXObject('MSXML2.DOMDocument.6.0');
                xmldom.async = false;
                xmldom.loadXML(xml);
                xmlData = xmldom.documentElement;
            }
            // 結果を返す
            return xmlData;

        } else {
            // this.arg2の指定が未指定と[xml]以外は、データを作成しない
            return '';
        }
    },

    //**************************************
    //
    //  磁北角作成
    //
    //**************************************
    getNorthAngle : function(){

        if(this.arg1 == null || this.arg1 == ''){
            // 経度(arg1)がnull、または空欄の場合、処理を終了する
            return '';
        } else if(this.arg2 == null || this.arg2 == ''){
            // 緯度(arg2)がnull、または空欄の場合、処理を終了する
            return '';
        }
        if(isNaN(this.arg1)){
            // 経度(arg1)が数値でない場合、処理を終了する
            return '';
        } else if(isNaN(this.arg2)){
            // 緯度(arg2)が数値でない場合、処理を終了する
            return '';
        }

        var lonVal = this.arg1 - 138;
        var lanVal = this.arg2 - 37;
        var resultAngle;
        var jsonData = '';
        var xmlData = '';

        // 磁北角の計算
        var resultAngle = (7+40.644/60)
                         + ((18.976/60) * lanVal)
                         - ((6.224/60) * lonVal)
                         + ((0.003/60) * lanVal * lanVal)
                         + ((0.024/60) * lanVal * lonVal)
                         + ((0.586/60) * lonVal * lonVal);

        if(this.arg3 == ''){
            // arg3が未指定の場合はJSON形式でデータを作成
            jsonData += '{"northAngle":"' + resultAngle + '"}';
            return jsonData;

        } else if(this.arg3 == 'xml') {
            // arg3に[xml]と指定がある場合は、XML形式でデータを作成
            var result = document.createElement('result');
            var record  = document.createElement('record');
            var angle = document.createElement('northAngle');
            angle.appendChild(document.createTextNode(resultAngle));
            record.appendChild(angle);
            result.appendChild(record);

            var xml = '';
            xml = xml + "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
            if(window.XMLSerializer){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                xml += new XMLSerializer().serializeToString(record);
            } else if(result.outerHTML){
                // 使用ブラウザがIEの場合
                xml += result.outerHTML;
            } else{
                // ブラウザが判断できない場合は、処理を終了する
                return '';
            }
            if(window.DOMParser){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                var xmldom = new DOMParser();
                xmldom.async = false;
                var dom = xmldom.parseFromString(xml, "application/xml");
                if (!dom) return '';
                xmlData = document.createElement("result");
                xmlData.innerHTML = xml;

            } else if(window.ActiveXObject){
                // 使用ブラウザがIEの場合
                var xmldom = new ActiveXObject('MSXML2.DOMDocument.6.0');
                xmldom.async = false;
                xmldom.loadXML(xml);
                xmlData = xmldom.documentElement;
            }
            // 結果を返す
            return xmlData;

        } else {
            // arg3の指定が未指定と[xml]以外は、データを作成しない
            return '';
        }
    },
    
    //**************************************
    //
    //  北海道の市区町村リスト(振興局順)作成
    //
    //**************************************
    getHokkaidoMuniList : function(){

        var responseData = '';
        var xmlHttp;
        var searchFlg;
        var count = 0;
        var lineData = '';
        var jsonData = '';
        var xmlData = '';
        var muniData = hokkaidoArray;

        if(this.arg2 == ''){
            // this.arg2が未指定の場合はJSON形式でデータを作成
            for(i in muniData){
                if(muniData[i]){
                    lineData = muniData[i].split(",");

                    if(count == 0){
                        jsonData += '{"result":['
                    } else{
                        jsonData += ','
                    }

                    jsonData += '{"muniCd":"' + lineData[2]
                                + '","muniNm":"' + lineData[3]
                                + '","muniKana":"' + lineData[4]
                                + '","longitude":' + lineData[5]
                                + ' ,"latitude":' + lineData[6] + '}';
                    count++;
                }
            }
            if(count > 0){
                jsonData += ']}'
            }
            // 結果を返す
            return jsonData;

        } else if(this.arg2 == 'xml') {
            // this.arg2に[xml]と指定がある場合は、XML形式でデータを作成
            var result = document.createElement('result');
            var record  = document.createElement('record');
            var code, name, kana, lon, lan;
            var xml = '';
            xml += "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";

            for(i in muniData){
                lineData = muniData[i].split(",");
                if(muniData[i]){
                    // xmlデータを作成
                    code = document.createElement('muniCd');
                    code.appendChild(document.createTextNode(lineData[2]));
                    record.appendChild(code);

                    name = document.createElement('muniNm');
                    name.appendChild(document.createTextNode(lineData[3]));
                    record.appendChild(name);

                    kana = document.createElement('muniKana');
                    kana.appendChild(document.createTextNode(lineData[4]));
                    record.appendChild(kana);

                    lon = document.createElement('longitude');
                    lon.appendChild(document.createTextNode(lineData[5]));
                    record.appendChild(lon);

                    lan = document.createElement('latitude');
                    lan.appendChild(document.createTextNode(lineData[6]));
                    record.appendChild(lan);

                    result.appendChild(record);
                }
            }

            if(window.XMLSerializer){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                xml += new XMLSerializer().serializeToString(record);
            } else if(record.outerHTML){
                // 使用ブラウザがIEの場合
                xml += result.outerHTML;
            } else{
                // ブラウザが判断できない場合は、処理を終了する
                return '';
            }

            if(window.DOMParser){
                // 使用ブラウザがFireFox, Google Chrome, Safariの場合
                var xmldom = new DOMParser();
                xmldom.async = false;
                var dom = xmldom.parseFromString(xml, "application/xml");
                if (!dom) return '';
                xmlData = document.createElement("result");
                xmlData.innerHTML = xml;

            } else if(window.ActiveXObject){
                // 使用ブラウザがIEの場合
                var xmldom = new ActiveXObject('MSXML2.DOMDocument.6.0');
                xmldom.async = false;
                xmldom.loadXML(xml);
                xmlData = xmldom.documentElement;
            }
            // 結果を返す
            return xmlData;

        } else {
            // this.arg2の指定が未指定と[xml]以外は、データを作成しない
            return '';
        }
    }
};

//**************************************
//
//  ドキュメントルート取得用関数
//
//**************************************
/*
function root(){
    // JavaScript設置パス（絶対パス表記）
    var set_js_path = '/GsiJsLibrary/';
    // スクリプト名
    var set_script_name ='GsiJsLibrary.js';

    // パスを取得
    var script_path;
    var re = new RegExp( '(.+)'+ set_script_name + '$', "i");
    var scripts = document.getElementsByTagName("script");
    var i = scripts.length;
    while (i--) {
        var m = scripts[i].src.match(re);
        if ( m ) {
            script_path = m[1];
            script_path = script_path.replace(/\/$/,'');
            break;
        }
    }
    return script_path;
}
*/
//
// @source = convertJsonToGEOJson.js
//

//中心、半径から円データをポリゴンデータ(正72角形)に変換
function calcDistantCoordinate(centerx, centery, radiusByMeter){
	var lonlat = new Array();
	var lonlatList = new Array();

	var a = 6378137.0;
	var lonRad = centerx * Math.PI / 180.0;
	var latRad = centery * Math.PI / 180.0;

	for (var deg = 0; deg <= 360; deg += 5) {
		var rad = deg / 180.0 * Math.PI;
		var dx = Math.cos(rad) * radiusByMeter;
		var dy = Math.sin(rad) * radiusByMeter;

		var nlon = (dx / (a * Math.cos(latRad)) + lonRad) * (180.0 / Math.PI);
		var nlat = (dy / a + latRad) * (180.0 / Math.PI);
		
		lonlat = new Array();
		
		lonlat[0] = nlon;
		lonlat[1] = nlat;
		
		lonlatList[parseInt(deg/5)] = lonlat;
	}
	
	return lonlatList;
}

//10進数 10より小さいときは、スペースを付加
function padDigit(val, padLen, pad) {
	var str = val + "";

	while (str.length < padLen) {
		str = pad + str;
	}
	return str;
};


//rgbを16進数に変換
function deciColorToHex(colorStr){
	var rgb = colorStr.split(",");
	var r = parseInt(rgb[0],10);
	var g = parseInt(rgb[1],10);
	var b = parseInt(rgb[2],10);
	return ("#"+padDigit(r.toString(16),2,"0")+padDigit(g.toString(16),2,"0")+padDigit(b.toString(16),2,"0")).toUpperCase();
}


function convertGeoJSON(json){
	var fromObj = JSON.parse(json);

	var layerNode = [];

	for (i = 0; i < fromObj.layer.length; i++){
		var layer =  fromObj.layer[i];
		var dataNode = [];
		
		for  (j = 0; j < layer.data.length; j++){
			var data = {};
			var geoNode = {};
			
			if ( layer.data[j].geometry.type == "Circle"){
				geoNode.type = "Polygon";
				var coordinates = new Array();
				coordinates[0] = calcDistantCoordinate(layer.data[j].geometry.coordinates[0], layer.data[j].geometry.coordinates[1], layer.data[j].geometry.circle);
				geoNode.coordinates = coordinates;
			} else {
				geoNode =  layer.data[j].geometry;
			}
			
			data.name =  layer.data[j].name;
			data.type =  layer.data[j].type;
			data.geometry = geoNode;
			if (layer.data[j].properties){
				data.properties = layer.data[j].properties
			}
			
			dataNode[j] = data;
		}

		var styleNode = layer.style;
		if (layer.style.fillColor){
			styleNode.fillColor = deciColorToHex(layer.style.fillColor);
		}
		if (layer.style.strokeColor){
			styleNode.strokeColor = deciColorToHex(layer.style.strokeColor);
		}
		if (layer.style.fontColor){
			styleNode.fontColor = deciColorToHex(layer.style.fontColor);
		}

		layerNode[i] = {
			"name" : layer.name,
			"style" : styleNode,
			"data" : dataNode
		};
	}
	
	var topNode = new Array({"layer":layerNode});
	
	var result = JSON.stringify(topNode);
	result = result.substring(1,result.length-1);
	result = result.substring(result.indexOf("{"),result.lastIndexOf("}")+1);
	return result;
}

//
// @source = jquery.ba-postmessage.js
//
/*!
 * jQuery postMessage - v0.5 - 9/11/2009
 * http://benalman.com/projects/jquery-postmessage-plugin/
 * 
 * Copyright (c) 2009 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery postMessage: Cross-domain scripting goodness
//
// *Version: 0.5, Last updated: 9/11/2009*
// 
// Project Home - http://benalman.com/projects/jquery-postmessage-plugin/
// GitHub       - http://github.com/cowboy/jquery-postmessage/
// Source       - http://github.com/cowboy/jquery-postmessage/raw/master/jquery.ba-postmessage.js
// (Minified)   - http://github.com/cowboy/jquery-postmessage/raw/master/jquery.ba-postmessage.min.js (0.9kb)
// 
// About: License
// 
// Copyright (c) 2009 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
// 
// About: Examples
// 
// This working example, complete with fully commented code, illustrates one
// way in which this plugin can be used.
// 
// Iframe resizing - http://benalman.com/code/projects/jquery-postmessage/examples/iframe/
// 
// About: Support and Testing
// 
// Information about what version or versions of jQuery this plugin has been
// tested with and what browsers it has been tested in.
// 
// jQuery Versions - 1.3.2
// Browsers Tested - Internet Explorer 6-8, Firefox 3, Safari 3-4, Chrome, Opera 9.
// 
// About: Release History
// 
// 0.5 - (9/11/2009) Improved cache-busting
// 0.4 - (8/25/2009) Initial release

(function($){
  '$:nomunge'; // Used by YUI compressor.
  
  // A few vars used in non-awesome browsers.
  var interval_id,
    last_hash,
    cache_bust = 1,
    
    // A var used in awesome browsers.
    rm_callback,
    
    // A few convenient shortcuts.
    window = this,
    FALSE = !1,
    
    // Reused internal strings.
    postMessage = 'postMessage',
    addEventListener = 'addEventListener',
    
    p_receiveMessage,
    
    // I couldn't get window.postMessage to actually work in Opera 9.64!
    has_postMessage = window[postMessage] && !$.browser.opera;
  
  // Method: jQuery.postMessage
  // 
  // This method will call window.postMessage if available, setting the
  // targetOrigin parameter to the base of the target_url parameter for maximum
  // security in browsers that support it. If window.postMessage is not available,
  // the target window's location.hash will be used to pass the message. If an
  // object is passed as the message param, it will be serialized into a string
  // using the jQuery.param method.
  // 
  // Usage:
  // 
  // > jQuery.postMessage( message, target_url [, target ] );
  // 
  // Arguments:
  // 
  //  message - (String) A message to be passed to the other frame.
  //  message - (Object) An object to be serialized into a params string, using
  //    the jQuery.param method.
  //  target_url - (String) The URL of the other frame this window is
  //    attempting to communicate with. This must be the exact URL (including
  //    any query string) of the other window for this script to work in
  //    browsers that don't support window.postMessage.
  //  target - (Object) A reference to the other frame this window is
  //    attempting to communicate with. If omitted, defaults to `parent`.
  // 
  // Returns:
  // 
  //  Nothing.
  
  $[postMessage] = function( message, target_url, target ) {
    if ( !target_url ) { return; }
    
    // Serialize the message if not a string. Note that this is the only real
    // jQuery dependency for this script. If removed, this script could be
    // written as very basic JavaScript.
    message = typeof message === 'string' ? message : $.param( message );
    
    // Default to parent if unspecified.
    target = target || parent;
    
    if ( has_postMessage ) {
      // The browser supports window.postMessage, so call it with a targetOrigin
      // set appropriately, based on the target_url parameter.
      target[postMessage]( message, target_url.replace( /([^:]+:\/\/[^\/]+).*/, '$1' ) );
      
    } else if ( target_url ) {
      // The browser does not support window.postMessage, so set the location
      // of the target to target_url#message. A bit ugly, but it works! A cache
      // bust parameter is added to ensure that repeat messages trigger the
      // callback.
      target.location = target_url.replace( /#.*$/, '' ) + '#' + (+new Date) + (cache_bust++) + '&' + message;
    }
  };
  
  // Method: jQuery.receiveMessage
  // 
  // Register a single callback for either a window.postMessage call, if
  // supported, or if unsupported, for any change in the current window
  // location.hash. If window.postMessage is supported and source_origin is
  // specified, the source window will be checked against this for maximum
  // security. If window.postMessage is unsupported, a polling loop will be
  // started to watch for changes to the location.hash.
  // 
  // Note that for simplicity's sake, only a single callback can be registered
  // at one time. Passing no params will unbind this event (or stop the polling
  // loop), and calling this method a second time with another callback will
  // unbind the event (or stop the polling loop) first, before binding the new
  // callback.
  // 
  // Also note that if window.postMessage is available, the optional
  // source_origin param will be used to test the event.origin property. From
  // the MDC window.postMessage docs: This string is the concatenation of the
  // protocol and "://", the host name if one exists, and ":" followed by a port
  // number if a port is present and differs from the default port for the given
  // protocol. Examples of typical origins are https://example.org (implying
  // port 443), http://example.net (implying port 80), and http://example.com:8080.
  // 
  // Usage:
  // 
  // > jQuery.receiveMessage( callback [, source_origin ] [, delay ] );
  // 
  // Arguments:
  // 
  //  callback - (Function) This callback will execute whenever a <jQuery.postMessage>
  //    message is received, provided the source_origin matches. If callback is
  //    omitted, any existing receiveMessage event bind or polling loop will be
  //    canceled.
  //  source_origin - (String) If window.postMessage is available and this value
  //    is not equal to the event.origin property, the callback will not be
  //    called.
  //  source_origin - (Function) If window.postMessage is available and this
  //    function returns false when passed the event.origin property, the
  //    callback will not be called.
  //  delay - (Number) An optional zero-or-greater delay in milliseconds at
  //    which the polling loop will execute (for browser that don't support
  //    window.postMessage). If omitted, defaults to 100.
  // 
  // Returns:
  // 
  //  Nothing!
  
  $.receiveMessage = p_receiveMessage = function( callback, source_origin, delay ) {
    if ( has_postMessage ) {
      // Since the browser supports window.postMessage, the callback will be
      // bound to the actual event associated with window.postMessage.
      
      if ( callback ) {
        // Unbind an existing callback if it exists.
        rm_callback && p_receiveMessage();
        
        // Bind the callback. A reference to the callback is stored for ease of
        // unbinding.
        rm_callback = function(e) {
          if ( ( typeof source_origin === 'string' && e.origin !== source_origin )
            || ( $.isFunction( source_origin ) && source_origin( e.origin ) === FALSE ) ) {
            return FALSE;
          }
          callback( e );
        };
      }
      
      if ( window[addEventListener] ) {
        window[ callback ? addEventListener : 'removeEventListener' ]( 'message', rm_callback, FALSE );
      } else {
        window[ callback ? 'attachEvent' : 'detachEvent' ]( 'onmessage', rm_callback );
      }
      
    } else {
      // Since the browser sucks, a polling loop will be started, and the
      // callback will be called whenever the location.hash changes.
      
      interval_id && clearInterval( interval_id );
      interval_id = null;
      
      if ( callback ) {
        delay = typeof source_origin === 'number'
          ? source_origin
          : typeof delay === 'number'
            ? delay
            : 100;
        
        interval_id = setInterval(function(){
          var hash = document.location.hash,
            re = /^#?\d+&/;
          if ( hash !== last_hash && re.test( hash ) ) {
            last_hash = hash;
            callback({ data: hash.replace( re, '' ) });
          }
        }, delay );
      }
    }
  };
  
})(jQuery);
//
// @source = Browzer.js
//

//	IEのバージョン判定
function isIE11()
{
	var userAgent = window.navigator.userAgent.toLowerCase();
	if( userAgent.indexOf('gecko') == -1) 
		return	false;

	var ua, isIE, array, version;
 
	// UserAgetn を小文字に正規化
	ua = window.navigator.userAgent.toLowerCase();
 
	// IE かどうか判定
	isIE = (ua.indexOf('msie') >= 0 || ua.indexOf('trident') >= 0);
 
	// IE の場合、バージョンを取得
	if( isIE) 
	{
	
		if( ua.indexOf('msie') >= 0 )
			return	false;
		else
			return	true;
	}
	else
		return	false;
}




//	ブラウザの種別判定
function isBrawzerPossible_3D( ) 
{
	var userAgent = window.navigator.userAgent.toLowerCase();

	if( userAgent.indexOf('opera') != -1) 
	  	return 		false;
	else if( userAgent.indexOf('firefox') != -1) 
	  	return 		true;
	else if( userAgent.indexOf('msie') != -1) 
	  	return false;
	else if( userAgent.indexOf('chrome') != -1) 
	  	return 		true;
	else if( userAgent.indexOf('safari') != -1) 
	  	return 		false;
	else if( userAgent.indexOf('gecko') != -1) 
	{
		var bRet	=	isIE11();
		if( bRet == true )
		  	return 		true;
	}
  	return false;
}

//
// @source = 3DView.js
//
//	3DView.js

//	地理院地図３DへのURLを生成する
function createLink3DURL(cx, cy, scale )	
{		//リンクのURLを作成する関数
	var nZoomLV = scale;

	if( nZoomLV > 14) 
		nZoomLV = 14;
	var linkURL 	= "http://cyberjapandata.gsi.go.jp/3d/site/index.html?z=" + nZoomLV + "&lat=" + cy + "&lon=" + cx;		//この変数にリンク先のURLを入れる
	
	
	var  sKey = lookFor3DDisplayMode( "yk74", "ort" );
	

	if( sKey == "ort" && 15 <= scale && scale <= 18 )
	{
		linkURL = "http://cyberjapandata.gsi.go.jp/3d/site/index.html?did=" + sKey + "&z=" + 14 + "&lat=" + cy + "&lon=" + cx;
	}
	else if( sKey == "gazo1" && 15 <= scale && scale <= 18 )
	{
		linkURL = "http://cyberjapandata.gsi.go.jp/3d/site/index.html?did=" + sKey + "&z=" + nZoomLV + "&lat=" + cy + "&lon=" + cx;
	}
	

	return linkURL;		//URLを返す
}


/*
function is3DPhotoMode()
{
	

	if( lookForLayerOfBaseLayerName( "yk74" ) == true )
	{
		return		true;
	}
	return	false;
}
*/



function lookForLayerOfBaseLayerName( sTargetName )
{
	var pLayers	=	this.map.layers;
	
	
	for (var i = 0; i < pLayers.length; i++) 
	{
		if( pLayers[i].visibility == false )
			continue;
	
		var sName	=	pLayers[i].name;
		
		if( sName == "yk74" )
		{
			return		true;
		}
	}
	return	false;
}


function lookForLayerWhichHaveDataSet( sDataSetName )
{
	var pLayers	=	this.map.layers;
	
	
	for (var i = 0; i < pLayers.length; i++) 
	{
		if( pLayers[i].visibility == false )
			continue;
	
		if( typeof( pLayers[i].dataSet ) == "undefined" )
			continue;
	
		var pDataSets	=	pLayers[i].dataSet;
		
		var ss = pDataSets[15];
		if( ss.dataId == sDataSetName )
				return		true;

/*
		for  each ( var p in  pDataSets )
		{
			if( p.dataID == sDataSetName )
				return		true;
		}
		
		for (var j = 0; j < pDataSets.length; j++ )
		{
			var p = pDataSets[j];
			if( p.dataId == sDataSetName )
				return		true;
		}
		for (var j = 0; j < pDataSets.length; j++ )
		{
			var p = pDataSets[j];
			if( p.dataID == sDataSetName )
				return		true;
		}
*/
	}
	return	null;
}




function lookFor3DDisplayMode( sTargetName, sDataSetName )
{
	var pLayers	=	this.map.layers;
	
	
	for (var i = 0; i < pLayers.length; i++) 
	{
		if( pLayers[i].visibility == false )
			continue;
	
		var sName	=	pLayers[i].name;
		
		if( sName == "yk74" )
		{
			return		"gazo1";
		}
	
		if( typeof( pLayers[i].dataSet ) == "undefined" )
			continue;
	
		var pDataSets	=	pLayers[i].dataSet;

		var ss = pDataSets[15];
		if( ss.dataId == sDataSetName )
			return		 "ort";
	}
	return	false;
}
//
// @source = MouseCursor.js
//



	function resetMouseCursor( )
	{
		document.body.style.cursor = "auto";
	}
	

	function setMouseCursorFinger(  )
	{
		document.body.style.cursor = "pointer";
	}
	
	

	
	function setMouseCursor( sCursor )
	{
		document.body.style.cursor = sCursor;
	}
	
	
	
	
//
// @source = cs.js
//
/** 地名検索用 JQueryプラグイン実装  **/
var ChimeiSearch = {};
ChimeiSearch.SIMPLE_GEOCODING = "http://geocode.csis.u-tokyo.ac.jp/cgi-bin/simple_geocode.cgi";
/* ChimeiSearch.GEOCODE = "http://portal.cyberjapan.jp/GsiJsLibrary/geocode.php"; */
/* ChimeiSearch.GEOCODE = "http://portal.cyberjapan.jp/GsiJsLibrary/geocode.php"; */
ChimeiSearch.INTERFACE = "http://portal.cyberjapan.jp/GsiJsLibrary/interface.php";
ChimeiSearch.SHISETSU_SEARCH = "http://portal.cyberjapan.jp/GsiJsLibrary/shisetsu.php";
ChimeiSearch.CHIMEI_SEARCH = "http://portal.cyberjapan.jp/GsiJsLibrary/chimei.php";
ChimeiSearch.CENTER_SEARCH = "http://portal.cyberjapan.jp/GsiJsLibrary/LonLatToLv01.php";


ChimeiSearch.SERVER_ROOT = "http://search.cyberjapan.jp/cs4/cs/";

var LON_LAT_SPLIT = ['・', '、', ',', ' ', '　'];

var CurrentPage=0;
var CurrentSelectId = -1;
var CurrentResultsList = new Array();
var BaseZoomLevel = 5; //背景地図で日本地図が表示されるズームレベル

//都道府県テーブル
//トップページと異なり、県コード順に並んでいます
var PREF_TABLE = [
					['北海道', 141.3469444, 43.06416667],
					['青森県', 140.74,      40.82444444],
					['岩手県', 141.1525,    39.70361111],
					['宮城県', 140.8719444, 38.26888889],
					['秋田県', 140.1023688, 39.71863238],
					['山形県', 140.3633333, 38.24055556],
					['福島県', 140.4677778, 37.75],
					['茨城県', 140.446812,  36.34173897],
					['栃木県', 139.8836111, 36.56583333],
					['群馬県', 139.0608333, 36.39111111],
					['埼玉県', 139.649007,  35.85703327],
					['千葉県', 140.1231502, 35.60456052],
					['東京都', 139.6916667, 35.68944444],
					['神奈川県', 139.6425,    35.44777778],
					['新潟県', 139.0236111, 37.90222222],
					['富山県', 137.2113889, 36.69527778],
					['石川県', 136.6255556, 36.59444444],
					['福井県', 136.2219444, 36.06527778],
					['山梨県', 138.5683333, 35.66388889],
					['長野県', 138.1811111, 36.65138889],
					['岐阜県', 136.7222222, 35.39111111],
					['静岡県', 138.3830556, 34.97694444],
					['愛知県', 136.9066667, 35.18027778],
					['三重県', 136.5086111, 34.73027778],
					['滋賀県',   135.8683333, 35.00444444],
					['京都府',   135.7555556, 35.02138889],
					['大阪府',   135.52,      34.68638889],
					['兵庫県',   135.1830556, 34.69138889],
					['奈良県',   135.8327778, 34.68527778],
					['和歌山県', 135.1675,    34.22611111],
					['鳥取県', 134.2383333, 35.50361111],
					['島根県', 133.0505556, 35.47222222],
					['岡山県', 133.935,     34.66166667],
					['広島県', 132.4594444, 34.39638889],
					['山口県', 131.4713889, 34.18583333],
					['徳島県', 134.5594189, 34.06570976],
					['香川県', 134.0432238, 34.340088],
					['愛媛県', 132.7661111, 33.84166667],
					['高知県', 133.5311111, 33.55972222],
					['福岡県',   130.4180556, 33.60638889],
					['佐賀県',   130.2988889, 33.24944444],
					['長崎県',   129.8736111, 32.74472222],
					['熊本県',   130.7416667, 32.78972222],
					['大分県',   131.6125,    33.23805556],
					['宮崎県',   131.4238889, 31.91111111],
					['鹿児島県', 130.5580556, 31.56027778],
					['沖縄県',   127.6811111, 26.2125]
				];
				
(function($){
jQuery.fn.ChimeiSearch = function(config) {
	this.config = config;
	if (this.config.mapEventHandler) {
		// 地名検索で行われた処理に対しての委譲先
		this.mapEventHandler = this.config.mapEventHandler;
	}

	this.sakuzuObj = config.sakuzuObj;
	this.mapKeyboardControl = config.mapKeyboardControl;
	
	var CS_Obj = this;

	this.append("\
			<div id=\"cs_main\" class=\"ui-widget-content ui-corner-all uiTabPanel\">\
				<div class=\"cs_block\">\
					<div id=\"cs_result_block\" >\
					<span class=\"cs_label\">地名</span>&nbsp;<input type=\"text\" id=\"cs_chimei_text\" name=\"\" value=\"\" style=\"width:130px;\">　<span id=\"syousaiBox\"><a href=\"javascript:void(0)\" onClick=\"syousai(1);\"><font size=2>詳細設定</font></a></span>\
					</div>\
				</div>\
				<div style=\"display:none;\" id=\"syousaiSetting\">\
					<span class=\"cs_label\">範囲指定</span>\
					<table>\
						<tr>\
							<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\
							<td>&nbsp;都道府県&nbsp;&nbsp;&nbsp;</td>\
							<td><select id=\"cs_area_pref\" style=\"width:150px;\"></select></td>\
						</tr>\
						<tr>\
							<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\
							<td>&nbsp;市区町村&nbsp;&nbsp;&nbsp;</td>\
							<td><select id=\"cs_area_muni\" style=\"width:150px;\"></select></t>\
						</tr>\
					</table>\
					<div class=\"cs_block\">\
						<span class=\"cs_label\">検索対象</span>\
						<br>\
						&nbsp;&nbsp;&nbsp;&nbsp;<font size=2>\<input type=\"checkbox\" name=\"cs_target\" value=\"cs_address\" checked>住所　<input type=\"checkbox\" name=\"cs_target\" value=\"cs_station\" checked>駅　<input type=\"checkbox\" name=\"cs_target\" value=\"shisetsu\" checked>公共施設　<input type=\"checkbox\" name=\"cs_target\" value=\"chimei\" checked>地名\</span>\</font>\
					</div>\
				</div>\
				<div class=\"cs_block\">\
					<div id=\"cs_buttons\" style=\"float:left\">\
						<button id=\"cs_search_button\"><font size=2>検索</font></button>&nbsp;<button title=\"検索結果と地図上のマーカーを消去します\" id=\"cs_clear_button\"><font size=2>クリア</font></button>\
					</div>\
					<div id=\"cs_coop\" style=\"float:right\">\
					</div>\
				</div>\
				<div class=\"cs_block\" style=\"clear:both;\">\
					<div id=\"cs_result\">\
					</div>\
				</div>\
			</div>\
	");
	
	// プラグインにメソッドを追加
	this.showResults = $.proxy(showResults,this);
	this.searchAddress = $.proxy(searchAddress,this);
	this.searchStation = $.proxy(searchStation,this);
	this.searchPlace = $.proxy(searchPlace,this);
	this.searchFacility = $.proxy(searchFacility,this);
	this.prncenter = $.proxy(prncenter,this);
	this.executeSearch = $.proxy(executeSearch,this);
	this.clickResult = $.proxy(clickResult,this);
	this.writeResultsList = $.proxy(writeResultsList,this);
	this.getAddress = $.proxy(getAddress, this);

	this.loadLayerList = $.proxy(loadLayerList,this);
	this.loadAreaObjectList = $.proxy(loadAreaObjectList,this);
//	this.searchChimei = $.proxy(searchChimei,this);
	
	// サーバからレイヤリストを取得
	this.loadLayerList();

	$("#cs_coop").append((typeof isMapCase != "undefined" && isMapCase == true) ?
		"<font size=1>　</font><br>\
			<font size=1><a href=\"http://newspat.csis.u-tokyo.ac.jp/geocode/\" target=\"_blank\">CSISシンプルジオコーディング実験</a><br />（街区レベル位置参照情報、国土数値情報）利用</font>" :
		"<font size=1>　</font><br>\
			<font size=1>協力　<a href=\"http://newspat.csis.u-tokyo.ac.jp/geocode/\" target=\"_blank\">東大CSIS</a></font>"
	);
	
	$("#cs_chimei_text").focus($.proxy(
		function(event) {
			var element = event.currentTarget;
			if (element.className == "default_text"){
				element.className = "";
				element.value="";
			}
			this.sakuzuObj.oKeyboard.deactivate();
			this.mapKeyboardControl.deactivate();
		},this)
	);

	// テキストボックスでエンターキーを押すと、検索を実行
	$("#cs_chimei_text").keypress(
		function(e) {
			if (e.which == 13) {
				if (!document.getElementById("cs_search_button").disabled) mapsearch();
			}else if (e.which==37){
				e.cancelBubble =true;
			}
		}
	);

	// エリアレイヤを変更したときに、オブジェクトを再読み込み
	var areaLayersElement = this.find("#cs_area_pref");
	areaLayersElement.change(
		$.proxy(function(event) {
			var areaLayerId = event.target.selectedIndex;
			var areaObjectsElement = this.find("#cs_area_muni");
			
			if (areaLayerId != "") {
				areaObjectsElement[0].disabled = true;
				areaObjectsElement.empty();
				this.loadAreaObjectList(areaLayerId);
				
				var pref = PREF_TABLE[areaLayerId - 1];
				var zoom = 9;
				map.setCenter(new OpenLayers.LonLat(pref[1], pref[2]).transform(projection4326,projection900913), zoom);
				
			} else {
				// 消します
				areaObjectsElement.empty();
			}
			
			// 検索ボタンを押せるようにする
			var searchButtonElement = document.getElementById("cs_search_button");
			searchButtonElement.disabled = false;
		},this)
	);

	// エリアレイヤを変更したときに、オブジェクトを再読み込み
	var areaObjectsElement = this.find("#cs_area_muni");
	areaObjectsElement.change(
		$.proxy(function(event) {
			// 地図を移動
			var areaObjectId = event.target.options[event.target.selectedIndex].value;
			if (areaObjectId!=null && areaObjectId.charAt(0)=="@") {
				return;
			}
			var geom = this.currentAreaObjects[areaObjectId];
			var zoom = 15;
			//this.mapEventHandler.areaChanged(geom.clone());
			if (geom) {
				map.setCenter(geom.clone().transform(projection4326,projection900913), zoom);
			}
			
			// 北海道の振興局が選択された場合は、検索ボタンを押せないようにする
			var areaObjectsElement = this.find("#cs_area_pref")[0];
			var searchButtonElement = document.getElementById("cs_search_button");
			searchButtonElement.disabled = (Number(areaObjectsElement.value) == 1 && Number(areaObjectId) >= 9900);
			
		},this)
	);

	// 検索ボタン
	var searchButtonElement = this.find("#cs_search_button");
	searchButtonElement.click(
		$.proxy(function(event) {
			this.executeSearch("autoMove");
		},this)
	);

	// クリアボタン
	var clearButtonElement = this.find("#cs_clear_button");
	clearButtonElement.click(
		$.proxy(function(event) {
			var searchButtonElement = this.find("#cs_search_button")[0];
			searchButtonElement.disabled = false;
			// 検索結果の消去
			var resultElement = this.find("#cs_result");
			resultElement.empty();
			
			// 検索条件のリセット
			this.find("#cs_chimei_text").val("");
//			this.find('input[name="cs_area_type"]').val(["none"]);
			this.find('input[name="cs_logical_condition"]').val(["AND"]);
			this.find('input[name="cs_textmatch_condition"]').val(["PARTIAL"]);
			
			//前のマーカーを消す
			if(flagmarker == 1){
				map.removeLayer(map.getLayersByName('Marker')[0]);
				flagmarker = 0;
			}

			this.find("#cs_area_pref").val([""]);
			var areaObjectsElement = this.find("#cs_area_muni");
			areaObjectsElement.empty();
			var targetLayers = this.find("input[name='cs_target']");
			for (var i = 0; i < targetLayers.length; i++) {
				targetLayers[i].checked;	// = (i == 0);
			}
			// 
			this.mapEventHandler.stopDrawArea();

		},this)
	);
	
	//********* 関数 *************//
	/*中心位置の経緯度表示*/
	function prncenter() {
		//現在の中心経緯度・ズームレベルの取得
		var center=this.mapEventHandler.mapObj.getCenter();
		if (!center) return;
		var center2=center.transform(projection900913,projection4326);
		var lat = center2.lat;
		var lon = center2.lon;
		var zoom = this.mapEventHandler.mapObj.getZoom();

		//経緯度は小数点以下6桁に丸める
		lat = lat * 1000000;
		lat = Math.round(lat) / 1000000;
		lon = lon * 1000000;
		lon = Math.round(lon) / 1000000;

		var url = ChimeiSearch.CENTER_SEARCH;
		url += "?longitude=" + lon + "&latitude=" + lat;

		var parameter = {};
		parameter['request'] = url;
//		parameter['longitude'] = lon;
//		parameter['latitude'] = lat;

		function getRusult(json){
			$.proxy(readyStateChangeHandler, this)(json['result']);
		}

		$.ajax({
			type: "GET",
			url:ChimeiSearch.INTERFACE,
			data: parameter,
			dataType: "jsonp",
			timeout: 30000,
			success: getRusult
		});


		function readyStateChangeHandler(json){
			if (json){
				if (json.indexOf('{"result":[') != -1){
					var result = json;
					var obj;
					var html="";
					obj = eval("obj=" + result);
					
					var prefNm = obj.result[0].prefNm;
					var muniNm = obj.result[0].muniNm;
					var muniCd = obj.result[0].muniCd;
					var lv01Nm = obj.result[0].lv01Nm;
					var lon,lat;

					
					if (zoom <= BaseZoomLevel || prefNm == ""){
						html += "<span id=\"cs_level0\"><font size=2>全国</font></span>"; // -- merge1227
					} else {
						//初期表示と同じ経緯度
						lon=140.0852778;
						lat=36.10416667;
						html += "<span id=\"cs_level0\"><a href=\"javascript:void(0);\" class=\"cs_breadcrumbs\" onClick=\"csModule.mapEventHandler.moveCenter(" + lon + "," + lat + ",''," + BaseZoomLevel + ");\">全国</a></span>";
					}

					if (zoom > BaseZoomLevel){
						/*if (zoom <= 4 || muniNm == ""){
							html += "<span id=\"cs_level1\">" + prefNm + "</span>";
						}else{*/
							var prefCd = obj.result[0].prefCd;
							lon = PREF_TABLE[prefCd-1][1];
							lat = PREF_TABLE[prefCd-1][2];
							html += "<span id=\"cs_level1\"> > <a href=\"javascript:void(0);\" class=\"cs_breadcrumbs\" onClick=\"csModule.mapEventHandler.moveCenter(" + lon + "," + lat + ",'" + prefNm + "'," + (BaseZoomLevel+3) + ");\">" + prefNm + "</a></span>"; // -- merge1227
						//}
					}

					if (zoom > BaseZoomLevel+3){ // merge1227
						/*if (zoom <= 7 || lv01Nm == ""){
							html += "<span id=\"cs_level2\">" + muniNm + "</span>";
						}else{*/
							var gsi = new GsiJsLibrary(muniCd);
							var tmp = gsi.getMunicipality();
							var mobj = eval("mobj=" + tmp);
							lon = mobj.result[0].longitude;
							lat = mobj.result[0].latitude;

							html += "<span id=\"cs_level2\"> > <a href=\"javascript:void(0);\" class=\"cs_breadcrumbs\" onClick=\"csModule.mapEventHandler.moveCenter(" + lon + "," + lat + ",'"+ prefNm + muniNm + "'," + (BaseZoomLevel+8) + ");\">" + muniNm + "</a></span>"; // -- merge1227
						//}
					}

					if (zoom > BaseZoomLevel+8){ // -- merge1227
						lon = obj.result[0].longitude;
						lat = obj.result[0].latitude;
						html += "<span id=\"cs_level3\"> > <a href=\"javascript:void(0);\" class=\"cs_breadcrumbs\" onClick=\"csModule.mapEventHandler.moveCenter(" + lon + "," + lat + ",'"+ prefNm + muniNm + lv01Nm + "'," + (BaseZoomLevel+10) + ");\">" + lv01Nm + "</a></span>"; // -- merge1227
						//html += "<span id=\"cs_level3\">" + lv01Nm + "</span>";
					}

					$("#jus").empty();
					$("#jus").append(html);
				}
			}else{
				var html="";
				if (zoom <= BaseZoomLevel){
					html += "<span id=\"cs_level0\"><font size=2>全国</font></span>"; // -- merge1227
					$("#jus").empty();
					$("#jus").append(html);
				}
			}
		}
	}

	function getAddress(lon, lat){
	
		var address = "";
/*	
		//現在の中心経緯度・ズームレベルの取得
		var center=this.mapEventHandler.mapObj.getCenter();
		var center2=center.transform(projection900913,projection4326);
		var lat = center2.lat;
		var lon = center2.lon;
		var zoom = this.mapEventHandler.mapObj.getZoom();

		//経緯度は小数点以下6桁に丸める
		lat = lat * 1000000;
		lat = Math.round(lat) / 1000000;
		lon = lon * 1000000;
		lon = Math.round(lon) / 1000000;
*/
		var url = ChimeiSearch.CENTER_SEARCH;
		url += "?longitude=" + lon + "&latitude=" + lat;

		var parameter = {};
		parameter['request'] = url;
//		parameter['longitude'] = lon;
//		parameter['latitude'] = lat;

		function getRusult(json){
			$.proxy(readyStateChangeHandler, this)(json['result']);
		}

		$.ajax({
			type: "GET",
			url:ChimeiSearch.INTERFACE,
			data: parameter,
			dataType: "jsonp",
			timeout: 30000,
			success: getRusult
		});
		
		function readyStateChangeHandler(json){
			if (json){
			
				var address = "";
			
				if (json.indexOf('{"result":[') != -1){
					var result = json;
					var obj;
					var html="";
					obj = eval("obj=" + result);
					
					var addObj = obj.result[0];
					if (addObj){
						if (addObj.prefNm) address += addObj.prefNm;
						if (addObj.conNm) address += addObj.conNm;
						if (addObj.muniNm) address += addObj.muniNm;
						if (addObj.lv01Nm) address += addObj.lv01Nm;
					}
				}
				
				$("#popupAddress").empty();
				$("#popupAddress").append(address ? address : "---");
			}
		}
	}

	function executeSearch(autoMove) {
		var resultElement = this.find("#cs_result");
		// 検索結果の消去
		resultElement.empty();

		//前のマーカーを消す
		if(flagmarker == 1){
			map.removeLayer(map.getLayersByName('Marker')[0]);
			flagmarker = 0;
		}

		var parameter = {};

		$("#config_cs").animate({height: "hide", opacity: "toggle"},500);

		// 検索キーワード
		var chimeiElement = document.getElementById('cs_chimei_text');
		var chimeiText = chimeiElement.value.replace(/^\s+|\s+$/g, "");
		if (!chimeiText || chimeiElement.className == 'default_text') {
			resultElement.append($("<div style='padding:10px;text-align:center;color:red;'>キーワードを入力してください</div>"));
			return;
		}

		//経度・緯度が入力されているか判定します。
		//if ($.proxy(searchLonLat, this)(chimeiText)) return;

		// 範囲指定
		// 選択されているレイヤーとObjetIDから
		var areaLayer = this.find('#cs_area_pref option:selected')[0];
		parameter['pref'] = "";
		parameter['muni'] = "";
		
		if (areaLayer.index > 0 && areaLayer.text != "") {
			this.currentAreaObjects[areaLayer.index]
			parameter['pref'] = areaLayer.text + "|" + areaLayer.index;
			var areaObject = this.find('#cs_area_muni option:selected')[0];
			if (areaObject.text != "") {
				parameter['muni'] = areaObject.index == 0 ? "" : areaObject.text + "|" + areaObject.value;
			}			
		}

		// 検索対象
		var targetLayers = this.find("input[name='cs_target']:checked");
		if (targetLayers.length == 0) {
			resultElement.append($("<div style='padding:10px;text-align:center;color:red;'>検索対象を選択してください</div>"));
			return;
		}
		var tl = targetLayers[0].value;
		var length = targetLayers.length;
		for (var i = 1; i < length; i++) {
			tl += "|"+ targetLayers[i].value;
		} 
		parameter['tl'] = tl;
		// 一致方法
		var logicalCondition = this.find("input[name='cs_logical_condition']:checked").val();
		var textMatchCondition = this.find("input[name='cs_textmatch_condition']:checked").val();
		parameter['qt'] = logicalCondition+"|"+textMatchCondition;
		
		$("#cs_search_button")[0].disabled = true;

		parameter['query'] = encodeURIComponent(chimeiText);

//		parameter['pref'] = configArray['pref'];
//		if (configArray['muni']) parameter['muni'] = configArray['muni'];

//		var tl = configArray['target'];
//		parameter['tl'] = tl;
		
		if (autoMove){
			parameter['am'] = autoMove;
		}
		document.getElementById("cs_search_button").disabled = true;

		// 検索開始
		resultElement.append(("<div style='padding:10px;text-align:center;color:red;'>検索中</div>"));

		CurrentResultsList = new Array();
		CurrentSelectId = -1;

		if (tl.indexOf('address')>=0){
			$.proxy(searchAddress,this)(parameter);
		}else if (tl.indexOf('station')>=0){
			$.proxy(searchStation,this)(parameter);
		}else if (tl.indexOf('shisetsu')>=0){
			$.proxy(searchFacility,this)(parameter);
		}else if (tl.indexOf('chimei')>=0){
			$.proxy(searchPlace,this)(parameter);
		}
	}

	function clickResult(event) {
		if (this.mapEventHandler) {
			// 行がクリックされたときの処理を委譲
			var i = $(event.currentTarget).attr("_feature_index");
			var x = CurrentResultsList[i]["longitude"];
			var y = CurrentResultsList[i]["latitude"];
			var v;
			if (CurrentResultsList[i]['histNm']){
				v = CurrentResultsList[i]["histNm"];
			}else{
				v = CurrentResultsList[i]["value"];
			}
			this.mapEventHandler.moveCenter(x,y,v);
			CurrentSelectId = i;
			$.proxy(writeResultsList,this)(CurrentPage);
		}
	}


	function searchLonLat(key){
		var num;
		var param;

//		var tmp = key.replace(/^\s+|\s+$/g, "");
		var tmp = key;

		//経度、緯度が入力されているか判定します。
		//判定基準：1.半角数字が２種類入力されていて、経度・緯度の範囲に収まっている
		//			2.２種類の数字が「,、-」のいずれかで区切られている。
		for(var i=0; i<LON_LAT_SPLIT.length; i++){
			num = tmp.split(LON_LAT_SPLIT[i]);
			if (num.length == 2){
				
				if ((!isNaN(num[0])) && (!isNaN(num[1]))){
					var lon="", lat="";
					for(var t=0; t<2; t++){
						if (parseInt(num[t])>=15 && parseInt(num[t])<=55){
							lat = num[t];
						}else if(parseInt(num[t])>=110 && parseInt(num[t])<=165){
							lon = num[t];
						}
					}
					
					if (lon!="" && lat!=""){
						this.mapEventHandler.moveCenter(lon,lat,key);
						return(true);
					}
				}
			}
		}
		return(false);
	}

	function escapeHTML(val) {
       	 return $('<div>').text(val).html();
	}
	
	/**
	 * 検索を実行します。
	 */
	/*住所検索 ここから*/
	function searchAddress(parameter) {
		var url = "";
		var target = parameter['tl'];
		url = ChimeiSearch.SIMPLE_GEOCODING
				+ '?addr=' + parameter['query']
				+ '&charset=UTF8' 
				+ '&geosys=world'
				+ '&series=ADDRESS';
		
		var constraint="";
		var tmp;
		
		if (parameter['pref'] != ""){
			tmp = parameter['pref'].split('|');
			constraint += tmp[0];
		}

		if(parameter['muni']) {
			tmp = parameter['muni'].split('|');
			constraint += tmp[0];
		}

		if (constraint!="") url += "&constraint=" + encodeURIComponent(constraint);

		parameter['request'] = url;

		function getRusult(json){
			var xmlDoc;
			if (window.ActiveXObject)
			{
				xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
				xmlDoc.async = false;
				xmlDoc.loadXML(json['result']);
			}
			else if (window.DOMParser)
			{
				xmlDoc = new DOMParser().parseFromString(
					json['result'],
					"application/xml"
				);
			}
			$.proxy(readyStateChangeHandler_address, this)(xmlDoc);
		}

		$.ajax({
			type: "GET",
			url:ChimeiSearch.INTERFACE,
			data: parameter,
			dataType: "jsonp",
			timeout: 30000,
			success: getRusult,
			error:function(){
				var resultElement = $("#cs_result");
				resultElement.empty();
				resultElement.append($("<div style='padding:10px;text-align:center;color:red;'>住所検索に失敗しました。</div>"));
				document.getElementById("cs_search_button").disabled = false;
			}
		});


		function readyStateChangeHandler_address(json){
			var xmlObj = $(json);
			xmlObj.find("candidate").each(function(){
				if ($(this).find('iLvl').text() > 0){
					temp=$(this).find('address').text().split('/');
					addr=new Array();
					dispAddr = "";
					for (var i=0; i<temp.length; i++){
						if (temp[i].substr(temp[i].length-1) == '郡'){
							//郡は省きます
						}else if (temp[i].substr(temp[i].length-1) == '区'){
							if (temp[i-1].substr(temp[i-1].length-1) == '市'){
								//政令指定都市の区は市名と合わせます
								addr[addr.length-1] += temp[i];
							}
						}else{
							addr[addr.length] = temp[i];
						}
						dispAddr += temp[i];
					}

					n = CurrentResultsList.length;
					CurrentResultsList[n] = new Array();
					if (addr[0]) CurrentResultsList[n]['pref']=addr[0];
					if (addr[1]) CurrentResultsList[n]['muniNm']=addr[1];
					if (addr[2]) CurrentResultsList[n]['lv01']=addr[2];
					CurrentResultsList[n]['longitude'] = $(this).find('longitude').text();
					CurrentResultsList[n]['latitude'] = $(this).find('latitude').text();
					CurrentResultsList[n]['value'] = dispAddr;
					CurrentResultsList[n]['series'] = "ADDRESS";
				}
				
			});

			if (target.indexOf('station')>=0){
				$.proxy(searchStation,CS_Obj)(parameter);
			}else if(target.indexOf('shisetsu')>=0){
				$.proxy(searchFacility,CS_Obj)(parameter);
			}else if (target.indexOf('chimei')>=0){
				$.proxy(searchPlace,CS_Obj)(parameter);
			}else{
				$.proxy(showResults,$(CS_Obj))(parameter);
			}
		}
	}
	/*住所検索 ここまで*/

	/*駅検索 ここから*/
	function searchStation(parameter) {

		var url = "";
		var target = parameter['tl'];

		url = ChimeiSearch.SIMPLE_GEOCODING
				+ '?addr=' + parameter['query']
				+ '&charset=UTF8' 
				+ '&geosys=world'
				+ '&series=STATION';

		parameter['request'] = url;

		function getRusult(json){
			var xmlDoc;
			if (window.ActiveXObject)
			{
				xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
				xmlDoc.async = false;
				xmlDoc.loadXML(json['result']);
			}
			else if (window.DOMParser)
			{
				xmlDoc = new DOMParser().parseFromString(
					json['result'],
					"application/xml"
				);
			}
			$.proxy(readyStateChangeHandler_station, this)(xmlDoc);
		}

		$.ajax({
			type: "GET",
			url:ChimeiSearch.INTERFACE,
			data: parameter,
			dataType: "jsonp",
			timeout: 30000,
			success: getRusult,
			error:function(){
				var resultElement = $("#cs_result");
				resultElement.empty();
				resultElement.append($("<div style='padding:10px;text-align:center;color:red;'>駅検索に失敗しました。</div>"));
				document.getElementById("cs_search_button").disabled = false;
			}
		});

		function readyStateChangeHandler_station(json){
			var xmlObj = $(json);
			var temp,n;
			var dispAddr;
			var addr="";
			xmlObj.find("candidate").each(function(){
				if ($(this).find('iLvl').text() > 0){
				
					var subUrl = ChimeiSearch.CENTER_SEARCH + "?longitude=" + $(this).find('longitude').text() + "&latitude=" + $(this).find('latitude').text();
					var err = true;
					
					// 駅の検索結果に対し、同期処理で都道府県コード・市町村コードをチェックする
					$.ajax({
						async: false,
						type: "POST",
						data: $(this),
						dataType: 'json',
						timeout: 1000,
						error: function() {
						},
						url: subUrl,
						success: function(data, status){
							if (data.error) return;

							var prefCd = parameter['pref'] ? parameter['pref'].split('|')[1] : "";
							var muniCd = parameter['muni'] ? parameter['muni'].split('|')[1] : "";

							if (!prefCd ||
							    (prefCd == data.result[0]['prefCd'] && !muniCd) ||
							    (prefCd == data.result[0]['prefCd'] && muniCd == data.result[0]['muniCd'])){
							    err = false;
							}
						}
					});
				
					if (!err) {
						temp=$(this).find('address').text().split('/');
						addr=new Array();
						dispAddr = "";
						for (var i=0; i<temp.length; i++){
							addr[addr.length] = temp[i];
							dispAddr += temp[i];
						}

						n = CurrentResultsList.length;
						CurrentResultsList[n] = new Array();
						if (addr[0]) CurrentResultsList[n]['pref']=addr[0];
						if (addr[1]) CurrentResultsList[n]['muniNm']=addr[1];
						if (addr[2]) CurrentResultsList[n]['lv01']=addr[2];
						CurrentResultsList[n]['longitude'] = $(this).find('longitude').text();
						CurrentResultsList[n]['latitude'] = $(this).find('latitude').text();
						CurrentResultsList[n]['value'] = dispAddr;
						CurrentResultsList[n]['series'] = "STATION";
					}
				}
			});

			if(target.indexOf('shisetsu')>=0){
				$.proxy(searchFacility,CS_Obj)(parameter);
			}else if (target.indexOf('chimei')>=0){
				$.proxy(searchPlace,CS_Obj)(parameter);
			}else{
				$.proxy(showResults,CS_Obj)(parameter);
			}
		}
	}
	/*駅検索 ここまで*/

	/*公共施設検索 ここから*/
	function searchFacility(parameter){
		var url = "";

		var target = parameter['tl'];

		var constraint="";
		var tmp;
		if (parameter['pref'] != ""){
			tmp = parameter['pref'].split('|');
			constraint += "&prefCd=" + encodeURIComponent(tmp[1]);
		}
		if(parameter['muni']) {
			tmp = parameter['muni'].split('|');
			constraint += "&muniCd=" + encodeURIComponent(tmp[1]);
		}
		url = ChimeiSearch.SHISETSU_SEARCH + 
			'?searchWord=' + parameter['query'] + constraint;

		parameter['request'] = url;

		function getRusult(json){
			$.proxy(readyStateChangeHandler_shisetsu, this)(json['result']);
		}

		$.ajax({
			type: "GET",
			url:ChimeiSearch.INTERFACE,
			data: parameter,
			dataType: "jsonp",
			timeout: 30000,
			success: getRusult,
			error:function(){
				var resultElement = $("#cs_result");
				resultElement.empty();
				resultElement.append($("<div style='padding:10px;text-align:center;color:red;'>公共施設検索に失敗しました。</div>"));
				document.getElementById("cs_search_button").disabled = false;
			}
		});

		function readyStateChangeHandler_shisetsu(json){
			if (json.indexOf('{"result":[') != -1){
				var result = json;
				var n, pref;
				var obj;
				obj = eval("obj=" + result);

				for(var i=0; i<obj.result.length; i++){
					n = CurrentResultsList.length;
					CurrentResultsList[n] = new Array();
					pref=obj.result[i].muniCd.substr(0, obj.result[i].muniCd.length-3);
					CurrentResultsList[n]['pref']=pref;
					CurrentResultsList[n]['muniCd']=obj.result[i].muniCd;
					CurrentResultsList[n]['longitude'] = obj.result[i].longitude;
					CurrentResultsList[n]['latitude'] = obj.result[i].latitude;
					CurrentResultsList[n]['series'] = "FACILITY";

					pref = parseInt(pref);
					CurrentResultsList[n]['value']=obj.result[i].shisetsuNm;
				}
			}

			if(target.indexOf('chimei')>=0){
				$.proxy(searchPlace,CS_Obj)(parameter);
			}else{
				$.proxy(showResults,CS_Obj)(parameter);
			}
		}
	}
	/*公共施設検索 ここまで*/

	/*地名検索 ここから*/
	function searchPlace(parameter){
		var url = "";
		var target = parameter['tl'];

		var constraint="";
		var tmp;
		if (parameter['pref'] != ""){
			tmp = parameter['pref'].split('|');
			constraint += "&prefCd=" + encodeURIComponent(tmp[1]);
		}
		if(parameter['muni']) {
			tmp = parameter['muni'].split('|');
			constraint += "&muniCd=" + encodeURIComponent(tmp[1]);
		}

		url = ChimeiSearch.CHIMEI_SEARCH + 
			'?searchWord=' + parameter['query'] + constraint;

		parameter['request'] = url;

		function getRusult(json){
			$.proxy(readyStateChangeHandler_chimei, this)(json['result']);
		}

		$.ajax({
			type: "GET",
			url:ChimeiSearch.INTERFACE,
			data: parameter,
			dataType: "jsonp",
			timeout: 30000,
			success: getRusult,
			error:function(){
				var resultElement = $("#cs_result");
				resultElement.empty();
				resultElement.append($("<div style='padding:10px;text-align:center;color:red;'>地名検索に失敗しました。</div>"));
				document.getElementById("cs_search_button").disabled = false;
			}
		});

		function readyStateChangeHandler_chimei(json){
			if (json.indexOf('{"result":[') != -1){
				var result = json;
				var n, pref;
				var obj;
				obj = eval("obj=" + result);

				for(var i=0; i<obj.result.length; i++){
					n = CurrentResultsList.length;
					CurrentResultsList[n] = new Array();
					pref=obj.result[i].muniCd.substr(0, obj.result[i].muniCd.length-3);
					CurrentResultsList[n]['pref']=pref;
					CurrentResultsList[n]['muniCd']=obj.result[i].muniCd;
					CurrentResultsList[n]['longitude'] = obj.result[i].longitude;
					CurrentResultsList[n]['latitude'] = obj.result[i].latitude;
					CurrentResultsList[n]['series'] = "PLACE";

					CurrentResultsList[n]['value']=obj.result[i].chimeiNm;
				}
			}
			$.proxy(showResults,CS_Obj)(parameter);
		}
	}
	/*地名検索 ここまで*/

	function showResults(parameter){

		var searchButtonElement = document.getElementById("cs_search_button");

		if (CurrentResultsList.length == 0) {
			var resultElement = $("#cs_result");
			resultElement.empty();
			resultElement.append($("<div style='padding:10px;color:red;'></div>").append("「"+ decodeURIComponent(parameter['query']) +"」は見つかりませんでした。"));
			searchButtonElement.disabled = false;
			return;
		} else {
			CurrentPage = 1;
			if (parameter['am']) CurrentSelectId = 0;
			$.proxy(writeResultsList, this)(CurrentPage);
		}

		searchButtonElement.disabled = false;
		//地図を自動的に移動
		if (parameter['am']){
			var x = CurrentResultsList[0]["longitude"];
			var y = CurrentResultsList[0]["latitude"];
			var v;
			if (CurrentResultsList[0]['histNm']){
				v = CurrentResultsList[0]["histNm"];
			}else{
				v = CurrentResultsList[0]["value"];
			}
			var zoom = 15;
			if (parameter['am'].match(/^[+-]?[0-9]+$/)){
				zoom = parseInt(parameter['am']);
			}
			
			map.setCenter(new OpenLayers.LonLat(x, y).transform(projection4326, projection900913), zoom);
//			this.mapEventHandler.moveCenter(x,y,v,(BaseZoomLevel+10));
		}
	}

	function writeResultsList(page){
		var resultElement = $("#cs_result");
		resultElement.empty();

		resultElement.append("<div class='cs_result_top'><font color='green' size='2'>　検索結果:"+ (CurrentResultsList.length) +"件</font>　</div>"); // -- merge1227
		var results = $("<div></div>");
		resultElement.append(results);

		var from = (page-1) * 10;
		var to = from + 10;

		if (CurrentResultsList.length < to) to = CurrentResultsList.length;

		for (var i=from; i<to; i++){
			var line ="";
			
			if (CurrentSelectId == i){
				line ="<div class='cs_block_select'><span class='cs_result_line_select'>";
				line += CurrentResultsList[i]['value'];
				line += "</span>";
			}else{
				line ="<div class='cs_block2'><a href='javascript:void(0);' class='cs_result_line2'>";
				line += CurrentResultsList[i]['value'];
				line += "</a>";
			}

			if (CurrentResultsList[i]['series'] == "PLACE" || CurrentResultsList[i]['series'] == "FACILITY"){
				var gsi,result,obj;
				var pref = CurrentResultsList[i]['pref'];
				var muniCd = CurrentResultsList[i]['muniCd'];
				var muniNm="";

				gsi = new GsiJsLibrary(muniCd);
				result = gsi.getMunicipality();
				if (!result) continue;
				
				obj = eval("obj=" + result);
				muniNm = obj.result[0].muniNm;
				muniNm = muniNm.replace('　', '');

				line += "<p style=\"padding-left:5px;\"><font size=1>" + PREF_TABLE[pref-1][0] + muniNm + "</font></p>";
				CurrentResultsList[i]['histNm'] = CurrentResultsList[i]['value'] + "（" + PREF_TABLE[pref-1][0] + muniNm + ")";
			}
			line += "</div>";
			// 検索結果を行にマッピング
			var lineObj = $(line);
			lineObj.attr({"_feature_index":i});
			lineObj.click(CS_Obj.clickResult);
			results.append(lineObj);
		}

		if (page > 1 || CurrentResultsList.length > page*10){
			var table = "<br><table><tr>";
			from = 0;
			to = 0;

			table += "<td width = '80' align='left'>";
			if (page > 1){
				table += "<a href='javascript:void(0);' class='cs_result_line2' id='prev'><<</a>";
			}
			table += "</td>";

			table += "<td width = '80' align='center'>";

			from = page-2;
			if (from<1) from=1;
			to = from+4;

			var tmp;
			if (parseInt(CurrentResultsList.length%10) == 0){
				tmp = parseInt(CurrentResultsList.length/10);
			}else{
				tmp = parseInt(CurrentResultsList.length/10) + 1;
			}

			if (to>tmp){
				to = tmp;
			}
			
			for(var i=from; i<=to; i++){
				if (i==page){
					table += "<span class='cs_result_line2'>" + i + "</span>";
				}else{
					table += "<a href='javascript:void(0);' class='cs_result_line2' id='page" + i + "'>" + i + "</a>";
				}
			}

			table += "</td>";

			table += "<td width = '80' align='right'>";
			if (CurrentResultsList.length > page*10){
				table += "<a href='javascript:void(0);' class='cs_result_line2' id='next'>>></a>";
			}
			table += "</td>";
			table += "</tr></table>";
			resultElement.append(table);

			resultElement.find("#prev").click($.proxy(function(){
				$.proxy(writeResultsList, this)(page-1);
//				this.writeResultsList(page-1);
			},this));

			resultElement.find("#next").click($.proxy(function(){
				$.proxy(writeResultsList, this)(page+1);
				//this.writeResultsList(page+1);
			},this));

			if (from>0){
				var start = from;
				for(var i=from; i<=to; i++){
					
					resultElement.find("#page" + i).click($.proxy(function(e){
						$.proxy(writeResultsList, this)(parseInt(e.currentTarget.id.replace("page","")));
//						this.writeResultsList(parseInt(e.currentTarget.id.replace("page","")));
					},this));
				}
			}
		}
		CurrentPage = page;
	}
	
	/**
	 * 地名検索で使用できるレイヤーの一覧を取得します。
	 */
	function loadLayerList() {
	
		// コンボボックスに格納
		var areaLayersElement = this.find("#cs_area_pref");
		areaLayersElement.empty();
		var targetLayersElement = this.find("#cs_target_layers");
		targetLayersElement.empty();
		
		var optStr = "<option value=''>未選択</option>";
		areaLayersElement.append($(optStr));

		for (var i in PREF_TABLE) {
			var pref = PREF_TABLE[i];
			
			optStr = "<option value='" + (i + 1) + "'>" + pref[0] + "</option>";
			areaLayersElement.append($(optStr));
		}
/*	
		$.ajax({
			type: "GET",
			url:	ChimeiSearch.SERVER_ROOT+"layer_list",
			data: {
				"f" : "JSON"
			},
			dataType: "jsonp",
			success: $.proxy(function(data,status) {
				if (data.error) {
					alert("検索範囲を取得出来ませんでした。");
					if (window.console) {
						window.console.log("Error:"+data.error);
					}
					return;
				} 
				// コンボボックスに格納
				var areaLayersElement = this.find("#cs_area_pref");
				areaLayersElement.empty();
				var targetLayersElement = this.find("#cs_target_layers");
				targetLayersElement.empty();
				//var firstAreaLayerId = null;
				
				var optStr = "<option value=''>未選択</option>";
				areaLayersElement.append($(optStr));
				for (var i = 0; i < data.area_layers.length;i++) {
					optStr = "<option value='"+data.area_layers[i].id+"'>"+data.area_layers[i].title+"</option>";
					areaLayersElement.append($(optStr));
				}
*/
/*	
				var liStr = "<li style=\"border:1px solid white;margin:0px;\"><table><tr>";
				for (var i = 0; i < data.target_layers.length;i++) {
					liStr += "<label><td><input type=\"checkbox\" name=\"cs_target\" ";
					liStr += "value=\""+data.target_layers[i].id+"\" ";
					if (i == 0) {
						liStr += "checked";
					}
					liStr += "></td><td>";
					liStr += data.target_layers[i].title;
					liStr += "</td></label>";
				}
				liStr += "</tr></table><div style='height:5px;'></div><font color='red' size='1'>住所ではありません。ご注意くださいね。</font></li>";
				targetLayersElement.append($(liStr));	

				// 初回は、選択されているレイヤーのオブジェクトを取得
				// this.loadAreaObjectList(firstAreaLayerId);
			},this)
			
		});
*/
	}

	/**
	 * 地名検索で使用するレイヤーオブジェクトの一覧を取得します。
	 */
	function loadAreaObjectList(areaLayerId) {
	
		if (areaLayerId) {
			var gsi = new GsiJsLibrary(areaLayerId)						//オブジェクトを作成
			
			var data;
			if (areaLayerId == 1){
				data = gsi.getHokkaidoMuniList();							//市町村リストを取得
			}
			else {
				data = gsi.getMunicipalityList();						//市町村リストを取得
			}
			var jsonData = eval("(" + data + ")");						//JSONに変換

			var areaObjectsElement = this.find("#cs_area_muni");
			
			var optStr = "<option value='*'>未選択</option>";
			areaObjectsElement.append($(optStr));
			var extents = [];
			var OpenLayers = this.mapEventHandler.getOpenLayers();
			var geojson_format = new OpenLayers.Format.GeoJSON();

			for (var i = 0; i < jsonData.result.length; i++){
			
				var data = jsonData.result[i];
			
				optStr = "<option value='";
				optStr += data.muniCd;
				optStr += "'>";
				optStr += data.muniNm;
				optStr +="</option>";
				areaObjectsElement.append($(optStr));
				
				// muniCdをキーにして、矩形を保存
				var geom = new OpenLayers.LonLat(data.longitude, data.latitude);
				extents[data.muniCd] = geom;
			}
			this.currentAreaObjects = extents;
			areaObjectsElement[0].disabled = false;
/*
			resultStr = "";
			for(var i = 0; i < jsonData.result.length; i++){				//要素を取り出して行きます
				resultStr += jsonData.result[i].muniCd;						//市町村コード
				resultStr += ' ' + jsonData.result[i].muniNm;				//市町村名
				resultStr += ' ' + jsonData.result[i].muniKana;				//読み仮名
				resultStr += ' ' + jsonData.result[i].longitude;			//役所の経度
				resultStr += ' ' + jsonData.result[i].latitude + '<BR>';	//役所の緯度
			}
*/			
		} else {
			// コンボボックスに格納
			var areaObjectsElement = this.find("#cs_area_muni");
			areaObjectsElement.empty();
		}
/*
		if (areaLayerId) {
			$.ajax({
				type: "GET",
				url:	ChimeiSearch.SERVER_ROOT+"area_list",
				data: {
					"f" : "GeoJSON",
					"al" : areaLayerId
				},
				dataType: "jsonp",
				success: $.proxy(function(data,status) {
					// コンボボックスに格納
					var areaObjectsElement = this.find("#cs_area_muni");
					areaObjectsElement.empty();
					if (data.error) {
						areaObjectsElement[0].disabled = false;
						alert("検索対象を取得出来ませんでした。");
						if (window.console) {
							window.console.log("Error:"+data.error);
						}
						return;
					} 
					var features = data.result.features;
					// areaLayerIdの後ろ2文字は、lgcodeとします。
					// ハーコーディングです。
					var lgcode = areaLayerId.substring(areaLayerId.length - 2);
					var optStr = "<option value='@lgcode:"+lgcode+"*'>未選択</option>";
					areaObjectsElement.append($(optStr));
					var extents = [];
					var OpenLayers = this.mapEventHandler.getOpenLayers();
					var geojson_format = new OpenLayers.Format.GeoJSON();

					for (var i = 0; i < features.length; i++) {
						optStr = "<option value='";
						optStr += features[i].properties.geom_id;
						optStr += "'>";
						optStr += features[i].properties.title;
						optStr +="</option>";
						areaObjectsElement.append($(optStr));
						// geom_idをキーにして、矩形を保存
						var geom = geojson_format.parseGeometry(features[i].geometry);
						extents[features[i].properties.geom_id] = geom;
					}
					this.currentAreaObjects = extents;
					areaObjectsElement[0].disabled = false;
				},this)
			});
		} else {
			// コンボボックスに格納
			var areaObjectsElement = this.find("#cs_area_muni");
			areaObjectsElement.empty();
		}
*/
	}
};
})(jQuery);




/** OpenLayersのクラスの簡易版 **/
ChimeiSearch.Class = function() {
    var Class = function() {
        if (arguments) {
            this.initialize.apply(this, arguments);
        }
    };
    var extended = {};
    var parent, initialize, Type;
    for (var i=0, len=arguments.length; i<len; ++i) {
        Type = arguments[i];
        if(typeof Type == "function") {
            if(i == 0 && len > 1) {
                initialize = Type.prototype.initialize;
                Type.prototype.initialize = function() {};
                extended = new Type();
                if(initialize === undefined) {
                    delete Type.prototype.initialize;
                } else {
                    Type.prototype.initialize = initialize;
                }
            }
            parent = Type.prototype;
        } else {
            parent = Type;
        }
        ChimeiSearch.extend(extended, parent);
    }
    Class.prototype = extended;
    return Class;
};

ChimeiSearch.extend = function(destination, source) {
    destination = destination || {};
    if (source) {
        for (var property in source) {
            var value = source[property];
            if(value !== undefined) {
                destination[property] = value;
            }
        }
        var sourceIsEvt = typeof window.Event == "function" && source instanceof window.Event;

        if(!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty('toString')) {
            destination.toString = source.toString;
        }
    }
    return destination;
};



//-- OpenLayersのハンドラ
ChimeiSearch.OpenLayersDefaultHandler = ChimeiSearch.Class({
	initialize: function(config) {
		this.mapObj = config.mapObj;
		if (config.webtis) {
			this.webtis = config.webtis;
		}
		if (config.OpenLayers) {
			this.OpenLayers = config.OpenLayers;
		}
	},
	// 初期化
	initHandler : function() {
		// 描画用のレイヤを用意
		// OpenLayersのMapオブジェクトを取り出して、描画を行います。
		var OpenLayers = this.getOpenLayers();
		this.layer = new OpenLayers.Layer.Vector("temp");
		this.mapObj.addLayer(this.layer);							
		this.drawControl = new OpenLayers.Control.DrawFeature(this.layer, OpenLayers.Handler.Polygon);
		this.drawControl.featureAdded = $.proxy(function(newFeature) {
			// 選択用の範囲オブジェクトは、一つだけ。
			for (var i = 0; i < this.layer.features.length; i++) {
				if (newFeature != this.layer.features[i]) {
					this.layer.removeFeatures(this.layer.features[i]);
				}
			}
			if (newFeature.geometry.components[0].components.length <= 3) {
				this.layer.removeFeatures(newFeature);
				return;
			}
		},this);
	},
	getWebtis: function() {
		if (this.webtis) {
			return this.webtis;
		}
		return webtis;
	},
	getOpenLayers: function() {
		if (this.OpenLayers) {
			return this.OpenLayers;
		}
		return OpenLayers;
	},
	getProjection : function() {
		if (!this.projection) {
			var OpenLayers = this.getOpenLayers();
			this.projection = new OpenLayers.Projection("EPSG:4326");
		}
		return this.projection;
	},
	// 検索結果を選択したときの処理
	resultSelected : function (feature,csSearch) {
		var point = feature.geometry.getCentroid();
		// 地図の投影法に合わせる
		var a = point.transform(this.getProjection(),this.mapObj.getProjectionObject());
		var OpenLayers = this.getOpenLayers();
		var zoomLevel = this.getNumZoomLevels()-4;
		if (zoomLevel < 0) {
			zoomLevel = this.getNumZoomLevels()-1;
		}
		this.mapObj.setCenter(new OpenLayers.LonLat(a.x,a.y),zoomLevel);
		
		//2回目以降は前のマーカーを消す
		if(flagmarker == 1){
		map.removeLayer(map.getLayersByName('Marker')[0]);
		}
		//マーカーをおく
		var marker = new OpenLayers.Layer.Markers("Marker");
		this.mapObj.addLayer(marker);
		marker.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(a.x,a.y)));
		flagmarker = 1;
	},
	// S 復元
	// 地図上でエリアを描画を開始するときの処理
	startDrawArea : function () {
		if (this.layer == null) {
			this.initHandler();
		}
		this.mapObj.addControl(this.drawControl);
		this.drawControl.activate();					
	},
	// 地図上でエリアを描画を終了するときの処理
	stopDrawArea : function () {
		if (this.layer == null) {
			this.initHandler();
		}
		this.mapObj.removeControl(this.drawControl);
		this.layer.removeAllFeatures();
		this.drawControl.deactivate();
	},
	// 描画した形状を取得
	getDrawArea :  function() {
		if (this.layer == null) {
			this.initHandler();
		}
		if (this.layer.features.length == 0) {
			// 描画した範囲は、存在しません。
			return null;
		}
		// WKTでかえします。
		var a = this.layer.features[0].geometry.clone().transform(this.mapObj.getProjectionObject(), this.getProjection());
		return a.toString();
	},
	// エリアが選択されたときに呼び出されます。
	areaChanged : function(geom) {
		var webtis = this.getWebtis();
		var a = geom.getBounds().transform(this.getProjection(),webtis.map.getProjectionObject());
		webtis.map.zoomToExtent(a);
	},
	// E 復元
	// 検索結果を選択したときの処理
	moveCenter : function (x,y,v,zoom) {
		var OpenLayers = this.getOpenLayers();
		var zoomLevel;

		if (zoom){
			zoomLevel = zoom;
		}else{
			zoomLevel = this.getNumZoomLevels();
		}
		
		// 地図の投影法に合わせる
		this.mapObj.setCenter(new OpenLayers.LonLat(x,y).transform(this.getProjection(),this.mapObj.getProjectionObject()),zoomLevel);
		
		//2回目以降は前のマーカーを消す
		if(flagmarker == 1){
			map.removeLayer(map.getLayersByName('Marker')[0]);
			flagmarker = 0;
		}

		if (zoomLevel > BaseZoomLevel){
			//マーカーをおく
			var marker = new OpenLayers.Layer.Markers("Marker");
			this.mapObj.addLayer(marker);
			
//			var size = new OpenLayers.Size(30,30);
//			var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
//			var icon = new OpenLayers.Icon("./image/marker_icon.PNG", size, offset);
//			marker.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(x,y).transform(this.getProjection(),this.mapObj.getProjectionObject()),icon));
			marker.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(x,y).transform(this.getProjection(),this.mapObj.getProjectionObject())));
			flagmarker = 1;
		}

		if (v!=""){
			var mapMeta = webtisMap.getCurrentMetaData();
			var str = "";
			if (mapMeta) str = mapMeta.dataId;
			var histURL = "http://portal.cyberjapan.jp/site/mapuse/index.html?lon=" + x + "&lat=" + y + "&z=" + (zoomLevel);	// -- merge1227
			if (str!="") histURL += "&did=" + str;
			document.cookie = "hist=" + encodeURIComponent(v) + "; expires=Tue, 1-Jan-2030 00:00:00 GMT; path=/";
			document.cookie = "histURL=" + histURL + "; expires=Tue, 1-Jan-2030 00:00:00 GMT; path=/;";
		}
	},
	
	getNumZoomLevels : function() {
		return this.mapObj.getNumZoomLevels();
	}
});

//20120905 sato add
function syousai(flag)	{
/*
		$("#syousaiSetting").animate(
	      {height: "toggle", opacity: "toggle"},
	      500
		);
*/
	var str;
	if(flag)	{
		str = "<a href='javascript:void(0)' onClick='syousai(0);'><font size=2>閉じる▲</font></a>";
		document.getElementById("syousaiBox").innerHTML=str;
		document.getElementById("syousaiSetting").style.display="block";
	}else{
		str = "<a href='javascript:void(0)' onClick='syousai(1);'><font size=2>詳細設定▼</font></a>";
		document.getElementById("syousaiBox").innerHTML=str;
		document.getElementById("syousaiSetting").style.display="none";
	}
}


//
// @source = changelayer.js
//
/** レイヤ表示用 JQueryプラグイン実装 **/
var ShowLayer = {};
var receiveDomain = 'http://gp.cyberjapan.jp';

(function($){
jQuery.fn.ShowLayer = function(config) {
	this.config = config;

	var treeData = [{title: "作図情報", key: "edited", select: true, icon: false}];
	var layerTitle = "レイヤー名: ";

	// 作図が行われた処理に対しての委譲先
	this.mapEventHandler = this.config.mapEventHandler;
	if (this.config.inFrame != false) {
		this.config.inFrame = true;
	}

	// 関数を登録
	this.addNode = $.proxy(addNode, this);
	this.removeNode = $.proxy(removeNode, this);
	this.getMapObject = $.proxy(getMapObject,this);
	this.getWebtis = $.proxy(getWebtis,this);
	this.getOpenLayers = $.proxy(getOpenLayers,this);
	this.getRoot = $.proxy(getRoot, this);
	this.init_ctrl = $.proxy(init_ctrl, this);
	this.changeOpacity = $.proxy(changeOpacity, this);
	this.setOpacityStyle = $.proxy(setOpacityStyle, this);
	this.disableTree = $.proxy(disableTree, this);
	this.clearLayerStatus = $.proxy(clearLayerStatus, this);

	function init_ctrl() {
		$("#sakuzutree").dynatree({
			checkbox: true,
			selectMode: 3,
			children: treeData,
			
			// チェックのオンオフ
			onSelect: $.proxy(
				function(select, dtnode) {
				
					if (select) {
						for (var i = 0; i < sakuzuModule.layers.length; i++) {
							if (sakuzuModule.layers[i].filename == dtnode.data.title ||
							    (!sakuzuModule.layers[i].filename && dtnode.data.title == "作図情報")) {
								sakuzuModule.layers[i].setVisibility(true);
							}
						}
					}
					else {
						//checked=trueでなければレイヤ非表示 
						if (sakuzuModule.CurrentMode == "Operation") sakuzuModule.unselectFeature();
						if (sakuzuModule.CurrentMode == "none"){
							sakuzuModule.disablePopupLayer();
							if(dispFlg){
								sakuzuModule.enablePopupLayer();
							}
							if (sakuzuModule.selectPopupCtrl) sakuzuModule.selectPopupCtrl.unselectAll();
						}
						for (var i = 0; i < sakuzuModule.layers.length; i++) {
							if (sakuzuModule.layers[i].filename == dtnode.data.title ||
							(!sakuzuModule.layers[i].filename && dtnode.data.title == "作図情報")){
								sakuzuModule.layers[i].setVisibility(false);
							}
						}
					}
				}, this),

			// 選択状態
			onActivate: function(dtnode) {
				$("#sz_layer_name")[0].innerHTML = layerTitle + dtnode.data.title;
				
				for (var i = 0; i < sakuzuModule.layers.length; i++) {
					
					var layer = sakuzuModule.layers[i];
				
					if (layer.filename == dtnode.data.title ||
					    (!layer.filename && dtnode.data.title == "作図情報")) {
					    
						sakuzuSlider.setOpacity(layer != null ? layer.opacity : 1);
						break;
					}
				}
			},
			
			onDblClick: function(dtnode, event) {
				dtnode.toggleSelect();
			},

			onKeydown: function(dtnode, event) {
				if (event.which == 32) {	// スペースキー
					dtnode.toggleSelect();
					return false;
				}
			},
			
			initId: "sakuzuTreeData",
			
			cookieId: "ui-dynatree-std",
			idPrefix: "ui-dynatree-std-"
		});
		
		$("#sz_layer_name")[0].innerHTML = layerTitle;
	};

	// KML保存時に使用するForm
	var kmlPanel = $("\
		<div id=\"cs_main\" class=\"ui-widget-content ui-corner-all uiTabPanel\">\
			<div class=\"cs_block\">\
				<div id=\"layer_block\" style=\"solid gray;maximum-height:90px; font-size:12px;\" >\
					<form method=\"post\" enctype=\"multipart/form-data\" id=\"sz_kml_uploadform\" target=\"sz_kml_uploadframe\">\
						<div style=\"float:left;\" id=\"fields\" class=\"sz_kml_files\">\
							<input type=\"hidden\" id=\"sz_kml_file\" name=\"fnm\" value=\"\" />\
							<input type=\"hidden\" id=\"sz_kml_mode\" name=\"mode\" value=\"\" />\
							<input type=\"file\" id=\"sz_kml_file1\" name=\"file1\" style=\"width:200px;\" multiple>\
							<input type=\"hidden\" id=\"sz_kml_url\" name=\"receiveUrl\" value=\"\" />\
						</div>\
						<div style=\"float:right\">\
							<button id=\"sz_kml_upload_button\">読込</button>\
						</div>\
					</form>\
					<button id=\"sz_kml_file_delete\">読込んだファイルを全て削除</button>&nbsp;<br>\
					<iframe id=\"sz_kml_uploadframe\" name=\"sz_kml_uploadframe\" style=\"display:none;height:1px;\" src=\"about:blank\"></iframe>\
					<div id=\"sakuzutree\" style=\"width:270px; height:280px; margin-bottom: 13px;\"></div>\
					<div id=\"layerStatus\" style=\"width:260px; border: 1px solid gray; padding: 2px 0px 1px 4px; margin-bottom: 2px\">\
						<div id=\"sz_layer_name\" style=\"font-size:13px; font-weight: bolder; margin: 4px\"></div>\
						<div style=\"float:left; width:120px\">\
							<div id=\"sz-slider-value\" style=\"font-size:13px\" ></div>\
						</div>\
						<div style=\"float:right; spacing:1px 0px 0px 0px;\">\
							<div id=\"sz-slider\"></div>\
						</div>\
						<div style=\"clear:both; height:2px\"></div>\
						<div class=\"cs_block\">\
							<button id=\"sz_kml_button\" style=\"font-size:12px;\">保存</button>\
							<span id=\"title\">\
								<span id=\"cs_level0\"><font size=2>　　保存形式</font></span>\
								<label><input type=\"radio\" name=\"sz_save_type\" value=\"kml\" style=\"margin-bottom:5px;\" checked><font size=2>kml</font></label>\
								<label><input type=\"radio\" name=\"sz_save_type\" value=\"kmz\" style=\"margin-bottom:5px;\"><font size=2>kmz</font></label>\
							</span>\
						</div>\
					</div>\
					<div>\
						<button id=\"sz_all_kml_button\">一括保存</button>\
					</div>\
				</div>\
			</div>\
		</div>\
	");
	this.append(kmlPanel);
	
	// 読み込んだファイルを全て削除ボタンの処理
	var deleteBtn = kmlPanel.find("#sz_kml_file_delete");
	deleteBtn.click(
		$.proxy(function() {

			if (confirm("読み込んだ全ての図形を削除してもよろしいですか？\n※この操作は取り消せません")){
				// 読み込んだ図形のみ削除
				var count = sakuzuModule.layers.length;
				for (var j = count-1; j >= 0; j--) {
					if (sakuzuModule.layers[j].filename){
						sakuzuModule.deleteLayer(sakuzuModule.layers[j]);
					}
				}
				sakuzuModule.operationHistory.removeAllStacks();
				
				 if (sakuzuModule.CurrentMode == "Operation"){
					// 作図パレットが表示されている場合はこちら
					sakuzuModule.setOperationModeControl();
					sakuzuModule.unselectFeature();
				} else{
					// 作図パレットが表示されていない場合はこちら
					sakuzuModule.disablePopupLayer();
					if (dispFlg){
						sakuzuModule.enablePopupLayer();
					}
					if (sakuzuModule.selectPopupCtrl) {
						sakuzuModule.selectPopupCtrl.unselectAll();
					}
				}
				
				this.clearLayerStatus();
			}
		},this)
	);

	// KMLアップロード時に使用するForm
	var kmlUploadButton = kmlPanel.find("#sz_kml_upload_button");
	kmlUploadButton.click(
		$.proxy(function() {

			// WEBTISの取得
			var webtis = this.getWebtis();

			var files = document.getElementById('sz_kml_file1').files;
			if(files){
				if(files.length == 0){
					// ファイルが選択されていない場合は、エラーメッセージを表示し、処理を終了する。
					alert('ファイルが選択されていません。');
					return false;
				}
			} else{
				if (kmlPanel.find("#sz_kml_file1")[0].value.length == 0) {
					// ファイルが選択されていない場合は、エラーメッセージを表示し、処理を終了する。
					alert('ファイルが選択されていません。');
					return false;
				}
			}
			
			if (!confirm("KMLファイルを表示するため、国土地理院のサーバに転送し処理してよろしいですか。\n" +
						 "※KMLファイルは表示のためだけに処理され、国土地理院のサーバには保存されません。")){
				return false;
			}

			// ファイルが選択されてる場合は、ファイルを読み込み作図情報を地図に表示する。
			var map = this.getMapObject();

			files = kmlPanel.find("#sz_kml_file1")[0].value;
			files = files.substring(files.lastIndexOf("\\")+1,files.length);
			
			var node = this.getRoot();
			for (var i = 0; i < node.childList.length; i++) {
				if (node.childList[i].data.title == files) {
					alert('同じファイル名のファイルが読込まれています。');
					return false;
				}
			}

			$("#sz_kml_url").val(location.href);
			// 読み込み中は操作をブロック
			var msg = "";
			var style = "";
			var userAgent = window.navigator.userAgent.toLowerCase();
			var appVersion = window.navigator.appVersion.toLowerCase();
			if (userAgent.indexOf('msie') != -1 && appVersion.indexOf("msie 8.") != -1) {
				msg = "読み込み中・・・";
				style = {
					padding: '25px',
					bottom: '30px',
					left: '10px',
					top: map.size.h - 35 + 'px'
				};
			}
			else {
				msg = "<h1>ファイルを読み込んでいます・・・・・</h1>";
				style = { padding: '25px' };
			}
			$.blockUI({message: msg, css: style});
			
//			$.blockUI({message: "<h1>ファイルを読み込んでいます・・・・・</h1>", css:{padding: '25px'}});
			// 背景地図選択不可
			var onmouse_state = document.onmousemove;
			document.onmousemove=null;

			var uploadForm = $(this.find("#sz_kml_uploadform"));
			uploadForm.attr("action",READURL);
			uploadForm.submit();

			var timerId = setTimeout("alert('ファイルの読み込みに失敗しました。'); $.unblockUI();", 20000);

			$.receiveMessage(
				function(e){
					clearTimeout(timerId);
					
					// 複数ファイル読み込み時は「|||」で区切るようにする
					// ファイルデータなしの時の処理を加える
					var str = '';
					if(e.data != null && e.data != ''){
						str = e.data.split("|||");
					}
					// 処理中のメッセージを出す
					var count = 0;
					for(var i=0; i < str.length; i++){
						if(str[i] != ''){
							try {
								json = str[i];
								json = json.replace(/\n/g, '<br>');
								//json = $.parseJSON(json);
								json = JSON.parse(json);
								if (json.layer.length > 0){
									Sakuzu.loadJSON(json, true);
									count += json.layer.length;
								}
							}
							catch (e) {
								// javascript処理中にエラーが発生したら、画面ブロックを解除
								$.unblockUI();
								// 背景地図選択不可
								if(onmouse_state != null){
									mousecontrol();
								}
								// パレット出したままでも即座に編集可能にする
								if (sakuzuModule.CurrentMode == "Operation"){
									sakuzuModule.disablePopupLayer();
									sakuzuModule.setOperationModeControl();
									sakuzuModule.unselectFeature();
								}
								alert("ファイル読み込み中に例外が発生しました。");
							}
						}
					}
					if(str == ''){
						alert("ファイル読み込み中に例外が発生しました。");
					}else if(count == 0){
						alert("レイヤーが見つかりませんでした。");
					}
					// 読み込み処理が終了したら画面ブロックを解除
					$.unblockUI();
					// 背景地図選択不可
					if(onmouse_state != null){
						mousecontrol();
					}
					// パレット出したままでも即座に編集可能にする
					if (sakuzuModule.CurrentMode == "Operation"){
						sakuzuModule.disablePopupLayer();
						sakuzuModule.setOperationModeControl();
						sakuzuModule.unselectFeature();
					}

				}, receiveDomain
			);

		},this)
	);

	// ファイルを選択したときに拡張子をチェック
	var kmlFileElement = kmlPanel.find("#sz_kml_file1");
	kmlFileElement.change(
		$.proxy(function(e) {
			// 拡張子は、kml,kmzのみ許可する
			var files = e.target.files;
			if(files){
				for(var i=0; i < files.length; i++){
					var fileName = files[i].name;
					if (!fileName.match(/\.(kml|kmz)$/i)) {
						e.target.value = null;
						alert("アップロード可能なファイルは、kml及びkmzです。");
						return;
					}
				}
			} else{
				// ie用
				var fileName = e.target.value.toLowerCase();
				if (!fileName.match(/\.(kml|kmz)$/i)) {
					e.target.value = null;
						alert("アップロード可能なファイルは、kml及びkmzです。");
					return;
				}
			}
		},this)
	);

	// KML保存時に使用するForm
	var requestForm = "<form method=\"post\" id=\"sz_kml_form\">";
	requestForm += "<input type=\"hidden\" name=\"content\" value=\"\" id=\"sz_kml_content\">";
	requestForm += "<input type=\"hidden\" name=\"outFmt\" value=\"kml\" id=\"sz_kml_fmt\">";
	requestForm += "<input type=\"hidden\" name=\"fname\" value=\"\" id=\"sz_kml_savefile\">";
	requestForm += "</form>";
	var f = $(requestForm);
	kmlPanel.append(f);

	// KML保存ボタンの処理
	var kmlButton = kmlPanel.find("#sz_kml_button");
	kmlButton.click(function(){
		var save_layers = [];
		var node = $("#sakuzutree").dynatree("getActiveNode");
		var filename;
		
		if (!node){
			// 作図情報のノードを取得
			node = $("#sakuzutree").dynatree("getTree").getNodeByKey("edited");
		}

		if (!node.isSelected()){
			alert("保存する作図情報が存在しません。");
			return;
		}

		if (node.data.title == "作図情報") {
			for (var i = 0; i < sakuzuModule.layers.length; i++) {
				// 選択レイヤのみ保存
				if (!sakuzuModule.layers[i].filename) {
					save_layers.push(sakuzuModule.layers[i]);
					var current = Sakuzu.getCurrent();
					var type = $('input[name="sz_save_type"]:checked').val();
					filename = "gsi" + current + "." + type;
				}
			}
		}
		else {
			for (var i = 0; i < sakuzuModule.layers.length; i++) {
				if (sakuzuModule.layers[i].filename == node.data.title){
					save_layers.push(sakuzuModule.layers[i]);
					filename = sakuzuModule.layers[i].filename;
				}
			}
		}
	
		if(save_layers.length > 0){
			$("#sz_kml_form").attr("action",SAVEURL);
			//  アップロードするJSONのコンテンツを作成
			var content = Sakuzu.makeJSONString(save_layers, Sakuzu.baseProjection);
			var type = $('input[name="sz_save_type"]:checked').val();
			$("#sz_kml_content").val(content);
			$("#sz_kml_fmt").val(type);
			$("#sz_kml_savefile").val(filename);
			$("#sz_kml_form").submit();
		} else {
			alert("保存する作図情報が存在しません。");
		}
	});

	// KML一括保存ボタンの処理
	var allKmlButton = kmlPanel.find("#sz_all_kml_button");
	allKmlButton.click(
		$.proxy(function() {
			// WEBTISの取得
			var webtis = this.getWebtis();
			var save_layers = [];

			// 表示レイヤのみ保存
			var root = this.getRoot();
			var selectedNodes = root.tree.getSelectedNodes();
			
			for (var i = 0; i < selectedNodes.length; i++) {
				for (var j = 0; j < sakuzuModule.layers.length; j++) {
				
					if (sakuzuModule.layers[j].filename == selectedNodes[i].data.title ||
						(!sakuzuModule.layers[j].filename && selectedNodes[i].data.title == "作図情報")) {
						save_layers.push(sakuzuModule.layers[j]);
					}
				}
			}

			if(save_layers.length > 0){
				f.attr("action",SAVEURL);
				//  アップロードするJSONのコンテンツを作成
				var content = Sakuzu.makeJSONString(save_layers, Sakuzu.baseProjection);
				var type = $('input[name="sz_save_type"]:checked').val();
				var current = Sakuzu.getCurrent();
				f.find("#sz_kml_content").val(content);
				f.find("#sz_kml_fmt").val(type);
				f.find("#sz_kml_savefile").val("gsi" + current + "." + type);
				f.submit();
			} else {
				alert("保存する作図情報が存在しません。")
			}
		},this)
	);

	//********* 関数 *************//
	// 地図オブジェクトを取得する
	function getMapObject() {
		return this.mapEventHandler.getMapObject();
	}

	// WEBTISを取得する
	function getWebtis() {
		return this.mapEventHandler.getWebtis();
	}

	// OpenLayersを取得する
	function getOpenLayers() {
		return this.mapEventHandler.getOpenLayers();
	}

	function getRoot() {
		return $("#sakuzutree").dynatree("getRoot");
	}

	function addNode(layer_param) {
	
		var root = this.getRoot();
	
		var idx = sakuzuModule == null ? 0 : sakuzuModule.layers.length;
	
		var childNode = root.addChild({
			title: layer_param.name,
			key: idx,
			select: true,
			icon: false
		});
		
		return childNode;
	}

	function removeNode(title) {
		var root = this.getRoot();
		
		for (var i = 0; i < root.childList.length; i++){
			if (root.childList[i].data.title == title) {
				root.childList[i].remove();
				break;
			}
		}
	}
	
	function changeOpacity(opa) {
		var dtnode = $("#sakuzutree").dynatree("getActiveNode");
		if (dtnode != null)
		{		
			for (var i = 0; i < sakuzuModule.layers.length; i++) {
				var layer = sakuzuModule.layers[i];
			
				if (layer.filename == dtnode.data.title) {

					var noFeatureStyle = false;

					for (var j = 0; j < layer.features.length; j++)
					{
						var feature = layer.features[j];

						if (feature.style == null) {
							noFeatureStyle = true;
							break;
						}

						// 透過度の設定
						var tmpStyle = feature.style.defaultStyle ? feature.style.defaultStyle : feature.style.styles['default'].defaultStyle;
						this.setOpacityStyle(tmpStyle, layer.affixStyle, opa);
					}

					// featureにスタイルが設定されていなければ、レイヤーのstyleを設定
					if (noFeatureStyle) {

						// 透過度の設定
						this.setOpacityStyle(layer.styleMap.styles['default'].defaultStyle, layer.affixStyle, opa);
					}
					
					layer.opacity = opa;
					layer.redraw();
				}
				else if (layer.filename == null && dtnode.data.title == '作図情報') {
					
					for (var j = 0; j < layer.features.length; j++) {
						var feature = layer.features[j];

						// 透過度の設定
						var tmpStyle = feature.style.defaultStyle ? feature.style.defaultStyle : feature.style.styles['default'].defaultStyle;
						this.setOpacityStyle(tmpStyle, layer.affixStyle, opa);
					}
					
					layer.opacity = opa;
					layer.redraw();
				}
			}
		}
	}
	
	function setOpacityStyle(targetStyle, affixStyle, opa) {

		// 画像の透過度
		if (targetStyle.graphicOpacity != null) {
			targetStyle.graphicOpacity = (!affixStyle.graphicOpacity ? 1 : affixStyle.graphicOpacity) * (opa == 0 ? 0.01 : opa);
		}

		// 線の透過度
		if (targetStyle.strokeOpacity != null) {
			targetStyle.strokeOpacity = (!affixStyle.strokeOpacity ? 1 : affixStyle.strokeOpacity) * (opa == 0 ? 0.01 : opa);
		}

		// 背景色の透過度
		if (targetStyle.fillOpacity != null) {
			targetStyle.fillOpacity = (!affixStyle.fillOpacity ? 1 : affixStyle.fillOpacity) * (opa == 0 ? 0.01 : opa);
		}
		
		// 文字の透過度
		if (targetStyle.fontOpacity != null) {
			// アイコン＋ラベルがoffならば、文字が見えないような透過度を設定
			targetStyle.fontOpacity = (!affixStyle.fontOpacity ? 1 : affixStyle.fontOpacity) * ((opa == 0 || !iconlabel) ? 0.01 : opa);
		}
	}
	
	function disableTree(isDisable) {
		if (isDisable) {
			$("#sakuzutree").dynatree("disable");
		}
		else {
			$("#sakuzutree").dynatree("enable");
		}
	}
	
	function clearLayerStatus() {
		$("#sz_layer_name")[0].innerHTML = layerTitle;
	}

	return this;
};
})(jQuery);


/** OpenLayersのクラスの簡易版 **/
ShowLayer.Class = function() {
    var Class = function() {
        if (arguments) {
            this.initialize.apply(this, arguments);
        }
    };
    var extended = {};
    var parent, initialize, Type;
    for (var i=0, len=arguments.length; i<len; ++i) {
        Type = arguments[i];
        if(typeof Type == "function") {
            if(i == 0 && len > 1) {
                initialize = Type.prototype.initialize;
                Type.prototype.initialize = function() {};
                extended = new Type();
                if(initialize === undefined) {
                    delete Type.prototype.initialize;
                } else {
                    Type.prototype.initialize = initialize;
                }
            }
            parent = Type.prototype;
        } else {
            parent = Type;
        }
        ShowLayer.extend(extended, parent);
    }
    Class.prototype = extended;
    return Class;
};

ShowLayer.extend = function(destination, source) {
    destination = destination || {};
    if (source) {
        for (var property in source) {
            var value = source[property];
            if(value !== undefined) {
                destination[property] = value;
            }
        }
        var sourceIsEvt = typeof window.Event == "function" && source instanceof window.Event;

        if(!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty('toString')) {
            destination.toString = source.toString;
        }
    }
    return destination;
};


//-- OpenLayersで使用するときのハンドラー
ShowLayer.OpenLayersDefaultHandler = ShowLayer.Class({
	initialize: function(config) {
//		this.config = config;
		this.mapObj = config.mapObj;
		if (config.webtis) {
			this.webtis = config.webtis;
		}
		if (config.OpenLayers) {
			this.OpenLayers = config.OpenLayers;
		}
	},
	getMapObject : function() {
		return this.mapObj;
	},
	getWebtis: function() {
		if (this.webtis) {
			return this.webtis;
		}
		return webtis;
	},
	getOpenLayers: function() {
		if (this.OpenLayers) {
			return this.OpenLayers;
		}
		return OpenLayers;
	}
});
//
// @source = sakuzuslider.js
//

var SakuzuSlider = function() {

	var output = document.getElementById('sz-slider-value');
	var opalabel="透過率調節: ";
	var method = {
		// 表示用の透過率から、実際の透過率を求める
		value2opacity: function(value) {
			return (100 - value) / 100;
		},

		// 実際の透過率から、表示用の透過率を求める
		opacity2value: function (opacity){
			return Math.floor(100 - (opacity * 100));
		},

		// スライダーの値を設定する(0 ～100)
		setValue: function(value){
			output.innerHTML = opalabel + value;
			jQuery('#sz-slider').slider('value', value);
		}
	};
		
	jQuery(function(){
	    jQuery('#sz-slider').slider({
	    	value: 0,

	    	// スライダーの値を変更
	        slide: function(event, ui) {
	        	var value = ui.value;
				output.innerHTML = opalabel + value;
				
				var opa = method.value2opacity(value);
				layerModule.changeOpacity(opa);
			}
	    });
	});
	
	// 透過率を設定する(0～1)
	this.setOpacity = function(opa){
		var opacity = (opa == null) ? 1.0 : opa;
		var value = method.opacity2value(opacity);

		method.setValue(value);
	};
	
	this.disableSlider = function(isDisable) {
		if (isDisable) {
			jQuery('#sz-slider').slider('disable');
		}
		else {
			jQuery('#sz-slider').slider('enable');
		}
	};

	method.setValue(0);
};
//
// @source = selectmap.js
//
/** 背景地図変換画面用Javascript実装 **/

//地図の種類画面フラグ
var mapSelectFlg = 0;

//ボタンのOFF/ONフラグ
var offonflg = 0;

//MapFloatingコントロールのインスタンス(フローティングウィンドウを開くためのボタン)
var mapfloating = null;
 
//MapCloseFloatingコントロールのインスタンス(フローティングウィンドウを閉じるためのボタン)
var mapclosefloating = null;

//コントロール定義
// 右上の地図種別展開アイコンを定義
webtis.Control.MapFloating = OpenLayers.Class(OpenLayers.Control, {
	
	createCtrlImage: function(url, left, handler) {
		var	image = document.createElement('img');
		image.src = url;
		image.title = "地図・空中写真切り替え";
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '74px';
		image.style.height = '31px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown", 
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "click", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "dblclick", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},
	
	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();
			
			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = 10 + "px";
			this.div.style.right = 80 + "px";
			
			this.createCtrlImage("http://portal.cyberjapan.jp/sys/v4/image/floatbefore07.png", 0, function(e) {
//				clickmapfloating();
				OpenLayers.Event.stop(e);
				return false;
			});
		return this.div;
		}
	},
	
	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.top = 10 + "px";
		}
	},
	
	CLASS_NAME: "webtis.Control.MapFloating"
});
 
// 右上の地図種別展開後、閉じるためのコントロール定義
webtis.Control.MapCloseFloating = OpenLayers.Class(OpenLayers.Control, {
	
	createCtrlImage: function(url, left, handler) {
		var	image = document.createElement('img');
		image.src = url;
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '74px';
		image.style.height = '32px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown", 
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "click", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "dblclick", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},
	
	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();
			
			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = 10 + "px";
			this.div.style.right = 80 + "px";
			
			this.createCtrlImage("http://portal.cyberjapan.jp/sys/v4/image/floatafter07.png", 0, function(e) {
				clickmapclosefloating();
				OpenLayers.Event.stop(e);
				return false;
			});
		return this.div;
		}
	},
	
	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.top = 10 + "px";
		}
	},
	
	CLASS_NAME: "webtis.Control.MapCloseFloating"
});

/* マップフローティングを表示するときの処理 */
function clickmapfloating(top) {
	//フローティングウィンドウを出す
//	new $pop( 'mapfloat.html', { type: 'iframe', title: '地図・写真の種類', width: 480, height: 400, varName: 'mapfloat', resize:true } );

	//コントロールを入れ替え
	map.removeControl(mapfloating);
	mapclosefloating = new webtis.Control.MapCloseFloating();
	map.addControl(mapclosefloating);
	mapSelectFlg = 1;	//ウィンドウ表示状態(表示)

	selectmapinit();	//初期化

	var selectmap = document.getElementById("selectmap");
	selectmap.style.top  = top + 'px';		//表示位置設定
	selectmap.style.right = '6px';
	$("#selectmap").animate({height:"show"},"fast");
	selectmap.style.display = 'block';		//表示
}
 
/* マップフローティングを非表示するときの処理 */
function clickmapclosefloating() {
	//フローティングウィンドウを閉じる
//	mapfloat.close();
	var selectmap = document.getElementById('selectmap');

	if (selectmap.style.display == "block"){
		//コントロールの入れ替え
		map.removeControl(mapclosefloating);
		mapfloating = new webtis.Control.MapFloating();
		map.addControl(mapfloating);
		mapSelectFlg = 0;	//ウィンドウ表示状態(非表示)
		$("#selectmap").animate({height:"hide"},"fast",null,function(){selectmap.style.display = "none";});
//		selectmap.style.display = "none";		//非表示する
	}
}

/*フローティングウィンドウから背景地図を変更するための関数*/
function changeOrtho(mapid){
	changeMap(mapid);
}

/*現在使用している地図データにチェックを入れる*/
function selectmapinit(){
	
	//ズームレベル5のデータIDでチェック
	var dataId = webtisMap.dataSet[5].dataId;
	switch (dataId) {
		case 'JAIS' :
			switch (webtisMap.dataSet[15].dataId){
				case 'DJBMO':		document.getElementById('djbmo').checked = true; break;
				case 'D25K2BRWN':	document.getElementById('25000_n').checked = true;  break;
				default:			document.getElementById('25000').checked = true; break;
			}
			break;
		case 'JAISE' :
		case 'english':
			document.getElementById('jaise').checked = true; break;
		case 'RELIEF' :
			document.getElementById('relief').checked = true; break;
		case 'std' :
			switch (webtisMap.dataSet[15].dataId){
				case 'std2012':	document.getElementById('25000').checked = true; break;
				case 'pale' :	document.getElementById('pale').checked = true; break;
				case 'ort' :	document.getElementById('djbmo').checked = true; break;
				default:		document.getElementById('25000_n').checked = true; break;
			}
			break;
	}

	//ズームレベル9のデータIDでチェック
	dataId = webtisMap.dataSet[9].dataId;
	switch (dataId) {
		case 'SPRING' :
			document.getElementById('spring').checked = true;
			break;
		case 'SUMMER' :
		case 'greenshade2012':
			document.getElementById('summer').checked = true;
			break;
		case 'AUTUMN' :
		case 'brownshade2012':
			document.getElementById('autumn').checked = true;
			break;
		case 'WINTER' :
			document.getElementById('winter').checked = true;
			break;
		case 'GRAY' :
		case 'monotoneshade2012':
			document.getElementById('grey').checked = true;
			break;
		case 'BLANK' :
		case 'blank' :
			document.getElementById('blank').checked = true;
	}

}//
// @source = printframe.js
//
/** 印刷プレビュー用Javascript実装 **/

//プリンタボタンインスタンス
var printerControl;

//プリント画面フラグ(0: 印刷プレビュー非表示, 1:表示)
var printMapFlg = 0;

// 印刷サイズフラグ（1:A4縦, 2:A4横, 3:A3縦, 4:A4横）
var printSizeSetting = 1;

// 画質フラグ（0:標準、1:高画質）
var printQualitySetting = 0;

//printsizeコントロールのインスタンス(セレクトメニューを開くためのボタン)
var printsize = null;
 
//printsizecloseコントロールのインスタンス(セレクトメニューを閉じるためのボタン)
var printsizeclose = null;

var printMapReady = false;
var printFrameReady = false;
var printSizeSettings = [0, 0];

var receivedLonLat = null;

// 右上のプリントアイコンを定義
webtis.Control.Printer = OpenLayers.Class(OpenLayers.Control, {
	
	createCtrlImage: function(url, left, handler) {
		var	image = document.createElement('img');
		image.src = url;
		image.id = "img_printer";
		image.disabled = false;
		image.title = "プリント";
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '31px';
		image.style.height = '31px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "click", 
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "dblclick", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},
	
	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();
			
			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = 10 + "px";
			this.div.style.right = 167 + "px";
 
			this.createCtrlImage("http://cyberjapandata.gsi.go.jp/portal/sys/v4/image/printer.png", 0, function(e) {
				printmap(0);
				OpenLayers.Event.stop(e);
				return false;
			});
		return this.div;
		}
	},
	
	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.top = 10 + "px";
		}
	},
	
	CLASS_NAME: "webtis.Control.Printer"
});

// 右上のプリントサイズ選択アイコンを定義
webtis.Control.PrintSize = OpenLayers.Class(OpenLayers.Control, {
	
	createCtrlImage: function(url, left, handler) {
		var	image = document.createElement('img');
		image.src = url;
		image.id = "img_allow_open";
		image.disabled = false;
		image.title = "プリントサイズ選択";
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '15px';
		image.style.height = '31px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "click", 
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "dblclick", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},
	
	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();
			
			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = 10 + "px";
			this.div.style.right = 145 + "px";
 
			this.createCtrlImage("http://cyberjapandata.gsi.go.jp/portal/sys/v4/image/arrow.PNG", 0, function(e) {
				printsizeselect();
				OpenLayers.Event.stop(e);
				return false;
			});
		return this.div;
		}
	},
	
	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.top = 10 + "px";
		}
	},
	
	CLASS_NAME: "webtis.Control.PrintSize"
});
// 右上のプリントサイズ選択セレクトボックスを閉じるためのコントロール定義
webtis.Control.PrintSizeClose = OpenLayers.Class(OpenLayers.Control, {
	
	createCtrlImage: function(url, left, handler) {
		var	image = document.createElement('img');
		image.src = url;
		image.title = "プリントサイズ選択";
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '15px';
		image.style.height = '31px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "click", 
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "dblclick", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},
	
	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();
			
			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = 10 + "px";
			this.div.style.right = 145 + "px";
 
			this.createCtrlImage("http://cyberjapandata.gsi.go.jp/portal/sys/v4/image/arrow.PNG", 0, function(e) {
				printsizeselectclose();
				OpenLayers.Event.stop(e);
				return false;
			});
		return this.div;
		}
	},
	
	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.top = 10 + "px";
		}
	},
	
	CLASS_NAME: "webtis.Control.PrintSizeClose"
});

/*印刷サイズメニューを表示する関数*/
function printsizeselect()	{

	if (!document.getElementById("img_allow_open").disabled){
//		var mod = counter % 2;
		if (!fullscreenMode){	//標準表示
			var top = 98;
		} else {				//全画面表示
			var top = 98 - 62;
		}

		var showprintsize = document.getElementById("showprintsize");
		showprintsize.style.top  = top + 'px';	//表示位置設定
		showprintsize.style.display = 'block';		//表示

		//コントロールを入れ替え
		map.removeControl(printsize);
		printsizeclose = new webtis.Control.PrintSizeClose();
		map.addControl(printsizeclose);
	}
}
 
/*印刷サイズメニューを非表示にする関数*/
function printsizeselectclose()	{
	var selectpanel = document.getElementById('showprintsize');
	if (selectpanel.style.display == 'block'){
		selectpanel.style.display = "none";		//ウインドウを非表示にする
		//コントロールを入れ替え
		map.removeControl(printsizeclose);
		printsize = new webtis.Control.PrintSize();
		map.addControl(printsize);
	}
}

//// ここまで印刷コントロール

//// ここから印刷プレビュー処理

/*印刷プレビュー画面表示*/
function printmap(size){

	printMapFlg = 1;

	printMapReady = false;
	printFrameReady = false;
	printSizeSettings = [0, 0];

	var newValue = size;
	// size=0の場合は前回のサイズでプレビューを表示する。初回時は2
	if (newValue == 0) {
		newValue = printSizeSetting;
	}
	
	if (!document.getElementById("img_printer").disabled){
		webtis.Layer.BaseMap.isShowLegend = false;

		// レイアウト変更
		document.getElementById("header").style.display = "none";			//ヘッダ
		document.getElementById("Left").style.display = "none";				//地図検索パネル
		document.getElementById("printheader").style.display = "block";		//印刷プレビューヘッダ
		printsizeselectclose();
		clickmapclosefloating();											//背景地図選択ウィンドウ
		ConfigMenu.close();
		
		document.body.style.overflow = "auto";
	    var header_style = document.getElementById("printheader").style;
	    header_style.position = "absolute";
	    header_style.left = 0 + "px";
	    header_style.top = 0 + "px";
	    header_style.overflow = "hidden";

	   	var map_style = document.getElementById("map").style;
	    map_style.position = "absolute";
	    map_style.left = 25 + "px";
	    map_style.top = 50 + "px";
	    map_style.overflow = "hidden";
	    map_style.border = "solid 1px #000";

	    var frame_style = document.getElementById("printmapframe").style;
	    frame_style.position = "absolute";
	    frame_style.left = 25 + "px";
	    frame_style.top = 50 + "px";
	    frame_style.overflow = "hidden";
	    frame_style.border = "solid 1px #000";

		var strHTML = '';
		
		if (document.getElementById('printlink').children.length == 0) {
			strHTML += '<select id="print_size" style="position:absolute;top:11px;right:170px;width:100px;" class="insatu"><option value="1">A4縦(標準)</option><option value="2">A4縦(高画質)</option><option value="3">A4横(標準)</option><option value="4">A4横(高画質)</option><option value="5">A3縦(標準)</option><option value="6">A3縦(高画質)</option><option value="7">A3横(標準)</option><option value="8">A3横(高画質)</option></select>';
//			strHTML += '<div style="position:absolute;top:12px;right:418px;font-size:13px;" class="insatu">印刷画質：</div>';
//			strHTML += '<select id="print_quality" style="position:absolute;top:12px;right:335px;width:70px;" class="insatu"><option value="0">標準</option><option value="1">高画質</option></div>';
			document.getElementById('printlink').innerHTML = strHTML;
			
			// 印刷サイズ変更コンボボックスの定義
			$("#print_size").bind('change', function() {
				var value = parseInt($(this).val(), 10) - 1;
				var newSize = Math.floor(value / 2) + 1;	// 1：A4縦、2：A4横、3：A3縦、4：A3横
				var newQuality = value % 2 ;	// 0：標準、1：高画質
//				var newSize = parseInt($(this).val(), 10);
//				var curQuality = parseInt($("#print_quality").val(), 10);

				changePreview(newQuality);
				changePrintSize(newSize, newQuality);
				printSizeSettings[newQuality] = newSize;
				printSizeSetting = newSize;
				printQualitySetting = newQuality;
			});
/*
			// 印刷画質変更コンボボックスの定義
			$("#print_quality").bind('change', function() {
				var newQuality = parseInt($(this).val(), 10);
				var curSize = parseInt($("#print_size").val(), 10);
				
				changePreview(newQuality);
				changePrintSize(curSize, newQuality);
				printQualitySetting = newQuality;
			});
*/
		}

		// プレビュー地図の変更
		changePreview(printQualitySetting);
		// 印刷サイズに地図を合わせる
		changePrintSize(newValue, printQualitySetting);
		
		printSizeSettings[printQualitySetting] = newValue;
		
		$.receiveMessage(jsonPrintDataReceiver);
	}
}

function changePreview(quality)
{
	if (quality == 0) {
		// 標準
		if (!printMapReady) {
			map.removeControl(printerControl);		//プリンタボタン
//			map.removeControl(printsize);			//プリント用紙サイズ選択ボタン(メニュー閉)
//			map.removeControl(printsizeclose);		//プリント用紙サイズ選択ボタン(メニュー開)
//			map.removeControl(zoomcontrol);			//パンズームバー
			if (zoomcontrol) zoomcontrol.div.style.display = "none";
			map.removeControl(mapfloating);			//背景地図・写真選択ボタン(閉)
			map.removeControl(mapclosefloating);	//背景地図・写真選択ボタン(開)
			map.removeControl(keisokuControl);		//計測ボタン
			map.removeControl(overViewControl);		//広域地図表示ボタン
			map.removeControl(shrinkcontrol);		//全画面表示切り替えボタン
			map.removeControl(sz_buttonControl);	//作図ボタン
			mapoClick.deactivate();					//右クリック操作無効

			if(popupflag)	{
				map.removePopup(popup);				//ポップアップを閉じる
				popupflag = 0;
			}
			sakuzuModule.disablePopupLayer();		//ポップアップ非表示モードに設定
			sakuzuModule.unselectFeature();			//セレクト状態のオブジェクトがあれば、解除
			
			printMapReady = true;
		}
		
		if (receivedLonLat != null) {
			var cx = parseFloat(receivedLonLat.lon);
			var cy = parseFloat(receivedLonLat.lat);
			var zoom = parseInt(receivedLonLat.z, 10);
				
			map.setCenter(new OpenLayers.LonLat(cx, cy).transform(projection4326,projection900913), zoom);
			receivedLonLat = null;
		}
	}
	else if (quality == 1) {
		// 高画質
		if (!printFrameReady) {
			var mapinfo = sakuzuModule.createParameter();
			var lat = String(Math.floor(mapinfo.lat * 1000000) / 1000000);
			var lon = String(Math.floor(mapinfo.lon * 1000000) / 1000000);
			var zoom = mapinfo.zoomLevel < 18 ? mapinfo.zoomLevel + 1 : 18;
			var frame = document.getElementById("printmapframe");
			var url = sakuzuModule.getURL() + "?prt=1&ifr=1&fsc=1&lat=" + lat + "&lon=" + lon + "&z=" + zoom + "&did=" + mapinfo.did;
	    	if (centercross) url += ("&crs=1");	// 中心位置の十字線
			var ret = getSelectedLayerString(1);
			if (ret){
				url = url + ret.layerString;
			}
			json_print = convertGeoJSON(mapinfo.json);

			frame.src = url;

			$(frame).load(function(){
				frame.contentWindow.postMessage(json_print, "*");
			});
			
			printFrameReady = true;
		}
		else {
			var mapinfo = sakuzuModule.createParameter();
			var lat = String(Math.floor(mapinfo.lat * 1000000) / 1000000);
			var lon = String(Math.floor(mapinfo.lon * 1000000) / 1000000);
			var zoom = mapinfo.zoomLevel < 18 ? mapinfo.zoomLevel + 1 : 18;
			var frame = document.getElementById("printmapframe");
			
			var jsondata = JSON.stringify({
				"mode": "lonlat_fromParent",
				"lon": lon,
				"lat": lat,
				"z": zoom 
			});
		
			frame.contentWindow.postMessage(jsondata, "*");
		}
	}

	switch (quality){
	case 0:
		document.getElementById("map").style.display = "block";
		document.getElementById("printmapframe").style.display = "none";
		break;
		
	case 1:
		document.getElementById("map").style.display = "none";
		document.getElementById("printmapframe").style.display = "block";
		break;
	}
}

// ブラウザがリサイズされる時の処理
function arrange_print()
{
}

// 印刷サイズの変更
function changePrintSize(size, quality) {

	if (printSizeSettings[quality] != size) {

	    var header_style = document.getElementById("printheader").style;
	    var map_div = getPrintMapDiv(quality);
	    var map_style = map_div.style;

		$("#print_size").val((size - 1) * 2 + quality + 1);

		switch (size) {
		case 1:
			//A4縦印刷
			header_style.width = 680 + "px";
			header_style.height = 50 + "px";
			map_style.width = 650 + "px";
			map_style.height = 900 + "px";
			break;
			
		case 2:
			//A4横印刷
			header_style.width = 680 + "px";
			header_style.height = 50 + "px";
			map_style.width = 950 + "px";
			map_style.height = 550 + "px";
			break;
			
		case 3:
			//A3縦印刷
			header_style.width = 680 + "px";
			header_style.height = 50 + "px";
			map_style.width = 950 + "px";
			map_style.height = 1350 + "px";
			break;
			
		case 4:
			//A3横印刷
			header_style.width = 680 + "px";
			header_style.height = 50 + "px";
			map_style.width = 1400 + "px";
			map_style.height = 900 + "px";
			break;
		}
		
		switch (quality) {
		case 0:
			map.updateSize();
			break;

		case 1:
			var jsondata = JSON.stringify({
				"mode": "map_resize",
				"height": map_style.height,
				"width": map_style.width
			});
			map_div.contentWindow.postMessage(jsondata, "*");
			break;
		}
	}
}

function getPrintMapDiv(quality) {
	var map_div;
	
	switch(quality) {
	case 0:
	    map_div = document.getElementById("map");
		break;
	case 1:
		map_div = document.getElementById("printmapframe");
	    break;
	default:
		return;
	}
	
	return map_div;
}

/*元の画面に戻る*/
function mainwindow() {
	$(window).unbind('message', jsonPrintDataReceiver);
	
	var frame = document.getElementById("printmapframe");
	frame.src = "";
	webtis.Layer.BaseMap.isShowLegend = true;

	document.body.style.overflow = "hidden";
	document.getElementById("header").style.display = "block";
	document.getElementById("Left").style.display = "block";
	document.getElementById("map").style.display = "block";

	document.getElementById("printheader").style.display = "none";
	document.getElementById("printmapframe").style.display = "none";
		
	if (hasZoomCtrl) {
		//パンズームバーコントロール表示
		if (zoomcontrol) zoomcontrol.div.style.display = "";
	}

	//MapFloatingコントロール表示
	mapfloating = new webtis.Control.MapFloating();
	map.addControl(mapfloating);

	//計測ボタンコントロール表示
	keisokuControl = new webtis.Control.keisoku();
	map.addControl(keisokuControl);
	
	//プリンタボタンコントロール表示
	printerControl = new webtis.Control.Printer();
	map.addControl(printerControl);
	
	//プリントサイズコントロール表示
//	printsize = new webtis.Control.PrintSize();
//	map.addControl(printsize);

	//右下に広域図スイッチを設置
	overViewControl = new webtis.Control.GisOverviewMap();
	map.addControl(overViewControl);

	if (isSakuzu) {
		//作図ボタンコントロール表示
		sz_buttonControl = new webtis.Control.sz_button();
		map.addControl(sz_buttonControl);
	}

//	var mod = counter % 2;
	if ( fullscreenMode ){
	    //地図表示領域左上に地図表示縮小ボタンを追加する
	    shrinkcontrol = new webtis.Control.ShrinkMap();
	    map.addControl(shrinkcontrol);
	}

	mapoClick.activate();				//右クリック操作有効

	printMapFlg = 0;					//印刷フラグOFF
	arrange();							//標準画面構成に切り替え
	map.updateSize();					//マップ領域のリサイズ設定

	sakuzuModule.enablePopupLayer();	//ポップアップ表示モードに設定
	sakuzuModule.unselectFeature();		//セレクト状態のオブジェクトがあれば、解除

	webtisMap.redraw(true);
}//
// @source = proj4js-combined.js
//
/*
  proj4js.js -- Javascript reprojection library.

  Authors:      Mike Adair madairATdmsolutions.ca
                Richard Greenwood richATgreenwoodmap.com
                Didier Richard didier.richardATign.fr
                Stephen Irons
  License:      LGPL as per: http://www.gnu.org/copyleft/lesser.html
                Note: This program is an almost direct port of the C library
                Proj4.
*/
/* ======================================================================
    proj4js.js
   ====================================================================== */

/*
Author:       Mike Adair madairATdmsolutions.ca
              Richard Greenwood rich@greenwoodmap.com
License:      LGPL as per: http://www.gnu.org/copyleft/lesser.html

$Id: Proj.js 2956 2007-07-09 12:17:52Z steven $
*/

/**
 * Namespace: Proj4js
 *
 * Proj4js is a JavaScript library to transform point coordinates from one
 * coordinate system to another, including datum transformations.
 *
 * This library is a port of both the Proj.4 and GCTCP C libraries to JavaScript.
 * Enabling these transformations in the browser allows geographic data stored
 * in different projections to be combined in browser-based web mapping
 * applications.
 *
 * Proj4js must have access to coordinate system initialization strings (which
 * are the same as for PROJ.4 command line).  Thes can be included in your
 * application using a <script> tag or Proj4js can load CS initialization
 * strings from a local directory or a web service such as spatialreference.org.
 *
 * Similarly, Proj4js must have access to projection transform code.  These can
 * be included individually using a <script> tag in your page, built into a
 * custom build of Proj4js or loaded dynamically at run-time.  Using the
 * -combined and -compressed versions of Proj4js includes all projection class
 * code by default.
 *
 * Note that dynamic loading of defs and code happens ascynchrously, check the
 * Proj.readyToUse flag before using the Proj object.  If the defs and code
 * required by your application are loaded through script tags, dynamic loading
 * is not required and the Proj object will be readyToUse on return from the
 * constructor.
 *
 * All coordinates are handled as points which have a .x and a .y property
 * which will be modified in place.
 *
 * Override Proj4js.reportError for output of alerts and warnings.
 *
 * See http://trac.osgeo.org/proj4js/wiki/UserGuide for full details.
*/

/**
 * Global namespace object for Proj4js library
 */
Proj4js = {

    /**
     * Property: defaultDatum
     * The datum to use when no others a specified
     */
    defaultDatum: 'WGS84',                  //default datum

    /**
    * Method: transform(source, dest, point)
    * Transform a point coordinate from one map projection to another.  This is
    * really the only public method you should need to use.
    *
    * Parameters:
    * source - {Proj4js.Proj} source map projection for the transformation
    * dest - {Proj4js.Proj} destination map projection for the transformation
    * point - {Object} point to transform, may be geodetic (long, lat) or
    *     projected Cartesian (x,y), but should always have x,y properties.
    */
    transform: function(source, dest, point) {
        if (!source.readyToUse) {
            this.reportError("Proj4js initialization for:"+source.srsCode+" not yet complete");
            return point;
        }
        if (!dest.readyToUse) {
            this.reportError("Proj4js initialization for:"+dest.srsCode+" not yet complete");
            return point;
        }

        // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84
        if (source.datum && dest.datum && (
            ((source.datum.datum_type == Proj4js.common.PJD_3PARAM || source.datum.datum_type == Proj4js.common.PJD_7PARAM) && dest.datumCode != "WGS84") ||
            ((dest.datum.datum_type == Proj4js.common.PJD_3PARAM || dest.datum.datum_type == Proj4js.common.PJD_7PARAM) && source.datumCode != "WGS84"))) {
            var wgs84 = Proj4js.WGS84;
            this.transform(source, wgs84, point);
            source = wgs84;
        }

        // DGR, 2010/11/12
        if (source.axis!="enu") {
            this.adjust_axis(source,false,point);
        }

        // Transform source points to long/lat, if they aren't already.
        if ( source.projName=="longlat") {
            point.x *= Proj4js.common.D2R;  // convert degrees to radians
            point.y *= Proj4js.common.D2R;
        } else {
            if (source.to_meter) {
                point.x *= source.to_meter;
                point.y *= source.to_meter;
            }
            source.inverse(point); // Convert Cartesian to longlat
        }

        // Adjust for the prime meridian if necessary
        if (source.from_greenwich) {
            point.x += source.from_greenwich;
        }

        // Convert datums if needed, and if possible.
        point = this.datum_transform( source.datum, dest.datum, point );

        // Adjust for the prime meridian if necessary
        if (dest.from_greenwich) {
            point.x -= dest.from_greenwich;
        }

        if( dest.projName=="longlat" ) {
            // convert radians to decimal degrees
            point.x *= Proj4js.common.R2D;
            point.y *= Proj4js.common.R2D;
        } else  {               // else project
            dest.forward(point);
            if (dest.to_meter) {
                point.x /= dest.to_meter;
                point.y /= dest.to_meter;
            }
        }

        // DGR, 2010/11/12
        if (dest.axis!="enu") {
            this.adjust_axis(dest,true,point);
        }

        return point;
    }, // transform()

    /** datum_transform()
      source coordinate system definition,
      destination coordinate system definition,
      point to transform in geodetic coordinates (long, lat, height)
    */
    datum_transform : function( source, dest, point ) {

      // Short cut if the datums are identical.
      if( source.compare_datums( dest ) ) {
          return point; // in this case, zero is sucess,
                    // whereas cs_compare_datums returns 1 to indicate TRUE
                    // confusing, should fix this
      }

      // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest
      if( source.datum_type == Proj4js.common.PJD_NODATUM
          || dest.datum_type == Proj4js.common.PJD_NODATUM) {
          return point;
      }

      // Do we need to go through geocentric coordinates?
      if( source.es != dest.es || source.a != dest.a
          || source.datum_type == Proj4js.common.PJD_3PARAM
          || source.datum_type == Proj4js.common.PJD_7PARAM
          || dest.datum_type == Proj4js.common.PJD_3PARAM
          || dest.datum_type == Proj4js.common.PJD_7PARAM)
      {

        // Convert to geocentric coordinates.
        source.geodetic_to_geocentric( point );
        // CHECK_RETURN;

        // Convert between datums
        if( source.datum_type == Proj4js.common.PJD_3PARAM || source.datum_type == Proj4js.common.PJD_7PARAM ) {
          source.geocentric_to_wgs84(point);
          // CHECK_RETURN;
        }

        if( dest.datum_type == Proj4js.common.PJD_3PARAM || dest.datum_type == Proj4js.common.PJD_7PARAM ) {
          dest.geocentric_from_wgs84(point);
          // CHECK_RETURN;
        }

        // Convert back to geodetic coordinates
        dest.geocentric_to_geodetic( point );
          // CHECK_RETURN;
      }

      return point;
    }, // cs_datum_transform

    /**
     * Function: adjust_axis
     * Normalize or de-normalized the x/y/z axes.  The normal form is "enu"
     * (easting, northing, up).
     * Parameters:
     * crs {Proj4js.Proj} the coordinate reference system
     * denorm {Boolean} when false, normalize
     * point {Object} the coordinates to adjust
     */
    adjust_axis: function(crs, denorm, point) {
        var xin= point.x, yin= point.y, zin= point.z || 0.0;
        var v, t;
        for (var i= 0; i<3; i++) {
            if (denorm && i==2 && point.z===undefined) { continue; }
                 if (i==0) { v= xin; t= 'x'; }
            else if (i==1) { v= yin; t= 'y'; }
            else           { v= zin; t= 'z'; }
            switch(crs.axis[i]) {
            case 'e':
                point[t]= v;
                break;
            case 'w':
                point[t]= -v;
                break;
            case 'n':
                point[t]= v;
                break;
            case 's':
                point[t]= -v;
                break;
            case 'u':
                if (point[t]!==undefined) { point.z= v; }
                break;
            case 'd':
                if (point[t]!==undefined) { point.z= -v; }
                break;
            default :
                alert("ERROR: unknow axis ("+crs.axis[i]+") - check definition of "+crs.projName);
                return null;
            }
        }
        return point;
    },

    /**
     * Function: reportError
     * An internal method to report errors back to user.
     * Override this in applications to report error messages or throw exceptions.
     */
    reportError: function(msg) {
      //console.log(msg);
    },

/**
 *
 * Title: Private Methods
 * The following properties and methods are intended for internal use only.
 *
 * This is a minimal implementation of JavaScript inheritance methods so that
 * Proj4js can be used as a stand-alone library.
 * These are copies of the equivalent OpenLayers methods at v2.7
 */

/**
 * Function: extend
 * Copy all properties of a source object to a destination object.  Modifies
 *     the passed in destination object.  Any properties on the source object
 *     that are set to undefined will not be (re)set on the destination object.
 *
 * Parameters:
 * destination - {Object} The object that will be modified
 * source - {Object} The object with properties to be set on the destination
 *
 * Returns:
 * {Object} The destination object.
 */
    extend: function(destination, source) {
      destination = destination || {};
      if(source) {
          for(var property in source) {
              var value = source[property];
              if(value !== undefined) {
                  destination[property] = value;
              }
          }
      }
      return destination;
    },

/**
 * Constructor: Class
 * Base class used to construct all other classes. Includes support for
 *     multiple inheritance.
 *
 */
    Class: function() {
      var Class = function() {
          this.initialize.apply(this, arguments);
      };

      var extended = {};
      var parent;
      for(var i=0; i<arguments.length; ++i) {
          if(typeof arguments[i] == "function") {
              // get the prototype of the superclass
              parent = arguments[i].prototype;
          } else {
              // in this case we're extending with the prototype
              parent = arguments[i];
          }
          Proj4js.extend(extended, parent);
      }
      Class.prototype = extended;

      return Class;
    },

    /**
     * Function: bind
     * Bind a function to an object.  Method to easily create closures with
     *     'this' altered.
     *
     * Parameters:
     * func - {Function} Input function.
     * object - {Object} The object to bind to the input function (as this).
     *
     * Returns:
     * {Function} A closure with 'this' set to the passed in object.
     */
    bind: function(func, object) {
        // create a reference to all arguments past the second one
        var args = Array.prototype.slice.apply(arguments, [2]);
        return function() {
            // Push on any additional arguments from the actual function call.
            // These will come after those sent to the bind call.
            var newArgs = args.concat(
                Array.prototype.slice.apply(arguments, [0])
            );
            return func.apply(object, newArgs);
        };
    },

/**
 * The following properties and methods handle dynamic loading of JSON objects.
 */

    /**
     * Property: scriptName
     * {String} The filename of this script without any path.
     */
    scriptName: "proj4js-combined.js",

    /**
     * Property: defsLookupService
     * AJAX service to retreive projection definition parameters from
     */
    defsLookupService: 'http://spatialreference.org/ref',

    /**
     * Property: libPath
     * internal: http server path to library code.
     */
    libPath: null,

    /**
     * Function: getScriptLocation
     * Return the path to this script.
     *
     * Returns:
     * Path to this script
     */
    getScriptLocation: function () {
        if (this.libPath) return this.libPath;
        var scriptName = this.scriptName;
        var scriptNameLen = scriptName.length;

        var scripts = document.getElementsByTagName('script');
        for (var i = 0; i < scripts.length; i++) {
            var src = scripts[i].getAttribute('src');
            if (src) {
                var index = src.lastIndexOf(scriptName);
                // is it found, at the end of the URL?
                if ((index > -1) && (index + scriptNameLen == src.length)) {
                    this.libPath = src.slice(0, -scriptNameLen);
                    break;
                }
            }
        }
        return this.libPath||"";
    },

    /**
     * Function: loadScript
     * Load a JS file from a URL into a <script> tag in the page.
     *
     * Parameters:
     * url - {String} The URL containing the script to load
     * onload - {Function} A method to be executed when the script loads successfully
     * onfail - {Function} A method to be executed when there is an error loading the script
     * loadCheck - {Function} A boolean method that checks to see if the script
     *            has loaded.  Typically this just checks for the existance of
     *            an object in the file just loaded.
     */
    loadScript: function(url, onload, onfail, loadCheck) {
      var script = document.createElement('script');
      script.defer = false;
      script.type = "text/javascript";
      script.id = url;
      script.src = url;
      script.onload = onload;
      script.onerror = onfail;
      script.loadCheck = loadCheck;
      if (/MSIE/.test(navigator.userAgent)) {
        script.onreadystatechange = this.checkReadyState;
      }
      document.getElementsByTagName('head')[0].appendChild(script);
    },

    /**
     * Function: checkReadyState
     * IE workaround since there is no onerror handler.  Calls the user defined
     * loadCheck method to determine if the script is loaded.
     *
     */
    checkReadyState: function() {
      if (this.readyState == 'loaded') {
        if (!this.loadCheck()) {
          this.onerror();
        } else {
          this.onload();
        }
      }
    }
};

/**
 * Class: Proj4js.Proj
 *
 * Proj objects provide transformation methods for point coordinates
 * between geodetic latitude/longitude and a projected coordinate system.
 * once they have been initialized with a projection code.
 *
 * Initialization of Proj objects is with a projection code, usually EPSG codes,
 * which is the key that will be used with the Proj4js.defs array.
 *
 * The code passed in will be stripped of colons and converted to uppercase
 * to locate projection definition files.
 *
 * A projection object has properties for units and title strings.
 */
Proj4js.Proj = Proj4js.Class({

  /**
   * Property: readyToUse
   * Flag to indicate if initialization is complete for this Proj object
   */
  readyToUse: false,

  /**
   * Property: title
   * The title to describe the projection
   */
  title: null,

  /**
   * Property: projName
   * The projection class for this projection, e.g. lcc (lambert conformal conic,
   * or merc for mercator).  These are exactly equivalent to their Proj4
   * counterparts.
   */
  projName: null,
  /**
   * Property: units
   * The units of the projection.  Values include 'm' and 'degrees'
   */
  units: null,
  /**
   * Property: datum
   * The datum specified for the projection
   */
  datum: null,
  /**
   * Property: x0
   * The x coordinate origin
   */
  x0: 0,
  /**
   * Property: y0
   * The y coordinate origin
   */
  y0: 0,
  /**
   * Property: localCS
   * Flag to indicate if the projection is a local one in which no transforms
   * are required.
   */
  localCS: false,

  /**
  * Property: queue
  * Buffer (FIFO) to hold callbacks waiting to be called when projection loaded.
  */
  queue: null,

  /**
  * Constructor: initialize
  * Constructor for Proj4js.Proj objects
  *
  * Parameters:
  * srsCode - a code for map projection definition parameters.  These are usually
  * (but not always) EPSG codes.
  */
  initialize: function(srsCode, callback) {
      this.srsCodeInput = srsCode;

      //Register callbacks prior to attempting to process definition
      this.queue = [];
      if( callback ){
           this.queue.push( callback );
      }

      //check to see if this is a WKT string
      if ((srsCode.indexOf('GEOGCS') >= 0) ||
          (srsCode.indexOf('GEOCCS') >= 0) ||
          (srsCode.indexOf('PROJCS') >= 0) ||
          (srsCode.indexOf('LOCAL_CS') >= 0)) {
            this.parseWKT(srsCode);
            this.deriveConstants();
            this.loadProjCode(this.projName);
            return;
      }

      // DGR 2008-08-03 : support urn and url
      if (srsCode.indexOf('urn:') == 0) {
          //urn:ORIGINATOR:def:crs:CODESPACE:VERSION:ID
          var urn = srsCode.split(':');
          if ((urn[1] == 'ogc' || urn[1] =='x-ogc') &&
              (urn[2] =='def') &&
              (urn[3] =='crs')) {
              srsCode = urn[4]+':'+urn[urn.length-1];
          }
      } else if (srsCode.indexOf('http://') == 0) {
          //url#ID
          var url = srsCode.split('#');
          if (url[0].match(/epsg.org/)) {
            // http://www.epsg.org/#
            srsCode = 'EPSG:'+url[1];
          } else if (url[0].match(/RIG.xml/)) {
            //http://librairies.ign.fr/geoportail/resources/RIG.xml#
            //http://interop.ign.fr/registers/ign/RIG.xml#
            srsCode = 'IGNF:'+url[1];
          }
      }
      this.srsCode = srsCode.toUpperCase();
      if (this.srsCode.indexOf("EPSG") == 0) {
          this.srsCode = this.srsCode;
          this.srsAuth = 'epsg';
          this.srsProjNumber = this.srsCode.substring(5);
      // DGR 2007-11-20 : authority IGNF
      } else if (this.srsCode.indexOf("IGNF") == 0) {
          this.srsCode = this.srsCode;
          this.srsAuth = 'IGNF';
          this.srsProjNumber = this.srsCode.substring(5);
      // DGR 2008-06-19 : pseudo-authority CRS for WMS
      } else if (this.srsCode.indexOf("CRS") == 0) {
          this.srsCode = this.srsCode;
          this.srsAuth = 'CRS';
          this.srsProjNumber = this.srsCode.substring(4);
      } else {
          this.srsAuth = '';
          this.srsProjNumber = this.srsCode;
      }

      this.loadProjDefinition();
  },

/**
 * Function: loadProjDefinition
 *    Loads the coordinate system initialization string if required.
 *    Note that dynamic loading happens asynchronously so an application must
 *    wait for the readyToUse property is set to true.
 *    To prevent dynamic loading, include the defs through a script tag in
 *    your application.
 *
 */
    loadProjDefinition: function() {
      //check in memory
      if (Proj4js.defs[this.srsCode]) {
        this.defsLoaded();
        return;
      }

      //else check for def on the server
      var url = Proj4js.getScriptLocation() + 'defs/' + this.srsAuth.toUpperCase() + this.srsProjNumber + '.js';
      Proj4js.loadScript(url,
                Proj4js.bind(this.defsLoaded, this),
                Proj4js.bind(this.loadFromService, this),
                Proj4js.bind(this.checkDefsLoaded, this) );
    },

/**
 * Function: loadFromService
 *    Creates the REST URL for loading the definition from a web service and
 *    loads it.
 *
 */
    loadFromService: function() {
      //else load from web service
      var url = Proj4js.defsLookupService +'/' + this.srsAuth +'/'+ this.srsProjNumber + '/proj4js/';
      Proj4js.loadScript(url,
            Proj4js.bind(this.defsLoaded, this),
            Proj4js.bind(this.defsFailed, this),
            Proj4js.bind(this.checkDefsLoaded, this) );
    },

/**
 * Function: defsLoaded
 * Continues the Proj object initilization once the def file is loaded
 *
 */
    defsLoaded: function() {
      this.parseDefs();
      this.loadProjCode(this.projName);
    },

/**
 * Function: checkDefsLoaded
 *    This is the loadCheck method to see if the def object exists
 *
 */
    checkDefsLoaded: function() {
      if (Proj4js.defs[this.srsCode]) {
        return true;
      } else {
        return false;
      }
    },

 /**
 * Function: defsFailed
 *    Report an error in loading the defs file, but continue on using WGS84
 *
 */
   defsFailed: function() {
      Proj4js.reportError('failed to load projection definition for: '+this.srsCode);
      Proj4js.defs[this.srsCode] = Proj4js.defs['WGS84'];  //set it to something so it can at least continue
      this.defsLoaded();
    },

/**
 * Function: loadProjCode
 *    Loads projection class code dynamically if required.
 *     Projection code may be included either through a script tag or in
 *     a built version of proj4js
 *
 */
    loadProjCode: function(projName) {
      if (Proj4js.Proj[projName]) {
        this.initTransforms();
        return;
      }

      //the URL for the projection code
      var url = Proj4js.getScriptLocation() + 'projCode/' + projName + '.js';
      Proj4js.loadScript(url,
              Proj4js.bind(this.loadProjCodeSuccess, this, projName),
              Proj4js.bind(this.loadProjCodeFailure, this, projName),
              Proj4js.bind(this.checkCodeLoaded, this, projName) );
    },

 /**
 * Function: loadProjCodeSuccess
 *    Loads any proj dependencies or continue on to final initialization.
 *
 */
    loadProjCodeSuccess: function(projName) {
      if (Proj4js.Proj[projName].dependsOn){
        this.loadProjCode(Proj4js.Proj[projName].dependsOn);
      } else {
        this.initTransforms();
      }
    },

 /**
 * Function: defsFailed
 *    Report an error in loading the proj file.  Initialization of the Proj
 *    object has failed and the readyToUse flag will never be set.
 *
 */
    loadProjCodeFailure: function(projName) {
      Proj4js.reportError("failed to find projection file for: " + projName);
      //TBD initialize with identity transforms so proj will still work?
    },

/**
 * Function: checkCodeLoaded
 *    This is the loadCheck method to see if the projection code is loaded
 *
 */
    checkCodeLoaded: function(projName) {
      if (Proj4js.Proj[projName]) {
        return true;
      } else {
        return false;
      }
    },

/**
 * Function: initTransforms
 *    Finalize the initialization of the Proj object
 *
 */
    initTransforms: function() {
      Proj4js.extend(this, Proj4js.Proj[this.projName]);
      this.init();
      this.readyToUse = true;
      if( this.queue ) {
        var item;
        while( (item = this.queue.shift()) ) {
          item.call( this, this );
        }
      }
  },

/**
 * Function: parseWKT
 * Parses a WKT string to get initialization parameters
 *
 */
 wktRE: /^(\w+)\[(.*)\]$/,
 parseWKT: function(wkt) {
    var wktMatch = wkt.match(this.wktRE);
    if (!wktMatch) return;
    var wktObject = wktMatch[1];
    var wktContent = wktMatch[2];
    var wktTemp = wktContent.split(",");
    var wktName;
    if (wktObject.toUpperCase() == "TOWGS84") {
      wktName = wktObject;  //no name supplied for the TOWGS84 array
    } else {
      wktName = wktTemp.shift();
    }
    wktName = wktName.replace(/^\"/,"");
    wktName = wktName.replace(/\"$/,"");

    /*
    wktContent = wktTemp.join(",");
    var wktArray = wktContent.split("],");
    for (var i=0; i<wktArray.length-1; ++i) {
      wktArray[i] += "]";
    }
    */

    var wktArray = new Array();
    var bkCount = 0;
    var obj = "";
    for (var i=0; i<wktTemp.length; ++i) {
      var token = wktTemp[i];
      for (var j=0; j<token.length; ++j) {
        if (token.charAt(j) == "[") ++bkCount;
        if (token.charAt(j) == "]") --bkCount;
      }
      obj += token;
      if (bkCount === 0) {
        wktArray.push(obj);
        obj = "";
      } else {
        obj += ",";
      }
    }

    //do something based on the type of the wktObject being parsed
    //add in variations in the spelling as required
    switch (wktObject) {
      case 'LOCAL_CS':
        this.projName = 'identity'
        this.localCS = true;
        this.srsCode = wktName;
        break;
      case 'GEOGCS':
        this.projName = 'longlat'
        this.geocsCode = wktName;
        if (!this.srsCode) this.srsCode = wktName;
        break;
      case 'PROJCS':
        this.srsCode = wktName;
        break;
      case 'GEOCCS':
        break;
      case 'PROJECTION':
        this.projName = Proj4js.wktProjections[wktName]
        break;
      case 'DATUM':
        this.datumName = wktName;
        break;
      case 'LOCAL_DATUM':
        this.datumCode = 'none';
        break;
      case 'SPHEROID':
        this.ellps = wktName;
        this.a = parseFloat(wktArray.shift());
        this.rf = parseFloat(wktArray.shift());
        break;
      case 'PRIMEM':
        this.from_greenwich = parseFloat(wktArray.shift()); //to radians?
        break;
      case 'UNIT':
        this.units = wktName;
        this.unitsPerMeter = parseFloat(wktArray.shift());
        break;
      case 'PARAMETER':
        var name = wktName.toLowerCase();
        var value = parseFloat(wktArray.shift());
        //there may be many variations on the wktName values, add in case
        //statements as required
        switch (name) {
          case 'false_easting':
            this.x0 = value;
            break;
          case 'false_northing':
            this.y0 = value;
            break;
          case 'scale_factor':
            this.k0 = value;
            break;
          case 'central_meridian':
            this.long0 = value*Proj4js.common.D2R;
            break;
          case 'latitude_of_origin':
            this.lat0 = value*Proj4js.common.D2R;
            break;
          case 'more_here':
            break;
          default:
            break;
        }
        break;
      case 'TOWGS84':
        this.datum_params = wktArray;
        break;
      //DGR 2010-11-12: AXIS
      case 'AXIS':
        var name= wktName.toLowerCase();
        var value= wktArray.shift();
        switch (value) {
          case 'EAST' : value= 'e'; break;
          case 'WEST' : value= 'w'; break;
          case 'NORTH': value= 'n'; break;
          case 'SOUTH': value= 's'; break;
          case 'UP'   : value= 'u'; break;
          case 'DOWN' : value= 'd'; break;
          case 'OTHER':
          default     : value= ' '; break;//FIXME
        }
        if (!this.axis) { this.axis= "enu"; }
        switch(name) {
          case 'x': this.axis=                         value + this.axis.substr(1,2); break;
          case 'y': this.axis= this.axis.substr(0,1) + value + this.axis.substr(2,1); break;
          case 'z': this.axis= this.axis.substr(0,2) + value                        ; break;
          default : break;
        }
      case 'MORE_HERE':
        break;
      default:
        break;
    }
    for (var i=0; i<wktArray.length; ++i) {
      this.parseWKT(wktArray[i]);
    }
 },

/**
 * Function: parseDefs
 * Parses the PROJ.4 initialization string and sets the associated properties.
 *
 */
  parseDefs: function() {
      this.defData = Proj4js.defs[this.srsCode];
      var paramName, paramVal;
      if (!this.defData) {
        return;
      }
      var paramArray=this.defData.split("+");

      for (var prop=0; prop<paramArray.length; prop++) {
          var property = paramArray[prop].split("=");
          paramName = property[0].toLowerCase();
          paramVal = property[1];

          switch (paramName.replace(/\s/gi,"")) {  // trim out spaces
              case "": break;   // throw away nameless parameter
              case "title":  this.title = paramVal; break;
              case "proj":   this.projName =  paramVal.replace(/\s/gi,""); break;
              case "units":  this.units = paramVal.replace(/\s/gi,""); break;
              case "datum":  this.datumCode = paramVal.replace(/\s/gi,""); break;
              case "nadgrids": this.nagrids = paramVal.replace(/\s/gi,""); break;
              case "ellps":  this.ellps = paramVal.replace(/\s/gi,""); break;
              case "a":      this.a =  parseFloat(paramVal); break;  // semi-major radius
              case "b":      this.b =  parseFloat(paramVal); break;  // semi-minor radius
              // DGR 2007-11-20
              case "rf":     this.rf = parseFloat(paramVal); break; // inverse flattening rf= a/(a-b)
              case "lat_0":  this.lat0 = paramVal*Proj4js.common.D2R; break;        // phi0, central latitude
              case "lat_1":  this.lat1 = paramVal*Proj4js.common.D2R; break;        //standard parallel 1
              case "lat_2":  this.lat2 = paramVal*Proj4js.common.D2R; break;        //standard parallel 2
              case "lat_ts": this.lat_ts = paramVal*Proj4js.common.D2R; break;      // used in merc and eqc
              case "lon_0":  this.long0 = paramVal*Proj4js.common.D2R; break;       // lam0, central longitude
              case "alpha":  this.alpha =  parseFloat(paramVal)*Proj4js.common.D2R; break;  //for somerc projection
              case "lonc":   this.longc = paramVal*Proj4js.common.D2R; break;       //for somerc projection
              case "x_0":    this.x0 = parseFloat(paramVal); break;  // false easting
              case "y_0":    this.y0 = parseFloat(paramVal); break;  // false northing
              case "k_0":    this.k0 = parseFloat(paramVal); break;  // projection scale factor
              case "k":      this.k0 = parseFloat(paramVal); break;  // both forms returned
              case "r_a":    this.R_A = true; break;                 // sphere--area of ellipsoid
              case "zone":   this.zone = parseInt(paramVal); break;  // UTM Zone
              case "south":   this.utmSouth = true; break;  // UTM north/south
              case "towgs84":this.datum_params = paramVal.split(","); break;
              case "to_meter": this.to_meter = parseFloat(paramVal); break; // cartesian scaling
              case "from_greenwich": this.from_greenwich = paramVal*Proj4js.common.D2R; break;
              // DGR 2008-07-09 : if pm is not a well-known prime meridian take
              // the value instead of 0.0, then convert to radians
              case "pm":     paramVal = paramVal.replace(/\s/gi,"");
                             this.from_greenwich = Proj4js.PrimeMeridian[paramVal] ?
                                Proj4js.PrimeMeridian[paramVal] : parseFloat(paramVal);
                             this.from_greenwich *= Proj4js.common.D2R;
                             break;
              // DGR 2010-11-12: axis
              case "axis":   paramVal = paramVal.replace(/\s/gi,"");
                             var legalAxis= "ewnsud";
                             if (paramVal.length==3 &&
                                 legalAxis.indexOf(paramVal.substr(0,1))!=-1 &&
                                 legalAxis.indexOf(paramVal.substr(1,1))!=-1 &&
                                 legalAxis.indexOf(paramVal.substr(2,1))!=-1) {
                                this.axis= paramVal;
                             } //FIXME: be silent ?
                             break
              case "no_defs": break;
              default: //alert("Unrecognized parameter: " + paramName);
          } // switch()
      } // for paramArray
      this.deriveConstants();
  },

/**
 * Function: deriveConstants
 * Sets several derived constant values and initialization of datum and ellipse
 *     parameters.
 *
 */
  deriveConstants: function() {
      if (this.nagrids == '@null') this.datumCode = 'none';
      if (this.datumCode && this.datumCode != 'none') {
        var datumDef = Proj4js.Datum[this.datumCode];
        if (datumDef) {
          this.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;
          this.ellps = datumDef.ellipse;
          this.datumName = datumDef.datumName ? datumDef.datumName : this.datumCode;
        }
      }
      if (!this.a) {    // do we have an ellipsoid?
          var ellipse = Proj4js.Ellipsoid[this.ellps] ? Proj4js.Ellipsoid[this.ellps] : Proj4js.Ellipsoid['WGS84'];
          Proj4js.extend(this, ellipse);
      }
      if (this.rf && !this.b) this.b = (1.0 - 1.0/this.rf) * this.a;
      if (this.rf === 0 || Math.abs(this.a - this.b)<Proj4js.common.EPSLN) {
        this.sphere = true;
        this.b= this.a;
      }
      this.a2 = this.a * this.a;          // used in geocentric
      this.b2 = this.b * this.b;          // used in geocentric
      this.es = (this.a2-this.b2)/this.a2;  // e ^ 2
      this.e = Math.sqrt(this.es);        // eccentricity
      if (this.R_A) {
        this.a *= 1. - this.es * (Proj4js.common.SIXTH + this.es * (Proj4js.common.RA4 + this.es * Proj4js.common.RA6));
        this.a2 = this.a * this.a;
        this.b2 = this.b * this.b;
        this.es = 0.;
      }
      this.ep2=(this.a2-this.b2)/this.b2; // used in geocentric
      if (!this.k0) this.k0 = 1.0;    //default value
      //DGR 2010-11-12: axis
      if (!this.axis) { this.axis= "enu"; }

      this.datum = new Proj4js.datum(this);
  }
});

Proj4js.Proj.longlat = {
  init: function() {
    //no-op for longlat
  },
  forward: function(pt) {
    //identity transform
    return pt;
  },
  inverse: function(pt) {
    //identity transform
    return pt;
  }
};
Proj4js.Proj.identity = Proj4js.Proj.longlat;

/**
  Proj4js.defs is a collection of coordinate system definition objects in the
  PROJ.4 command line format.
  Generally a def is added by means of a separate .js file for example:

    <SCRIPT type="text/javascript" src="defs/EPSG26912.js"></SCRIPT>

  def is a CS definition in PROJ.4 WKT format, for example:
    +proj="tmerc"   //longlat, etc.
    +a=majorRadius
    +b=minorRadius
    +lat0=somenumber
    +long=somenumber
*/
Proj4js.defs = {
  // These are so widely used, we'll go ahead and throw them in
  // without requiring a separate .js file
  'WGS84': "+title=long/lat:WGS84 +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees",
  'EPSG:4326': "+title=long/lat:WGS84 +proj=longlat +a=6378137.0 +b=6356752.31424518 +ellps=WGS84 +datum=WGS84 +units=degrees",
  'EPSG:4269': "+title=long/lat:NAD83 +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees",
//	3875 ⇒　3857
  'EPSG:3857': "+title= Google Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
};
Proj4js.defs['EPSG:3785'] = Proj4js.defs['EPSG:3857'];  //maintain backward compat, official code is 3857
Proj4js.defs['GOOGLE'] = Proj4js.defs['EPSG:3857'];
Proj4js.defs['EPSG:900913'] = Proj4js.defs['EPSG:3857'];
Proj4js.defs['EPSG:102113'] = Proj4js.defs['EPSG:3857'];

//	20140819
Proj4js.defs['EPSG:3875'] = Proj4js.defs['EPSG:3857'];
//20140819




//20121214	独自に定義
Proj4js.defs["EPSG:3097"] = "+proj=utm +zone=51 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs";		//UTM Zone51
Proj4js.defs["EPSG:3098"] = "+proj=utm +zone=52 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs";		//UTM Zone52
Proj4js.defs["EPSG:3099"] = "+proj=utm +zone=53 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs";		//UTM Zone53
Proj4js.defs["EPSG:3100"] = "+proj=utm +zone=54 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs";		//UTM Zone54
Proj4js.defs["EPSG:3101"] = "+proj=utm +zone=55 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs";		//UTM Zone55
Proj4js.defs["SR-ORG:1235"] = "+proj=utm +zone=56 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs";	//UTM Zone56
Proj4js.defs['EPSG:4301'] = "+proj=longlat +ellps=bessel +towgs84=-146.336,506.832,680.254,0,0,0,0 +no_defs";		//日本測地系（経緯度座標）

Proj4js.common = {
  PI : 3.141592653589793238, //Math.PI,
  HALF_PI : 1.570796326794896619, //Math.PI*0.5,
  TWO_PI : 6.283185307179586477, //Math.PI*2,
  FORTPI : 0.78539816339744833,
  R2D : 57.29577951308232088,
  D2R : 0.01745329251994329577,
  SEC_TO_RAD : 4.84813681109535993589914102357e-6, /* SEC_TO_RAD = Pi/180/3600 */
  EPSLN : 1.0e-10,
  MAX_ITER : 20,
  // following constants from geocent.c
  COS_67P5 : 0.38268343236508977,  /* cosine of 67.5 degrees */
  AD_C : 1.0026000,                /* Toms region 1 constant */

  /* datum_type values */
  PJD_UNKNOWN  : 0,
  PJD_3PARAM   : 1,
  PJD_7PARAM   : 2,
  PJD_GRIDSHIFT: 3,
  PJD_WGS84    : 4,   // WGS84 or equivalent
  PJD_NODATUM  : 5,   // WGS84 or equivalent
  SRS_WGS84_SEMIMAJOR : 6378137.0,  // only used in grid shift transforms

  // ellipoid pj_set_ell.c
  SIXTH : .1666666666666666667, /* 1/6 */
  RA4   : .04722222222222222222, /* 17/360 */
  RA6   : .02215608465608465608, /* 67/3024 */
  RV4   : .06944444444444444444, /* 5/72 */
  RV6   : .04243827160493827160, /* 55/1296 */

// Function to compute the constant small m which is the radius of
//   a parallel of latitude, phi, divided by the semimajor axis.
// -----------------------------------------------------------------
  msfnz : function(eccent, sinphi, cosphi) {
      var con = eccent * sinphi;
      return cosphi/(Math.sqrt(1.0 - con * con));
  },

// Function to compute the constant small t for use in the forward
//   computations in the Lambert Conformal Conic and the Polar
//   Stereographic projections.
// -----------------------------------------------------------------
  tsfnz : function(eccent, phi, sinphi) {
    var con = eccent * sinphi;
    var com = .5 * eccent;
    con = Math.pow(((1.0 - con) / (1.0 + con)), com);
    return (Math.tan(.5 * (this.HALF_PI - phi))/con);
  },

// Function to compute the latitude angle, phi2, for the inverse of the
//   Lambert Conformal Conic and Polar Stereographic projections.
// ----------------------------------------------------------------
  phi2z : function(eccent, ts) {
    var eccnth = .5 * eccent;
    var con, dphi;
    var phi = this.HALF_PI - 2 * Math.atan(ts);
    for (var i = 0; i <= 15; i++) {
      con = eccent * Math.sin(phi);
      dphi = this.HALF_PI - 2 * Math.atan(ts *(Math.pow(((1.0 - con)/(1.0 + con)),eccnth))) - phi;
      phi += dphi;
      if (Math.abs(dphi) <= .0000000001) return phi;
    }
    alert("phi2z has NoConvergence");
    return (-9999);
  },

/* Function to compute constant small q which is the radius of a
   parallel of latitude, phi, divided by the semimajor axis.
------------------------------------------------------------*/
  qsfnz : function(eccent,sinphi) {
    var con;
    if (eccent > 1.0e-7) {
      con = eccent * sinphi;
      return (( 1.0- eccent * eccent) * (sinphi /(1.0 - con * con) - (.5/eccent)*Math.log((1.0 - con)/(1.0 + con))));
    } else {
      return(2.0 * sinphi);
    }
  },

/* Function to eliminate roundoff errors in asin
----------------------------------------------*/
  asinz : function(x) {
    if (Math.abs(x)>1.0) {
      x=(x>1.0)?1.0:-1.0;
    }
    return Math.asin(x);
  },

// following functions from gctpc cproj.c for transverse mercator projections
  e0fn : function(x) {return(1.0-0.25*x*(1.0+x/16.0*(3.0+1.25*x)));},
  e1fn : function(x) {return(0.375*x*(1.0+0.25*x*(1.0+0.46875*x)));},
  e2fn : function(x) {return(0.05859375*x*x*(1.0+0.75*x));},
  e3fn : function(x) {return(x*x*x*(35.0/3072.0));},
  mlfn : function(e0,e1,e2,e3,phi) {return(e0*phi-e1*Math.sin(2.0*phi)+e2*Math.sin(4.0*phi)-e3*Math.sin(6.0*phi));},

  srat : function(esinp, exp) {
    return(Math.pow((1.0-esinp)/(1.0+esinp), exp));
  },

// Function to return the sign of an argument
  sign : function(x) { if (x < 0.0) return(-1); else return(1);},

// Function to adjust longitude to -180 to 180; input in radians
  adjust_lon : function(x) {
    x = (Math.abs(x) < this.PI) ? x: (x - (this.sign(x)*this.TWO_PI) );
    return x;
  },

// IGNF - DGR : algorithms used by IGN France

// Function to adjust latitude to -90 to 90; input in radians
  adjust_lat : function(x) {
    x= (Math.abs(x) < this.HALF_PI) ? x: (x - (this.sign(x)*this.PI) );
    return x;
  },

// Latitude Isometrique - close to tsfnz ...
  latiso : function(eccent, phi, sinphi) {
    if (Math.abs(phi) > this.HALF_PI) return +Number.NaN;
    if (phi==this.HALF_PI) return Number.POSITIVE_INFINITY;
    if (phi==-1.0*this.HALF_PI) return -1.0*Number.POSITIVE_INFINITY;

    var con= eccent*sinphi;
    return Math.log(Math.tan((this.HALF_PI+phi)/2.0))+eccent*Math.log((1.0-con)/(1.0+con))/2.0;
  },

  fL : function(x,L) {
    return 2.0*Math.atan(x*Math.exp(L)) - this.HALF_PI;
  },

// Inverse Latitude Isometrique - close to ph2z
  invlatiso : function(eccent, ts) {
    var phi= this.fL(1.0,ts);
    var Iphi= 0.0;
    var con= 0.0;
    do {
      Iphi= phi;
      con= eccent*Math.sin(Iphi);
      phi= this.fL(Math.exp(eccent*Math.log((1.0+con)/(1.0-con))/2.0),ts)
    } while (Math.abs(phi-Iphi)>1.0e-12);
    return phi;
  },

// Needed for Gauss Schreiber
// Original:  Denis Makarov (info@binarythings.com)
// Web Site:  http://www.binarythings.com
  sinh : function(x)
  {
    var r= Math.exp(x);
    r= (r-1.0/r)/2.0;
    return r;
  },

  cosh : function(x)
  {
    var r= Math.exp(x);
    r= (r+1.0/r)/2.0;
    return r;
  },

  tanh : function(x)
  {
    var r= Math.exp(x);
    r= (r-1.0/r)/(r+1.0/r);
    return r;
  },

  asinh : function(x)
  {
    var s= (x>= 0? 1.0:-1.0);
    return s*(Math.log( Math.abs(x) + Math.sqrt(x*x+1.0) ));
  },

  acosh : function(x)
  {
    return 2.0*Math.log(Math.sqrt((x+1.0)/2.0) + Math.sqrt((x-1.0)/2.0));
  },

  atanh : function(x)
  {
    return Math.log((x-1.0)/(x+1.0))/2.0;
  },

// Grande Normale
  gN : function(a,e,sinphi)
  {
    var temp= e*sinphi;
    return a/Math.sqrt(1.0 - temp*temp);
  },

  //code from the PROJ.4 pj_mlfn.c file;  this may be useful for other projections
  pj_enfn: function(es) {
    var en = new Array();
    en[0] = this.C00 - es * (this.C02 + es * (this.C04 + es * (this.C06 + es * this.C08)));
    en[1] = es * (this.C22 - es * (this.C04 + es * (this.C06 + es * this.C08)));
    var t = es * es;
    en[2] = t * (this.C44 - es * (this.C46 + es * this.C48));
    t *= es;
    en[3] = t * (this.C66 - es * this.C68);
    en[4] = t * es * this.C88;
    return en;
  },

  pj_mlfn: function(phi, sphi, cphi, en) {
    cphi *= sphi;
    sphi *= sphi;
    return(en[0] * phi - cphi * (en[1] + sphi*(en[2]+ sphi*(en[3] + sphi*en[4]))));
  },

  pj_inv_mlfn: function(arg, es, en) {
    var k = 1./(1.-es);
    var phi = arg;
    for (var i = Proj4js.common.MAX_ITER; i ; --i) { /* rarely goes over 2 iterations */
      var s = Math.sin(phi);
      t = 1. - es * s * s;
      //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;
      //phi -= t * (t * Math.sqrt(t)) * k;
      t = (this.pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;
      phi -= t;
      if (Math.abs(t) < Proj4js.common.EPSLN)
        return phi;
    }
    Proj4js.reportError("cass:pj_inv_mlfn: Convergence error");
    return phi;
  },

/* meridinal distance for ellipsoid and inverse
**	8th degree - accurate to < 1e-5 meters when used in conjuction
**		with typical major axis values.
**	Inverse determines phi to EPS (1e-11) radians, about 1e-6 seconds.
*/
  C00: 1.0,
  C02: .25,
  C04: .046875,
  C06: .01953125,
  C08: .01068115234375,
  C22: .75,
  C44: .46875,
  C46: .01302083333333333333,
  C48: .00712076822916666666,
  C66: .36458333333333333333,
  C68: .00569661458333333333,
  C88: .3076171875

};

/** datum object
*/
Proj4js.datum = Proj4js.Class({

  initialize : function(proj) {
    this.datum_type = Proj4js.common.PJD_WGS84;   //default setting
    if (proj.datumCode && proj.datumCode == 'none') {
      this.datum_type = Proj4js.common.PJD_NODATUM;
    }
    if (proj && proj.datum_params) {
      for (var i=0; i<proj.datum_params.length; i++) {
        proj.datum_params[i]=parseFloat(proj.datum_params[i]);
      }
      if (proj.datum_params[0] != 0 || proj.datum_params[1] != 0 || proj.datum_params[2] != 0 ) {
        this.datum_type = Proj4js.common.PJD_3PARAM;
      }
      if (proj.datum_params.length > 3) {
        if (proj.datum_params[3] != 0 || proj.datum_params[4] != 0 ||
            proj.datum_params[5] != 0 || proj.datum_params[6] != 0 ) {
          this.datum_type = Proj4js.common.PJD_7PARAM;
          proj.datum_params[3] *= Proj4js.common.SEC_TO_RAD;
          proj.datum_params[4] *= Proj4js.common.SEC_TO_RAD;
          proj.datum_params[5] *= Proj4js.common.SEC_TO_RAD;
          proj.datum_params[6] = (proj.datum_params[6]/1000000.0) + 1.0;
        }
      }
    }
    if (proj) {
      this.a = proj.a;    //datum object also uses these values
      this.b = proj.b;
      this.es = proj.es;
      this.ep2 = proj.ep2;
      this.datum_params = proj.datum_params;
    }
  },

  /****************************************************************/
  // cs_compare_datums()
  //   Returns TRUE if the two datums match, otherwise FALSE.
  compare_datums : function( dest ) {
    if( this.datum_type != dest.datum_type ) {
      return false; // false, datums are not equal
    } else if( this.a != dest.a || Math.abs(this.es-dest.es) > 0.000000000050 ) {
      // the tolerence for es is to ensure that GRS80 and WGS84
      // are considered identical
      return false;
    } else if( this.datum_type == Proj4js.common.PJD_3PARAM ) {
      return (this.datum_params[0] == dest.datum_params[0]
              && this.datum_params[1] == dest.datum_params[1]
              && this.datum_params[2] == dest.datum_params[2]);
    } else if( this.datum_type == Proj4js.common.PJD_7PARAM ) {
      return (this.datum_params[0] == dest.datum_params[0]
              && this.datum_params[1] == dest.datum_params[1]
              && this.datum_params[2] == dest.datum_params[2]
              && this.datum_params[3] == dest.datum_params[3]
              && this.datum_params[4] == dest.datum_params[4]
              && this.datum_params[5] == dest.datum_params[5]
              && this.datum_params[6] == dest.datum_params[6]);
    } else if ( this.datum_type == Proj4js.common.PJD_GRIDSHIFT ||
                dest.datum_type == Proj4js.common.PJD_GRIDSHIFT ) {
      alert("ERROR: Grid shift transformations are not implemented.");
      return false
    } else {
      return true; // datums are equal
    }
  }, // cs_compare_datums()

  /*
   * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates
   * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),
   * according to the current ellipsoid parameters.
   *
   *    Latitude  : Geodetic latitude in radians                     (input)
   *    Longitude : Geodetic longitude in radians                    (input)
   *    Height    : Geodetic height, in meters                       (input)
   *    X         : Calculated Geocentric X coordinate, in meters    (output)
   *    Y         : Calculated Geocentric Y coordinate, in meters    (output)
   *    Z         : Calculated Geocentric Z coordinate, in meters    (output)
   *
   */
  geodetic_to_geocentric : function(p) {
    var Longitude = p.x;
    var Latitude = p.y;
    var Height = p.z ? p.z : 0;   //Z value not always supplied
    var X;  // output
    var Y;
    var Z;

    var Error_Code=0;  //  GEOCENT_NO_ERROR;
    var Rn;            /*  Earth radius at location  */
    var Sin_Lat;       /*  Math.sin(Latitude)  */
    var Sin2_Lat;      /*  Square of Math.sin(Latitude)  */
    var Cos_Lat;       /*  Math.cos(Latitude)  */

    /*
    ** Don't blow up if Latitude is just a little out of the value
    ** range as it may just be a rounding issue.  Also removed longitude
    ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.
    */
    if( Latitude < -Proj4js.common.HALF_PI && Latitude > -1.001 * Proj4js.common.HALF_PI ) {
        Latitude = -Proj4js.common.HALF_PI;
    } else if( Latitude > Proj4js.common.HALF_PI && Latitude < 1.001 * Proj4js.common.HALF_PI ) {
        Latitude = Proj4js.common.HALF_PI;
    } else if ((Latitude < -Proj4js.common.HALF_PI) || (Latitude > Proj4js.common.HALF_PI)) {
      /* Latitude out of range */
      Proj4js.reportError('geocent:lat out of range:'+Latitude);
      return null;
    }

    if (Longitude > Proj4js.common.PI) Longitude -= (2*Proj4js.common.PI);
    Sin_Lat = Math.sin(Latitude);
    Cos_Lat = Math.cos(Latitude);
    Sin2_Lat = Sin_Lat * Sin_Lat;
    Rn = this.a / (Math.sqrt(1.0e0 - this.es * Sin2_Lat));
    X = (Rn + Height) * Cos_Lat * Math.cos(Longitude);
    Y = (Rn + Height) * Cos_Lat * Math.sin(Longitude);
    Z = ((Rn * (1 - this.es)) + Height) * Sin_Lat;

    p.x = X;
    p.y = Y;
    p.z = Z;
    return Error_Code;
  }, // cs_geodetic_to_geocentric()


  geocentric_to_geodetic : function (p) {
/* local defintions and variables */
/* end-criterium of loop, accuracy of sin(Latitude) */
var genau = 1.E-12;
var genau2 = (genau*genau);
var maxiter = 30;

    var P;        /* distance between semi-minor axis and location */
    var RR;       /* distance between center and location */
    var CT;       /* sin of geocentric latitude */
    var ST;       /* cos of geocentric latitude */
    var RX;
    var RK;
    var RN;       /* Earth radius at location */
    var CPHI0;    /* cos of start or old geodetic latitude in iterations */
    var SPHI0;    /* sin of start or old geodetic latitude in iterations */
    var CPHI;     /* cos of searched geodetic latitude */
    var SPHI;     /* sin of searched geodetic latitude */
    var SDPHI;    /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */
    var At_Pole;     /* indicates location is in polar region */
    var iter;        /* # of continous iteration, max. 30 is always enough (s.a.) */

    var X = p.x;
    var Y = p.y;
    var Z = p.z ? p.z : 0.0;   //Z value not always supplied
    var Longitude;
    var Latitude;
    var Height;

    At_Pole = false;
    P = Math.sqrt(X*X+Y*Y);
    RR = Math.sqrt(X*X+Y*Y+Z*Z);

/*      special cases for latitude and longitude */
    if (P/this.a < genau) {

/*  special case, if P=0. (X=0., Y=0.) */
        At_Pole = true;
        Longitude = 0.0;

/*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis
 *  of ellipsoid (=center of mass), Latitude becomes PI/2 */
        if (RR/this.a < genau) {
            Latitude = Proj4js.common.HALF_PI;
            Height   = -this.b;
            return;
        }
    } else {
/*  ellipsoidal (geodetic) longitude
 *  interval: -PI < Longitude <= +PI */
        Longitude=Math.atan2(Y,X);
    }

/* --------------------------------------------------------------
 * Following iterative algorithm was developped by
 * "Institut Erdmessung", University of Hannover, July 1988.
 * Internet: www.ife.uni-hannover.de
 * Iterative computation of CPHI,SPHI and Height.
 * Iteration of CPHI and SPHI to 10**-12 radian resp.
 * 2*10**-7 arcsec.
 * --------------------------------------------------------------
 */
    CT = Z/RR;
    ST = P/RR;
    RX = 1.0/Math.sqrt(1.0-this.es*(2.0-this.es)*ST*ST);
    CPHI0 = ST*(1.0-this.es)*RX;
    SPHI0 = CT*RX;
    iter = 0;

/* loop to find sin(Latitude) resp. Latitude
 * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */
    do
    {
        iter++;
        RN = this.a/Math.sqrt(1.0-this.es*SPHI0*SPHI0);

/*  ellipsoidal (geodetic) height */
        Height = P*CPHI0+Z*SPHI0-RN*(1.0-this.es*SPHI0*SPHI0);

        RK = this.es*RN/(RN+Height);
        RX = 1.0/Math.sqrt(1.0-RK*(2.0-RK)*ST*ST);
        CPHI = ST*(1.0-RK)*RX;
        SPHI = CT*RX;
        SDPHI = SPHI*CPHI0-CPHI*SPHI0;
        CPHI0 = CPHI;
        SPHI0 = SPHI;
    }
    while (SDPHI*SDPHI > genau2 && iter < maxiter);

/*      ellipsoidal (geodetic) latitude */
    Latitude=Math.atan(SPHI/Math.abs(CPHI));

    p.x = Longitude;
    p.y = Latitude;
    p.z = Height;
    return p;
  }, // cs_geocentric_to_geodetic()

  /** Convert_Geocentric_To_Geodetic
   * The method used here is derived from 'An Improved Algorithm for
   * Geocentric to Geodetic Coordinate Conversion', by Ralph Toms, Feb 1996
   */
  geocentric_to_geodetic_noniter : function (p) {
    var X = p.x;
    var Y = p.y;
    var Z = p.z ? p.z : 0;   //Z value not always supplied
    var Longitude;
    var Latitude;
    var Height;

    var W;        /* distance from Z axis */
    var W2;       /* square of distance from Z axis */
    var T0;       /* initial estimate of vertical component */
    var T1;       /* corrected estimate of vertical component */
    var S0;       /* initial estimate of horizontal component */
    var S1;       /* corrected estimate of horizontal component */
    var Sin_B0;   /* Math.sin(B0), B0 is estimate of Bowring aux variable */
    var Sin3_B0;  /* cube of Math.sin(B0) */
    var Cos_B0;   /* Math.cos(B0) */
    var Sin_p1;   /* Math.sin(phi1), phi1 is estimated latitude */
    var Cos_p1;   /* Math.cos(phi1) */
    var Rn;       /* Earth radius at location */
    var Sum;      /* numerator of Math.cos(phi1) */
    var At_Pole;  /* indicates location is in polar region */

    X = parseFloat(X);  // cast from string to float
    Y = parseFloat(Y);
    Z = parseFloat(Z);

    At_Pole = false;
    if (X != 0.0)
    {
        Longitude = Math.atan2(Y,X);
    }
    else
    {
        if (Y > 0)
        {
            Longitude = Proj4js.common.HALF_PI;
        }
        else if (Y < 0)
        {
            Longitude = -Proj4js.common.HALF_PI;
        }
        else
        {
            At_Pole = true;
            Longitude = 0.0;
            if (Z > 0.0)
            {  /* north pole */
                Latitude = Proj4js.common.HALF_PI;
            }
            else if (Z < 0.0)
            {  /* south pole */
                Latitude = -Proj4js.common.HALF_PI;
            }
            else
            {  /* center of earth */
                Latitude = Proj4js.common.HALF_PI;
                Height = -this.b;
                return;
            }
        }
    }
    W2 = X*X + Y*Y;
    W = Math.sqrt(W2);
    T0 = Z * Proj4js.common.AD_C;
    S0 = Math.sqrt(T0 * T0 + W2);
    Sin_B0 = T0 / S0;
    Cos_B0 = W / S0;
    Sin3_B0 = Sin_B0 * Sin_B0 * Sin_B0;
    T1 = Z + this.b * this.ep2 * Sin3_B0;
    Sum = W - this.a * this.es * Cos_B0 * Cos_B0 * Cos_B0;
    S1 = Math.sqrt(T1*T1 + Sum * Sum);
    Sin_p1 = T1 / S1;
    Cos_p1 = Sum / S1;
    Rn = this.a / Math.sqrt(1.0 - this.es * Sin_p1 * Sin_p1);
    if (Cos_p1 >= Proj4js.common.COS_67P5)
    {
        Height = W / Cos_p1 - Rn;
    }
    else if (Cos_p1 <= -Proj4js.common.COS_67P5)
    {
        Height = W / -Cos_p1 - Rn;
    }
    else
    {
        Height = Z / Sin_p1 + Rn * (this.es - 1.0);
    }
    if (At_Pole == false)
    {
        Latitude = Math.atan(Sin_p1 / Cos_p1);
    }

    p.x = Longitude;
    p.y = Latitude;
    p.z = Height;
    return p;
  }, // geocentric_to_geodetic_noniter()

  /****************************************************************/
  // pj_geocentic_to_wgs84( p )
  //  p = point to transform in geocentric coordinates (x,y,z)
  geocentric_to_wgs84 : function ( p ) {

    if( this.datum_type == Proj4js.common.PJD_3PARAM )
    {
      // if( x[io] == HUGE_VAL )
      //    continue;
      p.x += this.datum_params[0];
      p.y += this.datum_params[1];
      p.z += this.datum_params[2];

    }
    else if (this.datum_type == Proj4js.common.PJD_7PARAM)
    {
      var Dx_BF =this.datum_params[0];
      var Dy_BF =this.datum_params[1];
      var Dz_BF =this.datum_params[2];
      var Rx_BF =this.datum_params[3];
      var Ry_BF =this.datum_params[4];
      var Rz_BF =this.datum_params[5];
      var M_BF  =this.datum_params[6];
      // if( x[io] == HUGE_VAL )
      //    continue;
      var x_out = M_BF*(       p.x - Rz_BF*p.y + Ry_BF*p.z) + Dx_BF;
      var y_out = M_BF*( Rz_BF*p.x +       p.y - Rx_BF*p.z) + Dy_BF;
      var z_out = M_BF*(-Ry_BF*p.x + Rx_BF*p.y +       p.z) + Dz_BF;
      p.x = x_out;
      p.y = y_out;
      p.z = z_out;
    }
  }, // cs_geocentric_to_wgs84

  /****************************************************************/
  // pj_geocentic_from_wgs84()
  //  coordinate system definition,
  //  point to transform in geocentric coordinates (x,y,z)
  geocentric_from_wgs84 : function( p ) {

    if( this.datum_type == Proj4js.common.PJD_3PARAM )
    {
      //if( x[io] == HUGE_VAL )
      //    continue;
      p.x -= this.datum_params[0];
      p.y -= this.datum_params[1];
      p.z -= this.datum_params[2];

    }
    else if (this.datum_type == Proj4js.common.PJD_7PARAM)
    {
      var Dx_BF =this.datum_params[0];
      var Dy_BF =this.datum_params[1];
      var Dz_BF =this.datum_params[2];
      var Rx_BF =this.datum_params[3];
      var Ry_BF =this.datum_params[4];
      var Rz_BF =this.datum_params[5];
      var M_BF  =this.datum_params[6];
      var x_tmp = (p.x - Dx_BF) / M_BF;
      var y_tmp = (p.y - Dy_BF) / M_BF;
      var z_tmp = (p.z - Dz_BF) / M_BF;
      //if( x[io] == HUGE_VAL )
      //    continue;

      p.x =        x_tmp + Rz_BF*y_tmp - Ry_BF*z_tmp;
      p.y = -Rz_BF*x_tmp +       y_tmp + Rx_BF*z_tmp;
      p.z =  Ry_BF*x_tmp - Rx_BF*y_tmp +       z_tmp;
    } //cs_geocentric_from_wgs84()
  }
});

/** point object, nothing fancy, just allows values to be
    passed back and forth by reference rather than by value.
    Other point classes may be used as long as they have
    x and y properties, which will get modified in the transform method.
*/
Proj4js.Point = Proj4js.Class({

    /**
     * Constructor: Proj4js.Point
     *
     * Parameters:
     * - x {float} or {Array} either the first coordinates component or
     *     the full coordinates
     * - y {float} the second component
     * - z {float} the third component, optional.
     */
    initialize : function(x,y,z) {
      if (typeof x == 'object') {
        this.x = x[0];
        this.y = x[1];
        this.z = x[2] || 0.0;
      } else if (typeof x == 'string' && typeof y == 'undefined') {
        var coords = x.split(',');
        this.x = parseFloat(coords[0]);
        this.y = parseFloat(coords[1]);
        this.z = parseFloat(coords[2]) || 0.0;
      } else {
        this.x = x;
        this.y = y;
        this.z = z || 0.0;
      }
    },

    /**
     * APIMethod: clone
     * Build a copy of a Proj4js.Point object.
     *
     * Return:
     * {Proj4js}.Point the cloned point.
     */
    clone : function() {
      return new Proj4js.Point(this.x, this.y, this.z);
    },

    /**
     * APIMethod: toString
     * Return a readable string version of the point
     *
     * Return:
     * {String} String representation of Proj4js.Point object.
     *           (ex. <i>"x=5,y=42"</i>)
     */
    toString : function() {
        return ("x=" + this.x + ",y=" + this.y);
    },

    /**
     * APIMethod: toShortString
     * Return a short string version of the point.
     *
     * Return:
     * {String} Shortened String representation of Proj4js.Point object.
     *         (ex. <i>"5, 42"</i>)
     */
    toShortString : function() {
        return (this.x + ", " + this.y);
    }
});

Proj4js.PrimeMeridian = {
    "greenwich": 0.0,               //"0dE",
    "lisbon":     -9.131906111111,   //"9d07'54.862\"W",
    "paris":       2.337229166667,   //"2d20'14.025\"E",
    "bogota":    -74.080916666667,  //"74d04'51.3\"W",
    "madrid":     -3.687938888889,  //"3d41'16.58\"W",
    "rome":       12.452333333333,  //"12d27'8.4\"E",
    "bern":        7.439583333333,  //"7d26'22.5\"E",
    "jakarta":   106.807719444444,  //"106d48'27.79\"E",
    "ferro":     -17.666666666667,  //"17d40'W",
    "brussels":    4.367975,        //"4d22'4.71\"E",
    "stockholm":  18.058277777778,  //"18d3'29.8\"E",
    "athens":     23.7163375,       //"23d42'58.815\"E",
    "oslo":       10.722916666667   //"10d43'22.5\"E"
};

Proj4js.Ellipsoid = {
  "MERIT": {a:6378137.0, rf:298.257, ellipseName:"MERIT 1983"},
  "SGS85": {a:6378136.0, rf:298.257, ellipseName:"Soviet Geodetic System 85"},
  "GRS80": {a:6378137.0, rf:298.257222101, ellipseName:"GRS 1980(IUGG, 1980)"},
  "IAU76": {a:6378140.0, rf:298.257, ellipseName:"IAU 1976"},
  "airy": {a:6377563.396, b:6356256.910, ellipseName:"Airy 1830"},
  "APL4.": {a:6378137, rf:298.25, ellipseName:"Appl. Physics. 1965"},
  "NWL9D": {a:6378145.0, rf:298.25, ellipseName:"Naval Weapons Lab., 1965"},
  "mod_airy": {a:6377340.189, b:6356034.446, ellipseName:"Modified Airy"},
  "andrae": {a:6377104.43, rf:300.0, ellipseName:"Andrae 1876 (Den., Iclnd.)"},
  "aust_SA": {a:6378160.0, rf:298.25, ellipseName:"Australian Natl & S. Amer. 1969"},
  "GRS67": {a:6378160.0, rf:298.2471674270, ellipseName:"GRS 67(IUGG 1967)"},
  "bessel": {a:6377397.155, rf:299.1528128, ellipseName:"Bessel 1841"},
  "bess_nam": {a:6377483.865, rf:299.1528128, ellipseName:"Bessel 1841 (Namibia)"},
  "clrk66": {a:6378206.4, b:6356583.8, ellipseName:"Clarke 1866"},
  "clrk80": {a:6378249.145, rf:293.4663, ellipseName:"Clarke 1880 mod."},
  "CPM": {a:6375738.7, rf:334.29, ellipseName:"Comm. des Poids et Mesures 1799"},
  "delmbr": {a:6376428.0, rf:311.5, ellipseName:"Delambre 1810 (Belgium)"},
  "engelis": {a:6378136.05, rf:298.2566, ellipseName:"Engelis 1985"},
  "evrst30": {a:6377276.345, rf:300.8017, ellipseName:"Everest 1830"},
  "evrst48": {a:6377304.063, rf:300.8017, ellipseName:"Everest 1948"},
  "evrst56": {a:6377301.243, rf:300.8017, ellipseName:"Everest 1956"},
  "evrst69": {a:6377295.664, rf:300.8017, ellipseName:"Everest 1969"},
  "evrstSS": {a:6377298.556, rf:300.8017, ellipseName:"Everest (Sabah & Sarawak)"},
  "fschr60": {a:6378166.0, rf:298.3, ellipseName:"Fischer (Mercury Datum) 1960"},
  "fschr60m": {a:6378155.0, rf:298.3, ellipseName:"Fischer 1960"},
  "fschr68": {a:6378150.0, rf:298.3, ellipseName:"Fischer 1968"},
  "helmert": {a:6378200.0, rf:298.3, ellipseName:"Helmert 1906"},
  "hough": {a:6378270.0, rf:297.0, ellipseName:"Hough"},
  "intl": {a:6378388.0, rf:297.0, ellipseName:"International 1909 (Hayford)"},
  "kaula": {a:6378163.0, rf:298.24, ellipseName:"Kaula 1961"},
  "lerch": {a:6378139.0, rf:298.257, ellipseName:"Lerch 1979"},
  "mprts": {a:6397300.0, rf:191.0, ellipseName:"Maupertius 1738"},
  "new_intl": {a:6378157.5, b:6356772.2, ellipseName:"New International 1967"},
  "plessis": {a:6376523.0, rf:6355863.0, ellipseName:"Plessis 1817 (France)"},
  "krass": {a:6378245.0, rf:298.3, ellipseName:"Krassovsky, 1942"},
  "SEasia": {a:6378155.0, b:6356773.3205, ellipseName:"Southeast Asia"},
  "walbeck": {a:6376896.0, b:6355834.8467, ellipseName:"Walbeck"},
  "WGS60": {a:6378165.0, rf:298.3, ellipseName:"WGS 60"},
  "WGS66": {a:6378145.0, rf:298.25, ellipseName:"WGS 66"},
  "WGS72": {a:6378135.0, rf:298.26, ellipseName:"WGS 72"},
  "WGS84": {a:6378137.0, rf:298.257223563, ellipseName:"WGS 84"},
  "sphere": {a:6370997.0, b:6370997.0, ellipseName:"Normal Sphere (r=6370997)"}
};

Proj4js.Datum = {
  "WGS84": {towgs84: "0,0,0", ellipse: "WGS84", datumName: "WGS84"},
  "GGRS87": {towgs84: "-199.87,74.79,246.62", ellipse: "GRS80", datumName: "Greek_Geodetic_Reference_System_1987"},
  "NAD83": {towgs84: "0,0,0", ellipse: "GRS80", datumName: "North_American_Datum_1983"},
  "NAD27": {nadgrids: "@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat", ellipse: "clrk66", datumName: "North_American_Datum_1927"},
  "potsdam": {towgs84: "606.0,23.0,413.0", ellipse: "bessel", datumName: "Potsdam Rauenberg 1950 DHDN"},
  "carthage": {towgs84: "-263.0,6.0,431.0", ellipse: "clark80", datumName: "Carthage 1934 Tunisia"},
  "hermannskogel": {towgs84: "653.0,-212.0,449.0", ellipse: "bessel", datumName: "Hermannskogel"},
  "ire65": {towgs84: "482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15", ellipse: "mod_airy", datumName: "Ireland 1965"},
  "nzgd49": {towgs84: "59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993", ellipse: "intl", datumName: "New Zealand Geodetic Datum 1949"},
  "OSGB36": {towgs84: "446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894", ellipse: "airy", datumName: "Airy 1830"}
};

Proj4js.WGS84 = new Proj4js.Proj('WGS84');
Proj4js.Datum['OSB36'] = Proj4js.Datum['OSGB36']; //as returned from spatialreference.org

//lookup table to go from the projection name in WKT to the Proj4js projection name
//build this out as required
Proj4js.wktProjections = {
  "Lambert Tangential Conformal Conic Projection": "lcc",
  "Mercator": "merc",
  "Popular Visualisation Pseudo Mercator": "merc",
  "Mercator_1SP": "merc",
  "Transverse_Mercator": "tmerc",
  "Transverse Mercator": "tmerc",
  "Lambert Azimuthal Equal Area": "laea",
  "Universal Transverse Mercator System": "utm"
};


/* ======================================================================
    projCode/aea.js
   ====================================================================== */

/*******************************************************************************
NAME                     ALBERS CONICAL EQUAL AREA

PURPOSE:	Transforms input longitude and latitude to Easting and Northing
		for the Albers Conical Equal Area projection.  The longitude
		and latitude must be in radians.  The Easting and Northing
		values will be returned in meters.

PROGRAMMER              DATE
----------              ----
T. Mittan,       	Feb, 1992

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/


Proj4js.Proj.aea = {
  init : function() {

    if (Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN) {
       Proj4js.reportError("aeaInitEqualLatitudes");
       return;
    }
    this.temp = this.b / this.a;
    this.es = 1.0 - Math.pow(this.temp,2);
    this.e3 = Math.sqrt(this.es);

    this.sin_po=Math.sin(this.lat1);
    this.cos_po=Math.cos(this.lat1);
    this.t1=this.sin_po;
    this.con = this.sin_po;
    this.ms1 = Proj4js.common.msfnz(this.e3,this.sin_po,this.cos_po);
    this.qs1 = Proj4js.common.qsfnz(this.e3,this.sin_po,this.cos_po);

    this.sin_po=Math.sin(this.lat2);
    this.cos_po=Math.cos(this.lat2);
    this.t2=this.sin_po;
    this.ms2 = Proj4js.common.msfnz(this.e3,this.sin_po,this.cos_po);
    this.qs2 = Proj4js.common.qsfnz(this.e3,this.sin_po,this.cos_po);

    this.sin_po=Math.sin(this.lat0);
    this.cos_po=Math.cos(this.lat0);
    this.t3=this.sin_po;
    this.qs0 = Proj4js.common.qsfnz(this.e3,this.sin_po,this.cos_po);

    if (Math.abs(this.lat1 - this.lat2) > Proj4js.common.EPSLN) {
      this.ns0 = (this.ms1 * this.ms1 - this.ms2 *this.ms2)/ (this.qs2 - this.qs1);
    } else {
      this.ns0 = this.con;
    }
    this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;
    this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0)/this.ns0;
  },

/* Albers Conical Equal Area forward equations--mapping lat,long to x,y
  -------------------------------------------------------------------*/
  forward: function(p){

    var lon=p.x;
    var lat=p.y;

    this.sin_phi=Math.sin(lat);
    this.cos_phi=Math.cos(lat);

    var qs = Proj4js.common.qsfnz(this.e3,this.sin_phi,this.cos_phi);
    var rh1 =this.a * Math.sqrt(this.c - this.ns0 * qs)/this.ns0;
    var theta = this.ns0 * Proj4js.common.adjust_lon(lon - this.long0);
    var x = rh1 * Math.sin(theta) + this.x0;
    var y = this.rh - rh1 * Math.cos(theta) + this.y0;

    p.x = x;
    p.y = y;
    return p;
  },


  inverse: function(p) {
    var rh1,qs,con,theta,lon,lat;

    p.x -= this.x0;
    p.y = this.rh - p.y + this.y0;
    if (this.ns0 >= 0) {
      rh1 = Math.sqrt(p.x *p.x + p.y * p.y);
      con = 1.0;
    } else {
      rh1 = -Math.sqrt(p.x * p.x + p.y *p.y);
      con = -1.0;
    }
    theta = 0.0;
    if (rh1 != 0.0) {
      theta = Math.atan2(con * p.x, con * p.y);
    }
    con = rh1 * this.ns0 / this.a;
    qs = (this.c - con * con) / this.ns0;
    if (this.e3 >= 1e-10) {
      con = 1 - .5 * (1.0 -this.es) * Math.log((1.0 - this.e3) / (1.0 + this.e3))/this.e3;
      if (Math.abs(Math.abs(con) - Math.abs(qs)) > .0000000001 ) {
          lat = this.phi1z(this.e3,qs);
      } else {
          if (qs >= 0) {
             lat = .5 * Proj4js.common.PI;
          } else {
             lat = -.5 * Proj4js.common.PI;
          }
      }
    } else {
      lat = this.phi1z(this.e3,qs);
    }

    lon = Proj4js.common.adjust_lon(theta/this.ns0 + this.long0);
    p.x = lon;
    p.y = lat;
    return p;
  },

/* Function to compute phi1, the latitude for the inverse of the
   Albers Conical Equal-Area projection.
-------------------------------------------*/
  phi1z: function (eccent,qs) {
    var sinphi, cosphi, con, com, dphi;
    var phi = Proj4js.common.asinz(.5 * qs);
    if (eccent < Proj4js.common.EPSLN) return phi;

    var eccnts = eccent * eccent;
    for (var i = 1; i <= 25; i++) {
        sinphi = Math.sin(phi);
        cosphi = Math.cos(phi);
        con = eccent * sinphi;
        com = 1.0 - con * con;
        dphi = .5 * com * com / cosphi * (qs / (1.0 - eccnts) - sinphi / com + .5 / eccent * Math.log((1.0 - con) / (1.0 + con)));
        phi = phi + dphi;
        if (Math.abs(dphi) <= 1e-7) return phi;
    }
    Proj4js.reportError("aea:phi1z:Convergence error");
    return null;
  }

};



/* ======================================================================
    projCode/sterea.js
   ====================================================================== */


Proj4js.Proj.sterea = {
  dependsOn : 'gauss',

  init : function() {
    Proj4js.Proj['gauss'].init.apply(this);
    if (!this.rc) {
      Proj4js.reportError("sterea:init:E_ERROR_0");
      return;
    }
    this.sinc0 = Math.sin(this.phic0);
    this.cosc0 = Math.cos(this.phic0);
    this.R2 = 2.0 * this.rc;
    if (!this.title) this.title = "Oblique Stereographic Alternative";
  },

  forward : function(p) {
    var sinc, cosc, cosl, k;
    p.x = Proj4js.common.adjust_lon(p.x-this.long0); /* adjust del longitude */
    Proj4js.Proj['gauss'].forward.apply(this, [p]);
    sinc = Math.sin(p.y);
    cosc = Math.cos(p.y);
    cosl = Math.cos(p.x);
    k = this.k0 * this.R2 / (1.0 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);
    p.x = k * cosc * Math.sin(p.x);
    p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);
    p.x = this.a * p.x + this.x0;
    p.y = this.a * p.y + this.y0;
    return p;
  },

  inverse : function(p) {
    var sinc, cosc, lon, lat, rho;
    p.x = (p.x - this.x0) / this.a; /* descale and de-offset */
    p.y = (p.y - this.y0) / this.a;

    p.x /= this.k0;
    p.y /= this.k0;
    if ( (rho = Math.sqrt(p.x*p.x + p.y*p.y)) ) {
      var c = 2.0 * Math.atan2(rho, this.R2);
      sinc = Math.sin(c);
      cosc = Math.cos(c);
      lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);
      lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);
    } else {
      lat = this.phic0;
      lon = 0.;
    }

    p.x = lon;
    p.y = lat;
    Proj4js.Proj['gauss'].inverse.apply(this,[p]);
    p.x = Proj4js.common.adjust_lon(p.x + this.long0); /* adjust longitude to CM */
    return p;
  }
};

/* ======================================================================
    projCode/poly.js
   ====================================================================== */

/* Function to compute, phi4, the latitude for the inverse of the
   Polyconic projection.
------------------------------------------------------------*/
function phi4z (eccent,e0,e1,e2,e3,a,b,c,phi) {
	var sinphi, sin2ph, tanphi, ml, mlp, con1, con2, con3, dphi, i;

	phi = a;
	for (i = 1; i <= 15; i++) {
		sinphi = Math.sin(phi);
		tanphi = Math.tan(phi);
		c = tanphi * Math.sqrt (1.0 - eccent * sinphi * sinphi);
		sin2ph = Math.sin (2.0 * phi);
		/*
		ml = e0 * *phi - e1 * sin2ph + e2 * sin (4.0 *  *phi);
		mlp = e0 - 2.0 * e1 * cos (2.0 *  *phi) + 4.0 * e2 *  cos (4.0 *  *phi);
		*/
		ml = e0 * phi - e1 * sin2ph + e2 * Math.sin (4.0 *  phi) - e3 * Math.sin (6.0 * phi);
		mlp = e0 - 2.0 * e1 * Math.cos (2.0 *  phi) + 4.0 * e2 * Math.cos (4.0 *  phi) - 6.0 * e3 * Math.cos (6.0 *  phi);
		con1 = 2.0 * ml + c * (ml * ml + b) - 2.0 * a *  (c * ml + 1.0);
		con2 = eccent * sin2ph * (ml * ml + b - 2.0 * a * ml) / (2.0 *c);
		con3 = 2.0 * (a - ml) * (c * mlp - 2.0 / sin2ph) - 2.0 * mlp;
		dphi = con1 / (con2 + con3);
		phi += dphi;
		if (Math.abs(dphi) <= .0000000001 ) return(phi);
	}
	Proj4js.reportError("phi4z: No convergence");
	return null;
}


/* Function to compute the constant e4 from the input of the eccentricity
   of the spheroid, x.  This constant is used in the Polar Stereographic
   projection.
--------------------------------------------------------------------*/
function e4fn(x) {
	var con, com;
	con = 1.0 + x;
	com = 1.0 - x;
	return (Math.sqrt((Math.pow(con,con))*(Math.pow(com,com))));
}





/*******************************************************************************
NAME                             POLYCONIC

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Polyconic projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
T. Mittan		Mar, 1993

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/

Proj4js.Proj.poly = {

	/* Initialize the POLYCONIC projection
	  ----------------------------------*/
	init: function() {
		var temp;			/* temporary variable		*/
		if (this.lat0 == 0) this.lat0 = 90;//this.lat0 ca

		/* Place parameters in static storage for common use
		  -------------------------------------------------*/
		this.temp = this.b / this.a;
		this.es = 1.0 - Math.pow(this.temp,2);// devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles
		this.e = Math.sqrt(this.es);
		this.e0 = Proj4js.common.e0fn(this.es);
		this.e1 = Proj4js.common.e1fn(this.es);
		this.e2 = Proj4js.common.e2fn(this.es);
		this.e3 = Proj4js.common.e3fn(this.es);
		this.ml0 = Proj4js.common.mlfn(this.e0, this.e1,this.e2, this.e3, this.lat0);//si que des zeros le calcul ne se fait pas
		//if (!this.ml0) {this.ml0=0;}
	},


	/* Polyconic forward equations--mapping lat,long to x,y
	  ---------------------------------------------------*/
	forward: function(p) {
		var sinphi, cosphi;	/* sin and cos value				*/
		var al;				/* temporary values				*/
		var c;				/* temporary values				*/
		var con, ml;		/* cone constant, small m			*/
		var ms;				/* small m					*/
		var x,y;

		var lon=p.x;
		var lat=p.y;

		con = Proj4js.common.adjust_lon(lon - this.long0);
		if (Math.abs(lat) <= .0000001) {
			x = this.x0 + this.a * con;
			y = this.y0 - this.a * this.ml0;
		} else {
			sinphi = Math.sin(lat);
			cosphi = Math.cos(lat);

			ml = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, lat);
			ms = Proj4js.common.msfnz(this.e,sinphi,cosphi);
			con = sinphi;
			x = this.x0 + this.a * ms * Math.sin(con)/sinphi;
			y = this.y0 + this.a * (ml - this.ml0 + ms * (1.0 - Math.cos(con))/sinphi);
		}

		p.x=x;
		p.y=y;
		return p;
	},


	/* Inverse equations
	-----------------*/
	inverse: function(p) {
		var sin_phi, cos_phi;	/* sin and cos value				*/
		var al;					/* temporary values				*/
		var b;					/* temporary values				*/
		var c;					/* temporary values				*/
		var con, ml;			/* cone constant, small m			*/
		var iflg;				/* error flag					*/
		var lon,lat;
		p.x -= this.x0;
		p.y -= this.y0;
		al = this.ml0 + p.y/this.a;
		iflg = 0;

		if (Math.abs(al) <= .0000001) {
			lon = p.x/this.a + this.long0;
			lat = 0.0;
		} else {
			b = al * al + (p.x/this.a) * (p.x/this.a);
			iflg = phi4z(this.es,this.e0,this.e1,this.e2,this.e3,this.al,b,c,lat);
			if (iflg != 1) return(iflg);
			lon = Proj4js.common.adjust_lon((Proj4js.common.asinz(p.x * c / this.a) / Math.sin(lat)) + this.long0);
		}

		p.x=lon;
		p.y=lat;
		return p;
	}
};



/* ======================================================================
    projCode/equi.js
   ====================================================================== */

/*******************************************************************************
NAME                             EQUIRECTANGULAR

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Equirectangular projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
T. Mittan		Mar, 1993

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/
Proj4js.Proj.equi = {

  init: function() {
    if(!this.x0) this.x0=0;
    if(!this.y0) this.y0=0;
    if(!this.lat0) this.lat0=0;
    if(!this.long0) this.long0=0;
    ///this.t2;
  },



/* Equirectangular forward equations--mapping lat,long to x,y
  ---------------------------------------------------------*/
  forward: function(p) {

    var lon=p.x;
    var lat=p.y;

    var dlon = Proj4js.common.adjust_lon(lon - this.long0);
    var x = this.x0 +this. a * dlon *Math.cos(this.lat0);
    var y = this.y0 + this.a * lat;

    this.t1=x;
    this.t2=Math.cos(this.lat0);
    p.x=x;
    p.y=y;
    return p;
  },  //equiFwd()



/* Equirectangular inverse equations--mapping x,y to lat/long
  ---------------------------------------------------------*/
  inverse: function(p) {

    p.x -= this.x0;
    p.y -= this.y0;
    var lat = p.y /this. a;

    if ( Math.abs(lat) > Proj4js.common.HALF_PI) {
        Proj4js.reportError("equi:Inv:DataError");
    }
    var lon = Proj4js.common.adjust_lon(this.long0 + p.x / (this.a * Math.cos(this.lat0)));
    p.x=lon;
    p.y=lat;
  }//equiInv()
};


/* ======================================================================
    projCode/merc.js
   ====================================================================== */

/*******************************************************************************
NAME                            MERCATOR

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Mercator projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
D. Steinwand, EROS      Nov, 1991
T. Mittan		Mar, 1993

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/

//static double r_major = a;		   /* major axis 				*/
//static double r_minor = b;		   /* minor axis 				*/
//static double lon_center = long0;	   /* Center longitude (projection center) */
//static double lat_origin =  lat0;	   /* center latitude			*/
//static double e,es;		           /* eccentricity constants		*/
//static double m1;		               /* small value m			*/
//static double false_northing = y0;   /* y offset in meters			*/
//static double false_easting = x0;	   /* x offset in meters			*/
//scale_fact = k0

Proj4js.Proj.merc = {
  init : function() {
	//?this.temp = this.r_minor / this.r_major;
	//this.temp = this.b / this.a;
	//this.es = 1.0 - Math.sqrt(this.temp);
	//this.e = Math.sqrt( this.es );
	//?this.m1 = Math.cos(this.lat_origin) / (Math.sqrt( 1.0 - this.es * Math.sin(this.lat_origin) * Math.sin(this.lat_origin)));
	//this.m1 = Math.cos(0.0) / (Math.sqrt( 1.0 - this.es * Math.sin(0.0) * Math.sin(0.0)));
    if (this.lat_ts) {
      if (this.sphere) {
        this.k0 = Math.cos(this.lat_ts);
      } else {
        this.k0 = Proj4js.common.msfnz(this.es, Math.sin(this.lat_ts), Math.cos(this.lat_ts));
      }
    }
  },

/* Mercator forward equations--mapping lat,long to x,y
  --------------------------------------------------*/

  forward : function(p) {
    //alert("ll2m coords : "+coords);
    var lon = p.x;
    var lat = p.y;
    // convert to radians
    if ( lat*Proj4js.common.R2D > 90.0 &&
          lat*Proj4js.common.R2D < -90.0 &&
          lon*Proj4js.common.R2D > 180.0 &&
          lon*Proj4js.common.R2D < -180.0) {
      Proj4js.reportError("merc:forward: llInputOutOfRange: "+ lon +" : " + lat);
      return null;
    }

    var x,y;
    if(Math.abs( Math.abs(lat) - Proj4js.common.HALF_PI)  <= Proj4js.common.EPSLN) {
      Proj4js.reportError("merc:forward: ll2mAtPoles");
      return null;
    } else {
      if (this.sphere) {
        x = this.x0 + this.a * this.k0 * Proj4js.common.adjust_lon(lon - this.long0);
        y = this.y0 + this.a * this.k0 * Math.log(Math.tan(Proj4js.common.FORTPI + 0.5*lat));
      } else {
        var sinphi = Math.sin(lat);
        var ts = Proj4js.common.tsfnz(this.e,lat,sinphi);
        x = this.x0 + this.a * this.k0 * Proj4js.common.adjust_lon(lon - this.long0);
        y = this.y0 - this.a * this.k0 * Math.log(ts);
      }
      p.x = x;
      p.y = y;
      return p;
    }
  },


  /* Mercator inverse equations--mapping x,y to lat/long
  --------------------------------------------------*/
  inverse : function(p) {

    var x = p.x - this.x0;
    var y = p.y - this.y0;
    var lon,lat;

    if (this.sphere) {
      lat = Proj4js.common.HALF_PI - 2.0 * Math.atan(Math.exp(-y / this.a * this.k0));
    } else {
      var ts = Math.exp(-y / (this.a * this.k0));
      lat = Proj4js.common.phi2z(this.e,ts);
      if(lat == -9999) {
        Proj4js.reportError("merc:inverse: lat = -9999");
        return null;
      }
    }
    lon = Proj4js.common.adjust_lon(this.long0+ x / (this.a * this.k0));

    p.x = lon;
    p.y = lat;
    return p;
  }
};


/* ======================================================================
    projCode/utm.js
   ====================================================================== */

/*******************************************************************************
NAME                            TRANSVERSE MERCATOR

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Transverse Mercator projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/


/**
  Initialize Transverse Mercator projection
*/

Proj4js.Proj.utm = {
  dependsOn : 'tmerc',

  init : function() {
    if (!this.zone) {
      Proj4js.reportError("utm:init: zone must be specified for UTM");
      return;
    }
    this.lat0 = 0.0;
    this.long0 = ((6 * Math.abs(this.zone)) - 183) * Proj4js.common.D2R;
    this.x0 = 500000.0;
    this.y0 = this.utmSouth ? 10000000.0 : 0.0;
    this.k0 = 0.9996;

    Proj4js.Proj['tmerc'].init.apply(this);
    this.forward = Proj4js.Proj['tmerc'].forward;
    this.inverse = Proj4js.Proj['tmerc'].inverse;
  }
};
/* ======================================================================
    projCode/eqdc.js
   ====================================================================== */

/*******************************************************************************
NAME                            EQUIDISTANT CONIC

PURPOSE:	Transforms input longitude and latitude to Easting and Northing
		for the Equidistant Conic projection.  The longitude and
		latitude must be in radians.  The Easting and Northing values
		will be returned in meters.

PROGRAMMER              DATE
----------              ----
T. Mittan		Mar, 1993

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/

/* Variables common to all subroutines in this code file
  -----------------------------------------------------*/

Proj4js.Proj.eqdc = {

/* Initialize the Equidistant Conic projection
  ------------------------------------------*/
  init: function() {

    /* Place parameters in static storage for common use
      -------------------------------------------------*/

    if(!this.mode) this.mode=0;//chosen default mode
    this.temp = this.b / this.a;
    this.es = 1.0 - Math.pow(this.temp,2);
    this.e = Math.sqrt(this.es);
    this.e0 = Proj4js.common.e0fn(this.es);
    this.e1 = Proj4js.common.e1fn(this.es);
    this.e2 = Proj4js.common.e2fn(this.es);
    this.e3 = Proj4js.common.e3fn(this.es);

    this.sinphi=Math.sin(this.lat1);
    this.cosphi=Math.cos(this.lat1);

    this.ms1 = Proj4js.common.msfnz(this.e,this.sinphi,this.cosphi);
    this.ml1 = Proj4js.common.mlfn(this.e0, this.e1, this.e2,this.e3, this.lat1);

    /* format B
    ---------*/
    if (this.mode != 0) {
      if (Math.abs(this.lat1 + this.lat2) < Proj4js.common.EPSLN) {
            Proj4js.reportError("eqdc:Init:EqualLatitudes");
            //return(81);
       }
       this.sinphi=Math.sin(this.lat2);
       this.cosphi=Math.cos(this.lat2);

       this.ms2 = Proj4js.common.msfnz(this.e,this.sinphi,this.cosphi);
       this.ml2 = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);
       if (Math.abs(this.lat1 - this.lat2) >= Proj4js.common.EPSLN) {
         this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);
       } else {
          this.ns = this.sinphi;
       }
    } else {
      this.ns = this.sinphi;
    }
    this.g = this.ml1 + this.ms1/this.ns;
    this.ml0 = Proj4js.common.mlfn(this.e0, this.e1,this. e2, this.e3, this.lat0);
    this.rh = this.a * (this.g - this.ml0);
  },


/* Equidistant Conic forward equations--mapping lat,long to x,y
  -----------------------------------------------------------*/
  forward: function(p) {
    var lon=p.x;
    var lat=p.y;

    /* Forward equations
      -----------------*/
    var ml = Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, lat);
    var rh1 = this.a * (this.g - ml);
    var theta = this.ns * Proj4js.common.adjust_lon(lon - this.long0);

    var x = this.x0  + rh1 * Math.sin(theta);
    var y = this.y0 + this.rh - rh1 * Math.cos(theta);
    p.x=x;
    p.y=y;
    return p;
  },

/* Inverse equations
  -----------------*/
  inverse: function(p) {
    p.x -= this.x0;
    p.y  = this.rh - p.y + this.y0;
    var con, rh1;
    if (this.ns >= 0) {
       var rh1 = Math.sqrt(p.x *p.x + p.y * p.y);
       var con = 1.0;
    } else {
       rh1 = -Math.sqrt(p.x *p. x +p. y * p.y);
       con = -1.0;
    }
    var theta = 0.0;
    if (rh1 != 0.0) theta = Math.atan2(con *p.x, con *p.y);
    var ml = this.g - rh1 /this.a;
    var lat = this.phi3z(ml,this.e0,this.e1,this.e2,this.e3);
    var lon = Proj4js.common.adjust_lon(this.long0 + theta / this.ns);

     p.x=lon;
     p.y=lat;
     return p;
    },

/* Function to compute latitude, phi3, for the inverse of the Equidistant
   Conic projection.
-----------------------------------------------------------------*/
  phi3z: function(ml,e0,e1,e2,e3) {
    var phi;
    var dphi;

    phi = ml;
    for (var i = 0; i < 15; i++) {
      dphi = (ml + e1 * Math.sin(2.0 * phi) - e2 * Math.sin(4.0 * phi) + e3 * Math.sin(6.0 * phi))/ e0 - phi;
      phi += dphi;
      if (Math.abs(dphi) <= .0000000001) {
        return phi;
      }
    }
    Proj4js.reportError("PHI3Z-CONV:Latitude failed to converge after 15 iterations");
    return null;
  }


};
/* ======================================================================
    projCode/tmerc.js
   ====================================================================== */

/*******************************************************************************
NAME                            TRANSVERSE MERCATOR

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Transverse Mercator projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/


/**
  Initialize Transverse Mercator projection
*/

Proj4js.Proj.tmerc = {
  init : function() {
    this.e0 = Proj4js.common.e0fn(this.es);
    this.e1 = Proj4js.common.e1fn(this.es);
    this.e2 = Proj4js.common.e2fn(this.es);
    this.e3 = Proj4js.common.e3fn(this.es);
    this.ml0 = this.a * Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);
  },

  /**
    Transverse Mercator Forward  - long/lat to x/y
    long/lat in radians
  */
  forward : function(p) {
    var lon = p.x;
    var lat = p.y;

    var delta_lon = Proj4js.common.adjust_lon(lon - this.long0); // Delta longitude
    var con;    // cone constant
    var x, y;
    var sin_phi=Math.sin(lat);
    var cos_phi=Math.cos(lat);

    if (this.sphere) {  /* spherical form */
      var b = cos_phi * Math.sin(delta_lon);
      if ((Math.abs(Math.abs(b) - 1.0)) < .0000000001)  {
        Proj4js.reportError("tmerc:forward: Point projects into infinity");
        return(93);
      } else {
        x = .5 * this.a * this.k0 * Math.log((1.0 + b)/(1.0 - b));
        con = Math.acos(cos_phi * Math.cos(delta_lon)/Math.sqrt(1.0 - b*b));
        if (lat < 0) con = - con;
        y = this.a * this.k0 * (con - this.lat0);
      }
    } else {
      var al  = cos_phi * delta_lon;
      var als = Math.pow(al,2);
      var c   = this.ep2 * Math.pow(cos_phi,2);
      var tq  = Math.tan(lat);
      var t   = Math.pow(tq,2);
      con = 1.0 - this.es * Math.pow(sin_phi,2);
      var n   = this.a / Math.sqrt(con);
      var ml  = this.a * Proj4js.common.mlfn(this.e0, this.e1, this.e2, this.e3, lat);

      x = this.k0 * n * al * (1.0 + als / 6.0 * (1.0 - t + c + als / 20.0 * (5.0 - 18.0 * t + Math.pow(t,2) + 72.0 * c - 58.0 * this.ep2))) + this.x0;
      y = this.k0 * (ml - this.ml0 + n * tq * (als * (0.5 + als / 24.0 * (5.0 - t + 9.0 * c + 4.0 * Math.pow(c,2) + als / 30.0 * (61.0 - 58.0 * t + Math.pow(t,2) + 600.0 * c - 330.0 * this.ep2))))) + this.y0;

    }
    p.x = x; p.y = y;
    return p;
  }, // tmercFwd()

  /**
    Transverse Mercator Inverse  -  x/y to long/lat
  */
  inverse : function(p) {
    var con, phi;  /* temporary angles       */
    var delta_phi; /* difference between longitudes    */
    var i;
    var max_iter = 6;      /* maximun number of iterations */
    var lat, lon;

    if (this.sphere) {   /* spherical form */
      var f = Math.exp(p.x/(this.a * this.k0));
      var g = .5 * (f - 1/f);
      var temp = this.lat0 + p.y/(this.a * this.k0);
      var h = Math.cos(temp);
      con = Math.sqrt((1.0 - h * h)/(1.0 + g * g));
      lat = Proj4js.common.asinz(con);
      if (temp < 0)
        lat = -lat;
      if ((g == 0) && (h == 0)) {
        lon = this.long0;
      } else {
        lon = Proj4js.common.adjust_lon(Math.atan2(g,h) + this.long0);
      }
    } else {    // ellipsoidal form
      var x = p.x - this.x0;
      var y = p.y - this.y0;

      con = (this.ml0 + y / this.k0) / this.a;
      phi = con;
      for (i=0;true;i++) {
        delta_phi=((con + this.e1 * Math.sin(2.0*phi) - this.e2 * Math.sin(4.0*phi) + this.e3 * Math.sin(6.0*phi)) / this.e0) - phi;
        phi += delta_phi;
        if (Math.abs(delta_phi) <= Proj4js.common.EPSLN) break;
        if (i >= max_iter) {
          Proj4js.reportError("tmerc:inverse: Latitude failed to converge");
          return(95);
        }
      } // for()
      if (Math.abs(phi) < Proj4js.common.HALF_PI) {
        // sincos(phi, &sin_phi, &cos_phi);
        var sin_phi=Math.sin(phi);
        var cos_phi=Math.cos(phi);
        var tan_phi = Math.tan(phi);
        var c = this.ep2 * Math.pow(cos_phi,2);
        var cs = Math.pow(c,2);
        var t = Math.pow(tan_phi,2);
        var ts = Math.pow(t,2);
        con = 1.0 - this.es * Math.pow(sin_phi,2);
        var n = this.a / Math.sqrt(con);
        var r = n * (1.0 - this.es) / con;
        var d = x / (n * this.k0);
        var ds = Math.pow(d,2);
        lat = phi - (n * tan_phi * ds / r) * (0.5 - ds / 24.0 * (5.0 + 3.0 * t + 10.0 * c - 4.0 * cs - 9.0 * this.ep2 - ds / 30.0 * (61.0 + 90.0 * t + 298.0 * c + 45.0 * ts - 252.0 * this.ep2 - 3.0 * cs)));
        lon = Proj4js.common.adjust_lon(this.long0 + (d * (1.0 - ds / 6.0 * (1.0 + 2.0 * t + c - ds / 20.0 * (5.0 - 2.0 * c + 28.0 * t - 3.0 * cs + 8.0 * this.ep2 + 24.0 * ts))) / cos_phi));
      } else {
        lat = Proj4js.common.HALF_PI * Proj4js.common.sign(y);
        lon = this.long0;
      }
    }
    p.x = lon;
    p.y = lat;
    return p;
  } // tmercInv()
};
/* ======================================================================
    defs/GOOGLE.js
   ====================================================================== */

Proj4js.defs["GOOGLE"]="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs";
Proj4js.defs["EPSG:900913"]=Proj4js.defs["GOOGLE"];
/* ======================================================================
    projCode/gstmerc.js
   ====================================================================== */

Proj4js.Proj.gstmerc = {
  init : function() {

    // array of:  a, b, lon0, lat0, k0, x0, y0
      var temp= this.b / this.a;
      this.e= Math.sqrt(1.0 - temp*temp);
      this.lc= this.long0;
      this.rs= Math.sqrt(1.0+this.e*this.e*Math.pow(Math.cos(this.lat0),4.0)/(1.0-this.e*this.e));
      var sinz= Math.sin(this.lat0);
      var pc= Math.asin(sinz/this.rs);
      var sinzpc= Math.sin(pc);
      this.cp= Proj4js.common.latiso(0.0,pc,sinzpc)-this.rs*Proj4js.common.latiso(this.e,this.lat0,sinz);
      this.n2= this.k0*this.a*Math.sqrt(1.0-this.e*this.e)/(1.0-this.e*this.e*sinz*sinz);
      this.xs= this.x0;
      this.ys= this.y0-this.n2*pc;

      if (!this.title) this.title = "Gauss Schreiber transverse mercator";
    },


    // forward equations--mapping lat,long to x,y
    // -----------------------------------------------------------------
    forward : function(p) {

      var lon= p.x;
      var lat= p.y;

      var L= this.rs*(lon-this.lc);
      var Ls= this.cp+(this.rs*Proj4js.common.latiso(this.e,lat,Math.sin(lat)));
      var lat1= Math.asin(Math.sin(L)/Proj4js.common.cosh(Ls));
      var Ls1= Proj4js.common.latiso(0.0,lat1,Math.sin(lat1));
      p.x= this.xs+(this.n2*Ls1);
      p.y= this.ys+(this.n2*Math.atan(Proj4js.common.sinh(Ls)/Math.cos(L)));
      return p;
    },

  // inverse equations--mapping x,y to lat/long
  // -----------------------------------------------------------------
  inverse : function(p) {

    var x= p.x;
    var y= p.y;

    var L= Math.atan(Proj4js.common.sinh((x-this.xs)/this.n2)/Math.cos((y-this.ys)/this.n2));
    var lat1= Math.asin(Math.sin((y-this.ys)/this.n2)/Proj4js.common.cosh((x-this.xs)/this.n2));
    var LC= Proj4js.common.latiso(0.0,lat1,Math.sin(lat1));
    p.x= this.lc+L/this.rs;
    p.y= Proj4js.common.invlatiso(this.e,(LC-this.cp)/this.rs);
    return p;
  }

};
/* ======================================================================
    projCode/ortho.js
   ====================================================================== */

/*******************************************************************************
NAME                             ORTHOGRAPHIC

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Orthographic projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
T. Mittan		Mar, 1993

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/

Proj4js.Proj.ortho = {

  /* Initialize the Orthographic projection
    -------------------------------------*/
  init: function(def) {
    //double temp;			/* temporary variable		*/

    /* Place parameters in static storage for common use
      -------------------------------------------------*/;
    this.sin_p14=Math.sin(this.lat0);
    this.cos_p14=Math.cos(this.lat0);
  },


  /* Orthographic forward equations--mapping lat,long to x,y
    ---------------------------------------------------*/
  forward: function(p) {
    var sinphi, cosphi;	/* sin and cos value				*/
    var dlon;		/* delta longitude value			*/
    var coslon;		/* cos of longitude				*/
    var ksp;		/* scale factor					*/
    var g;
    var lon=p.x;
    var lat=p.y;
    /* Forward equations
      -----------------*/
    dlon = Proj4js.common.adjust_lon(lon - this.long0);

    sinphi=Math.sin(lat);
    cosphi=Math.cos(lat);

    coslon = Math.cos(dlon);
    g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;
    ksp = 1.0;
    if ((g > 0) || (Math.abs(g) <= Proj4js.common.EPSLN)) {
      var x = this.a * ksp * cosphi * Math.sin(dlon);
      var y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);
    } else {
      Proj4js.reportError("orthoFwdPointError");
    }
    p.x=x;
    p.y=y;
    return p;
  },


  inverse: function(p) {
    var rh;		/* height above ellipsoid			*/
    var z;		/* angle					*/
    var sinz,cosz;	/* sin of z and cos of z			*/
    var temp;
    var con;
    var lon , lat;
    /* Inverse equations
      -----------------*/
    p.x -= this.x0;
    p.y -= this.y0;
    rh = Math.sqrt(p.x * p.x + p.y * p.y);
    if (rh > this.a + .0000001) {
      Proj4js.reportError("orthoInvDataError");
    }
    z = Proj4js.common.asinz(rh / this.a);

    sinz=Math.sin(z);
    cosz=Math.cos(z);

    lon = this.long0;
    if (Math.abs(rh) <= Proj4js.common.EPSLN) {
      lat = this.lat0;
    }
    lat = Proj4js.common.asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14)/rh);
    con = Math.abs(this.lat0) - Proj4js.common.HALF_PI;
    if (Math.abs(con) <= Proj4js.common.EPSLN) {
       if (this.lat0 >= 0) {
          lon = Proj4js.common.adjust_lon(this.long0 + Math.atan2(p.x, -p.y));
       } else {
          lon = Proj4js.common.adjust_lon(this.long0 -Math.atan2(-p.x, p.y));
       }
    }
    con = cosz - this.sin_p14 * Math.sin(lat);
    p.x=lon;
    p.y=lat;
    return p;
  }
};


/* ======================================================================
    projCode/krovak.js
   ====================================================================== */

/**
   NOTES: According to EPSG the full Krovak projection method should have
          the following parameters.  Within PROJ.4 the azimuth, and pseudo
          standard parallel are hardcoded in the algorithm and can't be
          altered from outside.  The others all have defaults to match the
          common usage with Krovak projection.

  lat_0 = latitude of centre of the projection

  lon_0 = longitude of centre of the projection

  ** = azimuth (true) of the centre line passing through the centre of the projection

  ** = latitude of pseudo standard parallel

  k  = scale factor on the pseudo standard parallel

  x_0 = False Easting of the centre of the projection at the apex of the cone

  y_0 = False Northing of the centre of the projection at the apex of the cone

 **/

Proj4js.Proj.krovak = {

	init: function() {
		/* we want Bessel as fixed ellipsoid */
		this.a =  6377397.155;
		this.es = 0.006674372230614;
		this.e = Math.sqrt(this.es);
		/* if latitude of projection center is not set, use 49d30'N */
		if (!this.lat0) {
			this.lat0 = 0.863937979737193;
		}
		if (!this.long0) {
			this.long0 = 0.7417649320975901 - 0.308341501185665;
		}
		/* if scale not set default to 0.9999 */
		if (!this.k0) {
			this.k0 = 0.9999;
		}
		this.s45 = 0.785398163397448;    /* 45 */
		this.s90 = 2 * this.s45;
		this.fi0 = this.lat0;    /* Latitude of projection centre 49 30' */
      		/*  Ellipsoid Bessel 1841 a = 6377397.155m 1/f = 299.1528128,
      					 e2=0.006674372230614;
		 */
		this.e2 = this.es;       /* 0.006674372230614; */
		this.e = Math.sqrt(this.e2);
		this.alfa = Math.sqrt(1. + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1. - this.e2));
		this.uq = 1.04216856380474;      /* DU(2, 59, 42, 42.69689) */
		this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);
		this.g = Math.pow(   (1. + this.e * Math.sin(this.fi0)) / (1. - this.e * Math.sin(this.fi0)) , this.alfa * this.e / 2.  );
		this.k = Math.tan( this.u0 / 2. + this.s45) / Math.pow  (Math.tan(this.fi0 / 2. + this.s45) , this.alfa) * this.g;
		this.k1 = this.k0;
		this.n0 = this.a * Math.sqrt(1. - this.e2) / (1. - this.e2 * Math.pow(Math.sin(this.fi0), 2));
		this.s0 = 1.37008346281555;       /* Latitude of pseudo standard parallel 78 N */
		this.n = Math.sin(this.s0);
		this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);
		this.ad = this.s90 - this.uq;
	},

	/* ellipsoid */
	/* calculate xy from lat/lon */
	/* Constants, identical to inverse transform function */
	forward: function(p) {
		var gfi, u, deltav, s, d, eps, ro;
		var lon = p.x;
		var lat = p.y;
		var delta_lon = Proj4js.common.adjust_lon(lon - this.long0); // Delta longitude
		/* Transformation */
		gfi = Math.pow ( ((1. + this.e * Math.sin(lat)) / (1. - this.e * Math.sin(lat))) , (this.alfa * this.e / 2.));
		u= 2. * (Math.atan(this.k * Math.pow( Math.tan(lat / 2. + this.s45), this.alfa) / gfi)-this.s45);
		deltav = - delta_lon * this.alfa;
		s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));
		d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));
		eps = this.n * d;
		ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2. + this.s45) , this.n) / Math.pow(Math.tan(s / 2. + this.s45) , this.n);
		/* x and y are reverted! */
		//p.y = ro * Math.cos(eps) / a;
		//p.x = ro * Math.sin(eps) / a;
		p.y = ro * Math.cos(eps) / 1.0;
		p.x = ro * Math.sin(eps) / 1.0;

		if(this.czech) {
	    		p.y *= -1.0;
	    		p.x *= -1.0;
		}
		return (p);
	},

	/* calculate lat/lon from xy */
	inverse: function(p) {
		/* Constants, identisch wie in der Umkehrfunktion */
		var u, deltav, s, d, eps, ro, fi1;
		var ok;

		/* Transformation */
		/* revert y, x*/
		var tmp = p.x;
		p.x=p.y;
		p.y=tmp;
		if(this.czech) {
	    		p.y *= -1.0;
	    		p.x *= -1.0;
		}
		ro = Math.sqrt(p.x * p.x + p.y * p.y);
		eps = Math.atan2(p.y, p.x);
		d = eps / Math.sin(this.s0);
		s = 2. * (Math.atan(  Math.pow(this.ro0 / ro, 1. / this.n) * Math.tan(this.s0 / 2. + this.s45)) - this.s45);
		u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));
		deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));
		p.x = this.long0 - deltav / this.alfa;
		/* ITERATION FOR lat */
		fi1 = u;
		ok = 0;
		var iter = 0;
		do {
			p.y = 2. * ( Math.atan( Math.pow( this.k, -1. / this.alfa)  *
                            Math.pow( Math.tan(u / 2. + this.s45) , 1. / this.alfa)  *
                            Math.pow( (1. + this.e * Math.sin(fi1)) / (1. - this.e * Math.sin(fi1)) , this.e / 2.)
                           )  - this.s45);
      			if (Math.abs(fi1 - p.y) < 0.0000000001) ok=1;
			fi1 = p.y;
			iter += 1;
		} while (ok==0 && iter < 15);
		if (iter >= 15) {
			Proj4js.reportError("PHI3Z-CONV:Latitude failed to converge after 15 iterations");
			//console.log('iter:', iter);
			return null;
		}

		return (p);
	}
};
/* ======================================================================
    projCode/somerc.js
   ====================================================================== */

/*******************************************************************************
NAME                       SWISS OBLIQUE MERCATOR

PURPOSE:	Swiss projection.
WARNING:  X and Y are inverted (weird) in the swiss coordinate system. Not
   here, since we want X to be horizontal and Y vertical.

ALGORITHM REFERENCES
1. "Formules et constantes pour le Calcul pour la
 projection cylindrique conforme axe oblique et pour la transformation entre
 des syst es de rence".
 http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf

*******************************************************************************/

Proj4js.Proj.somerc = {

  init: function() {
    var phy0 = this.lat0;
    this.lambda0 = this.long0;
    var sinPhy0 = Math.sin(phy0);
    var semiMajorAxis = this.a;
    var invF = this.rf;
    var flattening = 1 / invF;
    var e2 = 2 * flattening - Math.pow(flattening, 2);
    var e = this.e = Math.sqrt(e2);
    this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2.0));
    this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4.0));
    this.b0 = Math.asin(sinPhy0 / this.alpha);
    this.K = Math.log(Math.tan(Math.PI / 4.0 + this.b0 / 2.0))
            - this.alpha
            * Math.log(Math.tan(Math.PI / 4.0 + phy0 / 2.0))
            + this.alpha
            * e / 2
            * Math.log((1 + e * sinPhy0)
            / (1 - e * sinPhy0));
  },


  forward: function(p) {
    var Sa1 = Math.log(Math.tan(Math.PI / 4.0 - p.y / 2.0));
    var Sa2 = this.e / 2.0
            * Math.log((1 + this.e * Math.sin(p.y))
            / (1 - this.e * Math.sin(p.y)));
    var S = -this.alpha * (Sa1 + Sa2) + this.K;

        // spheric latitude
    var b = 2.0 * (Math.atan(Math.exp(S)) - Math.PI / 4.0);

        // spheric longitude
    var I = this.alpha * (p.x - this.lambda0);

        // psoeudo equatorial rotation
    var rotI = Math.atan(Math.sin(I)
            / (Math.sin(this.b0) * Math.tan(b) +
               Math.cos(this.b0) * Math.cos(I)));

    var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) -
                         Math.sin(this.b0) * Math.cos(b) * Math.cos(I));

    p.y = this.R / 2.0
            * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB)))
            + this.y0;
    p.x = this.R * rotI + this.x0;
    return p;
  },

  inverse: function(p) {
    var Y = p.x - this.x0;
    var X = p.y - this.y0;

    var rotI = Y / this.R;
    var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4.0);

    var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB)
            + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));
    var I = Math.atan(Math.sin(rotI)
            / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0)
            * Math.tan(rotB)));

    var lambda = this.lambda0 + I / this.alpha;

    var S = 0.0;
    var phy = b;
    var prevPhy = -1000.0;
    var iteration = 0;
    while (Math.abs(phy - prevPhy) > 0.0000001)
    {
      if (++iteration > 20)
      {
        Proj4js.reportError("omercFwdInfinity");
        return;
      }
      //S = Math.log(Math.tan(Math.PI / 4.0 + phy / 2.0));
      S = 1.0
              / this.alpha
              * (Math.log(Math.tan(Math.PI / 4.0 + b / 2.0)) - this.K)
              + this.e
              * Math.log(Math.tan(Math.PI / 4.0
              + Math.asin(this.e * Math.sin(phy))
              / 2.0));
      prevPhy = phy;
      phy = 2.0 * Math.atan(Math.exp(S)) - Math.PI / 2.0;
    }

    p.x = lambda;
    p.y = phy;
    return p;
  }
};
/* ======================================================================
    projCode/stere.js
   ====================================================================== */


// Initialize the Stereographic projection

Proj4js.Proj.stere = {
  ssfn_: function(phit, sinphi, eccen) {
  	sinphi *= eccen;
  	return (Math.tan (.5 * (Proj4js.common.HALF_PI + phit)) * Math.pow((1. - sinphi) / (1. + sinphi), .5 * eccen));
  },
  TOL:	1.e-8,
  NITER:	8,
  CONV:	1.e-10,
  S_POLE:	0,
  N_POLE:	1,
  OBLIQ:	2,
  EQUIT:	3,

  init : function() {
  	this.phits = this.lat_ts ? this.lat_ts : Proj4js.common.HALF_PI;
    var t = Math.abs(this.lat0);
  	if ((Math.abs(t) - Proj4js.common.HALF_PI) < Proj4js.common.EPSLN) {
  		this.mode = this.lat0 < 0. ? this.S_POLE : this.N_POLE;
  	} else {
  		this.mode = t > Proj4js.common.EPSLN ? this.OBLIQ : this.EQUIT;
    }
  	this.phits = Math.abs(this.phits);
  	if (this.es) {
  		var X;

  		switch (this.mode) {
  		case this.N_POLE:
  		case this.S_POLE:
  			if (Math.abs(this.phits - Proj4js.common.HALF_PI) < Proj4js.common.EPSLN) {
  				this.akm1 = 2. * this.k0 / Math.sqrt(Math.pow(1+this.e,1+this.e)*Math.pow(1-this.e,1-this.e));
  			} else {
          t = Math.sin(this.phits);
  				this.akm1 = Math.cos(this.phits) / Proj4js.common.tsfnz(this.e, this.phits, t);
  				t *= this.e;
  				this.akm1 /= Math.sqrt(1. - t * t);
  			}
  			break;
  		case this.EQUIT:
  			this.akm1 = 2. * this.k0;
  			break;
  		case this.OBLIQ:
  			t = Math.sin(this.lat0);
  			X = 2. * Math.atan(this.ssfn_(this.lat0, t, this.e)) - Proj4js.common.HALF_PI;
  			t *= this.e;
  			this.akm1 = 2. * this.k0 * Math.cos(this.lat0) / Math.sqrt(1. - t * t);
  			this.sinX1 = Math.sin(X);
  			this.cosX1 = Math.cos(X);
  			break;
  		}
  	} else {
  		switch (this.mode) {
  		case this.OBLIQ:
  			this.sinph0 = Math.sin(this.lat0);
  			this.cosph0 = Math.cos(this.lat0);
  		case this.EQUIT:
  			this.akm1 = 2. * this.k0;
  			break;
  		case this.S_POLE:
  		case this.N_POLE:
  			this.akm1 = Math.abs(this.phits - Proj4js.common.HALF_PI) >= Proj4js.common.EPSLN ?
  			   Math.cos(this.phits) / Math.tan(Proj4js.common.FORTPI - .5 * this.phits) :
  			   2. * this.k0 ;
  			break;
  		}
  	}
  },

// Stereographic forward equations--mapping lat,long to x,y
  forward: function(p) {
    var lon = p.x;
    lon = Proj4js.common.adjust_lon(lon - this.long0);
    var lat = p.y;
    var x, y;

    if (this.sphere) {
    	var  sinphi, cosphi, coslam, sinlam;

    	sinphi = Math.sin(lat);
    	cosphi = Math.cos(lat);
    	coslam = Math.cos(lon);
    	sinlam = Math.sin(lon);
    	switch (this.mode) {
    	case this.EQUIT:
    		y = 1. + cosphi * coslam;
    		if (y <= Proj4js.common.EPSLN) {
          F_ERROR;
        }
        y = this.akm1 / y;
    		x = y * cosphi * sinlam;
        y *= sinphi;
    		break;
    	case this.OBLIQ:
    		y = 1. + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;
    		if (y <= Proj4js.common.EPSLN) {
          F_ERROR;
        }
        y = this.akm1 / y;
    		x = y * cosphi * sinlam;
    		y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;
    		break;
    	case this.N_POLE:
    		coslam = -coslam;
    		lat = -lat;
        //Note  no break here so it conitnues through S_POLE
    	case this.S_POLE:
    		if (Math.abs(lat - Proj4js.common.HALF_PI) < this.TOL) {
          F_ERROR;
        }
        y = this.akm1 * Math.tan(Proj4js.common.FORTPI + .5 * lat);
    		x = sinlam * y;
    		y *= coslam;
    		break;
    	}
    } else {
    	coslam = Math.cos(lon);
    	sinlam = Math.sin(lon);
    	sinphi = Math.sin(lat);
    	var sinX, cosX;
    	if (this.mode == this.OBLIQ || this.mode == this.EQUIT) {
    	  var Xt = 2. * Math.atan(this.ssfn_(lat, sinphi, this.e));
        sinX = Math.sin(Xt - Proj4js.common.HALF_PI);
        cosX = Math.cos(Xt);
    	}
    	switch (this.mode) {
    	case this.OBLIQ:
    		var A = this.akm1 / (this.cosX1 * (1. + this.sinX1 * sinX + this.cosX1 * cosX * coslam));
    		y = A * (this.cosX1 * sinX - this.sinX1 * cosX * coslam);
    		x = A * cosX;
    		break;
    	case this.EQUIT:
    		var A = 2. * this.akm1 / (1. + cosX * coslam);
    		y = A * sinX;
    		x = A * cosX;
    		break;
    	case this.S_POLE:
    		lat = -lat;
    		coslam = - coslam;
    		sinphi = -sinphi;
    	case this.N_POLE:
    		x = this.akm1 * Proj4js.common.tsfnz(this.e, lat, sinphi);
    		y = - x * coslam;
    		break;
    	}
    	x = x * sinlam;
    }
    p.x = x*this.a + this.x0;
    p.y = y*this.a + this.y0;
    return p;
  },


//* Stereographic inverse equations--mapping x,y to lat/long
  inverse: function(p) {
    var x = (p.x - this.x0)/this.a;   /* descale and de-offset */
    var y = (p.y - this.y0)/this.a;
    var lon, lat;

    var cosphi, sinphi, tp=0.0, phi_l=0.0, rho, halfe=0.0, pi2=0.0;
    var i;

    if (this.sphere) {
    	var  c, rh, sinc, cosc;

      rh = Math.sqrt(x*x + y*y);
      c = 2. * Math.atan(rh / this.akm1);
    	sinc = Math.sin(c);
    	cosc = Math.cos(c);
    	lon = 0.;
    	switch (this.mode) {
    	case this.EQUIT:
    		if (Math.abs(rh) <= Proj4js.common.EPSLN) {
    			lat = 0.;
    		} else {
    			lat = Math.asin(y * sinc / rh);
        }
    		if (cosc != 0. || x != 0.) lon = Math.atan2(x * sinc, cosc * rh);
    		break;
    	case this.OBLIQ:
    		if (Math.abs(rh) <= Proj4js.common.EPSLN) {
    			lat = this.phi0;
    		} else {
    			lat = Math.asin(cosc * sinph0 + y * sinc * cosph0 / rh);
        }
        c = cosc - sinph0 * Math.sin(lat);
    		if (c != 0. || x != 0.) {
    			lon = Math.atan2(x * sinc * cosph0, c * rh);
        }
    		break;
    	case this.N_POLE:
    		y = -y;
    	case this.S_POLE:
    		if (Math.abs(rh) <= Proj4js.common.EPSLN) {
    			lat = this.phi0;
    		} else {
    			lat = Math.asin(this.mode == this.S_POLE ? -cosc : cosc);
        }
    		lon = (x == 0. && y == 0.) ? 0. : Math.atan2(x, y);
    		break;
    	}
        p.x = Proj4js.common.adjust_lon(lon + this.long0);
        p.y = lat;
    } else {
    	rho = Math.sqrt(x*x + y*y);
    	switch (this.mode) {
    	case this.OBLIQ:
    	case this.EQUIT:
        tp = 2. * Math.atan2(rho * this.cosX1 , this.akm1);
    		cosphi = Math.cos(tp);
    		sinphi = Math.sin(tp);
        if( rho == 0.0 ) {
    		  phi_l = Math.asin(cosphi * this.sinX1);
        } else {
    		  phi_l = Math.asin(cosphi * this.sinX1 + (y * sinphi * this.cosX1 / rho));
        }

    		tp = Math.tan(.5 * (Proj4js.common.HALF_PI + phi_l));
    		x *= sinphi;
    		y = rho * this.cosX1 * cosphi - y * this.sinX1* sinphi;
    		pi2 = Proj4js.common.HALF_PI;
    		halfe = .5 * this.e;
    		break;
    	case this.N_POLE:
    		y = -y;
    	case this.S_POLE:
        tp = - rho / this.akm1;
    		phi_l = Proj4js.common.HALF_PI - 2. * Math.atan(tp);
    		pi2 = -Proj4js.common.HALF_PI;
    		halfe = -.5 * this.e;
    		break;
    	}
    	for (i = this.NITER; i--; phi_l = lat) { //check this
    		sinphi = this.e * Math.sin(phi_l);
    		lat = 2. * Math.atan(tp * Math.pow((1.+sinphi)/(1.-sinphi), halfe)) - pi2;
    		if (Math.abs(phi_l - lat) < this.CONV) {
    			if (this.mode == this.S_POLE) lat = -lat;
    			lon = (x == 0. && y == 0.) ? 0. : Math.atan2(x, y);
          p.x = Proj4js.common.adjust_lon(lon + this.long0);
          p.y = lat;
    			return p;
    		}
    	}
    }
  }
};
/* ======================================================================
    projCode/nzmg.js
   ====================================================================== */

/*******************************************************************************
NAME                            NEW ZEALAND MAP GRID

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the New Zealand Map Grid projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.


ALGORITHM REFERENCES

1.  Department of Land and Survey Technical Circular 1973/32
      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf

2.  OSG Technical Report 4.1
      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf


IMPLEMENTATION NOTES

The two references use different symbols for the calculated values. This
implementation uses the variable names similar to the symbols in reference [1].

The alogrithm uses different units for delta latitude and delta longitude.
The delta latitude is assumed to be in units of seconds of arc x 10^-5.
The delta longitude is the usual radians. Look out for these conversions.

The algorithm is described using complex arithmetic. There were three
options:
   * find and use a Javascript library for complex arithmetic
   * write my own complex library
   * expand the complex arithmetic by hand to simple arithmetic

This implementation has expanded the complex multiplication operations
into parallel simple arithmetic operations for the real and imaginary parts.
The imaginary part is way over to the right of the display; this probably
violates every coding standard in the world, but, to me, it makes it much
more obvious what is going on.

The following complex operations are used:
   - addition
   - multiplication
   - division
   - complex number raised to integer power
   - summation

A summary of complex arithmetic operations:
   (from http://en.wikipedia.org/wiki/Complex_arithmetic)
   addition:       (a + bi) + (c + di) = (a + c) + (b + d)i
   subtraction:    (a + bi) - (c + di) = (a - c) + (b - d)i
   multiplication: (a + bi) x (c + di) = (ac - bd) + (bc + ad)i
   division:       (a + bi) / (c + di) = [(ac + bd)/(cc + dd)] + [(bc - ad)/(cc + dd)]i

The algorithm needs to calculate summations of simple and complex numbers. This is
implemented using a for-loop, pre-loading the summed value to zero.

The algorithm needs to calculate theta^2, theta^3, etc while doing a summation.
There are three possible implementations:
   - use Math.pow in the summation loop - except for complex numbers
   - precalculate the values before running the loop
   - calculate theta^n = theta^(n-1) * theta during the loop
This implementation uses the third option for both real and complex arithmetic.

For example
   psi_n = 1;
   sum = 0;
   for (n = 1; n <=6; n++) {
      psi_n1 = psi_n * psi;       // calculate psi^(n+1)
      psi_n = psi_n1;
      sum = sum + A[n] * psi_n;
   }


TEST VECTORS

NZMG E, N:         2487100.638      6751049.719     metres
NZGD49 long, lat:      172.739194       -34.444066  degrees

NZMG E, N:         2486533.395      6077263.661     metres
NZGD49 long, lat:      172.723106       -40.512409  degrees

NZMG E, N:         2216746.425      5388508.765     metres
NZGD49 long, lat:      169.172062       -46.651295  degrees

Note that these test vectors convert from NZMG metres to lat/long referenced
to NZGD49, not the more usual WGS84. The difference is about 70m N/S and about
10m E/W.

These test vectors are provided in reference [1]. Many more test
vectors are available in
   http://www.linz.govt.nz/docs/topography/topographicdata/placenamesdatabase/nznamesmar08.zip
which is a catalog of names on the 260-series maps.


EPSG CODES

NZMG     EPSG:27200
NZGD49   EPSG:4272

http://spatialreference.org/ defines these as
  Proj4js.defs["EPSG:4272"] = "+proj=longlat +ellps=intl +datum=nzgd49 +no_defs ";
  Proj4js.defs["EPSG:27200"] = "+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150 +ellps=intl +datum=nzgd49 +units=m +no_defs ";


LICENSE
  Copyright: Stephen Irons 2008
  Released under terms of the LGPL as per: http://www.gnu.org/copyleft/lesser.html

*******************************************************************************/


/**
  Initialize New Zealand Map Grip projection
*/

Proj4js.Proj.nzmg = {

  /**
   * iterations: Number of iterations to refine inverse transform.
   *     0 -> km accuracy
   *     1 -> m accuracy -- suitable for most mapping applications
   *     2 -> mm accuracy
   */
  iterations: 1,

  init : function() {
    this.A = new Array();
    this.A[1]  = +0.6399175073;
    this.A[2]  = -0.1358797613;
    this.A[3]  = +0.063294409;
    this.A[4]  = -0.02526853;
    this.A[5]  = +0.0117879;
    this.A[6]  = -0.0055161;
    this.A[7]  = +0.0026906;
    this.A[8]  = -0.001333;
    this.A[9]  = +0.00067;
    this.A[10] = -0.00034;

    this.B_re = new Array();        this.B_im = new Array();
    this.B_re[1] = +0.7557853228;   this.B_im[1] =  0.0;
    this.B_re[2] = +0.249204646;    this.B_im[2] = +0.003371507;
    this.B_re[3] = -0.001541739;    this.B_im[3] = +0.041058560;
    this.B_re[4] = -0.10162907;     this.B_im[4] = +0.01727609;
    this.B_re[5] = -0.26623489;     this.B_im[5] = -0.36249218;
    this.B_re[6] = -0.6870983;      this.B_im[6] = -1.1651967;

    this.C_re = new Array();        this.C_im = new Array();
    this.C_re[1] = +1.3231270439;   this.C_im[1] =  0.0;
    this.C_re[2] = -0.577245789;    this.C_im[2] = -0.007809598;
    this.C_re[3] = +0.508307513;    this.C_im[3] = -0.112208952;
    this.C_re[4] = -0.15094762;     this.C_im[4] = +0.18200602;
    this.C_re[5] = +1.01418179;     this.C_im[5] = +1.64497696;
    this.C_re[6] = +1.9660549;      this.C_im[6] = +2.5127645;

    this.D = new Array();
    this.D[1] = +1.5627014243;
    this.D[2] = +0.5185406398;
    this.D[3] = -0.03333098;
    this.D[4] = -0.1052906;
    this.D[5] = -0.0368594;
    this.D[6] = +0.007317;
    this.D[7] = +0.01220;
    this.D[8] = +0.00394;
    this.D[9] = -0.0013;
  },

  /**
    New Zealand Map Grid Forward  - long/lat to x/y
    long/lat in radians
  */
  forward : function(p) {
    var lon = p.x;
    var lat = p.y;

    var delta_lat = lat - this.lat0;
    var delta_lon = lon - this.long0;

    // 1. Calculate d_phi and d_psi    ...                          // and d_lambda
    // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.
    var d_phi = delta_lat / Proj4js.common.SEC_TO_RAD * 1E-5;       var d_lambda = delta_lon;
    var d_phi_n = 1;  // d_phi^0

    var d_psi = 0;
    for (var n = 1; n <= 10; n++) {
      d_phi_n = d_phi_n * d_phi;
      d_psi = d_psi + this.A[n] * d_phi_n;
    }

    // 2. Calculate theta
    var th_re = d_psi;                                              var th_im = d_lambda;

    // 3. Calculate z
    var th_n_re = 1;                                                var th_n_im = 0;  // theta^0
    var th_n_re1;                                                   var th_n_im1;

    var z_re = 0;                                                   var z_im = 0;
    for (var n = 1; n <= 6; n++) {
      th_n_re1 = th_n_re*th_re - th_n_im*th_im;                     th_n_im1 = th_n_im*th_re + th_n_re*th_im;
      th_n_re = th_n_re1;                                           th_n_im = th_n_im1;
      z_re = z_re + this.B_re[n]*th_n_re - this.B_im[n]*th_n_im;    z_im = z_im + this.B_im[n]*th_n_re + this.B_re[n]*th_n_im;
    }

    // 4. Calculate easting and northing
    p.x = (z_im * this.a) + this.x0;
    p.y = (z_re * this.a) + this.y0;

    return p;
  },


  /**
    New Zealand Map Grid Inverse  -  x/y to long/lat
  */
  inverse : function(p) {

    var x = p.x;
    var y = p.y;

    var delta_x = x - this.x0;
    var delta_y = y - this.y0;

    // 1. Calculate z
    var z_re = delta_y / this.a;                                              var z_im = delta_x / this.a;

    // 2a. Calculate theta - first approximation gives km accuracy
    var z_n_re = 1;                                                           var z_n_im = 0;  // z^0
    var z_n_re1;                                                              var z_n_im1;

    var th_re = 0;                                                            var th_im = 0;
    for (var n = 1; n <= 6; n++) {
      z_n_re1 = z_n_re*z_re - z_n_im*z_im;                                    z_n_im1 = z_n_im*z_re + z_n_re*z_im;
      z_n_re = z_n_re1;                                                       z_n_im = z_n_im1;
      th_re = th_re + this.C_re[n]*z_n_re - this.C_im[n]*z_n_im;              th_im = th_im + this.C_im[n]*z_n_re + this.C_re[n]*z_n_im;
    }

    // 2b. Iterate to refine the accuracy of the calculation
    //        0 iterations gives km accuracy
    //        1 iteration gives m accuracy -- good enough for most mapping applications
    //        2 iterations bives mm accuracy
    for (var i = 0; i < this.iterations; i++) {
       var th_n_re = th_re;                                                      var th_n_im = th_im;
       var th_n_re1;                                                             var th_n_im1;

       var num_re = z_re;                                                        var num_im = z_im;
       for (var n = 2; n <= 6; n++) {
         th_n_re1 = th_n_re*th_re - th_n_im*th_im;                               th_n_im1 = th_n_im*th_re + th_n_re*th_im;
         th_n_re = th_n_re1;                                                     th_n_im = th_n_im1;
         num_re = num_re + (n-1)*(this.B_re[n]*th_n_re - this.B_im[n]*th_n_im);  num_im = num_im + (n-1)*(this.B_im[n]*th_n_re + this.B_re[n]*th_n_im);
       }

       th_n_re = 1;                                                              th_n_im = 0;
       var den_re = this.B_re[1];                                                var den_im = this.B_im[1];
       for (var n = 2; n <= 6; n++) {
         th_n_re1 = th_n_re*th_re - th_n_im*th_im;                               th_n_im1 = th_n_im*th_re + th_n_re*th_im;
         th_n_re = th_n_re1;                                                     th_n_im = th_n_im1;
         den_re = den_re + n * (this.B_re[n]*th_n_re - this.B_im[n]*th_n_im);    den_im = den_im + n * (this.B_im[n]*th_n_re + this.B_re[n]*th_n_im);
       }

       // Complex division
       var den2 = den_re*den_re + den_im*den_im;
       th_re = (num_re*den_re + num_im*den_im) / den2;                           th_im = (num_im*den_re - num_re*den_im) / den2;
    }

    // 3. Calculate d_phi              ...                                    // and d_lambda
    var d_psi = th_re;                                                        var d_lambda = th_im;
    var d_psi_n = 1;  // d_psi^0

    var d_phi = 0;
    for (var n = 1; n <= 9; n++) {
       d_psi_n = d_psi_n * d_psi;
       d_phi = d_phi + this.D[n] * d_psi_n;
    }

    // 4. Calculate latitude and longitude
    // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.
    var lat = this.lat0 + (d_phi * Proj4js.common.SEC_TO_RAD * 1E5);
    var lon = this.long0 +  d_lambda;

    p.x = lon;
    p.y = lat;

    return p;
  }
};
/* ======================================================================
    projCode/mill.js
   ====================================================================== */

/*******************************************************************************
NAME                    MILLER CYLINDRICAL

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Miller Cylindrical projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
T. Mittan		March, 1993

This function was adapted from the Lambert Azimuthal Equal Area projection
code (FORTRAN) in the General Cartographic Transformation Package software
which is available from the U.S. Geological Survey National Mapping Division.

ALGORITHM REFERENCES

1.  "New Equal-Area Map Projections for Noncircular Regions", John P. Snyder,
    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.

2.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

3.  "Software Documentation for GCTP General Cartographic Transformation
    Package", U.S. Geological Survey National Mapping Division, May 1982.
*******************************************************************************/

Proj4js.Proj.mill = {

/* Initialize the Miller Cylindrical projection
  -------------------------------------------*/
  init: function() {
    //no-op
  },


  /* Miller Cylindrical forward equations--mapping lat,long to x,y
    ------------------------------------------------------------*/
  forward: function(p) {
    var lon=p.x;
    var lat=p.y;
    /* Forward equations
      -----------------*/
    var dlon = Proj4js.common.adjust_lon(lon -this.long0);
    var x = this.x0 + this.a * dlon;
    var y = this.y0 + this.a * Math.log(Math.tan((Proj4js.common.PI / 4.0) + (lat / 2.5))) * 1.25;

    p.x=x;
    p.y=y;
    return p;
  },//millFwd()

  /* Miller Cylindrical inverse equations--mapping x,y to lat/long
    ------------------------------------------------------------*/
  inverse: function(p) {
    p.x -= this.x0;
    p.y -= this.y0;

    var lon = Proj4js.common.adjust_lon(this.long0 + p.x /this.a);
    var lat = 2.5 * (Math.atan(Math.exp(0.8*p.y/this.a)) - Proj4js.common.PI / 4.0);

    p.x=lon;
    p.y=lat;
    return p;
  }//millInv()
};
/* ======================================================================
    projCode/gnom.js
   ====================================================================== */

/*****************************************************************************
NAME                             GNOMONIC

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Gnomonic Projection.
                Implementation based on the existing sterea and ortho
                implementations.

PROGRAMMER              DATE
----------              ----
Richard Marsden         November 2009

ALGORITHM REFERENCES

1.  Snyder, John P., "Flattening the Earth - Two Thousand Years of Map
    Projections", University of Chicago Press 1993

2.  Wolfram Mathworld "Gnomonic Projection"
    http://mathworld.wolfram.com/GnomonicProjection.html
    Accessed: 12th November 2009
******************************************************************************/

Proj4js.Proj.gnom = {

  /* Initialize the Gnomonic projection
    -------------------------------------*/
  init: function(def) {

    /* Place parameters in static storage for common use
      -------------------------------------------------*/
    this.sin_p14=Math.sin(this.lat0);
    this.cos_p14=Math.cos(this.lat0);
    // Approximation for projecting points to the horizon (infinity)
    this.infinity_dist = 1000 * this.a;
    this.rc = 1;
  },


  /* Gnomonic forward equations--mapping lat,long to x,y
    ---------------------------------------------------*/
  forward: function(p) {
    var sinphi, cosphi;	/* sin and cos value				*/
    var dlon;		/* delta longitude value			*/
    var coslon;		/* cos of longitude				*/
    var ksp;		/* scale factor					*/
    var g;
    var x, y;
    var lon=p.x;
    var lat=p.y;
    /* Forward equations
      -----------------*/
    dlon = Proj4js.common.adjust_lon(lon - this.long0);

    sinphi=Math.sin(lat);
    cosphi=Math.cos(lat);

    coslon = Math.cos(dlon);
    g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;
    ksp = 1.0;
    if ((g > 0) || (Math.abs(g) <= Proj4js.common.EPSLN)) {
      x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;
      y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;
    } else {
      Proj4js.reportError("orthoFwdPointError");

      // Point is in the opposing hemisphere and is unprojectable
      // We still need to return a reasonable point, so we project
      // to infinity, on a bearing
      // equivalent to the northern hemisphere equivalent
      // This is a reasonable approximation for short shapes and lines that
      // straddle the horizon.

      x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);
      y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);

    }
    p.x=x;
    p.y=y;
    return p;
  },


  inverse: function(p) {
    var rh;		/* Rho */
    var z;		/* angle */
    var sinc, cosc;
    var c;
    var lon , lat;

    /* Inverse equations
      -----------------*/
    p.x = (p.x - this.x0) / this.a;
    p.y = (p.y - this.y0) / this.a;

    p.x /= this.k0;
    p.y /= this.k0;

    if ( (rh = Math.sqrt(p.x * p.x + p.y * p.y)) ) {
      c = Math.atan2(rh, this.rc);
      sinc = Math.sin(c);
      cosc = Math.cos(c);

      lat = Proj4js.common.asinz(cosc*this.sin_p14 + (p.y*sinc*this.cos_p14) / rh);
      lon = Math.atan2(p.x*sinc, rh*this.cos_p14*cosc - p.y*this.sin_p14*sinc);
      lon = Proj4js.common.adjust_lon(this.long0+lon);
    } else {
      lat = this.phic0;
      lon = 0.0;
    }

    p.x=lon;
    p.y=lat;
    return p;
  }
};


/* ======================================================================
    projCode/sinu.js
   ====================================================================== */

/*******************************************************************************
NAME                  		SINUSOIDAL

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Sinusoidal projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
D. Steinwand, EROS      May, 1991

This function was adapted from the Sinusoidal projection code (FORTRAN) in the
General Cartographic Transformation Package software which is available from
the U.S. Geological Survey National Mapping Division.

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  "Software Documentation for GCTP General Cartographic Transformation
    Package", U.S. Geological Survey National Mapping Division, May 1982.
*******************************************************************************/

Proj4js.Proj.sinu = {

	/* Initialize the Sinusoidal projection
	  ------------------------------------*/
	init: function() {
		/* Place parameters in static storage for common use
		  -------------------------------------------------*/


		if (!this.sphere) {
		  this.en = Proj4js.common.pj_enfn(this.es);
    } else {
      this.n = 1.;
      this.m = 0.;
      this.es = 0;
      this.C_y = Math.sqrt((this.m + 1.) / this.n);
      this.C_x = this.C_y/(this.m + 1.);
    }

	},

	/* Sinusoidal forward equations--mapping lat,long to x,y
	-----------------------------------------------------*/
	forward: function(p) {
		var x,y,delta_lon;
		var lon=p.x;
		var lat=p.y;
		/* Forward equations
		-----------------*/
		lon = Proj4js.common.adjust_lon(lon - this.long0);

		if (this.sphere) {
      if (!this.m) {
        lat = this.n != 1. ? Math.asin(this.n * Math.sin(lat)): lat;
      } else {
        k = this.n * Math.sin(lat);
        for (var i = Proj4js.common.MAX_ITER; i ; --i) {
          lat -= V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));
          if (Math.abs(V) < Proj4js.common.EPSLN) break;
        }
      }
      x = this.a * this.C_x * lon * (this.m + Math.cos(lat));
      y = this.a * this.C_y * lat;

		} else {

		  var s = Math.sin(lat);
		  var c = Math.cos(lat);
      y = this.a * Proj4js.common.pj_mlfn(lat, s, c, this.en);
      x = this.a * lon * c / Math.sqrt(1. - this.es * s * s);
		}

		p.x=x;
		p.y=y;
		return p;
	},

	inverse: function(p) {
		var lat,temp,lon;

		/* Inverse equations
		  -----------------*/
		p.x -= this.x0;
		p.y -= this.y0;
		lat = p.y / this.a;

		if (this.sphere) {

      p.y /= this.C_y;
      lat = this.m ? Math.asin((this.m * p.y + Math.sin(p.y)) / this.n) :
        ( this.n != 1. ? Math.asin(sin(p.y) / this.n) : p.y );
      lon = p.x / (this.C_x * (this.m + Math.cos(p.y)));

		} else {
		  lat = Proj4js.common.pj_inv_mlfn(p.y/this.a, this.es, this.en)
		  var s = Math.abs(lat);
      if (s < Proj4js.common.HALF_PI) {
        s = Math.sin(lat);
        temp = this.long0 + p.x * Math.sqrt(1. - this.es * s * s) /(this.a * Math.cos(lat));
        //temp = this.long0 + p.x / (this.a * Math.cos(lat));
        lon = Proj4js.common.adjust_lon(temp);
      } else if ((s - Proj4js.common.EPSLN) < Proj4js.common.HALF_PI) {
        lon = this.long0;
      }

		}

		p.x=lon;
		p.y=lat;
		return p;
	}
};


/* ======================================================================
    projCode/vandg.js
   ====================================================================== */

/*******************************************************************************
NAME                    VAN DER GRINTEN

PURPOSE:	Transforms input Easting and Northing to longitude and
		latitude for the Van der Grinten projection.  The
		Easting and Northing must be in meters.  The longitude
		and latitude values will be returned in radians.

PROGRAMMER              DATE
----------              ----
T. Mittan		March, 1993

This function was adapted from the Van Der Grinten projection code
(FORTRAN) in the General Cartographic Transformation Package software
which is available from the U.S. Geological Survey National Mapping Division.

ALGORITHM REFERENCES

1.  "New Equal-Area Map Projections for Noncircular Regions", John P. Snyder,
    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.

2.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

3.  "Software Documentation for GCTP General Cartographic Transformation
    Package", U.S. Geological Survey National Mapping Division, May 1982.
*******************************************************************************/

Proj4js.Proj.vandg = {

/* Initialize the Van Der Grinten projection
  ----------------------------------------*/
	init: function() {
		this.R = 6370997.0; //Radius of earth
	},

	forward: function(p) {

		var lon=p.x;
		var lat=p.y;

		/* Forward equations
		-----------------*/
		var dlon = Proj4js.common.adjust_lon(lon - this.long0);
		var x,y;

		if (Math.abs(lat) <= Proj4js.common.EPSLN) {
			x = this.x0  + this.R * dlon;
			y = this.y0;
		}
		var theta = Proj4js.common.asinz(2.0 * Math.abs(lat / Proj4js.common.PI));
		if ((Math.abs(dlon) <= Proj4js.common.EPSLN) || (Math.abs(Math.abs(lat) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN)) {
			x = this.x0;
			if (lat >= 0) {
				y = this.y0 + Proj4js.common.PI * this.R * Math.tan(.5 * theta);
			} else {
				y = this.y0 + Proj4js.common.PI * this.R * - Math.tan(.5 * theta);
			}
			//  return(OK);
		}
		var al = .5 * Math.abs((Proj4js.common.PI / dlon) - (dlon / Proj4js.common.PI));
		var asq = al * al;
		var sinth = Math.sin(theta);
		var costh = Math.cos(theta);

		var g = costh / (sinth + costh - 1.0);
		var gsq = g * g;
		var m = g * (2.0 / sinth - 1.0);
		var msq = m * m;
		var con = Proj4js.common.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);
		if (dlon < 0) {
		 con = -con;
		}
		x = this.x0 + con;
		con = Math.abs(con / (Proj4js.common.PI * this.R));
		if (lat >= 0) {
		 y = this.y0 + Proj4js.common.PI * this.R * Math.sqrt(1.0 - con * con - 2.0 * al * con);
		} else {
		 y = this.y0 - Proj4js.common.PI * this.R * Math.sqrt(1.0 - con * con - 2.0 * al * con);
		}
		p.x = x;
		p.y = y;
		return p;
	},

/* Van Der Grinten inverse equations--mapping x,y to lat/long
  ---------------------------------------------------------*/
	inverse: function(p) {
		var lon, lat;
		var xx,yy,xys,c1,c2,c3;
		var al,asq;
		var a1;
		var m1;
		var con;
		var th1;
		var d;

		/* inverse equations
		-----------------*/
		p.x -= this.x0;
		p.y -= this.y0;
		con = Proj4js.common.PI * this.R;
		xx = p.x / con;
		yy =p.y / con;
		xys = xx * xx + yy * yy;
		c1 = -Math.abs(yy) * (1.0 + xys);
		c2 = c1 - 2.0 * yy * yy + xx * xx;
		c3 = -2.0 * c1 + 1.0 + 2.0 * yy * yy + xys * xys;
		d = yy * yy / c3 + (2.0 * c2 * c2 * c2 / c3 / c3 / c3 - 9.0 * c1 * c2 / c3 /c3) / 27.0;
		a1 = (c1 - c2 * c2 / 3.0 / c3) / c3;
		m1 = 2.0 * Math.sqrt( -a1 / 3.0);
		con = ((3.0 * d) / a1) / m1;
		if (Math.abs(con) > 1.0) {
			if (con >= 0.0) {
				con = 1.0;
			} else {
				con = -1.0;
			}
		}
		th1 = Math.acos(con) / 3.0;
		if (p.y >= 0) {
			lat = (-m1 *Math.cos(th1 + Proj4js.common.PI / 3.0) - c2 / 3.0 / c3) * Proj4js.common.PI;
		} else {
			lat = -(-m1 * Math.cos(th1 + Proj4js.common.PI / 3.0) - c2 / 3.0 / c3) * Proj4js.common.PI;
		}

		if (Math.abs(xx) < Proj4js.common.EPSLN) {
			lon = this.long0;
		}
		lon = Proj4js.common.adjust_lon(this.long0 + Proj4js.common.PI * (xys - 1.0 + Math.sqrt(1.0 + 2.0 * (xx * xx - yy * yy) + xys * xys)) / 2.0 / xx);

		p.x=lon;
		p.y=lat;
		return p;
	}
};
/* ======================================================================
    projCode/cea.js
   ====================================================================== */

/*******************************************************************************
NAME                    LAMBERT CYLINDRICAL EQUAL AREA

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Lambert Cylindrical Equal Area projection.
                This class of projection includes the Behrmann and
                Gall-Peters Projections.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
R. Marsden              August 2009
Winwaed Software Tech LLC, http://www.winwaed.com

This function was adapted from the Miller Cylindrical Projection in the Proj4JS
library.

Note: This implementation assumes a Spherical Earth. The (commented) code
has been included for the ellipsoidal forward transform, but derivation of
the ellispoidal inverse transform is beyond me. Note that most of the
Proj4JS implementations do NOT currently support ellipsoidal figures.
Therefore this is not seen as a problem - especially this lack of support
is explicitly stated here.

ALGORITHM REFERENCES

1.  "Cartographic Projection Procedures for the UNIX Environment -
     A User's Manual" by Gerald I. Evenden, USGS Open File Report 90-284
    and Release 4 Interim Reports (2003)

2.  Snyder, John P., "Flattening the Earth - Two Thousand Years of Map
    Projections", Univ. Chicago Press, 1993
*******************************************************************************/

Proj4js.Proj.cea = {

/* Initialize the Cylindrical Equal Area projection
  -------------------------------------------*/
  init: function() {
    //no-op
  },


  /* Cylindrical Equal Area forward equations--mapping lat,long to x,y
    ------------------------------------------------------------*/
  forward: function(p) {
    var lon=p.x;
    var lat=p.y;
    /* Forward equations
      -----------------*/
    var dlon = Proj4js.common.adjust_lon(lon -this.long0);
    var x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);
    var y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);
   /* Elliptical Forward Transform
      Not implemented due to a lack of a matchign inverse function
    {
      var Sin_Lat = Math.sin(lat);
      var Rn = this.a * (Math.sqrt(1.0e0 - this.es * Sin_Lat * Sin_Lat ));
      x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);
      y = this.y0 + Rn * Math.sin(lat) / Math.cos(this.lat_ts);
    }
   */


    p.x=x;
    p.y=y;
    return p;
  },//ceaFwd()

  /* Cylindrical Equal Area inverse equations--mapping x,y to lat/long
    ------------------------------------------------------------*/
  inverse: function(p) {
    p.x -= this.x0;
    p.y -= this.y0;

    var lon = Proj4js.common.adjust_lon( this.long0 + (p.x / this.a) / Math.cos(this.lat_ts) );

    var lat = Math.asin( (p.y/this.a) * Math.cos(this.lat_ts) );

    p.x=lon;
    p.y=lat;
    return p;
  }//ceaInv()
};
/* ======================================================================
    projCode/eqc.js
   ====================================================================== */

/* similar to equi.js FIXME proj4 uses eqc */
Proj4js.Proj.eqc = {
  init : function() {

      if(!this.x0) this.x0=0;
      if(!this.y0) this.y0=0;
      if(!this.lat0) this.lat0=0;
      if(!this.long0) this.long0=0;
      if(!this.lat_ts) this.lat_ts=0;
      if (!this.title) this.title = "Equidistant Cylindrical (Plate Carre)";

      this.rc= Math.cos(this.lat_ts);
    },


    // forward equations--mapping lat,long to x,y
    // -----------------------------------------------------------------
    forward : function(p) {

      var lon= p.x;
      var lat= p.y;

      var dlon = Proj4js.common.adjust_lon(lon - this.long0);
      var dlat = Proj4js.common.adjust_lat(lat - this.lat0 );
      p.x= this.x0 + (this.a*dlon*this.rc);
      p.y= this.y0 + (this.a*dlat        );
      return p;
    },

  // inverse equations--mapping x,y to lat/long
  // -----------------------------------------------------------------
  inverse : function(p) {

    var x= p.x;
    var y= p.y;

    p.x= Proj4js.common.adjust_lon(this.long0 + ((x - this.x0)/(this.a*this.rc)));
    p.y= Proj4js.common.adjust_lat(this.lat0  + ((y - this.y0)/(this.a        )));
    return p;
  }

};
/* ======================================================================
    projCode/cass.js
   ====================================================================== */

/*******************************************************************************
NAME                            CASSINI

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Cassini projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.
    Ported from PROJ.4.


ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
*******************************************************************************/


//Proj4js.defs["EPSG:28191"] = "+proj=cass +lat_0=31.73409694444445 +lon_0=35.21208055555556 +x_0=170251.555 +y_0=126867.909 +a=6378300.789 +b=6356566.435 +towgs84=-275.722,94.7824,340.894,-8.001,-4.42,-11.821,1 +units=m +no_defs";

// Initialize the Cassini projection
// -----------------------------------------------------------------

Proj4js.Proj.cass = {
  init : function() {
    if (!this.sphere) {
      this.en = Proj4js.common.pj_enfn(this.es)
      this.m0 = Proj4js.common.pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);
    }
  },

  C1:	.16666666666666666666,
  C2:	.00833333333333333333,
  C3:	.04166666666666666666,
  C4:	.33333333333333333333,
  C5:	.06666666666666666666,


/* Cassini forward equations--mapping lat,long to x,y
  -----------------------------------------------------------------------*/
  forward: function(p) {

    /* Forward equations
      -----------------*/
    var x,y;
    var lam=p.x;
    var phi=p.y;
    lam = Proj4js.common.adjust_lon(lam - this.long0);

    if (this.sphere) {
      x = Math.asin(Math.cos(phi) * Math.sin(lam));
      y = Math.atan2(Math.tan(phi) , Math.cos(lam)) - this.phi0;
    } else {
        //ellipsoid
      this.n = Math.sin(phi);
      this.c = Math.cos(phi);
      y = Proj4js.common.pj_mlfn(phi, this.n, this.c, this.en);
      this.n = 1./Math.sqrt(1. - this.es * this.n * this.n);
      this.tn = Math.tan(phi);
      this.t = this.tn * this.tn;
      this.a1 = lam * this.c;
      this.c *= this.es * this.c / (1 - this.es);
      this.a2 = this.a1 * this.a1;
      x = this.n * this.a1 * (1. - this.a2 * this.t * (this.C1 - (8. - this.t + 8. * this.c) * this.a2 * this.C2));
      y -= this.m0 - this.n * this.tn * this.a2 * (.5 + (5. - this.t + 6. * this.c) * this.a2 * this.C3);
    }

    p.x = this.a*x + this.x0;
    p.y = this.a*y + this.y0;
    return p;
  },//cassFwd()

/* Inverse equations
  -----------------*/
  inverse: function(p) {
    p.x -= this.x0;
    p.y -= this.y0;
    var x = p.x/this.a;
    var y = p.y/this.a;
    var phi, lam;

    if (this.sphere) {
      this.dd = y + this.lat0;
      phi = Math.asin(Math.sin(this.dd) * Math.cos(x));
      lam = Math.atan2(Math.tan(x), Math.cos(this.dd));
    } else {
      /* ellipsoid */
      var ph1 = Proj4js.common.pj_inv_mlfn(this.m0 + y, this.es, this.en);
      this.tn = Math.tan(ph1);
      this.t = this.tn * this.tn;
      this.n = Math.sin(ph1);
      this.r = 1. / (1. - this.es * this.n * this.n);
      this.n = Math.sqrt(this.r);
      this.r *= (1. - this.es) * this.n;
      this.dd = x / this.n;
      this.d2 = this.dd * this.dd;
      phi = ph1 - (this.n * this.tn / this.r) * this.d2 * (.5 - (1. + 3. * this.t) * this.d2 * this.C3);
      lam = this.dd * (1. + this.t * this.d2 * (-this.C4 + (1. + 3. * this.t) * this.d2 * this.C5)) / Math.cos(ph1);
    }
    p.x = Proj4js.common.adjust_lon(this.long0+lam);
    p.y = phi;
    return p;
  }//cassInv()

}
/* ======================================================================
    projCode/gauss.js
   ====================================================================== */


Proj4js.Proj.gauss = {

  init : function() {
    var sphi = Math.sin(this.lat0);
    var cphi = Math.cos(this.lat0);
    cphi *= cphi;
    this.rc = Math.sqrt(1.0 - this.es) / (1.0 - this.es * sphi * sphi);
    this.C = Math.sqrt(1.0 + this.es * cphi * cphi / (1.0 - this.es));
    this.phic0 = Math.asin(sphi / this.C);
    this.ratexp = 0.5 * this.C * this.e;
    this.K = Math.tan(0.5 * this.phic0 + Proj4js.common.FORTPI) / (Math.pow(Math.tan(0.5*this.lat0 + Proj4js.common.FORTPI), this.C) * Proj4js.common.srat(this.e*sphi, this.ratexp));
  },

  forward : function(p) {
    var lon = p.x;
    var lat = p.y;

    p.y = 2.0 * Math.atan( this.K * Math.pow(Math.tan(0.5 * lat + Proj4js.common.FORTPI), this.C) * Proj4js.common.srat(this.e * Math.sin(lat), this.ratexp) ) - Proj4js.common.HALF_PI;
    p.x = this.C * lon;
    return p;
  },

  inverse : function(p) {
    var DEL_TOL = 1e-14;
    var lon = p.x / this.C;
    var lat = p.y;
    var num = Math.pow(Math.tan(0.5 * lat + Proj4js.common.FORTPI)/this.K, 1./this.C);
    for (var i = Proj4js.common.MAX_ITER; i>0; --i) {
      lat = 2.0 * Math.atan(num * Proj4js.common.srat(this.e * Math.sin(p.y), -0.5 * this.e)) - Proj4js.common.HALF_PI;
      if (Math.abs(lat - p.y) < DEL_TOL) break;
      p.y = lat;
    }
    /* convergence failed */
    if (!i) {
      Proj4js.reportError("gauss:inverse:convergence failed");
      return null;
    }
    p.x = lon;
    p.y = lat;
    return p;
  }
};

/* ======================================================================
    projCode/omerc.js
   ====================================================================== */

/*******************************************************************************
NAME                       OBLIQUE MERCATOR (HOTINE)

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Oblique Mercator projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
T. Mittan		Mar, 1993

ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.
*******************************************************************************/

Proj4js.Proj.omerc = {

  /* Initialize the Oblique Mercator  projection
    ------------------------------------------*/
  init: function() {
    if (!this.mode) this.mode=0;
    if (!this.lon1)   {this.lon1=0;this.mode=1;}
    if (!this.lon2)   this.lon2=0;
    if (!this.lat2)    this.lat2=0;

    /* Place parameters in static storage for common use
      -------------------------------------------------*/
    var temp = this.b/ this.a;
    var es = 1.0 - Math.pow(temp,2);
    var e = Math.sqrt(es);

    this.sin_p20=Math.sin(this.lat0);
    this.cos_p20=Math.cos(this.lat0);

    this.con = 1.0 - this.es * this.sin_p20 * this.sin_p20;
    this.com = Math.sqrt(1.0 - es);
    this.bl = Math.sqrt(1.0 + this.es * Math.pow(this.cos_p20,4.0)/(1.0 - es));
    this.al = this.a * this.bl * this.k0 * this.com / this.con;
    if (Math.abs(this.lat0) < Proj4js.common.EPSLN) {
       this.ts = 1.0;
       this.d = 1.0;
       this.el = 1.0;
    } else {
       this.ts = Proj4js.common.tsfnz(this.e,this.lat0,this.sin_p20);
       this.con = Math.sqrt(this.con);
       this.d = this.bl * this.com / (this.cos_p20 * this.con);
       if ((this.d * this.d - 1.0) > 0.0) {
          if (this.lat0 >= 0.0) {
             this.f = this.d + Math.sqrt(this.d * this.d - 1.0);
          } else {
             this.f = this.d - Math.sqrt(this.d * this.d - 1.0);
          }
       } else {
         this.f = this.d;
       }
       this.el = this.f * Math.pow(this.ts,this.bl);
    }

    //this.longc=52.60353916666667;

    if (this.mode != 0) {
       this.g = .5 * (this.f - 1.0/this.f);
       this.gama = Proj4js.common.asinz(Math.sin(this.alpha) / this.d);
       this.longc= this.longc - Proj4js.common.asinz(this.g * Math.tan(this.gama))/this.bl;

       /* Report parameters common to format B
       -------------------------------------*/
       //genrpt(azimuth * R2D,"Azimuth of Central Line:    ");
       //cenlon(lon_origin);
      // cenlat(lat_origin);

       this.con = Math.abs(this.lat0);
       if ((this.con > Proj4js.common.EPSLN) && (Math.abs(this.con - Proj4js.common.HALF_PI) > Proj4js.common.EPSLN)) {
            this.singam=Math.sin(this.gama);
            this.cosgam=Math.cos(this.gama);

            this.sinaz=Math.sin(this.alpha);
            this.cosaz=Math.cos(this.alpha);

            if (this.lat0>= 0) {
               this.u =  (this.al / this.bl) * Math.atan(Math.sqrt(this.d*this.d - 1.0)/this.cosaz);
            } else {
               this.u =  -(this.al / this.bl) *Math.atan(Math.sqrt(this.d*this.d - 1.0)/this.cosaz);
            }
          } else {
            Proj4js.reportError("omerc:Init:DataError");
          }
       } else {
       this.sinphi =Math. sin(this.at1);
       this.ts1 = Proj4js.common.tsfnz(this.e,this.lat1,this.sinphi);
       this.sinphi = Math.sin(this.lat2);
       this.ts2 = Proj4js.common.tsfnz(this.e,this.lat2,this.sinphi);
       this.h = Math.pow(this.ts1,this.bl);
       this.l = Math.pow(this.ts2,this.bl);
       this.f = this.el/this.h;
       this.g = .5 * (this.f - 1.0/this.f);
       this.j = (this.el * this.el - this.l * this.h)/(this.el * this.el + this.l * this.h);
       this.p = (this.l - this.h) / (this.l + this.h);
       this.dlon = this.lon1 - this.lon2;
       if (this.dlon < -Proj4js.common.PI) this.lon2 = this.lon2 - 2.0 * Proj4js.common.PI;
       if (this.dlon > Proj4js.common.PI) this.lon2 = this.lon2 + 2.0 * Proj4js.common.PI;
       this.dlon = this.lon1 - this.lon2;
       this.longc = .5 * (this.lon1 + this.lon2) -Math.atan(this.j * Math.tan(.5 * this.bl * this.dlon)/this.p)/this.bl;
       this.dlon  = Proj4js.common.adjust_lon(this.lon1 - this.longc);
       this.gama = Math.atan(Math.sin(this.bl * this.dlon)/this.g);
       this.alpha = Proj4js.common.asinz(this.d * Math.sin(this.gama));

       /* Report parameters common to format A
       -------------------------------------*/

       if (Math.abs(this.lat1 - this.lat2) <= Proj4js.common.EPSLN) {
          Proj4js.reportError("omercInitDataError");
          //return(202);
       } else {
          this.con = Math.abs(this.lat1);
       }
       if ((this.con <= Proj4js.common.EPSLN) || (Math.abs(this.con - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN)) {
           Proj4js.reportError("omercInitDataError");
                //return(202);
       } else {
         if (Math.abs(Math.abs(this.lat0) - Proj4js.common.HALF_PI) <= Proj4js.common.EPSLN) {
            Proj4js.reportError("omercInitDataError");
            //return(202);
         }
       }

       this.singam=Math.sin(this.gam);
       this.cosgam=Math.cos(this.gam);

       this.sinaz=Math.sin(this.alpha);
       this.cosaz=Math.cos(this.alpha);


       if (this.lat0 >= 0) {
          this.u =  (this.al/this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1.0)/this.cosaz);
       } else {
          this.u = -(this.al/this.bl) * Math.atan(Math.sqrt(this.d * this.d - 1.0)/this.cosaz);
       }
     }
  },


  /* Oblique Mercator forward equations--mapping lat,long to x,y
    ----------------------------------------------------------*/
  forward: function(p) {
    var theta;		/* angle					*/
    var sin_phi, cos_phi;/* sin and cos value				*/
    var b;		/* temporary values				*/
    var c, t, tq;	/* temporary values				*/
    var con, n, ml;	/* cone constant, small m			*/
    var q,us,vl;
    var ul,vs;
    var s;
    var dlon;
    var ts1;

    var lon=p.x;
    var lat=p.y;
    /* Forward equations
      -----------------*/
    sin_phi = Math.sin(lat);
    dlon = Proj4js.common.adjust_lon(lon - this.longc);
    vl = Math.sin(this.bl * dlon);
    if (Math.abs(Math.abs(lat) - Proj4js.common.HALF_PI) > Proj4js.common.EPSLN) {
       ts1 = Proj4js.common.tsfnz(this.e,lat,sin_phi);
       q = this.el / (Math.pow(ts1,this.bl));
       s = .5 * (q - 1.0 / q);
       t = .5 * (q + 1.0/ q);
       ul = (s * this.singam - vl * this.cosgam) / t;
       con = Math.cos(this.bl * dlon);
       if (Math.abs(con) < .0000001) {
          us = this.al * this.bl * dlon;
       } else {
          us = this.al * Math.atan((s * this.cosgam + vl * this.singam) / con)/this.bl;
          if (con < 0) us = us + Proj4js.common.PI * this.al / this.bl;
       }
    } else {
       if (lat >= 0) {
          ul = this.singam;
       } else {
          ul = -this.singam;
       }
       us = this.al * lat / this.bl;
    }
    if (Math.abs(Math.abs(ul) - 1.0) <= Proj4js.common.EPSLN) {
       //alert("Point projects into infinity","omer-for");
       Proj4js.reportError("omercFwdInfinity");
       //return(205);
    }
    vs = .5 * this.al * Math.log((1.0 - ul)/(1.0 + ul)) / this.bl;
    us = us - this.u;
    var x = this.x0 + vs * this.cosaz + us * this.sinaz;
    var y = this.y0 + us * this.cosaz - vs * this.sinaz;

    p.x=x;
    p.y=y;
    return p;
  },

  inverse: function(p) {
    var delta_lon;	/* Delta longitude (Given longitude - center 	*/
    var theta;		/* angle					*/
    var delta_theta;	/* adjusted longitude				*/
    var sin_phi, cos_phi;/* sin and cos value				*/
    var b;		/* temporary values				*/
    var c, t, tq;	/* temporary values				*/
    var con, n, ml;	/* cone constant, small m			*/
    var vs,us,q,s,ts1;
    var vl,ul,bs;
    var lon, lat;
    var flag;

    /* Inverse equations
      -----------------*/
    p.x -= this.x0;
    p.y -= this.y0;
    flag = 0;
    vs = p.x * this.cosaz - p.y * this.sinaz;
    us = p.y * this.cosaz + p.x * this.sinaz;
    us = us + this.u;
    q = Math.exp(-this.bl * vs / this.al);
    s = .5 * (q - 1.0/q);
    t = .5 * (q + 1.0/q);
    vl = Math.sin(this.bl * us / this.al);
    ul = (vl * this.cosgam + s * this.singam)/t;
    if (Math.abs(Math.abs(ul) - 1.0) <= Proj4js.common.EPSLN)
       {
       lon = this.longc;
       if (ul >= 0.0) {
          lat = Proj4js.common.HALF_PI;
       } else {
         lat = -Proj4js.common.HALF_PI;
       }
    } else {
       con = 1.0 / this.bl;
       ts1 =Math.pow((this.el / Math.sqrt((1.0 + ul) / (1.0 - ul))),con);
       lat = Proj4js.common.phi2z(this.e,ts1);
       //if (flag != 0)
          //return(flag);
       //~ con = Math.cos(this.bl * us /al);
       theta = this.longc - Math.atan2((s * this.cosgam - vl * this.singam) , con)/this.bl;
       lon = Proj4js.common.adjust_lon(theta);
    }
    p.x=lon;
    p.y=lat;
    return p;
  }
};
/* ======================================================================
    projCode/lcc.js
   ====================================================================== */

/*******************************************************************************
NAME                            LAMBERT CONFORMAL CONIC

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Lambert Conformal Conic projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.


ALGORITHM REFERENCES

1.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

2.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
*******************************************************************************/


//<2104> +proj=lcc +lat_1=10.16666666666667 +lat_0=10.16666666666667 +lon_0=-71.60561777777777 +k_0=1 +x0=-17044 +x0=-23139.97 +ellps=intl +units=m +no_defs  no_defs

// Initialize the Lambert Conformal conic projection
// -----------------------------------------------------------------

//Proj4js.Proj.lcc = Class.create();
Proj4js.Proj.lcc = {
  init : function() {

    // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north
    //double c_lat;                   /* center latitude                      */
    //double c_lon;                   /* center longitude                     */
    //double lat1;                    /* first standard parallel              */
    //double lat2;                    /* second standard parallel             */
    //double r_maj;                   /* major axis                           */
    //double r_min;                   /* minor axis                           */
    //double false_east;              /* x offset in meters                   */
    //double false_north;             /* y offset in meters                   */

      if (!this.lat2){this.lat2=this.lat0;}//if lat2 is not defined
      if (!this.k0) this.k0 = 1.0;

    // Standard Parallels cannot be equal and on opposite sides of the equator
      if (Math.abs(this.lat1+this.lat2) < Proj4js.common.EPSLN) {
        Proj4js.reportError("lcc:init: Equal Latitudes");
        return;
      }

      var temp = this.b / this.a;
      this.e = Math.sqrt(1.0 - temp*temp);

      var sin1 = Math.sin(this.lat1);
      var cos1 = Math.cos(this.lat1);
      var ms1 = Proj4js.common.msfnz(this.e, sin1, cos1);
      var ts1 = Proj4js.common.tsfnz(this.e, this.lat1, sin1);

      var sin2 = Math.sin(this.lat2);
      var cos2 = Math.cos(this.lat2);
      var ms2 = Proj4js.common.msfnz(this.e, sin2, cos2);
      var ts2 = Proj4js.common.tsfnz(this.e, this.lat2, sin2);

      var ts0 = Proj4js.common.tsfnz(this.e, this.lat0, Math.sin(this.lat0));

      if (Math.abs(this.lat1 - this.lat2) > Proj4js.common.EPSLN) {
        this.ns = Math.log(ms1/ms2)/Math.log(ts1/ts2);
      } else {
        this.ns = sin1;
      }
      this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));
      this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);
      if (!this.title) this.title = "Lambert Conformal Conic";
    },


    // Lambert Conformal conic forward equations--mapping lat,long to x,y
    // -----------------------------------------------------------------
    forward : function(p) {

      var lon = p.x;
      var lat = p.y;

    // convert to radians
      if ( lat <= 90.0 && lat >= -90.0 && lon <= 180.0 && lon >= -180.0) {
        //lon = lon * Proj4js.common.D2R;
        //lat = lat * Proj4js.common.D2R;
      } else {
        Proj4js.reportError("lcc:forward: llInputOutOfRange: "+ lon +" : " + lat);
        return null;
      }

      var con  = Math.abs( Math.abs(lat) - Proj4js.common.HALF_PI);
      var ts, rh1;
      if (con > Proj4js.common.EPSLN) {
        ts = Proj4js.common.tsfnz(this.e, lat, Math.sin(lat) );
        rh1 = this.a * this.f0 * Math.pow(ts, this.ns);
      } else {
        con = lat * this.ns;
        if (con <= 0) {
          Proj4js.reportError("lcc:forward: No Projection");
          return null;
        }
        rh1 = 0;
      }
      var theta = this.ns * Proj4js.common.adjust_lon(lon - this.long0);
      p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;
      p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;

      return p;
    },

  // Lambert Conformal Conic inverse equations--mapping x,y to lat/long
  // -----------------------------------------------------------------
  inverse : function(p) {

    var rh1, con, ts;
    var lat, lon;
    var x = (p.x - this.x0)/this.k0;
    var y = (this.rh - (p.y - this.y0)/this.k0);
    if (this.ns > 0) {
      rh1 = Math.sqrt (x * x + y * y);
      con = 1.0;
    } else {
      rh1 = -Math.sqrt (x * x + y * y);
      con = -1.0;
    }
    var theta = 0.0;
    if (rh1 != 0) {
      theta = Math.atan2((con * x),(con * y));
    }
    if ((rh1 != 0) || (this.ns > 0.0)) {
      con = 1.0/this.ns;
      ts = Math.pow((rh1/(this.a * this.f0)), con);
      lat = Proj4js.common.phi2z(this.e, ts);
      if (lat == -9999) return null;
    } else {
      lat = -Proj4js.common.HALF_PI;
    }
    lon = Proj4js.common.adjust_lon(theta/this.ns + this.long0);

    p.x = lon;
    p.y = lat;
    return p;
  }
};




/* ======================================================================
    projCode/laea.js
   ====================================================================== */

/*******************************************************************************
NAME                  LAMBERT AZIMUTHAL EQUAL-AREA

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the Lambert Azimuthal Equal-Area projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
D. Steinwand, EROS      March, 1991

This function was adapted from the Lambert Azimuthal Equal Area projection
code (FORTRAN) in the General Cartographic Transformation Package software
which is available from the U.S. Geological Survey National Mapping Division.

ALGORITHM REFERENCES

1.  "New Equal-Area Map Projections for Noncircular Regions", John P. Snyder,
    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.

2.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.

3.  "Software Documentation for GCTP General Cartographic Transformation
    Package", U.S. Geological Survey National Mapping Division, May 1982.
*******************************************************************************/

Proj4js.Proj.laea = {
  S_POLE: 1,
  N_POLE: 2,
  EQUIT: 3,
  OBLIQ: 4,


/* Initialize the Lambert Azimuthal Equal Area projection
  ------------------------------------------------------*/
  init: function() {
    var t = Math.abs(this.lat0);
    if (Math.abs(t - Proj4js.common.HALF_PI) < Proj4js.common.EPSLN) {
      this.mode = this.lat0 < 0. ? this.S_POLE : this.N_POLE;
    } else if (Math.abs(t) < Proj4js.common.EPSLN) {
      this.mode = this.EQUIT;
    } else {
      this.mode = this.OBLIQ;
    }
    if (this.es > 0) {
      var sinphi;

      this.qp = Proj4js.common.qsfnz(this.e, 1.0);
      this.mmf = .5 / (1. - this.es);
      this.apa = this.authset(this.es);
      switch (this.mode) {
        case this.N_POLE:
        case this.S_POLE:
          this.dd = 1.;
          break;
        case this.EQUIT:
          this.rq = Math.sqrt(.5 * this.qp);
          this.dd = 1. / this.rq;
          this.xmf = 1.;
          this.ymf = .5 * this.qp;
          break;
        case this.OBLIQ:
          this.rq = Math.sqrt(.5 * this.qp);
          sinphi = Math.sin(this.lat0);
          this.sinb1 = Proj4js.common.qsfnz(this.e, sinphi) / this.qp;
          this.cosb1 = Math.sqrt(1. - this.sinb1 * this.sinb1);
          this.dd = Math.cos(this.lat0) / (Math.sqrt(1. - this.es * sinphi * sinphi) * this.rq * this.cosb1);
          this.ymf = (this.xmf = this.rq) / this.dd;
          this.xmf *= this.dd;
          break;
      }
    } else {
      if (this.mode == this.OBLIQ) {
        this.sinph0 = Math.sin(this.lat0);
        this.cosph0 = Math.cos(this.lat0);
      }
    }
  },

/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y
  -----------------------------------------------------------------------*/
  forward: function(p) {

    /* Forward equations
      -----------------*/
    var x,y;
    var lam=p.x;
    var phi=p.y;
    lam = Proj4js.common.adjust_lon(lam - this.long0);

    if (this.sphere) {
        var coslam, cosphi, sinphi;

        sinphi = Math.sin(phi);
        cosphi = Math.cos(phi);
        coslam = Math.cos(lam);
        switch (this.mode) {
          case this.OBLIQ:
          case this.EQUIT:
            y = (this.mode == this.EQUIT) ? 1. + cosphi * coslam : 1. + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;
            if (y <= Proj4js.common.EPSLN) {
              Proj4js.reportError("laea:fwd:y less than eps");
              return null;
            }
            y = Math.sqrt(2. / y);
            x = y * cosphi * Math.sin(lam);
            y *= (this.mode == this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;
            break;
          case this.N_POLE:
            coslam = -coslam;
          case this.S_POLE:
            if (Math.abs(phi + this.phi0) < Proj4js.common.EPSLN) {
              Proj4js.reportError("laea:fwd:phi < eps");
              return null;
            }
            y = Proj4js.common.FORTPI - phi * .5;
            y = 2. * ((this.mode == this.S_POLE) ? Math.cos(y) : Math.sin(y));
            x = y * Math.sin(lam);
            y *= coslam;
            break;
        }
    } else {
        var coslam, sinlam, sinphi, q, sinb=0.0, cosb=0.0, b=0.0;

        coslam = Math.cos(lam);
        sinlam = Math.sin(lam);
        sinphi = Math.sin(phi);
        q = Proj4js.common.qsfnz(this.e, sinphi);
        if (this.mode == this.OBLIQ || this.mode == this.EQUIT) {
          sinb = q / this.qp;
          cosb = Math.sqrt(1. - sinb * sinb);
        }
        switch (this.mode) {
          case this.OBLIQ:
            b = 1. + this.sinb1 * sinb + this.cosb1 * cosb * coslam;
            break;
          case this.EQUIT:
            b = 1. + cosb * coslam;
            break;
          case this.N_POLE:
            b = Proj4js.common.HALF_PI + phi;
            q = this.qp - q;
            break;
          case this.S_POLE:
            b = phi - Proj4js.common.HALF_PI;
            q = this.qp + q;
            break;
        }
        if (Math.abs(b) < Proj4js.common.EPSLN) {
            Proj4js.reportError("laea:fwd:b < eps");
            return null;
        }
        switch (this.mode) {
          case this.OBLIQ:
          case this.EQUIT:
            b = Math.sqrt(2. / b);
            if (this.mode == this.OBLIQ) {
              y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);
            } else {
              y = (b = Math.sqrt(2. / (1. + cosb * coslam))) * sinb * this.ymf;
            }
            x = this.xmf * b * cosb * sinlam;
            break;
          case this.N_POLE:
          case this.S_POLE:
            if (q >= 0.) {
              x = (b = Math.sqrt(q)) * sinlam;
              y = coslam * ((this.mode == this.S_POLE) ? b : -b);
            } else {
              x = y = 0.;
            }
            break;
        }
    }

    //v 1.0
    /*
    var sin_lat=Math.sin(lat);
    var cos_lat=Math.cos(lat);

    var sin_delta_lon=Math.sin(delta_lon);
    var cos_delta_lon=Math.cos(delta_lon);

    var g =this.sin_lat_o * sin_lat +this.cos_lat_o * cos_lat * cos_delta_lon;
    if (g == -1.0) {
      Proj4js.reportError("laea:fwd:Point projects to a circle of radius "+ 2.0 * R);
      return null;
    }
    var ksp = this.a * Math.sqrt(2.0 / (1.0 + g));
    var x = ksp * cos_lat * sin_delta_lon + this.x0;
    var y = ksp * (this.cos_lat_o * sin_lat - this.sin_lat_o * cos_lat * cos_delta_lon) + this.y0;
    */
    p.x = this.a*x + this.x0;
    p.y = this.a*y + this.y0;
    return p;
  },//lamazFwd()

/* Inverse equations
  -----------------*/
  inverse: function(p) {
    p.x -= this.x0;
    p.y -= this.y0;
    var x = p.x/this.a;
    var y = p.y/this.a;
    var lam, phi;

    if (this.sphere) {
        var  cosz=0.0, rh, sinz=0.0;

        rh = Math.sqrt(x*x + y*y);
        var phi = rh * .5;
        if (phi > 1.) {
          Proj4js.reportError("laea:Inv:DataError");
          return null;
        }
        phi = 2. * Math.asin(phi);
        if (this.mode == this.OBLIQ || this.mode == this.EQUIT) {
          sinz = Math.sin(phi);
          cosz = Math.cos(phi);
        }
        switch (this.mode) {
        case this.EQUIT:
          phi = (Math.abs(rh) <= Proj4js.common.EPSLN) ? 0. : Math.asin(y * sinz / rh);
          x *= sinz;
          y = cosz * rh;
          break;
        case this.OBLIQ:
          phi = (Math.abs(rh) <= Proj4js.common.EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);
          x *= sinz * this.cosph0;
          y = (cosz - Math.sin(phi) * this.sinph0) * rh;
          break;
        case this.N_POLE:
          y = -y;
          phi = Proj4js.common.HALF_PI - phi;
          break;
        case this.S_POLE:
          phi -= Proj4js.common.HALF_PI;
          break;
        }
        lam = (y == 0. && (this.mode == this.EQUIT || this.mode == this.OBLIQ)) ? 0. : Math.atan2(x, y);
    } else {
        var cCe, sCe, q, rho, ab=0.0;

        switch (this.mode) {
          case this.EQUIT:
          case this.OBLIQ:
            x /= this.dd;
            y *=  this.dd;
            rho = Math.sqrt(x*x + y*y);
            if (rho < Proj4js.common.EPSLN) {
              p.x = 0.;
              p.y = this.phi0;
              return p;
            }
            sCe = 2. * Math.asin(.5 * rho / this.rq);
            cCe = Math.cos(sCe);
            x *= (sCe = Math.sin(sCe));
            if (this.mode == this.OBLIQ) {
              ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho
              q = this.qp * ab;
              y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;
            } else {
              ab = y * sCe / rho;
              q = this.qp * ab;
              y = rho * cCe;
            }
            break;
          case this.N_POLE:
            y = -y;
          case this.S_POLE:
            q = (x * x + y * y);
            if (!q ) {
              p.x = 0.;
              p.y = this.phi0;
              return p;
            }
            /*
            q = this.qp - q;
            */
            ab = 1. - q / this.qp;
            if (this.mode == this.S_POLE) {
              ab = - ab;
            }
            break;
        }
        lam = Math.atan2(x, y);
        phi = this.authlat(Math.asin(ab), this.apa);
    }

    /*
    var Rh = Math.Math.sqrt(p.x *p.x +p.y * p.y);
    var temp = Rh / (2.0 * this.a);

    if (temp > 1) {
      Proj4js.reportError("laea:Inv:DataError");
      return null;
    }

    var z = 2.0 * Proj4js.common.asinz(temp);
    var sin_z=Math.sin(z);
    var cos_z=Math.cos(z);

    var lon =this.long0;
    if (Math.abs(Rh) > Proj4js.common.EPSLN) {
       var lat = Proj4js.common.asinz(this.sin_lat_o * cos_z +this. cos_lat_o * sin_z *p.y / Rh);
       var temp =Math.abs(this.lat0) - Proj4js.common.HALF_PI;
       if (Math.abs(temp) > Proj4js.common.EPSLN) {
          temp = cos_z -this.sin_lat_o * Math.sin(lat);
          if(temp!=0.0) lon=Proj4js.common.adjust_lon(this.long0+Math.atan2(p.x*sin_z*this.cos_lat_o,temp*Rh));
       } else if (this.lat0 < 0.0) {
          lon = Proj4js.common.adjust_lon(this.long0 - Math.atan2(-p.x,p.y));
       } else {
          lon = Proj4js.common.adjust_lon(this.long0 + Math.atan2(p.x, -p.y));
       }
    } else {
      lat = this.lat0;
    }
    */
    //return(OK);
    p.x = Proj4js.common.adjust_lon(this.long0+lam);
    p.y = phi;
    return p;
  },//lamazInv()

/* determine latitude from authalic latitude */
  P00: .33333333333333333333,
  P01: .17222222222222222222,
  P02: .10257936507936507936,
  P10: .06388888888888888888,
  P11: .06640211640211640211,
  P20: .01641501294219154443,

  authset: function(es) {
    var t;
    var APA = new Array();
    APA[0] = es * this.P00;
    t = es * es;
    APA[0] += t * this.P01;
    APA[1] = t * this.P10;
    t *= es;
    APA[0] += t * this.P02;
    APA[1] += t * this.P11;
    APA[2] = t * this.P20;
    return APA;
  },

  authlat: function(beta, APA) {
    var t = beta+beta;
    return(beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t+t) + APA[2] * Math.sin(t+t+t));
  }

};



/* ======================================================================
    projCode/aeqd.js
   ====================================================================== */

Proj4js.Proj.aeqd = {

  init : function() {
    this.sin_p12=Math.sin(this.lat0);
    this.cos_p12=Math.cos(this.lat0);
  },

  forward: function(p) {
    var lon=p.x;
    var lat=p.y;
    var ksp;

    var sinphi=Math.sin(p.y);
    var cosphi=Math.cos(p.y);
    var dlon = Proj4js.common.adjust_lon(lon - this.long0);
    var coslon = Math.cos(dlon);
    var g = this.sin_p12 * sinphi + this.cos_p12 * cosphi * coslon;
    if (Math.abs(Math.abs(g) - 1.0) < Proj4js.common.EPSLN) {
       ksp = 1.0;
       if (g < 0.0) {
         Proj4js.reportError("aeqd:Fwd:PointError");
         return;
       }
    } else {
       var z = Math.acos(g);
       ksp = z/Math.sin(z);
    }
    p.x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon);
    p.y = this.y0 + this.a * ksp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * coslon);
    return p;
  },

  inverse: function(p){
    p.x -= this.x0;
    p.y -= this.y0;

    var rh = Math.sqrt(p.x * p.x + p.y *p.y);
    if (rh > (2.0 * Proj4js.common.HALF_PI * this.a)) {
       Proj4js.reportError("aeqdInvDataError");
       return;
    }
    var z = rh / this.a;

    var sinz=Math.sin(z);
    var cosz=Math.cos(z);

    var lon = this.long0;
    var lat;
    if (Math.abs(rh) <= Proj4js.common.EPSLN) {
      lat = this.lat0;
    } else {
      lat = Proj4js.common.asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);
      var con = Math.abs(this.lat0) - Proj4js.common.HALF_PI;
      if (Math.abs(con) <= Proj4js.common.EPSLN) {
        if (lat0 >= 0.0) {
          lon = Proj4js.common.adjust_lon(this.long0 + Math.atan2(p.x , -p.y));
        } else {
          lon = Proj4js.common.adjust_lon(this.long0 - Math.atan2(-p.x , p.y));
        }
      } else {
        con = cosz - this.sin_p12 * Math.sin(lat);
        if ((Math.abs(con) < Proj4js.common.EPSLN) && (Math.abs(p.x) < Proj4js.common.EPSLN)) {
           //no-op, just keep the lon value as is
        } else {
          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));
          lon = Proj4js.common.adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));
        }
      }
    }

    p.x = lon;
    p.y = lat;
    return p;
  }
};
/* ======================================================================
    projCode/moll.js
   ====================================================================== */

/*******************************************************************************
NAME                            MOLLWEIDE

PURPOSE:	Transforms input longitude and latitude to Easting and
		Northing for the MOllweide projection.  The
		longitude and latitude must be in radians.  The Easting
		and Northing values will be returned in meters.

PROGRAMMER              DATE
----------              ----
D. Steinwand, EROS      May, 1991;  Updated Sept, 1992; Updated Feb, 1993
S. Nelson, EDC		Jun, 2993;	Made corrections in precision and
					number of iterations.

ALGORITHM REFERENCES

1.  Snyder, John P. and Voxland, Philip M., "An Album of Map Projections",
    U.S. Geological Survey Professional Paper 1453 , United State Government
    Printing Office, Washington D.C., 1989.

2.  Snyder, John P., "Map Projections--A Working Manual", U.S. Geological
    Survey Professional Paper 1395 (Supersedes USGS Bulletin 1532), United
    State Government Printing Office, Washington D.C., 1987.
*******************************************************************************/

Proj4js.Proj.moll = {

  /* Initialize the Mollweide projection
    ------------------------------------*/
  init: function(){
    //no-op
  },

  /* Mollweide forward equations--mapping lat,long to x,y
    ----------------------------------------------------*/
  forward: function(p) {

    /* Forward equations
      -----------------*/
    var lon=p.x;
    var lat=p.y;

    var delta_lon = Proj4js.common.adjust_lon(lon - this.long0);
    var theta = lat;
    var con = Proj4js.common.PI * Math.sin(lat);

    /* Iterate using the Newton-Raphson method to find theta
      -----------------------------------------------------*/
    for (var i=0;true;i++) {
       var delta_theta = -(theta + Math.sin(theta) - con)/ (1.0 + Math.cos(theta));
       theta += delta_theta;
       if (Math.abs(delta_theta) < Proj4js.common.EPSLN) break;
       if (i >= 50) {
          Proj4js.reportError("moll:Fwd:IterationError");
         //return(241);
       }
    }
    theta /= 2.0;

    /* If the latitude is 90 deg, force the x coordinate to be "0 + false easting"
       this is done here because of precision problems with "cos(theta)"
       --------------------------------------------------------------------------*/
    if (Proj4js.common.PI/2 - Math.abs(lat) < Proj4js.common.EPSLN) delta_lon =0;
    var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;
    var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;

    p.x=x;
    p.y=y;
    return p;
  },

  inverse: function(p){
    var theta;
    var arg;

    /* Inverse equations
      -----------------*/
    p.x-= this.x0;
    //~ p.y -= this.y0;
    var arg = p.y /  (1.4142135623731 * this.a);

    /* Because of division by zero problems, 'arg' can not be 1.0.  Therefore
       a number very close to one is used instead.
       -------------------------------------------------------------------*/
    if(Math.abs(arg) > 0.999999999999) arg=0.999999999999;
    var theta =Math.asin(arg);
    var lon = Proj4js.common.adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));
    if(lon < (-Proj4js.common.PI)) lon= -Proj4js.common.PI;
    if(lon > Proj4js.common.PI) lon= Proj4js.common.PI;
    arg = (2.0 * theta + Math.sin(2.0 * theta)) / Proj4js.common.PI;
    if(Math.abs(arg) > 1.0)arg=1.0;
    var lat = Math.asin(arg);
    //return(OK);

    p.x=lon;
    p.y=lat;
    return p;
  }
};

//
// @source = clickMenu.js
//
/****************************************/
/* 右クリックポップアップメニュー       */
/*   各メニューの処理                   */
/*                                      */
/****************************************/

/************************************/
/* この位置へのリンク表示           */
/************************************/
function httplink(lon, lat){
	//m単位を経緯度単位に変換
	var lonlat = new OpenLayers.LonLat(lon,lat).transform(projection900913,projection4326);
	var lon4 = lonlat.lon;
	var lat4 = lonlat.lat;

    var zoom = map.getZoom();
    
    //経緯度は小数点以下6桁に丸める
    lat = lat * 1000000;
    lat = Math.round(lat) / 1000000;
    lon = lon * 1000000;
    lon = Math.round(lon) / 1000000;
    
    //メタデータ取得(表示地図を反映させるため)
	var mapMeta = webtisMap.getCurrentMetaData();
	str = mapMeta.dataId;
	
    //現在表示地図のhttp表示
    http = hikisu_all[0] + "?lat=" + lat4 + "&lon=" + lon4 + "&z=" + zoom + "&did=" + str;

	//現在表示位置情報(Twitter用)
	var getURL = "http://portal.cyberjapan.jp/site/mapuse/index.html?lat=" + lat4 + "&lon=" + lon4 + "&z=" + zoom + "&did=" + str;

	// URLをセット
	$("#twitter").html('<a href="https://twitter.com/share" id="twitter" class="twitter-share-button" data-url="'+ getURL + '" data-text="電子国土Web.Next" data-lang="ja" data-count="none" data-hashtags="cyberjapan_next">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>');
	document.getElementById('urllink').value = http;
}

/************************************/
/* 磁北線の表示/削除                */
/************************************/
/*磁北線の表示*/
function JihokuLineDraw(lon,lat)	{

	//m単位を経緯度単位に変換
	lonlat2 = new OpenLayers.LonLat(lon,lat).transform(projection900913,projection4326);
	
	var px = lonlat2.lon;
	var py = lonlat2.lat;	

	//経緯度座標(10進数)を小数点以下6桁に丸める
	px = px * 1000000;
	px = parseInt(px);
	px = px / 1000000;
	py = py * 1000000;
	py = parseInt(py);
	py = py / 1000000;

	//円周率
	var pi = Math.PI;
 
	//西偏角計算
	var KEE=px-138;
	var KNN=py-37;
	//var KKK=(7+40.644/60)+(18.976/60)*KNN-(6.224/60)*KEE+(0.003/60)*KNN*KNN+(0.024/60)*KNN*KEE-(0.586/60)*KEE*KEE;		//20110928	2010年の値に変更
	var KKK=(7+40.585/60)+(19.003/60)*KNN-(6.265/60)*KEE+(0.009/60)*KNN*KNN+(0.024/60)*KNN*KEE-(0.591/60)*KEE*KEE;		//20140129	修正（物理測地課阿部様）
	KKK=parseInt(KKK*100 + 0.5)/100;
	var KKK_NUM=parseInt(KKK*10 + 0.5)/10;		//テキストの文字列で使用する
	
	//緯度：経度の比率（距離）
	//度からラジアンに
	KKK=KKK*pi/180;
	var HHH=Math.sin(KKK)/Math.cos(KKK);
	
	//1kmあたりの度単位
	var EEE_D=6378.137*pi*Math.cos(py*pi/180);
	EEE_D=180/EEE_D;
	var NNN_D=180/6378.137/pi;
 
	//上下3kmあたりの磁北線範囲
	var LLL=3;
	var H1=px-LLL*HHH*EEE_D;
	var H2=px+LLL*HHH*EEE_D;
	var V1=py+LLL*NNN_D;
	var V2=py-LLL*NNN_D;
	//ここまでは計算
		
	var points = new Array(
		new OpenLayers.Geometry.Point(H1,V1),
		new OpenLayers.Geometry.Point(H2,V2)
	);
	var line = new OpenLayers.Geometry.LineString(points);
	line.transform(projection4326,projection900913);
	
	//ラベルを中央に表示するためにポイントフィーチャを作成
	var cPoint = new OpenLayers.Geometry.Point(px,py);
	cPoint.transform(projection4326,projection900913);
	
	//線のスタイル
	var style = {
		strokeColor: '#ff0000',
		strokeOpacity: 0.8,
		strokeWidth: 1
	};
	
	var lineFeature = new OpenLayers.Feature.Vector(line, null, style);
	var pointFeature = new OpenLayers.Feature.Vector(cPoint);
	pointFeature.attributes = {
		label: KKK_NUM
	}
	
	// 磁北線レイヤにfeatureを追加
	jihokuLayer.addFeatures([lineFeature,pointFeature]); //線, ラベル
	
	if(popupflag)	{
		map.removePopup(popup);		//ポップアップを閉じる
		popupflag = 0;
	}
}
 
/*磁北線の削除*/
function JihokuLineClear()	{
	// 磁北線レイヤのfeaturesを全て削除
	jihokuLayer.removeAllFeatures();
	
	if(popupflag)	{
		map.removePopup(popup);		//ポップアップを閉じる
		popupflag = 0;
	}
}


/************************************/
/* UTMポイントの表示/削除   */
/************************************/
/*UTMポイントの表示*/
function utmPointDraw(px,py)	{
	var zone = Math.floor(px/6) + 31;							//経度の値から、UTFのゾーン番号を計算
	var lonlatP = new Proj4js.Point(px,py);				//ポイントオブジェクトを作成（経緯度）
	
	//経度の値によって、UTMゾーンを変える
	if(zone==51)	{
		projUTM = new Proj4js.Proj('EPSG:3097');
	}else if(zone==52)	{
		projUTM = new Proj4js.Proj('EPSG:3098');
	}else if(zone==53)	{
		projUTM = new Proj4js.Proj('EPSG:3099');
	}else if(zone==54)	{
		projUTM = new Proj4js.Proj('EPSG:3100');
	}else if(zone==55)	{
		projUTM = new Proj4js.Proj('EPSG:3101');
	}else if(zone==56)	{
		projUTM = new Proj4js.Proj('SR-ORG:1235');
	}else{
		projUTM = null;
	}
	
	var mark;
	//緯度の値によって、アルファベット一文字を格納
	if(py >= 16 && py < 24) {
		mark = "Q";
	} else if(py >= 24 && py < 32) {
		mark = "R";
	} else if(py >= 32 && py < 40) {
		mark = "S";
	} else if(py >= 40 && py < 48) {
		mark = "T";
	}
	
	var utmP = Proj4js.transform(projLonLat,projUTM,lonlatP);		//UTMの座標値に変換
	
	//以下、1kmのグリッドを書くために計算
	//桁落ち対策のためUTM座標を四捨五入しておく
	var utmx10m = Math.floor(Math.round(utmP.x)/10);		//UTM座標値（10m）
	var utmy10m = Math.floor(Math.round(utmP.y)/10);		//UTM座標値（10m）
	
	var utmx10m = String(utmx10m);
	var utmy10m = String(utmy10m);
	
	utmx10m = ('0000' + utmx10m).slice(-4);
	utmy10m = ('0000' + utmy10m).slice(-4);
	
	//000-000を正しく表示するため
	var utmPx = Math.round(utmP.x);
	var utmPy = Math.round(utmP.y);
	var urlstr = "http://portal.cyberjapan.jp/site/mapuse4/grid/utm_point.php?utmx=" + utmPx + "&utmy=" + utmPy + "&utmzone=" + zone + "&lon=" + px + "&lat=" + py;
	
	//jQueryを経由して、JSONPを使用
	$.ajax({
		dataType: "jsonp",		//ここは固定誇示列
		url: urlstr,			// データを送ってくるPHPスクリプトを指定する。
		
		// callback関数は、jQueryが自動的に生成してくれますので記述不要
		success: function (data) {		//PHPの戻り値はJSONP形式。「data」にはJSON形式の文字列が入っています。
			var outPutMGRS = data.mgrs_id;			//結果出力文字列
			var pointFeature = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(px,py).transform(projection4326,projection900913)); 

			//属性を設定
			pointFeature.attributes = {
				zone : zone,
				mark : mark,
				mgrs : outPutMGRS,
				utmx10m : utmx10m,
				utmy10m : utmy10m
			}
	
			utmPointLayer.addFeatures([pointFeature]);
	
			if(popupflag)	{
				map.removePopup(popup);		//ポップアップを閉じる
				popupflag = 0;
			}
		}
	});
}
/*UTMポイントの削除*/
function utmPointClear()	{
	utmPointLayer.removeAllFeatures();
	
	if(popupflag)	{
		map.removePopup(popup);		//ポップアップを閉じる
		popupflag = 0;
	}
}


/************************************/
/* UTMグリッドの表示/削除   */
/************************************/
/*UTMグリッド表示*/
function utmGridDraw()	{
	var rect = map.getExtent().transform(projection900913,projection4326);
	if(map.getZoom() <= 13){
		var url = "http://portal.cyberjapan.jp/site/mapuse4/grid/10k_grid.php?rectLonLat="+rect;
	} else {
		var url = "http://portal.cyberjapan.jp/site/mapuse4/grid/1k_grid.php?rectLonLat="+rect;
	}
	
	var myutmgridStyles = new OpenLayers.StyleMap({
		"default": new OpenLayers.Style({
			strokeColor: "#FF0000",
			strokeWidth:1,
			fillColor:"#ffffff",
			fillOpacity: 0,
			label : "${name}",
			labelAlign : "lm",
			fontSize:"${getFontSize}",
			fontColor: "#FF0000"
		},
		{
			context : {
				getFontSize : function(feature) {
					if( feature.geometry.CLASS_NAME == 'OpenLayers.Geometry.Polygon') {
						return "0px";
					} else {
						return "15px";
					}
				}
			}
		})
	});
	
	$.ajax({
		dataType: "jsonp",
		url: "http://portal.cyberjapan.jp/site/mapuse4/kml2jsonp.php?lf=0&url=" + encodeURIComponent(url),
		jsonpCallback: "kml_loaded",
		success: function(json) {
			var utmGridLayer = new OpenLayers.Layer.Vector("utmGrid", {
				styleMap: myutmgridStyles,
				projection: projection4326	// KMLは緯度経度
				//strategies: [new OpenLayers.Strategy.Fixed()],
			});
			map.addLayer(utmGridLayer);

			var format = new OpenLayers.Format.KML({
				extractStyles: false,
				extractAttriburtes: true,
				externalProjection: projection4326,
				internalProjection: projection900913
			});
			utmGridLayer.addFeatures(format.read(json.data));
			utmGridLayer.redraw();
		},
		error: function() {
			alert('UTMグリッド情報の取得に失敗しました。');
		}
	});
	
	utmgv =1;

	if(popupflag)	{
		map.removePopup(popup);		//ポップアップを閉じる
		popupflag = 0;
	}
}

/*UTMグリッド削除*/
function utmGridClear()	{
	if(utmgv==1)	{
		var layernames = map.getLayersByName('utmGrid');
		for (var i = 0; i < layernames.length; i++){	//UTMグリッドレイヤは全て削除
			map.removeLayer(layernames[i]);
		}
		utmgv =0;
	}
	
	if(popupflag)	{
		map.removePopup(popup);		//ポップアップを閉じる
		popupflag = 0;
	}
}


/************************************/
/* 経度緯度グリッドの表示/削除   */
/************************************/
/*経度緯度グリッドの表示*/
function lonlatGridDraw(interval)	{
	lonlatGridClear();
	
	var rect = map.getExtent().transform(projection900913,projection4326);
	var url1 = "http://portal.cyberjapan.jp/site/mapuse4/grid/lonlatline.php?rectLonLat="+rect + "&interval=" + interval;	//ライン用
	var url2 = "http://portal.cyberjapan.jp/site/mapuse4/grid/lonlatstr.php?rectLonLat="+rect + "&interval=" + interval;	//ラベル用

	// ラインスタイル
	var myLineStyles = new OpenLayers.StyleMap({
		"default": new OpenLayers.Style({
			strokeColor: "#000080"
		})
	});
	
	// テキストスタイル
	var myFontStyles = new OpenLayers.StyleMap({
		"default": new OpenLayers.Style({
			labelAlign:"lb",
			labelXOffset: 3,
			labelYOffset: 3,
			label:"${label}",
			fontSize:"15px",
			fontColor: "#000080"
		})
	});
	
	// ラインとラベルのKMLをajaxで取得
	// => ただし、同時にmapへの更新が走るのを防ぐため、ライン->ラベルの順で取得する。
	$.ajax({
		dataType: "jsonp",
		url: "http://portal.cyberjapan.jp/site/mapuse4/kml2jsonp.php?lf=1&url=" + encodeURIComponent(url1), jsonpCallback: "kml_loaded",
		success: function(json) {
			var data1 = json.data.replace(/\\n/g, "\n");
			var kmlLayer1 = new OpenLayers.Layer.Vector("LonLatLine", {
				styleMap: myLineStyles,
				projection: projection4326	// KMLは緯度経度
			});
			map.addLayer(kmlLayer1);
			var format = new OpenLayers.Format.KML({
				extractStyles: false,
				extractAttributes: true,
				maxDepth: 2,
				externalProjection: projection4326,
				internalProjection: projection900913
			});
			//kmlLayer1.addFeatures(format.read(json.data));
			kmlLayer1.addFeatures(format.read(data1));
			kmlLayer1.redraw();
			$.ajax({
				dataType: "jsonp",
				url: "http://portal.cyberjapan.jp/site/mapuse4/kml2jsonp.php?lf=1&url=" + encodeURIComponent(url2),
				jsonpCallback: "kml_loaded",
				success: function(json) {
					var data2 = json.data.replace(/\\n/g, "\n");
					var kmlLayer2 = new OpenLayers.Layer.Vector("LonLatStr", {
						styleMap: myFontStyles,
						projection: projection4326	// KMLは緯度経度
					});
					map.addLayer(kmlLayer2);
					var format = new OpenLayers.Format.KML({
						extractStyles: true,
						extractAttributes: true,
						externalProjection: projection4326,
						internalProjection: projection900913
					});
					//kmlLayer2.addFeatures(format.read(json.data));
					kmlLayer2.addFeatures(format.read(data2));
					kmlLayer2.redraw();
				},
				error: function() {
					alert('経緯度線（ラベル）の取得に失敗しました。');
				}
			});
		},
		error: function() {
			alert('経緯度線（ライン）の取得に失敗しました。');
		}
	});

	
	lonlatgv =1;
}

/*経度緯度グリッドの削除*/
function lonlatGridClear()	{
	if(lonlatgv==1)	{
		var layernames = map.getLayersByName('LonLatLine');
		for (var i = 0; i < layernames.length; i++){
			map.removeLayer(layernames[i]);
		}
		layernames = map.getLayersByName('LonLatStr');
		for (var i = 0; i < layernames.length; i++){
			map.removeLayer(layernames[i]);
		}
		lonlatgv =0;
	}
	
	if(popupflag)	{
		map.removePopup(popup);		//ポップアップを閉じる
		popupflag = 0;
	}
}


/************************************/
/* 他の地図閲覧サービスへのリンク   */
/************************************/
// 表示モード切替
function displayMode(mode) {
	if(mode == 1){
		document.getElementById('submenu').style.display = 'block';
	}else{
		document.getElementById('submenu').style.display = 'none';
	}
}

/* 他の地図へのリンク */
function mapLink(lon, lat, posw, posh)	{

	// サブメニューのスタイル
	var stylesheet = "";
	stylesheet = " style='width:190px;";
	stylesheet += "cursor:default;";
	stylesheet += "padding:3px 0px 2px 5px;";
	stylesheet += "background-color:#DDF1F4;";
	stylesheet += "border-top:1px solid #ffeeee;";
	stylesheet += "border-right:1px solid maroon;";
	stylesheet += "border-bottom:1px solid maroon;";
	stylesheet += "border-left:1px solid #ffeeee;' ";

	// サブメニュー上のマウス操作
	var onmouse = "";
	onmouse += " onMouseOver='cellOver(this);displayMode(1);' onMouseOut='cellOut(this);displayMode(0);' ";

	// メニュー項目
	var menuItem = new Array();
	menuItem.push("Mapion","Mapion（マピオン）", "http://www.mapion.co.jp/img/logo/L120_40.gif");

	// メニュー作成
	var layer;
	var roop;
	var menuID;
	var menuTitle;
	var menuImg;
	layer = "<TABLE border=1 cellspacing=0 cellpadding=3 valign='center'>\n";
	roop = menuItem.length / 3;
	for (i=0; i<roop; i++) {
		menuID = i * 2;
		menuTitle = i * 2 + 1;
		menuImg = i * 2 + 2;
		layer += "	<tr " + stylesheet + onmouse + "onclick='moveOtherMap("+lon+","+lat+",\""+menuItem[menuID]+"\"); closePopup();'>\n";
		layer += "		<td><img src='"+menuItem[menuImg]+"' width='60' height='16' border='0' alt='"+menuItem[menuID]+"'></td>\n";
		layer += "		<td><FONT size='-1'>"+menuItem[menuTitle]+"</FONT></td>\n";
		layer += "	</tr>\n";
	}
	layer += "</TABLE>";

	// ポップアップメニュー表示
	var submenu = document.getElementById("submenu");
	submenu.innerHTML = layer;				//サブメニューHTML置換え
	submenu.style.position = 'absolute';	//表示位置設定
	submenu.style.left = posw + 'px';
	submenu.style.top  = posh + 'px';
	submenu.style.display = 'block';		//表示
}

function moveOtherMap(lon, lat, name)	{				//リンク先に移動する

	//m単位を経緯度単位に変換
	var lonlat = new OpenLayers.LonLat(lon,lat).transform(projection900913,projection4326);
	var x = lonlat.lon;
	var y = lonlat.lat;

	var scale = map.getZoom();
	
	//縮尺は1000万÷2のズームレベル乗で適当に計算
	scale = 10000000/(Math.pow(2,scale));

	var url = createLinkURL(x, y, scale, name);		//createLinkURL関数でリンク先のURLを生成する
	window.open(url,"_blank");

}

function createLinkURL(cx, cy, scale, name)	{		//リンクのURLを作成する関数
	var linkURL;						//この変数にリンク先のURLを入れる
	
	switch(name)	{					//個別の判定をする		//増えるごとに「case」に続けて追加する
		case "osm":				//オープンストリートマップの場合
			linkURL = "http://www.openstreetmap.org/index.html?mlat=" + cy + "&mlon=" + cx + "&zoom=" + zoomLevel(scale, 1);
			break;

		case "Mapion":				//マピオンの場合
			linkURL = "http://www.mapion.co.jp/m/" + cy + "_" + cx + "_" + zoomLevel(scale, 2) + "/?wgs=1";
			break;
		default:				//どこにも当てはまらない場合（エラー処理）
			linkURL = "http://portal.cyberjapan.jp/";
			break;
	}
	return linkURL;		//URLを返す
}

//ズームレベルはサイトによって異なるので、ズームレベルを取得する関数を対応表を何種類か用意しておく
function zoomLevel(scale, id)	{
	var zoomLevel;			//ここにズームレベルを格納する
	
	if(id==1)	{			//その1（OSM）
		if(scale < 1500)			{zoomLevel = 19;}
		else if(scale < 3000)		{zoomLevel = 18;}
		else if(scale < 7000)		{zoomLevel = 17;}
		else if(scale < 12000)		{zoomLevel = 16;}
		else if(scale < 24000)		{zoomLevel = 15;}
		else if(scale < 50000)		{zoomLevel = 14;}
		else if(scale < 100000)		{zoomLevel = 13;}
		else if(scale < 200000)		{zoomLevel = 12;}
		else if(scale < 400000)		{zoomLevel = 11;}
		else if(scale < 800000)		{zoomLevel = 10;}
		else if(scale < 1800000)	{zoomLevel = 9;}
		else if(scale < 3500000)	{zoomLevel = 8;}
		else if(scale < 7000000)	{zoomLevel = 7;}
		else						{zoomLevel = 6;}
	}else if(id==2)	{		//その2（マピオン）
		// マピオンとのズームレベルを調整
		if(scale < 50)				{zoomLevel = 10;}
		else if(scale < 100)		{zoomLevel = 9;}
		else if(scale < 300)		{zoomLevel = 8;}
		else if(scale < 700)		{zoomLevel = 7;}
		else if(scale < 2000)		{zoomLevel = 6;}
		else if(scale < 5000)		{zoomLevel = 5;}
		else if(scale < 10000)		{zoomLevel = 4;}
		else if(scale < 20000)		{zoomLevel = 3;}
		else if(scale < 50000)		{zoomLevel = 2;}
		else						{zoomLevel = 1;}
	}
	return zoomLevel;
}
//ズームレベルを取得する関数ここまで


//表の色変え操作をする関数ここから
function cellOver(obj){						//onMouseOverイベントで行の背景色を変更する
	obj.style.backgroundColor="#00FFFF";
//	submenuflg = 1;
}

function cellOut(obj){						//onMouseOutイベントで行の背景色をデフォルトの色に戻す
	obj.style.backgroundColor="#DDF1F4";
}
//表の色変え操作をする関数ここまで

/*リンク表示のサブメニューを非表示にする関数*/
function closeSubmenu()	{
	var submenu = document.getElementById('submenu');

	if( submenu.style.display == "block"){
		submenu.style.display = "none";		//ウインドウを非表示にする
	}
}


//	地理院地図３Dを開く 
function open3d(lon, lat, scale) 
{
	if( isBrawzerPossible_3D( ) == false )
	{
		alert('お使いのWebブラウザは地理院地図3Dに対応していません。\nChrome、Firefox、IE11　をご使用ください。');
		return;
	}
	var url = createLink3DURL( lon, lat, scale, "3d" );		//createLinkURL関数でリンク先のURLを生成する
	window.open(url,"_blank");
}


//
// @source = jquery.blockUI.js
//
/*!
 * jQuery blockUI plugin
 * Version 2.51 (23-OCT-2012)
 * @requires jQuery v1.3 or later
 *
 * Examples at: http://malsup.com/jquery/block/
 * Copyright (c) 2007-2012 M. Alsup
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * Thanks to Amir-Hossein Sobhi for some excellent contributions!
 */

;(function() {
"use strict";

	function setup($) {
		if (/^1\.(0|1|2)/.test($.fn.jquery)) {
			/*global alert:true */
			alert('blockUI requires jQuery v1.3 or later!  You are using v' + $.fn.jquery);
			return;
		}

		$.fn._fadeIn = $.fn.fadeIn;

		var noOp = $.noop || function() {};

		// this bit is to ensure we don't call setExpression when we shouldn't (with extra muscle to handle
		// retarded userAgent strings on Vista)
		var msie = /MSIE/.test(navigator.userAgent);
		var ie6  = /MSIE 6.0/.test(navigator.userAgent);
		var mode = document.documentMode || 0;
		// var setExpr = msie && (($.browser.version < 8 && !mode) || mode < 8);
		var setExpr = $.isFunction( document.createElement('div').style.setExpression );

		// global $ methods for blocking/unblocking the entire page
		$.blockUI   = function(opts) { install(window, opts); };
		$.unblockUI = function(opts) { remove(window, opts); };

		// convenience method for quick growl-like notifications  (http://www.google.com/search?q=growl)
		$.growlUI = function(title, message, timeout, onClose) {
			var $m = $('<div class="growlUI"></div>');
			if (title) $m.append('<h1>'+title+'</h1>');
			if (message) $m.append('<h2>'+message+'</h2>');
			if (timeout === undefined) timeout = 3000;
			$.blockUI({
				message: $m, fadeIn: 700, fadeOut: 1000, centerY: false,
				timeout: timeout, showOverlay: false,
				onUnblock: onClose,
				css: $.blockUI.defaults.growlCSS
			});
		};

		// plugin method for blocking element content
		$.fn.block = function(opts) {
			var fullOpts = $.extend({}, $.blockUI.defaults, opts || {});
			this.each(function() {
				var $el = $(this);
				if (fullOpts.ignoreIfBlocked && $el.data('blockUI.isBlocked'))
					return;
				$el.unblock({ fadeOut: 0 });
			});

			return this.each(function() {
				if ($.css(this,'position') == 'static')
					this.style.position = 'relative';
				this.style.zoom = 1; // force 'hasLayout' in ie
				install(this, opts);
			});
		};

		// plugin method for unblocking element content
		$.fn.unblock = function(opts) {
			return this.each(function() {
				remove(this, opts);
			});
		};

		$.blockUI.version = 2.51; // 2nd generation blocking at no extra cost!

		// override these in your code to change the default behavior and style
		$.blockUI.defaults = {
			// message displayed when blocking (use null for no message)
			message:  '<h1>Please wait...</h1>',

			title: null,		// title string; only used when theme == true
			draggable: true,	// only used when theme == true (requires jquery-ui.js to be loaded)

			theme: false, // set to true to use with jQuery UI themes

			// styles for the message when blocking; if you wish to disable
			// these and use an external stylesheet then do this in your code:
			// $.blockUI.defaults.css = {};
			css: {
				padding:	0,
				margin:		0,
				width:		'30%',
				top:		'40%',
				left:		'35%',
				textAlign:	'center',
				color:		'#000',
				border:		'3px solid #aaa',
				backgroundColor:'#fff',
				cursor:		'wait'
			},

			// minimal style set used when themes are used
			themedCSS: {
				width:	'30%',
				top:	'40%',
				left:	'35%'
			},

			// styles for the overlay
			overlayCSS:  {
				backgroundColor:	'#000',
				opacity:			0.6,
				cursor:				'wait'
			},

			// styles applied when using $.growlUI
			growlCSS: {
				width:		'350px',
				top:		'10px',
				left:		'',
				right:		'10px',
				border:		'none',
				padding:	'5px',
				opacity:	0.6,
				cursor:		'default',
				color:		'#fff',
				backgroundColor: '#000',
				'-webkit-border-radius':'10px',
				'-moz-border-radius':	'10px',
				'border-radius':		'10px'
			},

			// IE issues: 'about:blank' fails on HTTPS and javascript:false is s-l-o-w
			// (hat tip to Jorge H. N. de Vasconcelos)
			/*jshint scripturl:true */
			iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank',

			// force usage of iframe in non-IE browsers (handy for blocking applets)
			forceIframe: false,

			// z-index for the blocking overlay
			baseZ: 1000,

			// set these to true to have the message automatically centered
			centerX: true, // <-- only effects element blocking (page block controlled via css above)
			centerY: true,

			// allow body element to be stetched in ie6; this makes blocking look better
			// on "short" pages.  disable if you wish to prevent changes to the body height
			allowBodyStretch: true,

			// enable if you want key and mouse events to be disabled for content that is blocked
			bindEvents: true,

			// be default blockUI will supress tab navigation from leaving blocking content
			// (if bindEvents is true)
			constrainTabKey: true,

			// fadeIn time in millis; set to 0 to disable fadeIn on block
			fadeIn:  200,

			// fadeOut time in millis; set to 0 to disable fadeOut on unblock
			fadeOut:  400,

			// time in millis to wait before auto-unblocking; set to 0 to disable auto-unblock
			timeout: 0,

			// disable if you don't want to show the overlay
			showOverlay: true,

			// if true, focus will be placed in the first available input field when
			// page blocking
			focusInput: true,

			// suppresses the use of overlay styles on FF/Linux (due to performance issues with opacity)
			// no longer needed in 2012
			// applyPlatformOpacityRules: true,

			// callback method invoked when fadeIn has completed and blocking message is visible
			onBlock: null,

			// callback method invoked when unblocking has completed; the callback is
			// passed the element that has been unblocked (which is the window object for page
			// blocks) and the options that were passed to the unblock call:
			//	onUnblock(element, options)
			onUnblock: null,

			// callback method invoked when the overlay area is clicked.
			// setting this will turn the cursor to a pointer, otherwise cursor defined in overlayCss will be used.
			onOverlayClick: null,

			// don't ask; if you really must know: http://groups.google.com/group/jquery-en/browse_thread/thread/36640a8730503595/2f6a79a77a78e493#2f6a79a77a78e493
			quirksmodeOffsetHack: 4,

			// class name of the message block
			blockMsgClass: 'blockMsg',

			// if it is already blocked, then ignore it (don't unblock and reblock)
			ignoreIfBlocked: false
		};

		// private data and functions follow...

		var pageBlock = null;
		var pageBlockEls = [];

		function install(el, opts) {
			var css, themedCSS;
			var full = (el == window);
			var msg = (opts && opts.message !== undefined ? opts.message : undefined);
			opts = $.extend({}, $.blockUI.defaults, opts || {});

			if (opts.ignoreIfBlocked && $(el).data('blockUI.isBlocked'))
				return;

			opts.overlayCSS = $.extend({}, $.blockUI.defaults.overlayCSS, opts.overlayCSS || {});
			css = $.extend({}, $.blockUI.defaults.css, opts.css || {});
			if (opts.onOverlayClick)
				opts.overlayCSS.cursor = 'pointer';

			themedCSS = $.extend({}, $.blockUI.defaults.themedCSS, opts.themedCSS || {});
			msg = msg === undefined ? opts.message : msg;

			// remove the current block (if there is one)
			if (full && pageBlock)
				remove(window, {fadeOut:0});

			// if an existing element is being used as the blocking content then we capture
			// its current place in the DOM (and current display style) so we can restore
			// it when we unblock
			if (msg && typeof msg != 'string' && (msg.parentNode || msg.jquery)) {
				var node = msg.jquery ? msg[0] : msg;
				var data = {};
				$(el).data('blockUI.history', data);
				data.el = node;
				data.parent = node.parentNode;
				data.display = node.style.display;
				data.position = node.style.position;
				if (data.parent)
					data.parent.removeChild(node);
			}

			$(el).data('blockUI.onUnblock', opts.onUnblock);
			var z = opts.baseZ;

			// blockUI uses 3 layers for blocking, for simplicity they are all used on every platform;
			// layer1 is the iframe layer which is used to supress bleed through of underlying content
			// layer2 is the overlay layer which has opacity and a wait cursor (by default)
			// layer3 is the message content that is displayed while blocking
			var lyr1, lyr2, lyr3, s;
			if (msie || opts.forceIframe)
				lyr1 = $('<iframe class="blockUI" style="z-index:'+ (z++) +';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="'+opts.iframeSrc+'"></iframe>');
			else
				lyr1 = $('<div class="blockUI" style="display:none"></div>');

			if (opts.theme)
				lyr2 = $('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:'+ (z++) +';display:none"></div>');
			else
				lyr2 = $('<div class="blockUI blockOverlay" style="z-index:'+ (z++) +';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');

			if (opts.theme && full) {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:'+(z+10)+';display:none;position:fixed">';
				if ( opts.title ) {
					s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">'+(opts.title || '&nbsp;')+'</div>';
				}
				s += '<div class="ui-widget-content ui-dialog-content"></div>';
				s += '</div>';
			}
			else if (opts.theme) {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:'+(z+10)+';display:none;position:absolute">';
				if ( opts.title ) {
					s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">'+(opts.title || '&nbsp;')+'</div>';
				}  
				s += '<div class="ui-widget-content ui-dialog-content"></div>';
				s += '</div>';
			}
			else if (full) {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage" style="z-index:'+(z+10)+';display:none;position:fixed"></div>';
			}
			else {
				s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement" style="z-index:'+(z+10)+';display:none;position:absolute"></div>';
			}
			lyr3 = $(s);

			// if we have a message, style it
			if (msg) {
				if (opts.theme) {
					lyr3.css(themedCSS);
					lyr3.addClass('ui-widget-content');
				}
				else
					lyr3.css(css);
			}

			// style the overlay
			if (!opts.theme /*&& (!opts.applyPlatformOpacityRules)*/)
				lyr2.css(opts.overlayCSS);
			lyr2.css('position', full ? 'fixed' : 'absolute');

			// make iframe layer transparent in IE
			if (msie || opts.forceIframe)
				lyr1.css('opacity',0.0);

			//$([lyr1[0],lyr2[0],lyr3[0]]).appendTo(full ? 'body' : el);
			var layers = [lyr1,lyr2,lyr3], $par = full ? $('body') : $(el);
			$.each(layers, function() {
				this.appendTo($par);
			});

			if (opts.theme && opts.draggable && $.fn.draggable) {
				lyr3.draggable({
					handle: '.ui-dialog-titlebar',
					cancel: 'li'
				});
			}

			// ie7 must use absolute positioning in quirks mode and to account for activex issues (when scrolling)
			var expr = setExpr && (!$.support.boxModel || $('object,embed', full ? null : el).length > 0);
			if (ie6 || expr) {
				// give body 100% height
				if (full && opts.allowBodyStretch && $.support.boxModel)
					$('html,body').css('height','100%');

				// fix ie6 issue when blocked element has a border width
				if ((ie6 || !$.support.boxModel) && !full) {
					var t = sz(el,'borderTopWidth'), l = sz(el,'borderLeftWidth');
					var fixT = t ? '(0 - '+t+')' : 0;
					var fixL = l ? '(0 - '+l+')' : 0;
				}

				// simulate fixed position
				$.each(layers, function(i,o) {
					var s = o[0].style;
					s.position = 'absolute';
					if (i < 2) {
						if (full)
							s.setExpression('height','Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:'+opts.quirksmodeOffsetHack+') + "px"');
						else
							s.setExpression('height','this.parentNode.offsetHeight + "px"');
						if (full)
							s.setExpression('width','jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"');
						else
							s.setExpression('width','this.parentNode.offsetWidth + "px"');
						if (fixL) s.setExpression('left', fixL);
						if (fixT) s.setExpression('top', fixT);
					}
					else if (opts.centerY) {
						if (full) s.setExpression('top','(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"');
						s.marginTop = 0;
					}
					else if (!opts.centerY && full) {
						var top = (opts.css && opts.css.top) ? parseInt(opts.css.top, 10) : 0;
						var expression = '((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + '+top+') + "px"';
						s.setExpression('top',expression);
					}
				});
			}

			// show the message
			if (msg) {
				if (opts.theme)
					lyr3.find('.ui-widget-content').append(msg);
				else
					lyr3.append(msg);
				if (msg.jquery || msg.nodeType)
					$(msg).show();
			}

			if ((msie || opts.forceIframe) && opts.showOverlay)
				lyr1.show(); // opacity is zero
			if (opts.fadeIn) {
				var cb = opts.onBlock ? opts.onBlock : noOp;
				var cb1 = (opts.showOverlay && !msg) ? cb : noOp;
				var cb2 = msg ? cb : noOp;
				if (opts.showOverlay)
					lyr2._fadeIn(opts.fadeIn, cb1);
				if (msg)
					lyr3._fadeIn(opts.fadeIn, cb2);
			}
			else {
				if (opts.showOverlay)
					lyr2.show();
				if (msg)
					lyr3.show();
				if (opts.onBlock)
					opts.onBlock();
			}

			// bind key and mouse events
			bind(1, el, opts);

			if (full) {
				pageBlock = lyr3[0];
				pageBlockEls = $(':input:enabled:visible',pageBlock);
				if (opts.focusInput)
					setTimeout(focus, 20);
			}
			else
				center(lyr3[0], opts.centerX, opts.centerY);

			if (opts.timeout) {
				// auto-unblock
				var to = setTimeout(function() {
					if (full)
						$.unblockUI(opts);
					else
						$(el).unblock(opts);
				}, opts.timeout);
				$(el).data('blockUI.timeout', to);
			}
		}

		// remove the block
		function remove(el, opts) {
			var full = (el == window);
			var $el = $(el);
			var data = $el.data('blockUI.history');
			var to = $el.data('blockUI.timeout');
			if (to) {
				clearTimeout(to);
				$el.removeData('blockUI.timeout');
			}
			opts = $.extend({}, $.blockUI.defaults, opts || {});
			bind(0, el, opts); // unbind events

			if (opts.onUnblock === null) {
				opts.onUnblock = $el.data('blockUI.onUnblock');
				$el.removeData('blockUI.onUnblock');
			}

			var els;
			if (full) // crazy selector to handle odd field errors in ie6/7
				els = $('body').children().filter('.blockUI').add('body > .blockUI');
			else
				els = $el.find('>.blockUI');

			if (full)
				pageBlock = pageBlockEls = null;

			if (opts.fadeOut) {
				els.fadeOut(opts.fadeOut);
				setTimeout(function() { reset(els,data,opts,el); }, opts.fadeOut);
			}
			else
				reset(els, data, opts, el);
		}

		// move blocking element back into the DOM where it started
		function reset(els,data,opts,el) {
			els.each(function(i,o) {
				// remove via DOM calls so we don't lose event handlers
				if (this.parentNode)
					this.parentNode.removeChild(this);
			});

			if (data && data.el) {
				data.el.style.display = data.display;
				data.el.style.position = data.position;
				if (data.parent)
					data.parent.appendChild(data.el);
				$(el).removeData('blockUI.history');
			}

			if (typeof opts.onUnblock == 'function')
				opts.onUnblock(el,opts);

			// fix issue in Safari 6 where block artifacts remain until reflow
			var body = $(document.body), w = body.width(), cssW = body[0].style.width;
			body.width(w-1).width(w);
			body[0].style.width = cssW;
		}

		// bind/unbind the handler
		function bind(b, el, opts) {
			var full = el == window, $el = $(el);

			// don't bother unbinding if there is nothing to unbind
			if (!b && (full && !pageBlock || !full && !$el.data('blockUI.isBlocked')))
				return;

			$el.data('blockUI.isBlocked', b);

			// don't bind events when overlay is not in use or if bindEvents is false
			if (!opts.bindEvents || (b && !opts.showOverlay))
				return;

			// bind anchors and inputs for mouse and key events
			var events = 'mousedown mouseup keydown keypress touchstart touchend touchmove';
			if (b)
				$(document).bind(events, opts, handler);
			else
				$(document).unbind(events, handler);

		// former impl...
		//		var $e = $('a,:input');
		//		b ? $e.bind(events, opts, handler) : $e.unbind(events, handler);
		}

		// event handler to suppress keyboard/mouse events when blocking
		function handler(e) {
			// allow tab navigation (conditionally)
			if (e.keyCode && e.keyCode == 9) {
				if (pageBlock && e.data.constrainTabKey) {
					var els = pageBlockEls;
					var fwd = !e.shiftKey && e.target === els[els.length-1];
					var back = e.shiftKey && e.target === els[0];
					if (fwd || back) {
						setTimeout(function(){focus(back);},10);
						return false;
					}
				}
			}
			var opts = e.data;
			var target = $(e.target);
			if (target.hasClass('blockOverlay') && opts.onOverlayClick)
				opts.onOverlayClick();

			// allow events within the message content
			if (target.parents('div.' + opts.blockMsgClass).length > 0)
				return true;

			// allow events for content that is not being blocked
			return target.parents().children().filter('div.blockUI').length === 0;
		}

		function focus(back) {
			if (!pageBlockEls)
				return;
			var e = pageBlockEls[back===true ? pageBlockEls.length-1 : 0];
			if (e)
				e.focus();
		}

		function center(el, x, y) {
			var p = el.parentNode, s = el.style;
			var l = ((p.offsetWidth - el.offsetWidth)/2) - sz(p,'borderLeftWidth');
			var t = ((p.offsetHeight - el.offsetHeight)/2) - sz(p,'borderTopWidth');
			if (x) s.left = l > 0 ? (l+'px') : '0';
			if (y) s.top  = t > 0 ? (t+'px') : '0';
		}

		function sz(el, p) {
			return parseInt($.css(el,p),10)||0;
		}

	}


	/*global define:true */
	if (typeof define === 'function' && define.amd && define.amd.jQuery) {
		define(['jquery'], setup);
	} else {
		setup(jQuery);
	}

})();
//
// @source = centercross.js
//
OpenLayers.Control.CenterCross = OpenLayers.Class(OpenLayers.Control, {

    /**
     * Property: element
     * {Element}
     */
	element: null,

    horizontal: null,

    vertical: null,

	crosslength: 40,

	bold: 2,

	isWhite: false,

	initialize: function(options) {
		OpenLayers.Control.prototype.initialize.apply(this, [options]);

		this.element = document.createElement('div');

		this.element.style.position = 'relative';
		this.element.style.height = '1px';
		this.element.style.width = '1px';

		this.element.className = this.displayClass + 'Wrapper';
	},
	
	destroy: function() {
        this.map.events.unregister('moveend', this, this.onMoveend);
		this.div.innerHTML = "";
		OpenLayers.Control.prototype.destroy.apply(this);
	},

	draw: function() {
		OpenLayers.Control.prototype.draw.apply(this, arguments);

		this.div.appendChild(this.element);
		this.div.style.height = "1px";
		this.div.style.width = "1px";
        this.map.events.register('moveend', this, this.onMoveend);

		this.update();

		return this.div;
	},
	
	onMoveend: function() {
		this.update();
	},

	update: function() {
		var px = new OpenLayers.Pixel(this.map.getCurrentSize().w/2, this.map.getCurrentSize().h/2);
		
		this.element.innerHTML = "";

		this.div.style.left = px.x + "px";
		this.div.style.top = px.y + "px";

		this.createBorder();

		this.horizontal.style.left = ((this.crosslength + this.bold) / -2) + "px";
		this.horizontal.style.top = (this.bold / -2) + "px";

		this.horizontal.style.height = this.bold + "px";
		this.horizontal.style.width = this.crosslength + "px";

		this.vertical.style.left = (this.bold / -2) + "px";
		this.vertical.style.top = ((this.crosslength + this.bold) / -2) + "px";

		this.vertical.style.height = this.crosslength + "px";
		this.vertical.style.width = this.bold + "px";

		if(this.isWhite) {
			this.horizontal.style.backgroundColor = "#ffffff";
			this.vertical.style.backgroundColor = "#ffffff";
		}
		else {
			this.horizontal.style.backgroundColor = "#000000";
			this.vertical.style.backgroundColor = "#000000";
		}

		this.element.appendChild(this.horizontal);
		this.element.appendChild(this.vertical);
	},
	
	createBorder: function() {
		this.horizontal = document.createElement('div');
		this.horizontal.style.position = 'relative';
		this.horizontal.className = this.displayClass + 'Horizon';

		this.vertical = document.createElement('div');
		this.vertical.style.position = 'relative';
		this.vertical.className = this.displayClass + 'Verticality';
	},

	CLASS_NAME: "OpenLayers.Control.CenterCross"
});//
// @source = ScaleBar.js
//
/* Copyright (c) 2006-2008 MetaCarta, Inc., published under the Clear BSD
 * license.  See http://svn.openlayers.org/trunk/openlayers/license.txt for the
 * full text of the license. */

/* Modified by by Geospatial Information Authority of Japan., published under the Clear BSD license. */

/**
 * @requires OpenLayers/Control.js
 */

/**
 * Class: OpenLayers.Control.ScaleBar
 * A scale bar styled with CSS.
 * 
 * Inherits from:
 *  - <OpenLayers.Control>
 */
OpenLayers.Control.ScaleBar = OpenLayers.Class(OpenLayers.Control, {

    /**
     * Property: element
     * {Element}
     */
    element: null,
    
    /**
     * Property: scale
     * {Float} Scale denominator (1 / X) - set on update
     */    
    scale: 1,

    /**
     * APIProperty: displaySystem
     * {String} Display system for scale bar - metric or english supported.
     *     Default is metric.
     */
    displaySystem: 'metric',

    /**
     * APIProperty: minWidth
     * {Integer} Minimum width of the scale bar in pixels.  Default is 100 px.
     */
    minWidth: 100,

    /**
     * APIProperty: maxWidth
     * Maximum width of the scale bar in pixels.  Default is 200 px.
     */
    maxWidth: 200,

    /**
     * APIProperty: divisions
     * {Integer} Number of major divisions for the scale bar.  Default is 2.
     */
    divisions: 2,

    /**
     * APIProperty: subdivisions
     * {Integer} Number of subdivisions per major division.  Default is 2.
     */
    subdivisions: 2,

    /**
     * APIProperty: showMinorMeasures
     * {Boolean} Show measures for subdivisions.  Default is false.
     */
    showMinorMeasures: false,

    /**
     * APIProperty: abbreviateLabel
     * {Boolean} Show abbreviated measurement unit (ft, km).  Default is false.
     */
    abbreviateLabel: false,

    /**
     * APIProperty: geodesic
     * {Boolean} Use geodesic measurement. Default is false. The recommended
     * setting for maps in EPSG:4326 is false, and true EPSG:900913. If set to
     * true, the scale will be calculated based on the horizontal size of the
     * pixel in the center of the map viewport.
     */
    geodesic: true,

    /**
     * APIProperty: div
     * {Element} Optional DOM element to become the container for the scale
     *     bar.  If not provided, one will be created.
     */
    div: null,
    
    /**
     * Property: scaleText
     * Text to prefix the scale denominator used as a title for the scale bar
     *     element.  Default is "scale 1:".
     */
    scaleText: "scale 1:",
    
    /**
     * Property: thousandsSeparator
     * Thousands separator for formatted scale bar measures.  The title
     *     attribute for the scale bar always uses
     *     <OpenLayers.Number.thousandsSeparator> for number formatting.  To
     *     conserve space on measures displayed with markers, the default
     *     thousands separator for formatting is "" (no separator).
     */
    thousandsSeparator: "",

    /**
     * Property: measurementProperties
     * {Object} Holds display units, abbreviations, and conversion to inches
     * (since we're using dpi) per measurement sytem.
     */
    measurementProperties: {
        english: {
            units: ['miles', 'feet', 'inches'],
            abbr: ['mi', 'ft', 'in'],
            inches: [63360, 12, 1]
        },
        metric: {
            units: ['kilometers', 'meters', 'centimeters'],
            abbr: ['km', 'm', 'cm'],
            inches: [39370.07874, 39.370079, 0.393701]
        }
    },

    /**
     * Property: customStyle
     * {Object} For cases where <limitedStyle> is true, a customStyle property
     *     can be set on the options sent to the constructor.  The
     *     <defaultStyles> object will be extended with this custom style
     *     object.
     */
    customStyles: null,

    /**
     * Property: defaultStyles
     * {Object} For cases where <limitedStyle> is true, default scale bar
     *     element offsets are taken from this object.  Values correspond to
     *     pixel dimensions given in the stylesheet.
     */
    defaultStyles: {
        Bar: {
            height: 1, top: 14,
            borderLeftWidth: 0,
            borderRightWidth: 0
        },
        BarAlt: {
            height: 1, top: 14,
            borderLeftWidth: 0,
            borderRightWidth: 0
        },
        MarkerMajor: {
            height: 7, width: 1, top: 11,
            borderLeftWidth: 0,
            borderRightWidth: 0
        },
        MarkerMinor: {
            height: 5, width: 1, top: 12,
            borderLeftWidth: 0,
            borderRightWidth: 0
        },
        NumbersBox: {
            height: 13, width: 40, top: 21
        },
        LabelBox: {
            height: 15, top: -2
        },
        Background: {
        	height: 30, top: 3,
        	borderLeftWidth: 0,
        	borderRightWidth: 0
        }
    },
    
    /**
     * Property: appliedStyles
     * For cases where <limitedStyle> is true, scale bar element offsets will
     *     be determined based on <defaultStyles> extended with any
     *     <customStyles>.
     */
    appliedStyles: null,

    /**
     * Property: displayLabelUnit
     * {Boolean} Display unit label above ScaleBar.
     */
    displayLabelUnit: false,

    /**
     * Property: displayUnit
     * {Boolean} Display unit label next final measure.
     */
    displayUnit: true,

    /**
     * Constructor: OpenLayers.Control.ScaleBar
     * Create a new scale bar instance.
     *
     * Parameters: 
     * options - {Object} Optional object whose properties will be set on this
     *     object.
     */
    initialize: function(options) {
        OpenLayers.Control.prototype.initialize.apply(this, [options]);
        this.appliedStyles = OpenLayers.Util.extend({}, this.defaultStyles);
        OpenLayers.Util.extend(this.appliedStyles, this.customStyles);

        // create scalebar DOM elements
        this.element = document.createElement('div');
        this.element.style.position = 'relative';
        this.element.className = this.displayClass + 'Wrapper';
        
        this.labelContainer = document.createElement('div');
        this.labelContainer.className = this.displayClass + 'Units';
        this.labelContainer.style.position = 'absolute';
        this.graphicsContainer = document.createElement('div');
        this.graphicsContainer.style.position = 'absolute';
        this.graphicsContainer.className = this.displayClass + 'Graphics';
        this.numbersContainer = document.createElement('div');
        this.numbersContainer.style.position = 'absolute';
        this.numbersContainer.className = this.displayClass + 'Numbers';
        this.backgroundContainer = document.createElement('div');
        this.backgroundContainer.style.position = 'absolute';
        this.backgroundContainer.className = this.displayClass + 'Background';
        
        this.element.appendChild(this.backgroundContainer);
        this.element.appendChild(this.graphicsContainer);
        this.element.appendChild(this.labelContainer);
        this.element.appendChild(this.numbersContainer);
    },
    
    /**
     * APIMethod: destroy
     * Destroy the control.
     */
    destroy: function() {
        this.map.events.unregister('moveend', this, this.onMoveend);
        this.div.innerHTML = "";
        OpenLayers.Control.prototype.destroy.apply(this);
    },

    /**
     * Method: draw
     */    
    draw: function() {
        OpenLayers.Control.prototype.draw.apply(this, arguments);
        // determine offsets for graphic elements
        this.dxMarkerMajor = (
            this.styleValue('MarkerMajor', 'borderLeftWidth') +
            this.styleValue('MarkerMajor', 'width') +
            this.styleValue('MarkerMajor', 'borderRightWidth')
        ) / 2;
        this.dxMarkerMinor = (
            this.styleValue('MarkerMinor', 'borderLeftWidth') +
            this.styleValue('MarkerMinor', 'width') +
            this.styleValue('MarkerMinor', 'borderRightWidth')
        ) / 2;
        this.dxBar = (
            this.styleValue('Bar', 'borderLeftWidth') +
            this.styleValue('Bar', 'borderRightWidth')
        ) / 2;
        this.dxBarAlt = (
            this.styleValue('BarAlt', 'borderLeftWidth') +
            this.styleValue('BarAlt', 'borderRightWidth')
        ) / 2;
        this.dxNumbersBox = this.styleValue('NumbersBox', 'width') / 2;
        this.dxBackground = (
            this.styleValue('Background', 'borderLeftWidth') +
            this.styleValue('Background', 'borderRightWidth')
        ) / 2;
        
        // set scale bar element height
        var classNames = ['Bar', 'BarAlt', 'MarkerMajor', 'MarkerMinor', 'Background'];
        classNames.push('NumbersBox', 'LabelBox');
        var vertDisp = 0;
        for(var classIndex = 0; classIndex < classNames.length; ++classIndex) {
            var cls = classNames[classIndex];
            vertDisp = Math.max(
                vertDisp,
                this.styleValue(cls, 'top') + this.styleValue(cls, 'height')
            );
        }
        this.element.style.height = vertDisp + 'px';
        
        this.div.appendChild(this.element);
        this.map.events.register('moveend', this, this.onMoveend);
        this.update();
        return this.div;
    },
    
    /**
     * Method: onMoveend
     * Registered as a listener for "moveend".
     */
    onMoveend: function() {
        this.update();
    },
   
    /**
     * APIMethod: update
     * Update the scale bar after modifying properties.
     *
     * Parameters:
     * scale - {Float} Optional scale denominator.  If not specified, the
     *     map scale will be used.
     */
    update: function(scale) {
        if(this.map.baseLayer == null || !this.map.getScale()) {
            return;
        }
        if(this.geodesic === true) {
            var units = this.map.getUnits();
            if(!units) {
                return;
            }
            var inches = OpenLayers.INCHES_PER_UNIT;
            scale = (this.map.getGeodesicPixelSize().w || 0.000001) *
                    inches["km"] * OpenLayers.DOTS_PER_INCH;
                    
        }
        this.scale = (scale != undefined) ? scale : this.map.getScale();
        // update the element title and width
        this.element.title = this.scaleText + OpenLayers.Number.format(this.scale);
        this.element.style.width = this.maxWidth + 'px';
        // check each measurement unit in the display system
        var comp = this.getComp();
        // get the value (subdivision length) with the lowest cumulative score
        this.setSubProps(comp);
        // clean out any old content from containers
        this.labelContainer.innerHTML = "";
        this.graphicsContainer.innerHTML = "";
        this.numbersContainer.innerHTML = "";
        this.backgroundContainer.innerHTML = "";
        // create all divisions
        var numDiv = this.divisions * this.subdivisions;
        var alignmentOffset = this.dxNumbersBox;
        
        this.backgroundContainer.appendChild(this.createElement(
            "Background", " ", 0, this.subProps.pixels * numDiv + alignmentOffset * 2 + this.dxNumbersBox
        ));

        var xPos, measure, divNum, cls, left;
        for(var di=0; di<this.divisions; ++di) {
            // set xPos and measure to start of division
            xPos = di * this.subdivisions * this.subProps.pixels + alignmentOffset;
            // add major marker
            this.graphicsContainer.appendChild(this.createElement(
                "MarkerMajor", " ", xPos - this.dxMarkerMajor
            ));
            // add major measure
            measure = (di == 0) ? 0 :
                OpenLayers.Number.format(
                    (di * this.subdivisions) * this.subProps.length,
                    this.subProps.dec, this.thousandsSeparator
                );
            this.numbersContainer.appendChild(this.createElement(
                "NumbersBox", measure, xPos - this.dxNumbersBox
            ));

            // create all subdivisions
            for(var si=0; si<this.subdivisions; ++si) {
                if((si % 2) == 0) {
                    cls = "Bar";
                    left = xPos - this.dxBar;
                } else {
                    cls = "BarAlt";
                    left = xPos - this.dxBarAlt;
                }
                this.graphicsContainer.appendChild(this.createElement(
                    cls, " ", left, this.subProps.pixels
                ));
                // add minor marker if not the last subdivision
                if(si < this.subdivisions - 1) {
                    // set xPos and measure to end of subdivision
                    divNum = (di * this.subdivisions) + si + 1;
                    xPos = divNum * this.subProps.pixels + alignmentOffset;
                    this.graphicsContainer.appendChild(this.createElement(
                        "MarkerMinor", " ", xPos - this.dxMarkerMinor
                    ));
                    if(this.showMinorMeasures) {
                        // add corresponding measure
                        measure = divNum * this.subProps.length;
                        this.numbersContainer.appendChild(this.createElement(
                            "NumbersBox", measure, xPos - this.dxNumbersBox
                        ));
                    }
                }
            }
        }
        // set xPos and measure to end of divisions
        xPos = numDiv * this.subProps.pixels;
        xPos += alignmentOffset;
        // add the final major marker
        this.graphicsContainer.appendChild(this.createElement(
            "MarkerMajor", " ", xPos - this.dxMarkerMajor
        ));
        // add final measure
        measure = OpenLayers.Number.format(
            numDiv * this.subProps.length,
            this.subProps.dec, this.thousandsSeparator
        );
        this.numbersContainer.appendChild(this.createElement(
            "NumbersBox", measure, xPos - this.dxNumbersBox
        ));
        
        // add unit label next final measure
        if (this.displayUnit) {
            this.numbersContainer.appendChild(this.createElement(
                "NumbersBox", this.subProps.abbr, xPos));
        }
        
        // add content to the label element
        if (this.displayLabelUnit) {
            var labelBox = document.createElement('div');
            labelBox.style.position = 'absolute';
            var labelText;
            labelText = '';
            labelBox.className = this.displayClass + 'LabelBox';
            labelBox.style.textAlign = 'center';
            labelBox.style.width = Math.round(numDiv * this.subProps.pixels) + 'px'
            labelBox.style.left = Math.round(alignmentOffset) + 'px';
            labelBox.style.overflow = 'hidden';
            if(this.abbreviateLabel) {
                labelText += ' ' + this.subProps.abbr;
            } else {
                labelText += ' ' + this.subProps.units;
            }
            labelBox.appendChild(document.createTextNode(labelText));
            this.labelContainer.appendChild(labelBox);
        }
    },
    
    /**
     * Method: createElement
     * Create a scale bar element.  These are absolutely positioned with
     *     hidden overflow and left offset.
     *
     * Parameters:
     * cls - {String} Class name suffix.
     * text - {String} Text for child node.
     * left - {Float} Left offset.
     * width - {Float} Optional width.
     * 
     * Returns:
     * {Element} A scale bar element.
     */
    createElement: function(cls, text, left, width) {
        var element = document.createElement("div");
        element.className = this.displayClass + cls;
        OpenLayers.Util.extend(element.style, {
            position: "absolute",
            textAlign: "center",
            overflow: "hidden",
            left: Math.round(left) + "px"
        });
        element.appendChild(document.createTextNode(text));
        if(width) {
            element.style.width = Math.round(width) + "px";
        }
        return element;
    },
    
    /**
     * Method: getComp
     * Get comparison matrix.
     */
    getComp: function() {
        var system = this.measurementProperties[this.displaySystem];
        var numUnits = system.units.length;
        var comp = new Array(numUnits);
        var numDiv = this.divisions * this.subdivisions;
        for(var unitIndex = 0; unitIndex < numUnits; ++unitIndex) {
            comp[unitIndex] = {};
            var ppdu = OpenLayers.DOTS_PER_INCH *
                system.inches[unitIndex] / this.scale;
            var minSDDisplayLength = ((this.minWidth - this.dxNumbersBox) /
                                       ppdu) / numDiv;
            var maxSDDisplayLength = ((this.maxWidth - this.dxNumbersBox) /
                                       ppdu) / numDiv;
            // add up scores for each marker (even if numbers aren't displayed)
            for(var vi=0; vi<numDiv; ++vi) {
                var minNumber = minSDDisplayLength * (vi + 1);
                var maxNumber = maxSDDisplayLength * (vi + 1);
                var num = this.getHandsomeNumber(minNumber, maxNumber);
                var compNum = {
                    value: (num.value / (vi + 1)),
                    score: 0, tie: 0, dec: 0, displayed: 0
                };
                // tally up scores for all values given this subdivision length
                for(var vi2=0; vi2<numDiv; ++vi2) {
                    var position = num.value * (vi2 + 1) / (vi + 1);
                    var num2 = this.getHandsomeNumber(position, position);
                    var major = ((vi2 + 1) % this.subdivisions == 0);
                    var last = ((vi2 + 1) == numDiv);
                    if(major || this.showMinorMeasures) {
                        // count scores for displayed marker measurements
                        compNum.score += num2.score;
                        compNum.tie += num2.tie;
                        compNum.dec = Math.max(compNum.dec, num2.dec);
                        compNum.displayed += 1;
                    } else {
                        // count scores for non-displayed marker measurements
                        compNum.score += num2.score / this.subdivisions;
                        compNum.tie += num2.tie / this.subdivisions;
                    }
                }
                // adjust scores so numbers closer to 1 are preferred for display
                compNum.score *= (unitIndex + 1) * compNum.tie / compNum.displayed;
                comp[unitIndex][vi] = compNum;
            }
        }
        return comp;
    },
    
    /**
     * Method: setSubProps
     * Set subdivision properties based on comparison matrix.
     */
    setSubProps: function(comp) {
        var system = this.measurementProperties[this.displaySystem];
        var score = Number.POSITIVE_INFINITY;
        var tie = Number.POSITIVE_INFINITY;
        var curUnitIndex;
        
        for(var unitIndex = 0; unitIndex < comp.length; ++unitIndex) {
            var ppdu = OpenLayers.DOTS_PER_INCH *
                system.inches[unitIndex] / this.scale;
            for(var vi in comp[unitIndex]) {
                var compNum = comp[unitIndex][vi];
                if((compNum.score < score) ||
                   ((compNum.score == score) && (compNum.tie < tie))) {
                    this.subProps = {
                        length: compNum.value,
                        pixels: ppdu * compNum.value,
                        units: system.units[unitIndex],
                        abbr: system.abbr[unitIndex],
                        dec: compNum.dec 
                    };
                    score = compNum.score;
                    tie = compNum.tie;
                    
                    curUnitIndex = unitIndex;
                }
            }
        }

		if (this.displaySystem == 'metric')
		{
	        if (this.subProps.length < 1 && curUnitIndex < system.units.length)
	        {
	        	var newUnitIndex = curUnitIndex + 1;
	        	this.subProps.units = system.units[newUnitIndex];
	        	this.subProps.abbr = system.abbr[newUnitIndex];
	        	
	        	var mul = Math.round(system.inches[curUnitIndex] / system.inches[newUnitIndex]);
	        	
	        	this.subProps.length = this.subProps.length * mul;
	        	this.subProps.dec = 0;
	        }
		}
    },
    
    /**
     * Method: styleValue
     * Get an integer value associated with a particular selector and key.
     *     Given a stylesheet with .displayClassSomeSelector {border: 2px solid red},
     *     styleValue('SomeSelector', 'borderWidth') returns 2
     *
     * Returns:
     * {Integer} A value associated with a style selector/key combo.
     */
    styleValue: function(selector, key) {
        var value = 0;
        value = this.appliedStyles[selector][key];
        return value ? value : 0;
    },

    /**
     * Method: getHandsomeNumber
     * Attempts to generate a nice looking positive number between two other
     *     positive numbers.
     *
     * Parameters:
     * small - {Float} Lower positive bound.
     * big - {Float} Upper positive bound.
     * sigFigs - {Integer} Number of significant figures to consider.  Default
     *     is 10.
     *
     * Returns:
     * {Object} Object representing a nice looking number.
     */
    getHandsomeNumber: function(small, big, sigFigs) {
        sigFigs = (sigFigs == null) ? 10 : sigFigs;
        // if all else fails, return a small ugly number
        var num = {
            value: small,
            score: Number.POSITIVE_INFINITY,
            tie: Number.POSITIVE_INFINITY,
            dec: 3
        };
        // try the first three comely multiplicands (in order of comliness)
        var cmult, max, dec, tmult, multiplier, score, tie;
        for(var hexp = 0; hexp < 3; ++hexp) {
            cmult = Math.pow(2, (-1 * hexp));
            max = Math.floor(Math.log(big / cmult) / Math.LN10);
            for(var texp = max; texp > (max - sigFigs + 1); --texp) {
                dec = Math.max(hexp - texp, 0);
                tmult = cmult * Math.pow(10, texp);
                // check if there is an integer multiple of tmult
                // between small and big
                if((tmult * Math.floor(big / tmult)) >= small) {
                    // check if small is an integer multiple of tmult
                    if(small % tmult == 0) {
                        multiplier = small / tmult;
                    } else {
                        // smallest integer multiple between small and big
                        multiplier = Math.floor(small / tmult) + 1;
                    }
                    // test against the best (lower == better)
                    score = multiplier + (2 * hexp);
                    tie = (texp < 0) ? (Math.abs(texp) + 1) : texp;
                    if((score < num.score) || ((score == num.score) &&
                       (tie < num.tie))) {
                        num.value = parseFloat((tmult * multiplier).toFixed(dec));
                        num.score = score;
                        num.tie = tie;
                        num.dec = dec;
                    }
                }
            }
        }
        return num;
    },
    
    CLASS_NAME: "OpenLayers.Control.ScaleBar"
    
});
//
// @source = sakuzu.js
//
/** 作図用 JQueryプラグイン実装 **/
var Sakuzu= {};
var READURL = "http://gp.cyberjapan.jp/cjp4/service/gsi_convert_to_json";
var SAVEURL = "http://gp.cyberjapan.jp/cjp4/service/gsi_convert_from_json";

Sakuzu.SERVER_ROOT = "http://portal.cyberjapan.jp";
Sakuzu.IMAGE_ROOT = "http://cyberjapandata.gsi.go.jp/portal/sys/v4/image/";

// アイコン
Sakuzu.SymbolTable = {
		baseURL: "http://cyberjapandata.gsi.go.jp/portal/sys/v4/symbols/",
		files:
			[
				'001.png', '002.png', '003.png', '004.png', '005.png', '006.png', '007.png', '008.png', '009.png', '010.png',
				'011.png', '012.png', '013.png', '014.png', '015.png', '016.png', '017.png', '018.png', '019.png', '020.png',
				'021.png', '022.png', '023.png', '024.png', '025.png', '026.png', '027.png', '028.png', '029.png', '030.png',
				'031.png', '032.png', '033.png', '034.png', '035.png', '036.png', '037.png', '038.png', '039.png', '040.png',
				'041.png', '042.png', '043.png', '044.png', '045.png', '046.png', '047.png', '048.png', '049.png', '050.png',
				'051.png', '052.png', '053.png', '054.png', '055.png', '056.png', '057.png', '058.png', '059.png', '060.png',
				'061.png', '062.png', '063.png', '064.png', '065.png', '066.png', '067.png', '068.png', '069.png', '070.png',
				'071.png', '072.png', '073.png', '074.png', '075.png', '076.png', '077.png', '078.png', '079.png', '080.png',
				'081.png', '082.png', '083.png', '084.png', '085.png', '086.png', '087.png', '088.png', '089.png', '090.png',
				'091.png', '092.png', '093.png', '094.png', '095.png', '096.png', '097.png', '098.png', '099.png', '100.png',
				'101.png', '102.png', '103.png', '104.png', '105.png', '106.png', '107.png', '108.png', '109.png', '110.png',
				'111.png', '112.png', '113.png', '114.png', '115.png', '116.png', '117.png', '118.png', '119.png', '120.png',
				'121.png', '122.png', '123.png', '124.png', '125.png', '126.png', '127.png', '128.png', '129.png', '130.png',
				'131.png', '132.png', '133.png', '134.png', '135.png', '136.png', '137.png', '138.png', '139.png', '140.png',
				'141.png', '142.png', '143.png', '144.png', '145.png', '146.png', '147.png', '148.png', '149.png', '150.png',
				'151.png', '152.png', '153.png', '154.png', '155.png', '156.png', '157.png', '158.png', '159.png', '160.png',
				'161.png', '162.png', '163.png', '164.png', '165.png', '166.png', '167.png', '168.png', '169.png', '170.png',
				'171.png', /*'172.GIF', '173.GIF', '174.GIF', '175.GIF', '176.GIF', '177.GIF', '178.GIF', '179.GIF',*/ '180.png',
				'181.png', '182.png', '183.png', '184.png', '185.png', '186.png', '187.png', '188.png',            '200.png', 
				'201.png', '202.png', '203.png', '204.png', '205.png', '206.png', '207.png', '208.png', '209.png', '210.png',
				'211.png', '212.png', '213.png', '214.png', '215.png', '216.png', '217.png',
				'dot.png'
				// 最後にコンマがあるとエラーになる。
			]
};
// カラーパレット
Sakuzu.ColorTable = [[[255,255,255],[255,216,216],[255,255,216],[255,255,216],[255,255,216],[255,255,216],[216,255,216],[216,255,255],[216,255,255],[216,255,255],[216,255,255],[216,216,255],[255,216,255],[255,216,255],[255,216,255],[255,216,255]],
[[238,238,238],[255,192,192],[255,255,192],[255,255,192],[255,255,192],[255,255,192],[192,255,192],[192,255,255],[192,255,255],[192,255,255],[192,255,255],[192,192,255],[255,192,255],[255,192,255],[255,192,255],[255,192,255]],
[[221,221,221],[255,168,168],[255,243,168],[255,255,168],[255,255,168],[255,255,168],[168,255,168],[168,255,243],[168,255,255],[168,255,255],[168,255,255],[168,168,255],[243,168,255],[255,168,255],[255,168,255],[255,168,255]],
[[204,204,204],[255,144,144],[255,219,144],[255,246,144],[255,255,144],[232,255,144],[144,255,144],[144,255,219],[144,255,246],[144,255,255],[144,232,255],[144,144,255],[219,144,255],[246,144,255],[255,144,255],[255,144,232]],
[[187,187,187],[255,120,120],[255,195,120],[255,222,120],[255,255,120],[208,255,120],[120,255,120],[120,255,195],[120,255,222],[120,255,255],[120,208,255],[120,120,255],[195,120,255],[222,120,255],[255,120,255],[255,120,208]],
[[170,170,170],[255, 96, 96],[255,171, 96],[255,198, 96],[255,255, 96],[184,255, 96],[ 96,255, 96],[ 96,255,171],[ 96,255,198],[ 96,255,255],[ 96,184,255],[ 96, 96,255],[171, 96,255],[198, 96,255],[255, 96,255],[255, 96,184]],
[[153,153,153],[255, 72, 72],[255,147, 72],[255,174, 72],[255,255, 72],[160,255, 72],[ 72,255, 72],[ 72,255,147],[ 72,255,174],[ 72,255,255],[ 72,160,255],[ 72, 72,255],[147, 72,255],[174, 72,255],[255, 72,255],[255, 72,160]],
[[136,136,136],[255, 48, 48],[255,123, 48],[255,150, 48],[255,255, 48],[136,255, 48],[ 48,255, 48],[ 48,255,123],[ 48,255,150],[ 48,255,255],[ 48,136,255],[ 48, 48,255],[123, 48,255],[150, 48,255],[255, 48,255],[255, 48,136]],
[[119,119,119],[255, 24, 24],[255, 99, 24],[255,126, 24],[255,255, 24],[112,255, 24],[ 24,255, 24],[ 24,255, 99],[ 24,255,126],[ 24,255,255],[ 24,112,255],[ 24, 24,255],[ 99, 24,255],[126, 24,255],[255, 24,255],[255, 24,112]],
[[102,102,102],[255,  0,  0],[255, 75,  0],[255,102,  0],[255,255,  0],[ 88,255,  0],[  0,255,  0],[  0,255, 75],[  0,255,102],[  0,255,255],[  0, 88,255],[  0,  0,255],[ 75,  0,255],[102,  0,255],[255,  0,255],[255,  0, 88]],
[[ 85, 85, 85],[226,  0,  0],[226, 67,  0],[226, 94,  0],[226,226,  0],[ 80,226,  0],[  0,226,  0],[  0,226, 67],[  0,226, 94],[  0,226,226],[  0, 80,226],[  0,  0,226],[ 67,  0,226],[ 94,  0,226],[226,  0,226],[226,  0, 80]],
[[ 68, 68, 68],[197,  0,  0],[197, 59,  0],[197, 86,  0],[197,197,  0],[ 72,197,  0],[  0,197,  0],[  0,197, 59],[  0,197, 86],[  0,197,197],[  0, 72,197],[  0,  0,197],[ 59,  0,197],[ 86,  0,197],[197,  0,197],[197,  0, 72]],
[[ 51, 51, 51],[168,  0,  0],[168, 51,  0],[168, 78,  0],[168,168,  0],[ 64,168,  0],[  0,168,  0],[  0,168, 51],[  0,168, 78],[  0,168,168],[  0, 64,168],[  0,  0,168],[ 51,  0,168],[ 78,  0,168],[168,  0,168],[168,  0, 64]],
[[ 34, 34, 34],[139,  0,  0],[139, 43,  0],[139, 70,  0],[139,139,  0],[ 56,139,  0],[  0,139,  0],[  0,139, 43],[  0,139, 70],[  0,139,139],[  0, 56,139],[  0,  0,139],[ 43,  0,139],[ 70,  0,139],[139,  0,139],[139,  0, 56]],
[[ 17, 17, 17],[110,  0,  0],[110, 35,  0],[110, 62,  0],[110,110,  0],[ 48,110,  0],[  0,110,  0],[  0,110, 35],[  0,110, 62],[  0,110,110],[  0, 48,110],[  0,  0,110],[ 35,  0,110],[ 62,  0,110],[110,  0,110],[110,  0, 48]],
[[  0,  0,  0],[ 81,  0,  0],[ 81, 27,  0],[ 81, 54,  0],[ 81, 81,  0],[ 40, 81,  0],[  0, 81,  0],[  0, 81, 27],[  0, 81, 54],[  0, 81, 81],[  0, 40, 81],[  0,  0, 81],[ 27,  0, 81],[ 54,  0, 81],[ 81,  0, 81],[ 81,  0, 40]]] ;

//作図ボタンインスタンス
var sz_buttonControl;

// 作図ボタンを定義
webtis.Control.sz_button = OpenLayers.Class(OpenLayers.Control, {
	
	createCtrlImage: function(url, left, handler) {
		var image = document.createElement('img');
		image.src = url;
		image.id = "img_sakuzu";
		image.disabled = false;
		image.title = "作図機能";
		image.style.position = "absolute";
		image.style.left = left + "px";
		image.style.width = '66px';
		image.style.height = '31px';
		if (handler) {
			// only handle click
			OpenLayers.Event.observe(image, "mousedown", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
			OpenLayers.Event.observe(image, "click", 
				OpenLayers.Function.bindAsEventListener(handler, this));
			OpenLayers.Event.observe(image, "dblclick", 
				OpenLayers.Function.bindAsEventListener(function(e) {
					OpenLayers.Event.stop(e);
					return false;
				}, this));
		}
		this.div.appendChild(image);
	},
	
	draw: function (px) {
		if (this.div == null) {
			var mapSize = this.map.getSize();
			
			this.div = OpenLayers.Util.createDiv(this.id);
			this.div.style.position = "absolute";
			this.div.style.top = 10 + "px";
			this.div.style.right = 250 + "px";
 
			this.createCtrlImage(Sakuzu.IMAGE_ROOT + "sakuzu.png", 0, function(e) {
				openSakuzu(this);
				OpenLayers.Event.stop(e);
				return false;
			});
		return this.div;
		}
	},
	
	adjustPositionOnMapResize: function() {
		if (this.div != null) {
			var mapSize = this.map.getSize();
			this.div.style.top = 10 + "px";
		}
	},
	
	CLASS_NAME: "webtis.Control.sz_button"
});

/*作図機能のウインドウを表示する関数*/
function openSakuzu(){
	if (!document.getElementById("img_sakuzu").disabled){
		sakuzuModule.disablePopupLayer();
		sakuzuModule.setOperationModeControl();
		sakuzuModule.unselectFeature();
		document.getElementById('sakuzuPalette').style.display="block";//表示する
		sakuzuModule.updatePaletteButtons(true);
		sakuzuModule.oKeyboard.activate();

		/* 右クリック制御解除 */
		mapoClick.deactivate();

		/* 各画面非表示設定 */
		printsizeselectclose();
		clickmapclosefloating();
		closePopup();
		//document.getElementById("showlink").style.display = "none";
		//document.getElementById("showcoordinate").style.display = "none";

		/* 各ボタン非活性設定 */
		changeDisable("img_measure", true);
		changeDisable("img_allow_open", true);
		changeDisable("img_printer", true);
		changeDisable("img_sakuzu", true);
//		document.getElementById("disppopup").disabled = true;

		/* 背景地図選択制御解除 */
		document.onmousemove=null;
	}
}

/*作図機能のウインドウを非表示にする関数*/
function closeSakuzu(){
	//クロムとかでは、imgの無効は効かないようなので・・・
	if (!document.getElementById("sz_palette_close").disabled){
		if (dispFlg){
			sakuzuModule.enablePopupLayer();
		}
		sakuzuModule.updateDrawControls();
		sakuzuModule.CurrentMode = "none";
		sakuzuModule.oKeyboard.deactivate();
		sakuzuModule.disabledLayerList(false);
		
		var length = sakuzuModule.btnObjs.length;
		for (var i=0; i < length; i++){
			sakuzuModule.btnObjs[i].prevAffixStyle = undefined;
		}

		document.getElementById('sakuzuPalette').style.display="none";		//ウインドウを非表示にする
		mapoClick.activate();

		changeDisable("img_measure", false);
		changeDisable("img_allow_open", false);
		changeDisable("img_printer", false);
		changeDisable("img_sakuzu", false);
//		document.getElementById("disppopup").disabled = false;
		mousecontrol();
	}
}

/*作図パネルの操作説明ページを出す*/
function manual(){
	window.open("sakuzu_manual.html","manual","width=800,height=500,menubar=no,toolbar=no,scrollbars=yes");
}

// ツリーで選択されたレイヤーの文字列を作成
function getSelectedLayerString(nextIndex) {

	if (pluginModule) {
		var url = ""
		var idx = nextIndex;
		for (var i = 0; i < pluginModule.length; i++) {
			var ret = pluginModule[i].getSelectedLayerString(idx);
			
			if (ret) {
				url = url + ret.layerString;
				idx = ret.nextIndex;
			}
		}
	
		if (nextIndex < idx){
			return {
				layerString: url,
				nextIndex: idx
			};
		}
	}
}

function setBackgroundColorOpacity(div, opacity) {
	div.css('opacity', opacity);
	div.css('-moz-opacity', opacity);
	div.css('filter', 'alpha( opacity=' + (opacity * 100) + ')');
}

(function(){
jQuery.fn.Sakuzu = function(config) {
	var that = this;
	this.config = config;

	this.CurrentMode = "none";

	this.subPanel = config.subPanel;
	this.mapSharePanel = config.mapSharePanel;	// 「地図の共有」ダイアログ
	this.layerObj = config.layerObj;
	this.mapKeyboardControl = config.mapKeyboardControl;
	
	// 作図が行われた処理に対しての委譲先
	this.mapEventHandler = this.config.mapEventHandler;
	if (this.config.inFrame != false) {
		this.config.inFrame = true;
	}
	// Undo/Redo用スタック
	this.operationHistory = new Sakuzu.OperationHistory(that);

	// 関数を登録
	this.getMapObject = $.proxy(getMapObject,this);
	this.getWebtis = $.proxy(getWebtis,this);
	this.getOpenLayers = $.proxy(getOpenLayers,this);
	this.getSelectedFeatures = $.proxy(getSelectedFeatures,this);
	
	this.enablePopupLayer = $.proxy(enablePopupLayer,this);
	this.disablePopupLayer = $.proxy(disablePopupLayer,this);
	this.init_ctrl = $.proxy(sakuzuInit,this);
	this.setOperationModeControl = $.proxy(setOperationModeControl,this);
	this.updatePaletteButtons = $.proxy(updatePaletteButtons,this);

	this.updateDrawControls = $.proxy(updateDrawControls,this);
	this.unselectFeature = $.proxy(unselectFeature,this);
	this.deleteLayer = $.proxy(deleteLayer,this);
	this.deleteAllLayers = $.proxy(deleteAllLayers,this);
	this.addLayer = $.proxy(addLayer,this);
	this.changeLayerName = $.proxy(changeLayerName,this);
	this.convertToOLStyle = $.proxy(convertToOLStyle,this);
	this.showEditDialog = $.proxy(showEditDialog,this);
	this.createLayerTitlePanel = $.proxy(createLayerTitlePanel,this);
	this.createParameter = $.proxy(createParameter,this);
	this.disabledLayerList = disabledLayerList;
	this.htmlIfrSave = $.proxy(htmlIfrSave, this);
	this.urlSave =  $.proxy(urlSave, this);
	this.shareMap = $.proxy(shareMap, this);
	this.changeIconlabel = $.proxy(changeIconlabel, this);
	this.getURL =  $.proxy(getURL, this);
	
	var panels = $("#sz_panels");

	this.btnObjs = [];

	// 点ボタン
	this.btnObjs.POINT = this.btnObjs.length;
	this.btnObjs.push(new Sakuzu.PointPanel(that,panels.find("#panel_icon")));
	// 線ボタン
	this.btnObjs.LINE = this.btnObjs.length;
	this.btnObjs.push(new Sakuzu.LinePanel(that,panels.find("#panel_line")));
	// 面ボタン
	this.btnObjs.POLYGON = this.btnObjs.length;
	this.btnObjs.push(new Sakuzu.PolygonPanel(that,panels.find("#panel_polygon")));
	// 円ボタン
	this.btnObjs.CIRCLE = this.btnObjs.length;
	this.btnObjs.push(new Sakuzu.CirclePanel(that,panels.find("#panel_circle")));
	// 文字ボタン
	this.btnObjs.LABEL = this.btnObjs.length;
	this.btnObjs.push(new Sakuzu.TextPanel(that,panels.find("#panel_text")));

	var webtis = this.getWebtis();
	var OpenLayers = this.getOpenLayers();

	// デフォルトは操作コントロール
	var selectCtrl = new webtis.Control.SelectFeature(this.layers, {
		onUnselect : function() {
		}
	});
	this.selectCtrl = selectCtrl;

	// 作図パレット
	var sakuzuPalette = $("\
		<tr><td style=\"width:100%; background-color:#cccccc;\">\
			<table width=\"175\">\
				<tr align=\"center\">\
				<td><button id=\"btn_icon\" title=\"ポイントを追加する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "ICON.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_line\" title=\"ラインを追加する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "LINE.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_polygon\" title=\"ポリゴンを追加する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "POLYGON.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_circle\" title=\"円を追加する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "CIRCLE.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_calc\" title=\"図形を計測する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "MEASUREsz.png); height:35px; width:35px; \"></button></td>\
				</tr>\
				<tr align=\"center\">\
				<td><button id=\"btn_edit_obj\" title=\"図形を編集する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "SETTING.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_sz_undo\" title=\"作図を取り消す\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "UNDO.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_sz_redo\" title=\"作図をやり直す\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "REDO.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_delete_obj\" title=\"選択した図形を削除する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "DELETE.png); height:35px; width:35px; \"></button></td>\
				<td><button id=\"btn_sz_clear\" title=\"全ての作図情報を削除する\" type=\"submit\" style=\"background-image:url(" + Sakuzu.IMAGE_ROOT + "CLEAR.png); height:35px; width:35px; \"></button></td>\
				<td></td>\
				</tr>\
			</table>\
		</td></tr>\
	");

	var paletteButtonImages = ["ICON", "LINE", "POLYGON", "CIRCLE", "MEASUREsz", "SETTING", "UNDO", "REDO", "DELETE", "CLEAR"];

	this.append(this.mainPanel = $(sakuzuPalette));

	//作図パレット内のボタン
	this.paletteButtons = $(sakuzuPalette).find("button");

	var sakuzuPanel = $("");

	// URL発行に使用するForm
	var reqForm = "<form method=\"post\" id=\"sz_url_form\" target=\"sz_url_save_frame\">";
	reqForm += "<input type=\"hidden\" name=\"content\" value=\"\" id=\"sz_url_content\">";
	reqForm += "<input type=\"hidden\" name=\"fname\" value=\"\" id=\"sz_url_savefile\">";
	reqForm += "<input type=\"hidden\" name=\"mode\" value=\"\" id=\"sz_url_mode\">";
	reqForm += "</form>";
	reqForm += "<iframe id=\"sz_url_save_frame\" name=\"sz_url_save_frame\" style=\"display:none;height:1px;\" src=\"about:blank\"></iframe>";
	var saveForm = $(reqForm);
	this.append(saveForm);

	// URL発行
	var urlButtonElement = sakuzuPalette.find("#btn_url");
	$(urlButtonElement).click(
		$.proxy(function(ev) {
			// 地図情報の取得
			var mapinfo = this.createParameter();

			// 作図情報ファイル名を作成 - ランダムなファイル名を作成
			var n = 62;
			var RandomString = '';
			var BaseString ='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
			//文字列生成  
			for(var i=0; i<8; i++) {
				RandomString += BaseString.charAt( Math.floor( Math.random() * n));
			}
			var filename = "drawfile_" + RandomString;

			// 作図情報ファイルを作成(サーバにて実行)
			saveForm.attr("action",SAVEURL);
			saveForm.find("#sz_url_content").val(mapinfo.json);
			saveForm.find("#sz_url_savefile").val(filename);
			saveForm.find("#sz_url_mode").val("url");
			saveForm.submit();

			// URLを作成
			var url = "http://portal.cyberjapan.jp/site/mapuse4/index.html?lat=" + mapinfo.lat + "&lon=" + mapinfo.lon + "&z=" + mapinfo.zoomLevel + "&did=" + mapinfo.did + "&fid=" + filename;
			var ret = getSelectedLayerString(1);
			if (ret){
				url = url + ret.layerString;
			}

			// ダイアログを作成
			var panelTitle = "地図表示のURL"
			var urlPanel = "<div id=\"sz_edit_dialog\">";
			urlPanel += "<div style=\"position:relative;top:-10px;margin-top:15px; margin-left:5px; margin-right:5px; margin-bottom:18px;\">";
			urlPanel += "<textarea style=\"width:240px;height:100px;margin-top:5px;margin-bottom:2px;\" id=\"sz_map_textarea\" readonly onclick=\"this.focus();this.select();\"></textarea><br>";
			urlPanel += "<input style=\"float:right\" type=\"button\" name=\"copy\" value=\"クリップボードにコピー\" id=\"sz_url_clipboard\">";
			urlPanel += "</div>";
			var urlDialog = $(urlPanel);
			urlDialog.addClass("ui-widget-content ui-corner-all");
			
			// URLをテキストエリアに設定
			urlDialog.find("#sz_map_textarea").val(url);

			this.editDialog = urlDialog;
			this.subPanel.append(urlDialog);
			this.updateDrawControls();

			// URL表示パネルを表示
			$("#panel_title").html(panelTitle);
			$("#sakuzuPanel").show();
			$("#panel-header").css("background-color","#cccccc");
			$("#panel_title").css("color", "black");
			this.updatePaletteButtons(false,"");

			document.getElementById("sz_panel_close").onclick= ($.proxy(function(ev){
				$("#panel").empty();
				$("#sakuzuPanel").hide();
				this.updatePaletteButtons(true);
				this.setOperationModeControl();
			},this));

		    $("#sz_url_clipboard").zclip({
			    path: "http://portal.cyberjapan.jp/site/mapuse4/js/ZeroClipboard.swf",
			    copy: function(){
			        return $("#sz_map_textarea").val();
		        },
		        beforeCopy:function(){},
		        afterCopy:function(){
		        	$("#sz_panel_close").click();
		        }
		    });

		},this) 
	);

	// HTML保存時に使用するForm
	var requestForm = "<form method=\"post\" id=\"sz_map_form\">";
	requestForm += "<input type=\"hidden\" name=\"did\" value=\"\" id=\"did\">";
	requestForm += "<input type=\"hidden\" name=\"lon\" value=\"\" id=\"lon\">";
	requestForm += "<input type=\"hidden\" name=\"lat\" value=\"\" id=\"lat\">";
	requestForm += "<input type=\"hidden\" name=\"zoomLevel\" value=\"\" id=\"zoomLevel\">";
	requestForm += "<input type=\"hidden\" name=\"json\" value=\"\" id=\"json\">";
	requestForm += "<input type=\"hidden\" name=\"deffile\" value=\"\" id=\"deffile\">";
	requestForm += "<input type=\"hidden\" name=\"mapurl\" value=\"\" id=\"mapurl\">";
	requestForm += "</form>";
	var savehtml = $(requestForm);
	this.append(savehtml);

	// HTML保存
	var htmlButtonElement = sakuzuPalette.find("#btn_html");
	$(htmlButtonElement).click(
		$.proxy(function(ev) {
			this.htmlIfrSave();
		},this)
	);

	// 図形を計測
	var calcButtonElement = sakuzuPalette.find("#btn_calc")[0];
	$(calcButtonElement).click(
		$.proxy(function(ev) {
		
			//操作モードに遷移
			this.setOperationModeControl();

			// ダイアログを作成
			var panelTitle = "図形の計測"
			var urlPanel = "<div id=\"sz_edit_dialog\">";
			urlPanel += "<div style='margin:5px;'>";
			urlPanel += "<p style=\"font-size:12px;padding-bottom:4px;\">図形を選択し計測を実行してください。</p>";
			urlPanel += "<select id=\"sz_calcunit\"><option value=\"1\">(平方)メートル</option><option value=\"0.001\">(平方)キロメートル</option></select>";
			urlPanel += " <button id=\"calcObjectsResult\">計測</button><br>";
			urlPanel += "<input type=\"text\" id=\"calcObjectsResult\" style=\"width:230px;\" readonly><br>";
			urlPanel += "<p style=\"font-size:12px;color:red;\">※線および面データのみ計測可能です。</p>";
			urlPanel += "</div></div>";

			var urlDialog = $(urlPanel);
			urlDialog.addClass("ui-widget-content ui-corner-all");

			calcButtonElement = urlDialog.find("#calcObjectsResult");
			calcButtonElement.click($.proxy(function(e){
				var calcUnitElement = document.getElementById("sz_calcunit");
				var unitValue = calcUnitElement.options[calcUnitElement.selectedIndex].value;

				var calcResultElement = urlDialog.find("#calcObjectsResult");

				// 図形を計測
				var selected = this.getSelectedFeatures();
				if (!selected || selected.length == 0) {
					alert("図形を選択してください。");
					return;
				}

				var mode;
				if (selected[0].layer.styleType == "polygon") {
					mode = "area";
				} else if (selected[0].layer.styleType == "string") {
					mode = "distance";
				} else {
					calcResultElement.value = "";
					alert("対応していない形状種別です。");
					return;
				}
				var geometries = [];
				for (var i = 0; i < selected.length; i++) {
					if ((mode == "area" && selected[i].geometry.CLASS_NAME != "OpenLayers.Geometry.Polygon")||
						(mode == "distance" && selected[i].geometry.CLASS_NAME != "OpenLayers.Geometry.LineString")) {
						calcResultElement.value = "";
						alert("同じ形状種別のオブジェクトを選択してください。");
						return;
					}
					geometries.push(selected[i].geometry);
				}
				var OpenLayers = this.getOpenLayers();
				var result2 = Sakuzu.calcGeo2(geometries,unitValue,this.getMapObject().getProjectionObject(),Sakuzu.baseProjection,OpenLayers);
				$(calcResultElement).val(result2.toFixed(6));
			},this));

			this.editDialog = urlDialog;
			this.subPanel.append(urlDialog);
			//this.updateDrawControls();

			// 図形計測パネルを表示
			$("#panel_title").html(panelTitle);
			$("#sakuzuPanel").show();
			$("#panel-header").css("background-color","#cccccc");
			$("#panel_title").css("color", "black");
			this.updatePaletteButtons(false,"");

			document.getElementById("sz_panel_close").onclick= ($.proxy(function(ev){
				$("#panel").empty();
				$("#sakuzuPanel").hide();
				this.updatePaletteButtons(true);
			},this));

		},this)
	);

	// 点
	var iconButtonElement = sakuzuPalette.find("#btn_icon");
	$(iconButtonElement).click(
		$.proxy(function(ev) {
			var newControls = this.btnObjs[this.btnObjs.POINT].selected();
			this.updateDrawControls(newControls);
			this.btnObjs.OPERATION = this.btnObjs.POINT;
			disabledLayerList(true);
			this.CurrentMode = "Drawing";
		},this) 
	);

	// 線
	var iconButtonElement = sakuzuPalette.find("#btn_line");
	$(iconButtonElement).click(
		$.proxy(function(ev) {
			var newControls = this.btnObjs[this.btnObjs.LINE].selected();
			this.updateDrawControls(newControls);
			this.btnObjs.OPERATION = this.btnObjs.LINE;
			disabledLayerList(true);
			this.CurrentMode = "Drawing";
		},this) 
	);

	// 面
	var iconButtonElement = sakuzuPalette.find("#btn_polygon");
	$(iconButtonElement).click(
		$.proxy(function(ev) {
			var newControls = this.btnObjs[this.btnObjs.POLYGON].selected();
			this.updateDrawControls(newControls);
			this.btnObjs.OPERATION = this.btnObjs.POLYGON;
			disabledLayerList(true);
			this.CurrentMode = "Drawing";
		},this) 
	);

	// 円
	var iconButtonElement = sakuzuPalette.find("#btn_circle");
	$(iconButtonElement).click(
		$.proxy(function(ev) {
			var newControls;
			this.btnObjs[this.btnObjs.CIRCLE].selected(this,newControls);
			this.btnObjs.OPERATION = this.btnObjs.CIRCLE;
			disabledLayerList(true);
			this.CurrentMode = "Drawing";
		},this) 
	);

	// 文字
	var iconButtonElement = sakuzuPalette.find("#btn_label");
	$(iconButtonElement).click(
		$.proxy(function(ev) {
			var newControls = this.btnObjs[this.btnObjs.LABEL].selected();
			this.updateDrawControls(newControls);
			this.btnObjs.OPERATION = this.btnObjs.LABEL;
			disabledLayerList(true);
			this.CurrentMode = "Drawing";
		},this) 
	);

	// 図形を編集
	var editButtonElement = sakuzuPalette.find("#btn_edit_obj")[0];
	$(editButtonElement).click(
		$.proxy(function(ev) {
			if (this.CurrentMode == "Editing"){
				$.proxy(setOperationModeControl,this)();
				this.updatePaletteButtons(true);
				disabledLayerList(false);
			}else{
				$.proxy(setEditModeControl,this)();
				this.updatePaletteButtons(false,"btn_edit_obj");
				disabledLayerList(true);
			}
		},this) 
	);

	// 図形を削除
	var deleteButtonElement = sakuzuPalette.find("#btn_delete_obj")[0];
	$(deleteButtonElement).click(
		$.proxy(function(ev) {
			// 図形を削除
			var deleted = this.getSelectedFeatures(true);
			if (deleted.length>0){
				for (var i = 0; i < deleted.length; i++) {
					this.selectCtrl.unselect(deleted[i]);
					var lastLayer =deleted[i].layer; 
					deleted[i].layer.removeFeatures(deleted[i]);
					if (lastLayer.features.length == 0) {
						this.deleteLayer(lastLayer);
					}
				}
				// 削除されたオブジェクト UNDO用に残す
				this.operationHistory.add('del', deleted);
				this.setOperationModeControl();
			}else{
				alert("図形を選択してください");
			}
		},this) 
	);
		
	// 取り消す
	var undoButtonElement = sakuzuPalette.find("#btn_sz_undo")[0];
	$(undoButtonElement).click(
		$.proxy(function(ev) {
			
			// 取り消し
			this.operationHistory.undo();
		},this) 
	);

	// やり直す
	var redoButtonElement = sakuzuPalette.find("#btn_sz_redo")[0];
	$(redoButtonElement).click(
		$.proxy(function(ev) {
			// 取り消し
			this.operationHistory.redo();
		},this) 
	);

	// クリア
	var clearButtonElement = sakuzuPalette.find("#btn_sz_clear")[0];
	$(clearButtonElement).click(
		$.proxy(function(ev) {
			if (confirm("作図した全ての図形を削除してもよろしいですか？\n※この操作は取り消せません")){
				// クリア(作図した情報のみ)
				var count = this.layers.length;
				for (var j = count-1; j >= 0; j--) {
					if (!this.layers[j].filename) {
						this.deleteLayer(this.layers[j]);
					}
				}
				this.operationHistory.removeAllStacks();
				this.setOperationModeControl();
			}
		},this) 
	);

	this.oKeyboard = new OpenLayers.Control.Keyboard({eventMethods:{
		'keydown':$.proxy(function(e){
			var deleteButtonElement = sakuzuPalette.find("#btn_delete_obj")[0];
			if (!deleteButtonElement.disabled){
				if (e.keyCode==46){
					// 図形を削除
					var deleted = this.getSelectedFeatures(true);
					if (deleted.length>0){
						for (var i = 0; i < deleted.length; i++) {
							this.selectCtrl.unselect(deleted[i]);
							var lastLayer =deleted[i].layer; 
							deleted[i].layer.removeFeatures(deleted[i]);
							if (lastLayer.features.length == 0) {
								this.deleteLayer(lastLayer);
							}
						}
						// 削除されたオブジェクト UNDO用に残す
						this.operationHistory.add('del', deleted);
						this.setOperationModeControl();
					}
				}
			}
		},this)
	}});
	this.getMapObject().addControl(this.oKeyboard);




	// 初期状態
	this.layers = [];

	//********* 関数 *************//
	function sakuzuInit() {
		// 地図オブジェクトが読み込まれた時点で呼び出します。
		var webtis = this.getWebtis();
		this.affixLayer = new Sakuzu.LayerVector("_affix_layer");
		this.affixLayer.affixStyle = {};
		this.getMapObject().addLayer(this.affixLayer);
		var OpenLayers = this.getOpenLayers();
		Sakuzu.baseProjection = new OpenLayers.Projection("EPSG:4326");
		return;
	}

	//作図パレットのボタンの活性・非活性切り替え
	function updatePaletteButtons(enable,id){
		if (enable){
			for (var i=0; i<this.paletteButtons.length; i++){
				this.paletteButtons[i].disabled=false;
				$(this.paletteButtons[i]).css("background-image","url(" + Sakuzu.IMAGE_ROOT + paletteButtonImages[i] + ".png)");
			}
			document.getElementById("sz_palette_close").src= Sakuzu.IMAGE_ROOT + "close.png";
			document.getElementById("sz_palette_close").title="作図機能を終了する";
			document.getElementById("sz_palette_close").disabled=false;
		}else{
			for (var i=0; i<this.paletteButtons.length; i++){
				if (this.paletteButtons[i].id != id) {
					this.paletteButtons[i].disabled=true;
					$(this.paletteButtons[i]).css("background-image","url(" + Sakuzu.IMAGE_ROOT + paletteButtonImages[i] + "_N.png)");
				}
			}
			
			if (id!="btn_edit_obj"){
				document.getElementById("sz_palette_close").src=Sakuzu.IMAGE_ROOT + "close_N.png";
				document.getElementById("sz_palette_close").disabled=true;
			}
		}
	}

	// 作図レイヤーのリストとその関連コントロールをdisable
	function disabledLayerList(enable){
		$("#showlayerTab *").attr("disabled",enable);
		layerModule.disableTree(enable);
		sakuzuSlider.disableSlider(enable);
	}

	//操作モードに設定
	function setOperationModeControl(){
		if (this.layers.length>0){
			var lonlat;
			var selectCtrl = new webtis.Control.SelectFeature(this.layers, {
			onUnselect : function() {
			}
			});
			var activeCtrl = new webtis.Control.MultiLayerDragFeature(this.layers, {
				onStart: $.proxy( function(feature, pixel) {
					if (!feature.layer.JSGISelection) {
						return;
					}
					lonlat=feature.geometry.getBounds().getCenterLonLat();

					//強制的に選択状態にします
					selectCtrl.unselect(feature);
					selectCtrl.clickFeature(feature);
				},this),
				onComplete: $.proxy(function(feature, pixel) {
					//強制的に選択状態にします
					selectCtrl.unselect(feature);
					selectCtrl.clickFeature(feature);
					if (lonlat != feature.geometry.getBounds().getCenterLonLat()){
						this.operationHistory.add('move', { "feature" : feature, "center" : lonlat});
					}
				},this)
			});
			this.updateDrawControls([selectCtrl,activeCtrl]);
			this.selectCtrl = selectCtrl;
		}else{
			this.updateDrawControls();
		}
		disabledLayerList(false);
		this.CurrentMode = "Operation";
	}

	//編集モードに設定
	function setEditModeControl(){
		var selectCtrl = new webtis.Control.SelectFeature(this.layers, {
			onSelect : $.proxy(function() {
				// 図形を編集
				var selectedFeatures = this.getSelectedFeatures(true);
				// 編集画面を表示
				this.showEditDialog(selectedFeatures,true);
			},this)
		});

		this.updateDrawControls([selectCtrl]);
		this.selectCtrl = selectCtrl;
		this.CurrentMode = "Editing";
	}

	
	// 作図レイヤを削除
	function deleteLayer(sakuzuLayer) {
		var newLayers = new Array();
		for (var j = 0; j < this.layers.length; j++) {
			if (this.layers[j] != sakuzuLayer) {
				newLayers.push(this.layers[j]);
			}
		}
		this.layers = newLayers;
		this.getMapObject().removeLayer(sakuzuLayer);

		/* ファイル読込みで作成されたレイヤの場合 */
		if (sakuzuLayer.filename){
			var exist=false;
			/* 同じfilenameを持つレイヤが他に無いかチェック */
			for (var i=0; i<this.layers.length; i++){
				if (sakuzuLayer.filename == this.layers[i].filename){
					exist = true;
					break;
				}
			}
			/* 無ければリストから削除 */
			if (!exist) {
				layerModule.removeNode(sakuzuLayer.filename);
			}
		}
	}

	// 作図レイヤを全て削除(読み込みファイル込み)
	function deleteAllLayers() {
		var newLayers = new Array();
		for (var j = 0; j < this.layers.length; j++) {
			this.getMapObject().removeLayer(this.layers[j]);
			if (this.layers[j].filename){
				var listElement = document.getElementById(this.layers[j].filename);
				if (listElement) listElement.parentNode.removeChild(listElement);
			}
		}
		this.layers = new Array();
	}

	// 作図レイヤを追加
	function addLayer(sakuzuLayer) {
		this.layers.push(sakuzuLayer);
		this.getMapObject().addLayer(sakuzuLayer);
	}

	// 描画用Controlを更新
	function updateDrawControls(newControls) {
		if (this.currentControls) {
			for (var i = 0; i < this.currentControls.length;i++) {
				var currentControl = this.currentControls[i];
				if (currentControl.CLASS_NAME == "OpenLayers.Control.SelectFeature" || currentControl.CLASS_NAME == "webtis.Control.SelectFeature") {
					// 選択中のオブジェクトを選択解除にする
					currentControl.unselectAll();
				}
				this.getMapObject().removeControl(currentControl);
				currentControl.deactivate();
				currentControl.destroy();
			}
			delete this.currentControls;
		}
		if (newControls) {
			for (var i = 0; i < newControls.length; i++) {
				var newControl = newControls[i];
				that.getMapObject().addControl(newControl);
				newControl.activate();
			}
			this.currentControls = newControls;
		}
	}
	
	// 選択中のFeatureを解除
	function unselectFeature(feature) {
		if (this.layers.length > 0 && this.selectCtrl.layers > 0) {
			if (feature) {
				this.selectCtrl.unselect(feature);
			} else {
				this.selectCtrl.unselectAll();
			}
		}
	}
	
	// 地図オブジェクトを取得する
	function getMapObject() {
		return that.mapEventHandler.getMapObject();
	}
	
	// WEBTISを取得する
	function getWebtis() {
		return this.mapEventHandler.getWebtis();
	}

	// OpenLayersを取得する
	function getOpenLayers() {
		return that.mapEventHandler.getOpenLayers();
	}
	
	// レイヤー名変更
	function changeLayerName(feature,newLayerName,withoutRedraw) {
		var targetLayer = feature.layer;
		targetLayer.name = newLayerName;
		return true;

		// 同じレイヤー名でかつ同じ種別のレイヤーがあるかを調べる
		var sameNameLayers = new Array();

		if (sameNameLayers.length == 0) {
			if (targetLayer.features.length == 1) {
				// 同じ名前はなくて、一件だけなので、そのまま変更処理。
				targetLayer.name = newLayerName;
				return true;
			}
		}

		return true;
	}

	// ポップアップの対象となるレイヤーのリストを返す
	function collectAllLayers() {
		var collectedLayers = that.layers;
		
		if (treeModule != null) {
			var treeLayers = treeModule.getVectorLayers();
			collectedLayers = collectedLayers.concat(treeLayers);
		}
		
//		if (extraTreeModule != null) {
//			var extraLayers = extraTreeModule.getVectorLayers();
//			collectedLayers = collectedLayers.concat(extraLayers);
//		}
		if (pluginModule != null) {
			for (var i = 0; i < pluginModule.length; i++) {
				var extraLayers = pluginModule[i].getVectorLayers();
				collectedLayers = collectedLayers.concat(extraLayers);
			}
		}
		
		if (jsonLayers) {
			collectedLayers = collectedLayers.concat(jsonLayers);
		}

		return collectedLayers;
	}

	// ポップアップを有効にする
	function enablePopupLayer(layer) {
		// 前のコントロールを無効にする
		if (this.selectPopupCtrl) {
			this.getMapObject().removeControl(this.selectPopupCtrl);
			this.selectPopupCtrl.deactivate();
			this.selectPopupCtrl.destroy();
			delete this.selectPopupCtrl;
			this.selectPopupCtrl = null;
		}

		var collectedLayers = collectAllLayers();

		if (collectedLayers.length > 0) {
			var webtis = this.getWebtis();
//			ポップアップ表示タイミング　オブジェクトオン⇒オブジェクトクリックに変更
//			this.selectPopupCtrl = new webtis.Control.SelectFeature(this.layers, { hover : true });
			this.selectPopupCtrl = new webtis.Control.SelectFeature(collectedLayers, { hover : false });
//			this.selectPopupCtrl = new webtis.Control.SelectFeature(collectedLayers[0], { hover : false });
			
			// Feature上で地図をドラッグ移動できるようにする
			this.selectPopupCtrl.handlers.feature.stopDown = false;
			
			this.getMapObject().addControl(this.selectPopupCtrl);
			this.selectPopupCtrl.activate();
			// layerに未登録の時だけ登録する。
			if (!this.popup) {
				this.popup = new Sakuzu.Popup(this.getMapObject(),$.proxy(function(_feature) {
					this.selectPopupCtrl.unselect(_feature);
				},this));
				var OpenLayers = this.getOpenLayers();
				this._popup_selected = OpenLayers.Function.bindAsEventListener(this.popup.onFeatureSelectPopup,this.popup);
				this._popup_unselected = OpenLayers.Function.bindAsEventListener(this.popup.onFeatureUnselectPopup,this.popup);
			}
			if (layer) {
				if (!(layer.events.listeners['featureselected'] && layer.events.listeners['featureselected'].length > 0)) {
					layer.events.on({
						'featureselected': this._popup_selected,
						'featureunselected': this._popup_unselected
					});
				}
			}  else {
				for (var i=0; i<collectedLayers.length; i++) {
					if (!(collectedLayers[i].events.listeners['featureselected'] && collectedLayers[i].events.listeners['featureselected'].length > 0)) {
						collectedLayers[i].events.on({
							'featureselected': this._popup_selected,
							'featureunselected': this._popup_unselected
						});
					}
				}
			}
		}
	}

	// ポップアップを解除します。
	function disablePopupLayer() {
		if (this.popup) {
			this.popup.removePopup();
		}
		// 前のコントロールを無効にする
		if (this.selectPopupCtrl) {
			this.selectPopupCtrl.unselectAll();
			this.getMapObject().removeControl(this.selectPopupCtrl);
			this.selectPopupCtrl.deactivate();
			this.selectPopupCtrl.destroy();
			delete this.selectPopupCtrl;
			this.selectPopupCtrl = null;
		}

		var collectedLayers = collectAllLayers();

		for (var i=0; i<collectedLayers.length; i++) {
			// イベントを未登録にする
			collectedLayers[i].events.un({
				'featureselected': this._popup_selected,
				'featureunselected': this._popup_unselected
			});
			// フィチャーのポップアップをクリーンアップする
			for (var j=0; j< collectedLayers[i].features.length; j++) {
				if (collectedLayers[i].features[j].popup) {
					this.getMapObject().removePopup(collectedLayers[i].features[j].popup);
					collectedLayers[i].features[j].popup = null;
				}
			}
		}
	}

	// affixStyleをOpenLayersのスタイルに変換
	function convertToOLStyle(affixStyle) {	
		var styleType = affixStyle.type.toLowerCase();
		var webtis = this.getWebtis();
		var OpenLayers = this.getOpenLayers();
		var style = null;
		if (styleType == "symbol") {
			// シンボル
			if (affixStyle['font']) {
				var textSize = affixStyle['font'].size;
				var textParam = textSize.split(",");
				var fontSize = textParam[0];
				var dynamic = textParam[1]=="dynamic";
				var fontFamily = affixStyle['font'].name;
			}
			else {
				var textSize = "12px";
				var fontSize = "12px";
				var dynamic = true;
				var fontFamily = 'ＭＳ ゴシック';
			}

			var symbol = affixStyle['symbol'];
			var widthParam = symbol["size"].split(",");
			var iconSize = parseInt(widthParam[0], 10);

			var opacity = 0;
			var labelXoffset = 0;
			var labelSelect = true;

			opacity = iconlabel ? 1 : 0.00001;
			labelXoffset = iconSize/2;
/*
			if(iconlabel){
				opacity = 1;
				labelXoffset = iconSize/2;
			} else{
				opacity = 0;
				labelXoffset = 0;
			}

			if (iconlabel && affixStyle["symbol"].uri!="") labelSelect = false;
*/
			var defaultStyle = new OpenLayers.Style({
				'fillOpacity' : 1,
				'fill' : true,
				'externalGraphic' : affixStyle["symbol"].uri,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': labelXoffset,
				'fontColor' : Sakuzu.deciColorToCSSHex(affixStyle["rgb"]),
				'fontOpacity' : opacity,
				'fontFamily' : fontFamily, // affixStyle['font'].name,
				'fontSize' : fontSize,
				'labelAlign' : "lm",
				'labelSelect' : labelSelect,
				'JSGIDynamicSize' : dynamic
			});
			var selectStyle = new OpenLayers.Style({
				'fillOpacity' : 1,
				'fill' : true,
				'externalGraphic' : affixStyle["symbol"].uri,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': labelXoffset,
				'fontColor' : Sakuzu.deciColorToCSSHex(affixStyle["rgb"]),
				'fontOpacity' : opacity,
				'fontFamily' : fontFamily, // affixStyle['font'].name,
				'fontSize' : fontSize,
				'labelAlign' : "lm",
				'labelSelect' : labelSelect
			});
			style = new OpenLayers.StyleMap({"default":defaultStyle, "select":selectStyle});
/*
			var symbol = affixStyle['symbol'];
			var widthParam = symbol["size"].split(",");
			var strokeWidth = widthParam[0];
			var dynamic = widthParam[1]=="dynamic";

			style = new OpenLayers.Style({
				'externalGraphic' : affixStyle.symbol.uri,
				'graphicWidth' : "${getSize}",
				'graphicHeight' : "${getSize}",
				'graphicXOffset' : "${getOffset}",
				'graphicYOffset' : "${getOffset}",
				'graphicOpacity' : affixStyle.transparent ? 1 : 1,
				'JSGIDynamicSize' : dynamic
			}, {
				context : {
					getSize : function(feature) {
						if (dynamic) {
							return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, strokeWidth));
						} else {
							return strokeWidth;
						}
					},
					getOffset : function(feature) {
						if (dynamic) {
							var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, strokeWidth));
							return -(Math.round(size/2));
						} else {
							return -(Math.round(strokeWidth/2));
						}
					}
				}
			});
*/
		} else if (styleType == "string") {
			// 線
			var widthParam = affixStyle["width"].split(",");
			var strokeWidth = widthParam[0];
			var dynamic = widthParam[1]=="dynamic";
			style = new OpenLayers.Style({
				'strokeColor' : Sakuzu.deciColorToCSSHex(affixStyle['rgb']),
				'strokeWidth' : '${getSize}',
				'strokeDashstyle' : "solid",
				'strokeOpacity' : affixStyle['transparent']=="ON" ? 0.5 : 1,
				'strokeLinecap' : "square",
				'JSGIDynamicSize' : dynamic
			},
			{
				context : {
					getSize : function(feature) {
						if (dynamic) {
							var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, strokeWidth));
							return (size < 1) ? 1 : size;
						} else {
							return strokeWidth;
						}
					}
				}
			});
		} else if (styleType == "polygon") {
			// ポリゴン
			var widthParam = affixStyle["width"].split(",");
			var strokeWidth = widthParam[0];
			var dynamic = widthParam[1]=="dynamic";

			var fillOpacity = affixStyle['fillOpacity'] == 0 ? 0.00001 : affixStyle['fillOpacity'];

			var defaultStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor' : Sakuzu.deciColorToCSSHex(affixStyle['rgb']),
				'strokeWidth' : '${getSize}',
				'strokeDashstyle' : "solid",
				'fillOpacity' : affixStyle['transparent']=="ON" ? fillOpacity : 1,
				'strokeOpacity' : affixStyle['transparent']=="ON" ? 0.5 : 1,
				'fillColor' : Sakuzu.deciColorToCSSHex(affixStyle['hrgb']),
				'brush' : affixStyle['paint'],
				'fill' : true,
				'strokeLinecap' : "square",
				'JSGIDynamicSize' : dynamic
			},
			{
				context : {
					getSize : function(feature) {
						if (dynamic) {
							var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, strokeWidth));
							return (size < 1) ? 1 : size;
						} else {
							return strokeWidth;
						}
					}
				}
			});
			// 選択した時のスタイル　ポリゴンはここで設定
			var selectStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor' : "#0000FF",
				'strokeWidth' : "${getSize}",
				'strokeDashstyle' : "solid",
				'strokeOpacity' : 0.7,
				'fillOpacity' : 0.7,
				'fillColor' : "#0000FF",
				'brush' : "solid",
				'fill' : true
			},
			{
				context : {
					getSize : function(feature) {
						if (dynamic) {
							var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, strokeWidth));
							return (size < 1) ? 1 : size;
						} else {
							return strokeWidth;
						}
					}
				}
			});
			style = new OpenLayers.StyleMap({"default":defaultStyle, "select":selectStyle});
		} else if (styleType == "circle") {
			// 円
			var widthParam = affixStyle["width"].split(",");
			var strokeWidth = widthParam[0];
			var dynamic = widthParam[1]=="dynamic";

			var fillOpacity = affixStyle['fillOpacity'] == 0 ? 0.00001 : affixStyle['fillOpacity'];

			var defaultStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor' : Sakuzu.deciColorToCSSHex(affixStyle['rgb']),
				'strokeWidth' : strokeWidth,
				'strokeDashstyle' : "solid",
				'strokeOpacity' : affixStyle['transparent']=="ON" ? 0.5 : 1,
//				'fillOpacity' : affixStyle['transparent']=="ON" ? 0.5 : 1,
				'fillOpacity' : affixStyle['transparent']=="ON" ? fillOpacity : 1,
				'fillColor' : Sakuzu.deciColorToCSSHex(affixStyle['hrgb']),
				'brush' : affixStyle['paint'],
				'fill' : true,
				'strokeLinecap' : "square",
				'pointRadius' : "${getRadius}",
				'JSGIDynamicSize' : dynamic
			},
			{
				context : {
					getSize : function(feature) {
						if (dynamic) {
							var size = Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, strokeWidth));
							return (size < 1) ? 1 : size;
						} else {
							var calcGeom = feature.geometry.clone();
							calcGeom = calcGeom.transform(feature.layer.map.getProjectionObject(),Sakuzu.baseProjection);
							var lonLat = new OpenLayers.LonLat(calcGeom.x,calcGeom.y);
							var horiLatLon = OpenLayers.Util.destinationVincenty(lonLat,90,feature.pointRadius);
							var pix = feature.layer.map.getPixelFromLonLat(lonLat.transform(Sakuzu.baseProjection,feature.layer.map.getProjectionObject()));
							var horiPix = feature.layer.map.getPixelFromLonLat(horiLatLon.transform(Sakuzu.baseProjection,feature.layer.map.getProjectionObject()));
							var radiusPixel = Math.round(horiPix.x - pix.x);
							if (radiusPixel*2 > strokeWidth) {
								return strokeWidth;
							} else {
								return strokeWidth - (strokeWidth - radiusPixel*2);
							}
						}
					},
					getRadius : function(feature) {
						var calcGeom = feature.geometry.clone();
						calcGeom = calcGeom.transform(feature.layer.map.getProjectionObject(),Sakuzu.baseProjection);
						var lonLat = new OpenLayers.LonLat(calcGeom.x,calcGeom.y);
						var horiLatLon = OpenLayers.Util.destinationVincenty(lonLat,90,feature.pointRadius);
						var pix = feature.layer.map.getPixelFromLonLat(lonLat.transform(Sakuzu.baseProjection,feature.layer.map.getProjectionObject()));
						var horiPix = feature.layer.map.getPixelFromLonLat(horiLatLon.transform(Sakuzu.baseProjection,feature.layer.map.getProjectionObject()));
						return Math.round(horiPix.x - pix.x);
						// メルカトルに関係なくやるのならこちら
						// return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.pointRadius));
					}
				}
			});
			// 選択した時のスタイル　ポリゴンはここで設定
			var selectStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor' : "#0000FF",
				'strokeWidth' : strokeWidth,
				'strokeDashstyle' : "solid",
				'strokeOpacity' : 0.7,
				'fillOpacity' : 0.7,
				'fillColor' : "#0000FF",
				'brush' : "solid",
				'pointRadius' : "${getRadius}",
				'fill' : true
			},
			{
				context : {
					getRadius : function(feature) {
						var calcGeom = feature.geometry.clone();
						calcGeom = calcGeom.transform(feature.layer.map.getProjectionObject(),Sakuzu.baseProjection);
						var lonLat = new OpenLayers.LonLat(calcGeom.x,calcGeom.y);
						var horiLatLon = OpenLayers.Util.destinationVincenty(lonLat,90,feature.pointRadius);
						var pix = feature.layer.map.getPixelFromLonLat(lonLat.transform(Sakuzu.baseProjection,feature.layer.map.getProjectionObject()));
						var horiPix = feature.layer.map.getPixelFromLonLat(horiLatLon.transform(Sakuzu.baseProjection,feature.layer.map.getProjectionObject()));
						return Math.round(horiPix.x - pix.x);
						// メルカトルに関係なくやるのならこちら
						// return Math.round(webtis.Format.Parse.metersToPixel(feature.layer.map, feature.pointRadius));
					}
				}
			
			});
			style = new OpenLayers.StyleMap({"default":defaultStyle, "select":selectStyle});
		} else if (styleType == "text") {
			// 文字
			var textSize = affixStyle['font'].size;
			var textParam = textSize.split(",");
			var fontSize = textParam[0];
			var dynamic = textParam[1]=="dynamic";

			var symbol = affixStyle['symbol'];
			var widthParam = symbol["size"].split(",");
			var iconSize = parseInt(widthParam[0], 10);

			var opacity = 0;
			var labelXoffset = 0;
			var labelSelect = true;
			
			opacity = 1;
			labelXoffset = iconSize/2;
			
/*
			if(iconlabel){
				opacity = 1;
				labelXoffset = iconSize/2;
			} else{
				opacity = 0;
				labelXoffset = 0;
			}
			if (iconlabel && affixStyle["symbol"].uri!="") labelSelect = false;
*/
			var defaultStyle = new OpenLayers.Style({
				'fillOpacity' : opacity,
				'fill' : true,
				'externalGraphic' : affixStyle["symbol"].uri,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': labelXoffset,
				'fontColor' : Sakuzu.deciColorToCSSHex(affixStyle["rgb"]),
				'fontOpacity' : 1,
				'fontFamily' : affixStyle['font'].name,
				'fontSize' : fontSize,
				'labelAlign' : "lm",
				'labelSelect' : labelSelect,
				'JSGIDynamicSize' : dynamic
			});
			var selectStyle = new OpenLayers.Style({
				'fillOpacity' : opacity,
				'fill' : true,
				'externalGraphic' : affixStyle["symbol"].uri,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': labelXoffset,
				'fontColor' : Sakuzu.deciColorToCSSHex(affixStyle["rgb"]),
				'fontOpacity' : 1,
				'fontFamily' : affixStyle['font'].name,
				'fontSize' : fontSize,
				'labelAlign' : "lm",
				'labelSelect' : labelSelect
			});
			style = new OpenLayers.StyleMap({"default":defaultStyle, "select":selectStyle});
		}
		return style;
	}	

	// 選択中のオブジェクトを取得
	function getSelectedFeatures() {
		var selected = [];
		for (var oi=0; oi<this.layers.length; oi++) {
			var layer = this.layers[oi];
			if (!layer.JSGISelection) {
				continue;
			}

			for (var j=0; j < layer.selectedFeatures.length; j++) {
				var feature = layer.selectedFeatures[j];
				if (feature.popup) {
					this.getMapObject().removePopup(feature.popup);
					feature.popup.destroy();
					feature.popup = null;
				}
				feature._layer = layer;
				selected.push(feature);
			}
		}
		return selected;
	}

	/** レイヤ名変更用パネル **/
	function createLayerTitlePanel(feature) {
		var dialogStr = "<div style='margin:5px; display:none'>";
		dialogStr += "<table><tr class=\"sz_title\"><td>レイヤ名</td><td><input type=\"text\" style=\"width:175px;\" id=\"sz_layer_name_text\"></td></tr></table>";
		dialogStr += "</div>";
		
		var d = $(dialogStr);
		if (feature) {
			var layerName = feature.layer.name;
			if (layerName.indexOf("_affix_.")==0) {
				layerName = layerName.substring(8);
			}

			d.find("#sz_layer_name_text")[0].value = layerName;
		}
		return d;
	}


	/** 編集用ダイアログを表示 **/
	function showEditDialog(selectedFeatures, edit) {
		if (selectedFeatures.length == 0) {
			return;
		}

		var styleType = null;
		// ダイアログを作成
		var dialogStr = "<div id=\"sz_edit_dialog\"></div>";
		var editDialog = $(dialogStr);
		editDialog.addClass("ui-widget-content ui-corner-all");

		$("#panel").empty();

		if (selectedFeatures.length == 1) {
			// 1つだけの単一の場合は、全部編集可
			var feature = selectedFeatures[0];

			styleType = feature.layer.styleType;
			styleType = styleType.toLowerCase();

			// レイヤタイトルパネル
			if (edit) var layerTitlePanel = this.createLayerTitlePanel(feature);

			// 属性値設定画面
			//var attributePanel = this.createAttributePanel(feature);
			editDialog.feature = feature;

			// スタイル設定画面
			var currentObj = null;
			var currentPanel = null;
			var panelTitle = "";
			if (styleType == "symbol") {
				currentObj = this.btnObjs[this.btnObjs.POINT];
				if (edit){
					panelTitle = "編集(ポイント)"
				}else{
					panelTitle = "新規ポイント"
				}
			} else if (styleType == "string") {
				currentObj = this.btnObjs[this.btnObjs.LINE];
				if (edit){
					panelTitle = "編集(ライン)"
				}else{
					panelTitle = "新規ライン"
				}
			} else if (styleType == "polygon") {
				currentObj = this.btnObjs[this.btnObjs.POLYGON];
				if (edit){
					panelTitle = "編集(ポリゴン)"
				}else{
					panelTitle = "新規ポリゴン"
				}
			} else if (styleType == "circle") {
				currentObj = this.btnObjs[this.btnObjs.CIRCLE];
				if (edit){
					panelTitle = "編集(円)"
				}else{
					panelTitle = "新規円"
				}
			} else if (styleType == "text") {
				currentObj = this.btnObjs[this.btnObjs.LABEL];
				if (edit){
					panelTitle = "編集(テキスト)"
				}else{
					panelTitle = "新規テキスト"
				}
			}

			var attributePanel;
			if (currentObj != null) {
				currentPanel = currentObj.createStylePanel(feature.layer.affixStyle);
				currentObj.setDrawStyle(feature.layer.affixStyle,currentPanel);
				editDialog.append(currentPanel);
				attributePanel = currentObj.createAttributePanel(feature);
			}
			if (edit) editDialog.append(layerTitlePanel);
			editDialog.append(attributePanel);

			var controlPanel = $("<div style=\"margin:5px;text-align:center;width:100%;\"><button id=\"sz_edit_applybutton\">決定</button><button id=\"sz_edit_closebutton\">キャンセル</button></div>");
			editDialog.append(controlPanel);
			// 決定ボタンの処理
			controlPanel.find("#sz_edit_applybutton").click(
					$.proxy(function(ev) {
						if (currentObj) {
							var attributes = currentObj.retrieveAttributes(attributePanel);
							if (styleType == "text") {
								if (jQuery.trim(attributes.name).length == 0) {
									alert("文字列が必要です。");
									return;
								}
							}
						}

						if (edit){
							var newLayerName = jQuery.trim(layerTitlePanel.find("#sz_layer_name_text")[0].value);
							if (newLayerName.length == 0) {
								alert("レイヤ名を指定して下さい。");
								return;
							}
							// 取り消しように保存
							var targetFeatures = jQuery.extend([],this.editDialog.feature.layer.features);
							this.operationHistory.add('edit', { "feature":this.editDialog.feature,"features":targetFeatures, "style" : this.editDialog.feature.style,"affixStyle" : this.editDialog.feature.layer.affixStyle, "attributes" : this.editDialog.feature.attributes});

							// レイヤ名の変更
							if (newLayerName != this.editDialog.feature.layer.name.substring(8)) {
								// レイヤ名の変更処理が必要
								if (!this.changeLayerName(this.editDialog.feature,"_affix_."+newLayerName)) {
									// エラー
									if (window.console) {
										window.console.log("fail to changeLayerName");
									}
									return;
								}
								this.operationHistory.removeAllStacks();
							} else {
							}
						}else{
							this.operationHistory.add('new', { "feature" : this.editDialog.feature});
						}

						// レイヤのスタイルを変更
						if (currentObj) {
							var attributes = currentObj.retrieveAttributes(attributePanel);
							if (styleType == "text" || styleType == "symbol") {
								this.editDialog.feature.geometry.label = jQuery.trim(attributes.name);
							}
							// スタイルを取得
							var affixStyle = currentObj.retrieveDrawStyle(currentPanel);
							this.editDialog.feature.layer.affixStyle = affixStyle;
							// this.editDialog.feature.affixStyle = affixStyle;
							this.editDialog.feature.attributes = attributes;
							var style = this.convertToOLStyle(affixStyle);
							this.editDialog.feature.style = style;
							if (this.editDialog.feature.layer.styleMap){
								this.editDialog.feature.layer.styleMap = style;
							}
							// 同じレイヤのfeatureのスタイルは、すべて変わります。
							/*for (var i = 0; i < this.editDialog.feature.layer.features.length; i++) {
								// スタイルを取得して、featureのスタイルに設定
								this.editDialog.feature.layer.features[i].style = style;
							}*/

							this.editDialog.feature.layer.redraw();
						}
						editDialog.dialog("destroy");
						$("#panel").empty();
						$("#sakuzuPanel").hide();
						this.updatePaletteButtons(true);
						if (!edit) {
							this.setOperationModeControl();
						}else{
							this.updatePaletteButtons(false,"btn_edit_obj");
						}
						this.selectCtrl.unselect(feature);
						this.mapKeyboardControl.activate();
						if (!edit) disabledLayerList(false);
						
						if(!edit) {
							currentObj.prevAffixStyle = affixStyle;
						}
					
					},this)
				);
			// キャンセルボタンの処理
			controlPanel.find("#sz_edit_closebutton").click(
				$.proxy(function(ev) {
					editDialog.dialog("destroy");
					$("#sz_edit_dialog").remove();

					if (!edit){
						if (this.editDialog.feature.layer.features.length == 1) {
							this.deleteLayer(this.editDialog.feature.layer);
						}else{
							this.editDialog.feature.layer.removeFeatures(this.editDialog.feature);
						}
					}

					$("#panel").empty();
					$("#sakuzuPanel").hide();
					this.updatePaletteButtons(true);
					if (!edit) {
						this.setOperationModeControl();
					}else{
						this.updatePaletteButtons(false,"btn_edit_obj");
					}
					if (edit) this.selectCtrl.unselect(feature);
					this.mapKeyboardControl.activate();
					if (!edit) disabledLayerList(false);
				},this)
			);
		}

		this.editDialog = editDialog;
		this.subPanel.append(editDialog);
		if (!edit) this.updateDrawControls();

		//上部「×」ボタンクリックの処理
		document.getElementById("sz_panel_close").onclick= ($.proxy(function(ev){
			editDialog.dialog("destroy");
			$("#sz_edit_dialog").remove();

			if (!edit){
				if (this.editDialog.feature.layer.features.length == 1) {
					this.deleteLayer(this.editDialog.feature.layer);
				}else{
					this.editDialog.feature.layer.removeFeatures(this.editDialog.feature);
				}
			}

			$("#panel").empty();
			$("#sakuzuPanel").hide();
			this.updatePaletteButtons(true);
			if (!edit) {
				this.setOperationModeControl();
			}else{
				this.updatePaletteButtons(false,"btn_edit_obj");
			}
			this.selectCtrl.unselect(feature);
			this.mapKeyboardControl.activate();
			if (!edit) disabledLayerList(false);
		},this));


		$("#panel_title").html(panelTitle);
		$("#sakuzuPanel").show();
		if (edit){
			$("#panel-header").css("background-color","#f6a828");
			$("#panel_title").css("color", "white");
		}else{
			$("#panel-header").css("background-color","#cccccc");
			$("#panel_title").css("color", "black");
		}
		this.updatePaletteButtons(false,"");
		this.mapKeyboardControl.deactivate();
	}

	/* URL発行、HTML保存処理phpに渡す地図情報を取得 */
	function createParameter(nodes) {
		var webtis = this.getWebtis();

		// メタデータ(表示地図)の取得
		var mapMeta = webtisMap.getCurrentMetaData();
		var did;
		if (mapMeta) {
			did = mapMeta.dataId;
		}

		// 中心経緯度の取得
		var lonlat = this.getMapObject().getCenter().clone().transform(this.getMapObject().getProjectionObject(),Sakuzu.baseProjection);
		lon = lonlat.lon;
		lat = lonlat.lat;

		// ズームレベルの取得
		var zoomLevel = this.getMapObject().getZoom();		//世界地図用

		// 作図情報の取得
		if (!nodes) nodes = Sakuzu.makeJSONNodes(this.layers, Sakuzu.baseProjection);
		var json = Sakuzu.makeJSONNodesToString(nodes);

		var parameter = {
				did : did,
				lon : lon,
				lat : lat,
				zoomLevel : zoomLevel,
				json:json
		};
		return parameter;
	}
	
	/* 地図を共有（外部呼出し用）*/
	function shareMap() {
		
		// 印刷メニューを非表示に
		printsizeselectclose();
		
		// 作図ウィンドウを非表示に
		closeSakuzu();
		
		// ダイアログを作成
		var panelTitle = "地図を共有"
		var urlPanel = "<div id=\"sz_edit_dialog\">";
		urlPanel += "<div style=\"position:relative;top:-10px;margin-top:15px; margin-left:5px; margin-right:5px; margin-bottom:18px;\">";
		urlPanel += "<input type=\"button\" name=\"url\" value=\"地図をインターネットで共有\" id=\"shareUrl\"><br>";
		urlPanel += "<input type=\"button\" name=\"html\" value=\"地図をHTMLファイルで共有\" id=\"shareHtml\">";
		urlPanel += "</div>";
		var shareDialog = $(urlPanel);
		shareDialog.addClass("ui-widget-content ui-corner-all");
		
		this.shareDialog = shareDialog;
		this.subPanel.empty();
		this.subPanel.append(shareDialog);
		
		//「地図をインターネットで共有」ボタン
		$("#shareUrl").click($.proxy(function(){

			// 作図情報の取得
			var nodes = Sakuzu.makeJSONNodes(this.layers, Sakuzu.baseProjection);
			
			var cnt = 0;
			for (var i in nodes) { if (nodes[i].layer) cnt += nodes[i].layer.length; }

     		var mapinfo = this.createParameter(nodes);

			if (cnt > 0) {
				// 作図情報ワーニング
				if (!window.confirm('作図情報は、30日間国土地理院のサーバーに保管され、取得したURLをご存知の方はどなたでもアクセス可能になります。\n※なお、読込んだKMLファイルを含む作図情報が大容量の場合等、システムからの警告なしに上記保存に失敗するケースがございます事を予めご了承ください。（詳細調査中）')) {
					return false;
				}

				// 作図情報ファイル名を作成 - ランダムなファイル名を作成
				var n = 62;
				var RandomString = '';
				var BaseString ='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
				//文字列生成  
				for(var i=0; i<8; i++) {
					RandomString += BaseString.charAt( Math.floor( Math.random() * n));
				}
				var filename = "drawfile_" + RandomString;

				// 作図情報ファイルを作成(サーバにて実行)
				saveForm.attr("action",SAVEURL);
				saveForm.find("#sz_url_content").val(mapinfo.json);
				saveForm.find("#sz_url_savefile").val(filename);
				saveForm.find("#sz_url_mode").val("url");
				saveForm.submit();
			}
			
			//現在表示地図のhttp表示
			var lat = String(Math.floor(mapinfo.lat * 1000000) / 1000000);
			var lon = String(Math.floor(mapinfo.lon * 1000000) / 1000000);
		    var url = getURL() + "?lat=" + lat + "&lon=" + lon + "&z=" + mapinfo.zoomLevel + "&did=" + mapinfo.did;
		    if (filename) url += ("&fid=" + filename);
			var ret = getSelectedLayerString(1);
			if (ret){
				url = url + ret.layerString;
			}
/*
		    var treeparam = treeModule.getSelectedLayerString();
			if (treeparam) url = url + "&" + treeparam;
*/
			// 地図情報の取得
			var parameter = $.proxy(that.createParameter,that)();

			// HTML保存用データを送る
		    window.sendArgument = url;
		    window.sentMapParam = parameter;
		    
		    window.open("httplink.html","httplink","width=500,height=360,menubar=no,toolbar=no,scrollbar=no");
		    
    		// ダイアログ閉じる
			this.subPanel.empty();
			$("#sakuzuPanel").hide();

		}, this));

		//「地図をHTMLファイルで共有」ボタン
		$("#shareHtml").click($.proxy(function(){
			this.htmlIfrSave();
			
			// ダイアログ閉じる
			this.subPanel.empty();
			$("#sakuzuPanel").hide();

		}, this));
		
		// パネルを表示
		$("#panel_title").html(panelTitle);
		$("#sakuzuPanel").show();
		$("#panel-header").css("background-color","#cccccc");
		$("#panel_title").css("color", "black");
		
		document.getElementById("sz_panel_close").onclick= ($.proxy(function(ev){
			this.subPanel.empty();
			$("#sakuzuPanel").hide();
		},this));
	}

	/* HTML保存（外部呼出し用・iFrame使用）*/
	function htmlIfrSave() {
		// 作図情報の取得
		var nodes = Sakuzu.makeJSONNodes(this.layers, Sakuzu.baseProjection);
		var cnt = 0;
		for (var i in nodes) { if (nodes[i].layer) cnt += nodes[i].layer.length; }
		
		if (cnt > 0) {
			var ret = confirm("作図情報を含むHTMLファイルを作成します。\n" +
							  "作図情報は国土地理院のサーバにいったん転送されて処理されますが、国土地理院のサーバには保存しません。");
                      
            if (!ret) {
            	return;
            }
		}

		var json = Sakuzu.makeJSONNodesToString(nodes);
		var gejson = convertGeoJSON(json)

		var parameter = {};

		try {
			// 地図情報の取得
			mapinfo = $.proxy(that.createParameter,that)();
			//現在の時刻取得
			var current = Sakuzu.getCurrent();

			// ファイルに地図情報を設定して、ダウンロード
			savehtml.attr("action","http://portal.cyberjapan.jp/site/mapuse4/save/ifrsave_html.php");
			
			var lat = String(Math.floor(mapinfo.lat * 1000000) / 1000000);
			var lon = String(Math.floor(mapinfo.lon * 1000000) / 1000000);
			var url = getURL() + "?lat=" + lat + "&lon=" + lon + "&z=" + mapinfo.zoomLevel + "&did=" + mapinfo.did + "&rvg=1&fsc=1&skz=0";
			if (centercross) url += ("&crs=1");	// 中心位置の十字線
			var ret = getSelectedLayerString(1);
			if (ret){
				url = url + ret.layerString;
			}
/*		    
		    var treeparam = treeModule.getSelectedLayerString();
			if (treeparam) url = url + "&" + treeparam;
*/
			savehtml.find("#json").val(gejson);
			savehtml.find("#deffile").val("gsi" + current + ".html");
			savehtml.find("#mapurl").val(url);
			savehtml.submit();
		}
		catch (e) {
			alert("html保存中に例外が発生しました。");
		}
		
	}

	/* URL保存（外部呼出し用）*/
	function urlSave(isURL) {

		// 作図情報の取得
		var nodes = Sakuzu.makeJSONNodes(this.layers, Sakuzu.baseProjection);
		
		var cnt = 0;
		for (var i in nodes) { if (nodes[i].layer) cnt += nodes[i].layer.length; }
		
		if (cnt > 0) {
			var ret = confirm("作図情報を含むURLは、発行後30日間、そのURLをご存じの方にはどなたにもアクセス可能となります。\n" +
                      "作図情報は、国土地理院のサーバに保存されます。よろしいですか。\n\n" +
                      "尚、読み込んだKMLファイルを含む作図情報が大容量の場合等、システムからの警告なしに上記保存に失敗するケースがございます事を予めご了承下さい。\n" +
                      "（詳細調査中）");
                      
            if (!ret) {
            	return;
            }
		}
		           
     	var mapinfo = this.createParameter(nodes);

		if (cnt > 0) {
			// 作図情報ファイル名を作成 - ランダムなファイル名を作成
			var n = 62;
			var RandomString = '';
			var BaseString ='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
			//文字列生成  
			for(var i=0; i<8; i++) {
				RandomString += BaseString.charAt( Math.floor( Math.random() * n));
			}
			var filename = "drawfile_" + RandomString;

			// 作図情報ファイルを作成(サーバにて実行)
			saveForm.attr("action",SAVEURL);
			saveForm.find("#sz_url_content").val(mapinfo.json);
			saveForm.find("#sz_url_savefile").val(filename);
			saveForm.find("#sz_url_mode").val("url");
			saveForm.submit();
		}

	    //現在表示地図のhttp表示
		var lat = String(Math.floor(mapinfo.lat * 1000000) / 1000000);
		var lon = String(Math.floor(mapinfo.lon * 1000000) / 1000000);
		var url = getURL() + "?lat=" + lat + "&lon=" + lon + "&z=" + mapinfo.zoomLevel + "&did=" + mapinfo.did;
//	    var url = "http://portal.cyberjapan.jp/site/mapuse4/index.html?lat=" + lat + "&lon=" + lon + "&z=" + mapinfo.zoomLevel + "&did=" + mapinfo.did;
	    if (filename) url += ("&fid=" + filename);
	    if (centercross) url += ("&crs=1");	// 中心位置の十字線
	    var activeTab = $('#infoTabs').tabs("option", "selected");
	    if (activeTab != 0) {
	    	url = url + "&tab=" + (activeTab + 1);
	    }
	    var ret = getSelectedLayerString(1);
		if (ret){
			url = url + ret.layerString;
		}
/*
	    var treeparam = treeModule.getSelectedLayerString();
		if (treeparam) url = url + "&" + treeparam;
*/
	    window.sendArgument = url;
	    window.hideURL = !isURL;
	    window.hideIFRAME = isURL;
	    var delimiter = "|";
	    var windowParam = url + delimiter + hideURL + delimiter + hideIFRAME;
	    window.open("http://portal.cyberjapan.jp/site/mapuse4/httplink.html?httplinkparam=" + windowParam,"httplink","width=480,height=200,menubar=no,toolbar=no,scrollbar=no");

	}
	
	// アイコンにラベルを表示する/非表示にする
	function changeIconlabel(value) {
		iconlabel = value;
		
		changeIconlabelLayers(value, this.layers);
		
		if (jsonLayers) {
			changeIconlabelLayers(value, jsonLayers);
		}
		
		if (pluginModule) {
			for (var i = 0; i < pluginModule.length; i++) {
				var extraLayers = pluginModule[i].getVectorLayers();
				changeIconlabelLayers(value, extraLayers);
			}
		}
/*
		if (iconlabel){
			//アイコンとラベルを両方表示
			for (var i=0; i<this.layers.length; i++) {
				if (this.layers[i].styleType == 'symbol') {
					var xsize = this.layers[i].styleMap.styles['default'].defaultStyle['graphicWidth'];

					// ラベルを見えるように設定
					this.layers[i].styleMap.styles['default'].defaultStyle['fontOpacity'] = 1;
					this.layers[i].styleMap.styles['select'].defaultStyle['fontOpacity'] = 1;

					this.layers[i].redraw();
				}
			}
		}
		else{
			//アイコンのみ表示
			for (var i=0; i<this.layers.length; i++) {
				if (this.layers[i].styleType == 'symbol') {

					// ラベルを見えないように設定
					this.layers[i].styleMap.styles['default'].defaultStyle['fontOpacity'] = 0.00001;
					this.layers[i].styleMap.styles['select'].defaultStyle['fontOpacity'] = 0.00001;
					
					this.layers[i].redraw();
				}
			}
		}
*/
	}
	
	function changeIconlabelLayers(value, layers) {
		
		var opacity = value ? 1 : 0.00001;
		
		for (var i=0; i < layers.length; i++) {
		
			switch (layers[i].styleType) {
			case 'symbol':

				// ラベルを見えるように設定
				layers[i].styleMap.styles['default'].defaultStyle['fontOpacity'] = opacity;
				layers[i].styleMap.styles['select'].defaultStyle['fontOpacity'] = opacity;

				layers[i].redraw();
				break;
				
			case 'librarykml':
				for (var j = 0; j < layers[i].features.length; j++) {
					layers[i].features[j].style.fontOpacity = opacity;
				}

				layers[i].redraw();
				break;
			}
		}
	}
	
	function getURL() {
		var url = location.href;
		if (url.indexOf("?") >= 0) {
			url = url.substring(0, url.indexOf("?"));
		}
		if (url.indexOf("#") >= 0) {
			url = url.substring(0, url.indexOf("#"));
		}
		return url;
	}

	return this;
};
})(jQuery);

/** OpenLayersのクラスの簡易版 **/
Sakuzu.Class = function() {
    var Class = function() {
        if (arguments) {
            this.initialize.apply(this, arguments);
        }
    };
    var extended = {};
    var parent, initialize, Type;
    for (var i=0, len=arguments.length; i<len; ++i) {
        Type = arguments[i];
        if(typeof Type == "function") {
            if(i == 0 && len > 1) {
                initialize = Type.prototype.initialize;
                Type.prototype.initialize = function() {};
                extended = new Type();
                if(initialize === undefined) {
                    delete Type.prototype.initialize;
                } else {
                    Type.prototype.initialize = initialize;
                }
            }
            parent = Type.prototype;
        } else {
            parent = Type;
        }
        Sakuzu.extend(extended, parent);
    }
    Class.prototype = extended;
    return Class;
};

Sakuzu.extend = function(destination, source) {
    destination = destination || {};
    if (source) {
        for (var property in source) {
            var value = source[property];
            if(value !== undefined) {
                destination[property] = value;
            }
        }
        var sourceIsEvt = typeof window.Event == "function" && source instanceof window.Event;

        if(!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty('toString')) {
            destination.toString = source.toString;
        }
    }
    return destination;
};


/**************************/
/* 抽象パネル                */
/**************************/
Sakuzu.AbstractPanel = Sakuzu.Class({
	initialize: function(sakuzu,tabPanel) {
		this.sakuzu = sakuzu;
		this.stylePanel = this.createStylePanel();
		tabPanel.append(this.stylePanel);
	},
	/** 選択された時に呼び出される。**/
	selected : function() {
	},
	// スタイルパネルの下に追加で表示するパネル
	createAdditionalPanel : function() {
		return null;
	},
	// スタイルパネル
	createStylePanel : function() {
	},
	/** 属性編集用パネル **/
	createAttributePanel : function(feature) {
		var attributePanel = $("\
						<div style=\"border:1px solid gray;padding:2px;margin-top:15px;margin-left:5px; margin-right:5px;\">\
							<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\" id=\"sz_popupattr_title_lbael\">名称</div>\
							<div style=\"position:relative;left:4px;top:-4px;\"><input type=\"text\" id=\"sz_popupattr_title\" style=\"width:250px;margin-right:10px;\">\
						    <span id=\"ghost_text\" style=\"top:4px; left:4px;\">（例：A図書館）</span></div>\
						</div>\
						<div style=\"border:1px solid gray;padding:2px;margin-top:15px;margin-left:5px; margin-right:5px;\">\
							<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\">情報</div><div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:12px;\">（<span id=\"desc_table\">表</span>｜<span id=\"desc_notable\">自由文</span>）</div>\
						</div>");

/***
		var attributePanel = $("<div style=\"border:1px solid gray;padding:2px;margin-top:15px;margin-left:5px; margin-right:5px;\">\
						<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\">情報（<span id=\"desc_table\">表式</span>｜<span id=\"desc_notable\">表なし</span>）</div>\
						<div style=\"position:relative;top:-10px;\">\
						<table>\
							<tr class=\"sz_title\">\
								<td id=\"sz_popupattr_title_lbael\" >\タイトル</td>\
								<td>\
									&nbsp;<span style=\"position:relative\"><input type=\"text\" id=\"sz_popupattr_title\" style=\"width:150px;\">\
								    <span id=\"ghost_text\" style=\"top:2px; left:4px;\">（例：A図書館）</span></span>\
								</td>\
							</tr>\
						</table>\
						</div></div>");
***/
						
		var attributeTable;

		// 属性情報入力方法切り替え
		// HTML指定フォーマット定義
		var table_start = '<table'
		var tr_start = 'tr'
		var key_start = 'td style="color:#0000FF;padding-right:1em;"'
		var val_start = 'td'
		var link_start = 'a href'
		var link_end = '/a'
		var td_end = '/td'
		var tr_end = '/tr'
		var table_end = '/table>'

		// 構文チェック用変数
		var okflg = 0;				// 構文チェックフラグ
		var status = 0;				// 0:文頭構文チェックＯＫ　1:項目名_取得準備完了　2:値_取得準備完了
		var key = new Array();		// 項目名
		var value = new Array();	// 値
		var j = 0;					// データ数

		if (feature) {
			var attributes = feature.attributes;
			var titleElement = attributePanel.find("#sz_popupattr_title")[0];
			titleElement.value = attributes["name"];
			var title= titleElement.value;
			var result = {
					'name':title
				};
			var description = attributes['description'];
			// description要素の構文チェック
			if (description) {
				var splitItems = description.split("><");
				for(var i = 0; i < splitItems.length; i++) {
					var item = splitItems[i];
					if(i == 0){	
					// 文頭が<table>か？
						if(item != table_start){
							break;
						}
						status = 1;
					} else if(i == splitItems.length-1){
					// 文末が</table>か？
						if(status != 1){
							break;
						}
						if(item != table_end){
							break;
						}
						okflg = 1;
					} else if(status == 1){
					// 【項目名のチェック＆取得】
						// 項目名の文頭構文チェック
						if(item != tr_start){				// <tr>かチェック
							break;
						}
						i = i + 1;
						var item = splitItems[i];
						var keyitem1 = item.split(">");
						if(keyitem1[0] != key_start){		// <td ・・・>かチェック
							break;
						}
						if(keyitem1.length == 2){
						// 項目名の構文チェック＜項目名データあり＞
							var keyitem2 = keyitem1[1].split("<");
							if(keyitem2.length != 2){		//「<」区切りの要素が2個かチェック
								break;
							}
							if(keyitem2[1] != td_end){		// </td>かチェック
								break;
							}
							key[j] = keyitem2[0];			// 項目名データを取得
						} else {
						// 項目名の構文チェック＜項目名データなし(空欄)＞
							i = i + 1;
							var item = splitItems[i];
							if(item != td_end){				// </td>かチェック
								break;
							}
							key[j] = "";					// 項目名データ(空)を取得
						}
						status = 2;
					} else if(status == 2){
					// 【値のチェック＆取得】
						var valitem1 = item.split(">");
						if(valitem1[0] != val_start){		// <td ・・・>かチェック
							break;
						}
						// 値の文末構文チェック＜値データあり(文字列)＞
						if(valitem1.length == 2){
							var valitem2 = valitem1[1].split("<");
							if(valitem2.length != 2){		//「<」区切りの要素が2個かチェック
								break;
							}
							if(valitem2[1] != td_end){		// </td>かチェック
								break;
							}
							i = i + 1;
							var item = splitItems[i];
							if(item != tr_end){				// </tr>かチェック
								break;
							}
							value[j] = valitem2[0];			// 値データを取得
							j = j + 1;
							status = 1;
						} else if(valitem1.length == 1){
							i = i + 1;
							var item = splitItems[i];
							if(item == td_end){				//「/td」かチェック
						// 値の文末構文チェック＜値データなし(空欄)＞
								i = i + 1;
								var item = splitItems[i];
								if(item != tr_end){			// </tr>かチェック
									break;
								}
								value[j] = "";				// 値データ(空)を取得
							} else {
						// 値の文末構文チェック＜値データあり(リンク)＞
								// リンクの文頭構文チェック
								var linkitem1 = item.split("=");
								if(linkitem1[0] != link_start){	// <a href>かチェック
									break;
								}
								// リンクの文末構文チェック
								linkitem1 = item.split(">");
								if(linkitem1.length != 2){		// 「>」区切りの要素が2個かチェック
									break;
								}
								var linkitem2 = linkitem1[1].split("<");
								if(linkitem2.length != 2){		// 「<」区切りの要素が2個かチェック
									break;
								}
								if(linkitem2[1] != link_end){	// </a>かチェック
									break;
								}
								i = i + 1;
								var item = splitItems[i];
								if(item != td_end){				// </td>かチェック
									break;
								}
								i = i + 1;
								var item = splitItems[i];
								if(item != tr_end){				// </tr>かチェック
									break;
								}
								value[j] = linkitem2[0];		// 値データ(リンク)を取得
							}
							j = j + 1;
							status = 1;
						}else{
							break;
						}
					} else {
						break;
					}
				}
			}
			
			// 属性値の親となるdivタグをセット
			var attributeDetailPanel = $("<div id=\"sz_attribute\"></div>");
			attributePanel.append(attributeDetailPanel);

			// ゴーストの設定
			createGhostTextEvents(attributePanel.find("#sz_popupattr_title"), attributePanel.find("#ghost_text"));

			// 20130328: No7 No8
			if ((okflg == 1 && j > 0) || !description) {
				// description要素が、指定のtable構造だった場合
				// またはdescription要素の定義なしの場合
				alterTable(true);
			} else {
				// 指定のtable構造でなかった場合
				alterTable(false);
			}
		}
		
		// Table構造の属性値登録divを作成
		function createAttributeTableDiv()
		{
			// Table編集モード
			var attributeTableDiv = $("<div style=\"position:relative;top:-8px;margin-top:5px;\"id=\"sz_attribute\"><table id=\"sz_attribute_table\"></table>　<button id=\"sz_popupattr_add\" style=\"font-size:12px;\">項目を追加</button></div>");
			
			attributeTable = attributeTableDiv.find("#sz_attribute_table");
			if (okflg == 1 && j > 0) {
				for (var i = 0; i < j; i++) {
					var attrkey = key[i];
					var attrvalue = value[i];
					if (attrkey.charAt(0) == '@') {
						continue;
					}
					addRow(attrkey, attrvalue, attributeTable, false);
				}
			}
				
			// 「属性を追加」ボタンをクリック
			attributeTableDiv.find("#sz_popupattr_add").click(function(){
				addRow("", "", attributeTable, false);
			});

			return attributeTableDiv;
		}

		// 自由記述の属性値登録divを作成
		function createAttributeFreeDiv()
		{
			// 自由記述編集モード
			var attributeFreeDiv =
//				$("<div style=\"position:static;top:-14px;padding-left:10px;\"id=\"sz_attribute\"><span style=\"position:relative;\"><button id=\"sz_popupattr_addhref\"style=\"font-size:12px;\">リンクを追加</button><button id=\"sz_popupattr_addimg\"style=\"font-size:12px;\">画像を追加</button><br><textarea id=\"sz_attribute_value\" rows=5 cols=30 style=\"padding-left:5px;font-size:12px;\">"+(value?(description!=null?description:""):"")+"</textarea><span id=\"ghost_text\" style=\"top:23px; left:4px;\">（例：開館時間は10時～18時。蔵書は１万冊。 ）</span></span></div><br>");
//				$("<div style=\"position:static;top:-14px;padding-left:10px;\"id=\"sz_attribute\"><div style=\"position:relative;\"><textarea id=\"sz_attribute_value\" rows=5 cols=30 style=\"padding-left:5px;font-size:12px;width=150px;\">"+(value?(description!=null?description:""):"")+"</textarea><span id=\"ghost_text\" style=\"top:3px; left:4px;\">（例：開館時間は10時～18時。<br>蔵書は１万冊。 ）</span></div></div><br>");
				$("<div style=\"position:static;top:-14px;padding-left:10px;\"id=\"sz_attribute\"><span style=\"position:relative;\"><button id=\"sz_popupattr_addhref\"style=\"font-size:12px;\">リンクを追加</button><button id=\"sz_popupattr_addimg\"style=\"font-size:12px;visibility:hidden;\">画像を追加</button><br><textarea id=\"sz_attribute_value\" rows=5 cols=30 style=\"padding-left:5px;font-size:12px;\">"+(value?(description!=null?description:""):"")+"</textarea><span id=\"ghost_text\" style=\"top:23px; left:4px;\">（例：開館時間は10時～18時。蔵書は１万冊。 ）</span></span></div><br>");
				
			// 「リンクを追加」ボタンをクリック
			attributeFreeDiv.find("#sz_popupattr_addhref").click(function(){
				attributeFreeDiv.find("#sz_attribute_value").val(attributeFreeDiv.find("#sz_attribute_value").val() + "<a href=\"\" target=\"_blank\"></a>");
				attributeFreeDiv.find("#ghost_text").css("display", "none");
			});
/*			

			// 「画像を追加」ボタンをクリック
			attributeFreeDiv.find("#sz_popupattr_addimg").click(function(){
				attributeFreeDiv.find("#sz_attribute_value").val(attributeFreeDiv.find("#sz_attribute_value").val() + "<img src=\"\">");
				attributeFreeDiv.find("#ghost_text").css("display", "none");
			});
*/

			// ゴーストの設定
			createGhostTextEvents(attributeFreeDiv.find("#sz_attribute_value"), attributeFreeDiv.find("#ghost_text"));

			return attributeFreeDiv;
		}

		// 「項目を追加」ボタンクリック時の動作
		function addRow(key, value, attributeTable, isShowGhost) {
			if (attributeTable.find("#sz_popupattr_delete").length == 0) {
				var lineElement = $("<tr id=\"sz_popupattr_header\"><th>項目名</th><th>値</th><th>&nbsp;</th></tr>");
				attributeTable.append(lineElement);
			}

			// 属性を追加します。
			var lineElement = $("\
				<tr id=\"sz_attr_row\">\
					<td style=\"vertical-align:top;\">\
						<span id=\"attr_col\" style=\"position:relative;\">\
							<textarea id=\"sz_attr_col_key\" rows=1 style=\"width:100px;\">" + (key ? key : "") + "</textarea>\
							<span class=\"ghost_text\" id=\"ghost_text_key\" style=\"top:-4px; left:4px; font-size:12px; display:none;\">（例：開館時間）</span>\
						</span>\
					</td>\
					<td style=\"vertical-align:top;\">\
						<span id=\"attr_val\" style=\"position:relative;\">\
							<textarea id=\"sz_attr_col_value\" rows=1 style=\"width:120px;\">" + (value ? value : "") + "</textarea>\
							<span class=\"ghost_text\" id=\"ghost_text_val\" style=\"top:-4px; left:4px; font-size:12px; display:none;\">（例：10時～18時）</span>\
						</span>\
					</td>\
					<td>\
						<button id=\"sz_popupattr_delete\" style=\"font-size:12px; width:50px;\">削除</button>\
					</td>\
				</tr>");

			lineElement.find("#sz_popupattr_delete").click(function(){
				lineElement.remove();
				// 最後の一行なら、ヘッダを消す
				if (attributeTable.find("#sz_popupattr_delete").length == 0) {
					attributeTable.find("#sz_popupattr_header").remove();
				}
			});
			
			if (isShowGhost) {
				createGhostTextEvents(lineElement.find("#sz_attr_col_key"), lineElement.find("#ghost_text_key"));
				createGhostTextEvents(lineElement.find("#sz_attr_col_value"), lineElement.find("#ghost_text_val"));
			}
			
			attributeTable.append(lineElement);
		};

		// テーブル編集 ⇔ 自由記述編集切替
		function alterTable(isTable) {
			// 属性値登録の親タグを削除
			attributePanel.find("#sz_attribute").remove();
			
			// 親タグを追加しなおす
			var attributeDetailPanel = $("<div id=\"sz_attribute\"></div>");
			attributePanel.append(attributeDetailPanel);
			
			var tableLink = attributePanel.find("#desc_table");
			var notableLink = attributePanel.find("#desc_notable");

			if (isTable) {
				tableLink.click(function(){});
				notableLink.click(function(){ alterTable(false); });

				tableLink[0].style.color = "#000000";
				tableLink[0].style.textDecoration = "none";
				tableLink[0].style.fontWeight = "bold";
				tableLink[0].style.cursor = "auto";
				
				notableLink[0].style.color = "#0000FF";
				notableLink[0].style.textDecoration = "underline";
				notableLink[0].style.fontWeight = "normal";
				notableLink[0].style.cursor = "pointer";

				// 指定のtable構造(項目名-値)に沿った編集モード
				var attributeTableDiv = createAttributeTableDiv();
				attributeDetailPanel.append(attributeTableDiv);
				
				if (!description) {
					addRow("", "", attributeTable, true);
				}
			}
			else {
				tableLink.click(function(){ alterTable(true); });
				notableLink.click(function(){});

				tableLink[0].style.color = "#0000FF";
				tableLink[0].style.textDecoration = "underline";
				tableLink[0].style.fontWeight = "normal";
				tableLink[0].style.cursor = "pointer";
				
				notableLink[0].style.color = "#000000";
				notableLink[0].style.textDecoration = "none";
				notableLink[0].style.fontWeight = "bold";
				notableLink[0].style.cursor = "auto";

				// 自由記述編集モード
				var attributeFreeDiv = createAttributeFreeDiv();
				attributeDetailPanel.append(attributeFreeDiv);
			}
		};
		
		// ゴースト表示のためのイベント設定
		function createGhostTextEvents(bodyText, ghostText) {
			if (bodyText.value || (bodyText.val && bodyText.val())){
				// 文字列が設定されていればゴーストを表示しない
				ghostText.css("display", "none");
			}
			else {
				// 文字列が設定されてなければゴーストを表示する
				// 編集中はゴーストが消えるようにする
				ghostText.css("display", "");
				
				ghostText.click(function(){
					ghostText.css("display", "none");
					bodyText.focus();
				});
				
				bodyText.click(function(){
					ghostText.css("display", "none");
				});
				
				bodyText.blur(function(){
					ghostText.css("display", bodyText.value || (bodyText.val && bodyText.val()) ? "none" : "");
				});
			}
		};

		this.editAttributePanel(attributePanel);
		return attributePanel;
	},
	// 属性パネルの編集
	editAttributePanel : function(attributePanel) {
		return null;
	}
});
/**************************/
/* 抽象スタイルパネル     */
/**************************/
Sakuzu.AbstractStylePanel = Sakuzu.Class(Sakuzu.AbstractPanel,{
	initialize: function(sakuzu,tabPanel) {
		Sakuzu.AbstractPanel.prototype.initialize.apply(this, arguments);
		this.additionalPanel = this.createAdditionalPanel();
		if (this.additionalPanel) {
			this.stylePanel.append(this.additionalPanel);
		}
		var popupAttributePanel = this.createAttributePanel();
		this.stylePanel.append(popupAttributePanel);
	},
	/** 選択されているスタイルを取得 **/
	retrieveAttributes : function(panel) {
		if (!panel) {
			panel = this.stylePanel; 
		}
		var titleElement = panel.find("#sz_popupattr_title")[0];
		var title= titleElement.value;

		var result = {
				'name':title
			};

		var note = panel.find("#sz_attribute_value").val();
		if (note) {
			// 属性情報(自由記述)のHTML作成
			var attrs = note;
			if(attrs){
				jQuery.extend(result, {"description":attrs});
			}
		} else {
			// 属性情報(項目名＋値)のHTML作成
			var rows = panel.find("#sz_attr_row");
			var attrs = "";
			for (var i = 0; i < rows.length; i++) {
				var key = $(rows[i]).find("#sz_attr_col_key").val();
				var value = $(rows[i]).find("#sz_attr_col_value").val();
				key = key.replace(",","","g");
				val = value.replace("=","","g");

				if (key.length == 0 && value.length == 0) {
					continue;
				}

				var keyStr = webtis.Format.JSGIJSON.escapeHTML(key);
				var valueStr = webtis.Format.JSGIJSON.escapeHTML(value);
				if (key.charAt(0) == '@') {
					continue;
				}
				// 項目名のHTML作成
				attrs += '<tr><td style="color:#0000FF;padding-right:1em;">' + keyStr + '</td>';

				// 値のHTML作成
				var urlheader = "http";
				var str = " " + valueStr;
				// URL(「http」で始まる文字列)が入力されたらリンク表示
				if (str.indexOf(" " + urlheader) !== -1) {
					attrs += '<td><a href="' + valueStr + '" target="_blank">' + valueStr + '</a></td></tr>';
				} else {
					attrs += '<td>' + valueStr + '</td></tr>';
				}
			}
			if(attrs){
				attrs = '<table>'+ attrs + '</table>';
				jQuery.extend(result, {"description":attrs});
			}
		}

		return result;
	},
	/** 色選択ダイアログを表示 **/
	showColorPickerDialog : function(resultElement) {
		var palette = $("<div></div>");
		var t = $("<table/>");
		for (var i = 0; i < Sakuzu.ColorTable.length; i++) {
			var r = $("<tr/>");
			for (var j = 0; j < Sakuzu.ColorTable[i].length; j++) {
				var d = $("<td style=\"width:14px;height:14px;\"/>");
				var color = Sakuzu.ColorTable[i][j];
				var hexColor = "#"+Sakuzu.makeHex(color[0])+Sakuzu.makeHex(color[1])+Sakuzu.makeHex(color[2]);
				var paletteColor = $("<div class=\"sz_color\" style='background-color:"+hexColor+"'></div>");
				paletteColor.attr("_rgb",Sakuzu.padDeci(color[0],3)+","+Sakuzu.padDeci(color[1],3)+","+Sakuzu.padDeci(color[2],3));
				if (Sakuzu.isBasicColor(color)) {
					paletteColor.append("<div style=\"border:1px solid black;width:12px;height:12px;\"></div>");
				}
				d.append(paletteColor);
				r.append(d);
			}
			t.append(r);
		}
		palette.append(t);
		var colorInfo = $("<div style=\"padding:2px;font-size:12px;\">RGB=0,0,0</div>");
		palette.append(colorInfo);
		t.find(".sz_color").mouseover(
			function(ev) {
				colorInfo.text("RGB="+$(ev.currentTarget).attr("_rgb"));
			}
		);
		t.find(".sz_color").click(
			function(ev) {
				colorInfo.text("RGB="+$(ev.currentTarget).attr("_rgb"));
				resultElement.css("backgroundColor",$(ev.currentTarget).css("backgroundColor"));
				palette.dialog("destroy");
			}
		);
		
		palette.dialog({
			dialogClass:'sz_color_palette_dialog',
			title: "色を選択してください",
			width: 224,
			height: 280,
			resizable: false,
			draggable: false,
			modal:true
		});
	},
	/** 線幅選択ダイアログを表示 **/
	showLineWidthPickerDialog : function(imgElement,labelElement,strokeWidth) {
		var lineWidthTable=[2,5,10,17,25];
		var exist = false;
		var sizePanel = $("<table style='background-color:white'></table>");
		for (i=0; i<lineWidthTable.length; i++){
			var fsrc = Sakuzu.IMAGE_ROOT + "line_" + lineWidthTable[i] + "px.png"
			var line = "<tr class=\"sz_size_list\"><td style=\"width:170px;text-align:center;\"><img src=\"" + fsrc + "\" alt=\"" + lineWidthTable[i] + "\"></td>";
			line += "<td style=\"vertical-align:middle;width:30px;\">" + lineWidthTable[i] + "px</td></tr>";
			var lineObj = $(line);
			lineObj.attr({"_alt":lineWidthTable[i]});
			lineObj.click($.proxy(function(e){
				imgElement.attr("alt", $(e.currentTarget).attr("_alt"));
				imgElement.css("height", $(e.currentTarget).attr("_alt")+"px");
				labelElement.html($(e.currentTarget).attr("_alt")+"px");
				sizePanel.dialog("destroy");
			},this));
			sizePanel.append(lineObj);
			if (strokeWidth == lineWidthTable[i]) exist=true;
		}
		
		if (!exist){
			if (strokeWidth>0){
				var line="<tr class=\"sz_size_list\"><td style=\"width:170px;height:30px;text-align:center;vertical-align:middle;\">その他</td>";
				line += "<td style=\"vertical-align:middle;width:30px;\">" + strokeWidth + "px</td></tr>";
				var lineObj = $(line);
				lineObj.attr({"_alt":strokeWidth});
				lineObj.click($.proxy(function(e){
					imgElement.attr("alt", $(e.currentTarget).attr("_alt"));
					imgElement.css("height", $(e.currentTarget).attr("_alt")+"px");
					labelElement.html($(e.currentTarget).attr("_alt")+"px");
					sizePanel.dialog("destroy");
				},this));
				sizePanel.append(lineObj);
			}
		}
		

		sizePanel.dialog({
			dialogClass:'sz_color_palette_dialog',
			title: "線の幅を選択してください",
			width: 200,
			height: 240,
			resizable: false,
			draggable: false,
			modal:true
		});
	},

	/** 線幅をUIに反映 **/
	setLineWidth : function(imgElement,labelElement,width) {
		imgElement.attr("alt", width);
		labelElement.html(width + "px");
		if (width < 1){
			width = 1;
		}else if(width > 25){
			width = 25;
		}
		imgElement.css("height", width + "px");
	},
	
	/** スタイルをUIに反映 **/
	setDrawStyle : function(affixStyle,panel) {
	}
});


/**************************/
/* 点パネル               */
/**************************/
Sakuzu.PointPanel = Sakuzu.Class(Sakuzu.AbstractStylePanel,{
	// 属性パネルの編集
	editAttributePanel : function(attributePanel) {
		if (iconlabel){
			attributePanel.find("#sz_popupattr_title_lbael").after("<span style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:12px;\">（吹き出しのタイトル・アイコンの右側に表示）</span>");
		}
		else {
			attributePanel.find("#sz_popupattr_title_lbael").after("<span style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:12px;\">（吹き出しのタイトルに表示）</span>");
		}
	},
	/** 選択された時に呼び出される。**/
	selected : function() {
		//  点の描画モード
		var webtis = this.sakuzu.getWebtis();
		var OpenLayers = this.sakuzu.getOpenLayers();

		var drawControl = new OpenLayers.Control.DrawFeature(this.sakuzu.affixLayer, OpenLayers.Handler.Point, {
			"callbacks": {
				"done" : function(geometry) {
					// 新たにレイヤーを作成して、そこに追加。
					var newLayer = new Sakuzu.LayerVector("_affix_."+Sakuzu.generateLayerId("symbol",webtis));
					// 属性を取得
					var attributes = this.currentPanle.retrieveAttributes();
					// スタイルを取得
					var affixStyle = this.currentPanle.retrieveDrawStyle();
					var style = this.currentPanle.sakuzu.convertToOLStyle(affixStyle);
					var feature = new webtis.Feature.Vector(geometry, attributes, style);
					feature.attributes = attributes;
					newLayer.styleType = "symbol";
					newLayer.affixStyle = affixStyle;
					newLayer.JSGISelection = true;
					newLayer.addFeatures(feature);
					this.currentPanle.sakuzu.addLayer(newLayer);

					var selectedfeature=[feature];
					this.currentPanle.sakuzu.showEditDialog(selectedfeature);
				}
			}
		});
		drawControl.currentPanle = this;
		this.drawControl = drawControl;
		return [this.drawControl];
	},
	
	// スタイルパネルの下に追加で表示するパネル
	createAdditionalPanel : function() {
		return $("<div style=\"font-size:0.8em;line-height:14px;margin-top:6px;margin-bottom:6px;\">文字型データでは「タイトル」が文字列の値になります。</div>");
	},

	// 点スタイルパネル
	createStylePanel : function(affixStyle) {
		var stylePanel = $("\
				<div><div class=\"sz_stylebox\" style=\"margin-top:15px;margin-left:5px; margin-right:5px;\">\
					<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\">スタイル</div>\
					<div style=\"position:relative;top:-10px;\">\
					<table>\
						<tr class=\"sz_title\">\
							<td style=\"vertical-align:middle;\">アイコン</td>\
							<td>\
								<div id=\"sz_symbol_img\" style=\"position:relative;\">\
									<img id=\"sz_symbol_icon\" style=\"vertical-align:bottom;width=100;\" src=\""+Sakuzu.SymbolTable.baseURL+"080.png\">\
								</div>\
							</td>\
							<td style=\"vertical-align:middle;\">\
								拡大率 <select id=\"sz_symbol_size\"><option value=\"10\">0.5</option><option value=\"20\" selected>1.0</option><option value=\"30\">1.5</option><option value=\"40\">2.0</option></select>\
							</td>\
						</tr>\
						<tr class=\"sz_title\">\
							<td></td>\
							<td></td>\
							<td>\
								<button id=\"sz_circle_icon_change\">アイコン変更</button>\
							</td>\
						</tr>\
						<tr style=\"height:7px;\"></tr>\
						<tr class=\"sz_title point_label\">\
							<td style=\"vertical-align:middle;\">ラベル　 </td>\
							<td>\
								<div style=\"position:relative;\">\
									<p id=\"sz_text_size\" style=\"border:1px solid gray;width:40px;text-align:center;vertical-align:bottom;background-color:white;font-size:12px;font-family:ＭＳ ゴシック;\">A</p>\
								</div>\
							</td>\
							<td style=\"vertical-align:middle;\">拡大率 <select id=\"sz_labelsize_combo\"><option value=\"10\" selected>1.0(10px)</option><option value=\"12\">1.2(12px)</option><option value=\"20\">2.0(20px)</option><option value=\"30\">3.0(30px)</option><option value=\"40\">4.0(40px)</option></select>\
						</tr>\
						<tr class=\"sz_title point_label\">\
							<td></td>\
							<td></td>\
							<td style=\"vertical-align:middle;\">\
								文字色 <p id=\"sz_text_color\" class=\"sz_color_palette\" style=\"background-color:#000000\"></p>\
							</td>\
							<input type=\"hidden\" id=\"sz_icon\">\
							<input type=\"hidden\" id=\"sz_icon_size\">\
						</tr>\
					</table>\
				</form>\
				</div></div>\
			");
		var textSize = stylePanel.find("#sz_text_size");
//		var textSizeLabel = stylePanel.find("#sz_text_size_label");
		var tsize = 0;
		if (affixStyle) tsize = parseInt(affixStyle["font"].size, 10);
		
		var symbolButton = stylePanel.find("#sz_circle_icon_change");
		symbolButton.click(
			$.proxy(function(){
				this.openIconTable(stylePanel);
			}, this)
		);

		var iconSizeTable=[10,12,20,30,40];
		var iconSizeCombo = stylePanel.find("#sz_symbol_size");
		iconSizeCombo.change(
			$.proxy(function(){
				var size = iconSizeCombo.val();
				stylePanel.find("#sz_symbol_icon").css("height", size + "px");
				stylePanel.find("#sz_symbol_icon").css("width", size + "px");
			}, this)
		);
		
		var textSizeCombo = stylePanel.find("#sz_labelsize_combo");
		textSizeCombo.change(
			$.proxy(function(){
				var size = parseInt(textSizeCombo.val(), 10);
				var h = size + 4;
				if (h < 16) h = 16;
				stylePanel.find("#sz_text_size").css("height", h+"px");
				stylePanel.find("#sz_text_size").css("font-size", size + "px");
			}, this)
		);

		var textColor = stylePanel.find("#sz_text_color");
		textColor.click(
			$.proxy(function() {
				this.showColorPickerDialog(textColor);
			},this)
		);
		
		if (!iconlabel){
			stylePanel.find(".point_label").css("display", "none");
		}
		
		return stylePanel;
	},
	
	openIconTable: function(stylePanel) {
		var exist = false;
		var iconTablesElement = $("<div id=\"sz_icon_tables\"></div>");
		for (var i = 0; i < Sakuzu.SymbolTable.files.length; i++) {
			var iconElement = $("<div class=\"sz_icon\"><img src=\""+Sakuzu.SymbolTable.baseURL+Sakuzu.SymbolTable.files[i]+"\"></div>");
			$(iconTablesElement).append(iconElement);
			$(iconElement).click(
					function(ev) {
						stylePanel.find("#sz_symbol_null").css("display", "none");

						stylePanel.find("#sz_symbol_icon")[0].src = ev.target.src;
						iconTablesElement.dialog("destroy");
					}
			);
			if (stylePanel.find("#sz_symbol_icon")[0].src == Sakuzu.SymbolTable.baseURL+Sakuzu.SymbolTable.files[i]) exist = true;
		}

		if (!exist){
			$(stylePanel.find("#sz_symbol_icon")[0]).attr({"_prevSrc":stylePanel.find("#sz_symbol_icon")[0].src});
		}
		
		if ($(stylePanel.find("#sz_symbol_icon")[0]).attr("_prevSrc")){
			var fileSrc = $(stylePanel.find("#sz_symbol_icon")[0]).attr("_prevSrc");
			var iconElement = $("<div class=\"sz_icon\"><img src=\""+fileSrc+"\" width=\"20px\"></div>");
			
			$(iconTablesElement).append(iconElement);
			$(iconElement).click(
			function(ev) {
					stylePanel.find("#sz_symbol_icon")[0].src = ev.target.src;
					iconTablesElement.dialog("destroy");
				}
			);
		}
		
		iconTablesElement.dialog({
			dialogClass:'sz_color_palette_dialog',
			title: "アイコンを選択してください",
			width: 230,
			height: 140,
			resizable: false,
			draggable: false,
			modal:true
		});
	},
	
	/** 選択されているスタイルを取得 **/
	retrieveDrawStyle : function(panel) {
		var textSize = "";
		var textColor = "";
		var symbolURL = "";
		var size;

		if (!panel) {
			panel = this.stylePanel;
			if (this.sakuzu.btnObjs[this.sakuzu.btnObjs.POINT].prevAffixStyle){
				textSize = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POINT].prevAffixStyle.font.size;
				textColor = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POINT].prevAffixStyle.rgb;
				
				symbolURL = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POINT].prevAffixStyle.symbol.uri;
				size = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POINT].prevAffixStyle.symbol.size.split(",")[0];
			}
		}
		if (symbolURL == "") {
			var symbolElement = panel.find("#sz_symbol_icon")[0];
			symbolURL = symbolElement.src;
			size = panel.find("#sz_symbol_size").val();
		}
		var stype = "static";

		if (textSize == ""){
			var textSizeElement = panel.find("#sz_text_size")[0];
			textSize = $(textSizeElement).css("font-size");
			var textColorElement = panel.find("#sz_text_color")[0];
			textColor = Sakuzu.cssColorToDeci($(textColorElement).css("backgroundColor"));
		}
		
		var iconSizeElement = panel.find("#sz_icon_size");
		var iconSize = iconSizeElement.val();
		var iconElement = panel.find("#sz_icon");
		var icon = iconElement.val();
		var affixStyle = {
			'name' : 'textStyle',
			'type' : 'SYMBOL',
			'display' : 'ON',
			'displaylevel' : 'all',
			'selection' : 'ON',
			'transparent' : 'ON',
			'rgb' : textColor,
			'fontOpacity' : 1,
			'paint' : 'ON',
			'symbol' : {
				"size":size+","+stype,
				"uri":symbolURL
			},
			//'mode':'CC',
			'mode':'lm',
			'font' : {
				'name' : 'ＭＳ ゴシック',
				'style' : '標準',
				'size' : textSize
			}
		};
		
		return affixStyle;
	},
	/** スタイルをUIに反映 **/
	setDrawStyle : function(affixStyle, panel) {

		if (!panel) {
			panel = this.stylePanel;
		}
		
		// アイコン
		var iconSizeTable = [10,20,30,40];
		var iconSizeCombo = panel.find("#sz_symbol_size");

		var width = parseFloat(affixStyle["symbol"].size);
		var size = 0;
		for (var i=0; i<iconSizeTable.length; i++){
			if (width == iconSizeTable[i]){
				size = iconSizeTable[i];
				break;
			}
		}

		if (size != 0){
			iconSizeCombo.val(size);
		}else{
			size = width;
			var opt = $("<option value=" + size + ">その他</option>");
			iconSizeCombo.append(opt);
			iconSizeCombo.val(size);
		}

		var symbolElement = panel.find("#sz_symbol_icon");
		var symbolURL = affixStyle.symbol.uri;
		symbolElement[0].src = symbolURL; 
		symbolElement.width(size);
		if (size<10) size=10;

		panel.find("#sz_symbol_icon").css("height", size + "px");
		panel.find("#sz_symbol_icon").css("width", size + "px");

		// ラベル
		var labelSizeTable = [10,12,20,30,40];
		var textSizeCombo = panel.find("#sz_labelsize_combo");
		
		var labelSize = parseFloat(affixStyle["font"].size);
		var size = 0;
		for (var i=0; i<labelSizeTable.length; i++){
			if (labelSize == (labelSizeTable[i])){
				size = labelSizeTable[i];
				break;
			}
		}
		
		if (size != 0){
			textSizeCombo.val(size);
		}else{
			size = labelSize;
			var opt = $("<option value=" + size + ">その他</option>");
			textSizeCombo.append(opt);
			textSizeCombo.val(size);
		}

		var h = size + 4;
		if (h < 16) h = 16;
		panel.find("#sz_text_size").css("height", h+"px");
		panel.find("#sz_text_size").css("font-size", size + "px");
//		panel.find("#sz_text_size").css("color", Sakuzu.deciColorToCSSHex(affixStyle["rgb"]));

		panel.find("#sz_text_color").css("backgroundColor", Sakuzu.deciColorToCSSHex(affixStyle["rgb"]));
	}
});

/**************************/
/* 線パネル               */
/**************************/
Sakuzu.LinePanel = Sakuzu.Class(Sakuzu.AbstractStylePanel,{

	// 属性パネルの編集
	editAttributePanel : function(attributePanel) {	
		attributePanel.find("#sz_popupattr_title_lbael").after("<span style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:12px;\">（吹き出しのタイトルに表示）</span>");
	},

	/** 選択された時に呼び出される。**/
	selected : function() {
		//  線の描画モード
		var webtis = this.sakuzu.getWebtis();
		var OpenLayers = this.sakuzu.getOpenLayers();

		var drawControl = new OpenLayers.Control.DrawFeature(this.sakuzu.affixLayer, OpenLayers.Handler.Path, {
			"callbacks": {
				"done" : function(geometry) {
					if (geometry.components.length <= 1) {
						return;
					}
					geometry.calculateBounds();
					if (geometry.bounds == null || geometry.bounds.getWidth() == 0) {
						return;
					}
					// 新たにレイヤーを作成して、そこに追加。
					var newLayer = new Sakuzu.LayerVector("_affix_."+Sakuzu.generateLayerId("string",webtis));
					// 属性を取得
					var attributes = this.currentPanle.retrieveAttributes();
					// ここでスタイルを取得
					var affixStyle = this.currentPanle.retrieveDrawStyle();
					var style = this.currentPanle.sakuzu.convertToOLStyle(affixStyle);
					var feature = new webtis.Feature.Vector(geometry, attributes, style);
					newLayer.styleType = "string";
					newLayer.affixStyle = affixStyle;
					newLayer.JSGISelection = true;
					newLayer.addFeatures(feature);
					this.currentPanle.sakuzu.addLayer(newLayer);

					var selectedfeature=[feature];
					this.currentPanle.sakuzu.showEditDialog(selectedfeature);
				}
			}
		});
		drawControl.currentPanle = this;
		this.drawControl = drawControl;
		return [this.drawControl];
	},
	// 線スタイルパネル
	createStylePanel : function(affixStyle) {
		var stylePanel = $("\
				<div><div class=\"sz_stylebox\" style=\"margin-top:15px;margin-left:5px; margin-right:5px;\">\
					<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\">スタイル</div>\
					<div style=\"position:relative;top:-10px;\">\
					<table><tr class=\"sz_title\"><td style=\"vertical-align:middle;\">線幅</td>\
						<td id=\"sz_line_width\" style=\"vertical-align:middle;cursor:pointer;\">\
							<img id=\"sz_line_width_img\" style=\"height:2px;width:40px;\" src=\"" + Sakuzu.IMAGE_ROOT + "line_1px.png\" alt=\"5\">\
						</td>\
						<td id=\"sz_line_width_label\" style=\"vertical-align:middle;\">2px</td>\
					</tr></table>\
					<table><tr class=\"sz_title\">\<td>線色</td>\
						<td><p id=\"sz_line_color\" class=\"sz_color_palette\" style=\"background-color:#FF0000\"></p></td>\
					</tr></table>\
				</div></div>\
			");

		var lineWidth = stylePanel.find("#sz_line_width");
		lineWidth.click(
			$.proxy(function(ev) {
				var strokeWidth = 0;
				if (affixStyle){
					var widthParam = affixStyle["width"].split(",");
					strokeWidth = widthParam[0];
				}

				var imgElement = lineWidth.find("#sz_line_width_img");
				var labelElement = stylePanel.find("#sz_line_width_label");
				this.showLineWidthPickerDialog(imgElement,labelElement,strokeWidth);
			},this)
		);

		var lineColor = stylePanel.find("#sz_line_color");
		lineColor.click(
			$.proxy(function() {
				this.showColorPickerDialog(lineColor);
			},this)
		);
		return stylePanel;
	},
	/** 選択されているスタイルを取得 **/
	retrieveDrawStyle : function(panel) {
		var strokeWidth = "";
		var strokeColor = "";
		var stype = "static";

		if (!panel) {
			panel = this.stylePanel;
			if (this.sakuzu.btnObjs[this.sakuzu.btnObjs.LINE].prevAffixStyle){
				strokeWidth = this.sakuzu.btnObjs[this.sakuzu.btnObjs.LINE].prevAffixStyle.width.split(",")[0];
				strokeColor = this.sakuzu.btnObjs[this.sakuzu.btnObjs.LINE].prevAffixStyle.rgb;
			}
		}
		
		if (strokeColor == ""){
			strokeWidth = panel.find("#sz_line_width_img").attr("alt");
			var colorElement = panel.find("#sz_line_color")[0];
			var backgroundColor = $(colorElement).css("backgroundColor");
			strokeColor = Sakuzu.cssColorToDeci(backgroundColor);
		}

		var affixStyle = {
			"name" : "lineStringStyle",
			"type" : "STRING",
			'width':strokeWidth+","+stype,
			"rgb" : strokeColor,
			'strokeOpacity' : 0.5,
			"display" : "ON",
			"displaylevel" : "all",
			"selection" : "ON",
			"transparent" : "ON"
		};
		return affixStyle;
	},
	/** スタイルをUIに反映 **/
	setDrawStyle : function(affixStyle,panel) {
		if (!panel) {
			panel = this.stylePanel;
		}

		var widthParam = affixStyle["width"].split(",");
		var strokeWidth = widthParam[0];
		this.setLineWidth(panel.find("#sz_line_width_img"),panel.find("#sz_line_width_label"),strokeWidth);

		panel.find("#sz_line_color").css("backgroundColor",Sakuzu.deciColorToCSSHex(affixStyle["rgb"]));
	}
});

/**************************/
/* 面パネル               */
/**************************/
Sakuzu.PolygonPanel = Sakuzu.Class(Sakuzu.AbstractStylePanel,{

	// 属性パネルの編集
	editAttributePanel : function(attributePanel) {	
		attributePanel.find("#sz_popupattr_title_lbael").after("<span style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:12px;\">（吹き出しのタイトルに表示）</span>");
	},

	/** 選択された時に呼び出される。**/
	selected : function() {
		//  面の描画モード
		var webtis = this.sakuzu.getWebtis();
		var OpenLayers = this.sakuzu.getOpenLayers();

		var drawControl = new OpenLayers.Control.DrawFeature(this.sakuzu.affixLayer, OpenLayers.Handler.Polygon, {
			"callbacks": {
				"done" : function(geometry) {
					if (geometry.components[0].components.length <= 3) {
						return;
					}
					// ここでスタイルを取得
					var affixStyle = this.currentPanle.retrieveDrawStyle();
					var style = this.currentPanle.sakuzu.convertToOLStyle(affixStyle);
					// 新たにレイヤーを作成して、そこに追加。
					var newLayer = new Sakuzu.LayerVector("_affix_."+Sakuzu.generateLayerId("poly",webtis));
					// 属性を取得
					var attributes = this.currentPanle.retrieveAttributes();
					var feature = new webtis.Feature.Vector(geometry, attributes, style);
					newLayer.styleType = "polygon";
					newLayer.JSGISelection = true;
					newLayer.affixStyle = affixStyle;
					newLayer.addFeatures(feature);
					this.currentPanle.sakuzu.addLayer(newLayer);
					//this.currentPanle.sakuzu.enablePopupLayer(newLayer);

					var selectedfeature=[feature];
					this.currentPanle.sakuzu.showEditDialog(selectedfeature);
				}
			}
		});
		drawControl.currentPanle = this;
		this.drawControl = drawControl;
		return [this.drawControl];
	},
	// 面スタイルパネル
	createStylePanel : function(affixStyle) {
		var stylePanel = $("\
				<div><div class=\"sz_stylebox\" style=\"margin-top:15px;margin-left:5px; margin-right:5px;\">\
					<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\">スタイル</div>\
					<div style=\"position:relative;top:-10px;\">\
				<table><tr class=\"sz_title\"><td style=\"vertical-align:middle;\">線幅</td>\
					<td id=\"sz_polygon_line_width\" style=\"vertical-align:middle;cursor:pointer;\">\
						<img id=\"sz_polygon_line_width_img\" style=\"height:2px;width:40px;\" src=\"" + Sakuzu.IMAGE_ROOT + "line_1px.png\" alt=\"5\">\
					</td>\
					<td id=\"sz_polygon_line_width_label\" style=\"vertical-align:middle;\">2px</td>\
				</tr></table>\
				<table><tr class=\"sz_title\"><td>線色</td>\
					<td>\
						<p id=\"sz_polygon_line_color\" class=\"sz_color_palette\" style=\"background-color:#FF0000;\"></p>\
					</td>\
				</tr></table>\
				<table><tr class=\"sz_title\"><td>塗色</td>\
					<td>\
						<div style=\"border:1px solid black;\"><p id=\"sz_polygon_fill_color\" class=\"sz_color_palette\" style=\"background-color:#00FF00;border:0px;\" ></p></div>\
					</td>\
				</tr></table>\
				<table><tr class=\"sz_title\"><td>透過率</td>\
					<td>\
						<div id=\"opa_sakuzu_value\" style=\"float:left;position:absolute;\"></div>　<div id=\"opa_sakuzu_slider\" style=\"width:100px; left:40px; float:left;\"></div>\
					</td>\
				</tr></table>\
			</div></div>\
		");

		var lineWidth = stylePanel.find("#sz_polygon_line_width");
		lineWidth.click(
			$.proxy(function(ev) {
				var strokeWidth = 0;
				if (affixStyle){
					var widthParam = affixStyle["width"].split(",");
					strokeWidth = widthParam[0];
				}

				var imgElement = lineWidth.find("#sz_polygon_line_width_img");
				var labelElement = stylePanel.find("#sz_polygon_line_width_label");
				this.showLineWidthPickerDialog(imgElement,labelElement,strokeWidth);
			},this)
		);

		var lineColor = stylePanel.find("#sz_polygon_line_color");
		lineColor.click(
			$.proxy(function() {
				this.showColorPickerDialog(lineColor);
			},this)
		);
		var fillColor = stylePanel.find("#sz_polygon_fill_color");
		fillColor.click(
			$.proxy(function() {
				this.showColorPickerDialog(fillColor);
			},this)
		);
		
		var updateOpaValue = function(value) {
			stylePanel.find("#opa_sakuzu_value").text((~~value) + "％");
			setBackgroundColorOpacity(stylePanel.find("#sz_polygon_fill_color"), (100 - parseInt(value, 10)) / 100);
		};

		var opaSlider = stylePanel.find("#opa_sakuzu_slider");
		opaSlider.slider({
			change: function(e, u){ updateOpaValue(u.value); },
			slide: function(e, u){ updateOpaValue(u.value); },
			max: 100,
			min: 0,
			value: 50
		});
		return stylePanel;
	},
	/** 選択されているスタイルを取得 **/
	retrieveDrawStyle : function(panel) {
		var strokeWidth = "";
		var stype = "static";
		var fillType = "solid";
		var strokeColor = "";
		var fillColor = "";
		var fillOpacity = 0.5;
		
		if (!panel) {
			panel = this.stylePanel;
			if (this.sakuzu.btnObjs[this.sakuzu.btnObjs.POLYGON].prevAffixStyle){
				strokeWidth = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POLYGON].prevAffixStyle.width.split(",")[0];
				strokeColor = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POLYGON].prevAffixStyle.rgb;
				fillColor = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POLYGON].prevAffixStyle.hrgb;
				fillOpacity = this.sakuzu.btnObjs[this.sakuzu.btnObjs.POLYGON].prevAffixStyle.fillOpacity;
			}
		}

		if (strokeWidth == ""){
			strokeWidth = panel.find("#sz_polygon_line_width_img").attr("alt");
			var colorElement = panel.find("#sz_polygon_line_color")[0];
			strokeColor = Sakuzu.cssColorToDeci($(colorElement).css("backgroundColor"));
			var fillColorElement = panel.find("#sz_polygon_fill_color")[0];
			fillColor = Sakuzu.cssColorToDeci($(fillColorElement).css("backgroundColor"));
			fillOpacity = (100 - panel.find("#opa_sakuzu_slider").slider("option", "value")) / 100;
		}

		var affixStyle = {
			"name" : "polygonStyle",
			"type" : "POLYGON",
			"display" : "ON",
			"displaylevel" : "all",
			"selection" : "ON",
			"transparent" : "ON",
			"width" : strokeWidth + ","+stype,
			"brgb" : strokeColor,
			'strokeOpacity' : 0.5,
			'fillOpacity' : fillOpacity,
			"brush" : fillType,
			"rgb" : strokeColor,
			"hrgb" : fillColor,
			"paint":"ON"
		};
		return affixStyle;
	},
	/** スタイルをUIに反映 **/
	setDrawStyle : function(affixStyle,panel) {
		if (!panel) {
			panel = this.stylePanel;
		}
		var widthParam = affixStyle["width"].split(",");
		var strokeWidth = widthParam[0];
		this.setLineWidth(panel.find("#sz_polygon_line_width_img"),panel.find("#sz_polygon_line_width_label"),strokeWidth);

		panel.find("#sz_polygon_line_color").css("backgroundColor",Sakuzu.deciColorToCSSHex(affixStyle["rgb"]));
		panel.find("#sz_polygon_fill_color").css("backgroundColor",Sakuzu.deciColorToCSSHex(affixStyle["hrgb"]));
		panel.find("#opa_sakuzu_slider").slider("option", "value", (100 - affixStyle["fillOpacity"] * 100));
		panel.find("#opa_sakuzu_value").text("" + (100 - affixStyle["fillOpacity"] * 100) + "％");
	}
});

/**************************/
/* 円パネル               */
/**************************/
Sakuzu.CirclePanel = Sakuzu.Class(Sakuzu.AbstractStylePanel,{

	// 属性パネルの編集
	editAttributePanel : function(attributePanel) {	
		attributePanel.find("#sz_popupattr_title_lbael").after("<span style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:12px;\">（吹き出しのタイトルに表示）</span>");
	},

	/** 選択された時に呼び出される。**/
	selected : function(that,newControls) {
		that.setOperationModeControl();

		//  円の描画モード
		var circleDrawmodeElement = $("<div id=\"circle_drawmode\"></div>");

		var panel = $("\
			<div id=\"sz_popup_attr\" style=\"height:80px;\">\
				<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;\">描画方法</div>\
				<div style=\"position:relative;top:-10px;font-size:14px;\">\
					<div>\
						<label><input type=\"radio\" name=\"sz_circle_drawmode\" value=\"drag\" checked style=\"margin-bottom:5px;\">ドラッグで円を指定</label><br>\
						<label ><input type=\"radio\" name=\"sz_circle_drawmode\" value=\"point\" style=\"margin-bottom:5px;\">半径を指定</label>\
						<div style=\"margin-left:20px;\">\
							<input id=\"sz_circle_raius\" type=\"text\" value=\"\" size=\"4\" style=\"margin-right:5px;\"><select id=\"sz_circle_raius_unit\"><option value=\"m\">メートル</option><option value=\"km\">キロメートル</option></select>\
						</div>\
					</div>\
				</div>\
				<input type=\"hidden\" id=\"sz_circle_radiusm\" value=\"\"/>\
				<div style=\"margin-top:10px;text-align:center;\"><button id=\"sz_circle_drawmode_button\">決定</button></div>\
			</div>\
		");

		var drawmodeButton = panel.find("#sz_circle_drawmode_button");
		drawmodeButton.click(function(e){
			var drawMode = panel.find("input[name='sz_circle_drawmode']:checked").val();

			var radius,unitMode;
			if (drawMode == "point"){
				radius = panel.find("#sz_circle_raius").val();
				if ($.isNaN(radius)) {
					alert("半径には、数字を入力してください。");
					return false;
				}
				radius = radius - 0;
				unitMode = panel.find("#sz_circle_raius_unit option:selected").val();
			}

			newControls = that.btnObjs[that.btnObjs.CIRCLE].createDrawControl(drawMode,radius,unitMode);

			that.updateDrawControls([newControls]);
			circleDrawmodeElement.dialog("destroy");
		});

		circleDrawmodeElement.append(panel);

		circleDrawmodeElement.dialog({
			dialogClass:'sz_color_palette_dialog',
			title: "描画方法を選択してください。",
			width: 230,
			height: 180,
			resizable: false,
			draggable: false,
			modal:true
		});
	},
	// 描画用Controlを選定
	createDrawControl : function(drawMode,radius,unitMode) {
		var webtis = this.sakuzu.getWebtis();
		var OpenLayers = this.sakuzu.getOpenLayers();
		//var drawMode = this.stylePanel.find("input[name='sz_circle_drawmode']:checked").val();

		var drawControl;
		if (drawMode == "drag") {
			drawControl = new OpenLayers.Control.DrawFeature(this.sakuzu.affixLayer, webtis.Handler.Circle, {
				"callbacks": {
					"done" : function(geometry, radius,targetLonLat) {
						if (!targetLonLat) return false;
						// ここでスタイルを取得
						var affixStyle = this.currentPanle.retrieveDrawStyle();
						var style = this.currentPanle.sakuzu.convertToOLStyle(affixStyle);
						// 新たにレイヤーを作成して、そこに追加。
						var newLayer = new Sakuzu.LayerVector("_affix_."+Sakuzu.generateLayerId("circle",webtis));
						// 属性を取得
						var attributes = this.currentPanle.retrieveAttributes();
						var feature = new webtis.Feature.Vector(geometry, attributes, style);
						newLayer.JSGISelection = true;
						newLayer.styleType = "circle";
						newLayer.affixStyle = affixStyle;
						
						var centerLonLat = new OpenLayers.LonLat(geometry.x,geometry.y);
						centerLonLat = centerLonLat.transform(this.currentPanle.sakuzu.getMapObject().getProjectionObject(),Sakuzu.baseProjection);
						targetLonLat = targetLonLat.transform(this.currentPanle.sakuzu.getMapObject().getProjectionObject(),Sakuzu.baseProjection);
						
						var radiusm = OpenLayers.Util.distVincenty(centerLonLat,targetLonLat)*1000;

						// boundsを計算
						// ポイントですが、半径分の矩形を設定します。
						var topLL = OpenLayers.Util.destinationVincenty(centerLonLat,0,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var rightLL = OpenLayers.Util.destinationVincenty(centerLonLat,90,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var bottomLL = OpenLayers.Util.destinationVincenty(centerLonLat,180,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var leftLL = OpenLayers.Util.destinationVincenty(centerLonLat,270,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var newBounds = new OpenLayers.Bounds(leftLL.lon,bottomLL.lat,rightLL.lon,topLL.lat);
						geometry.bounds = newBounds;

						feature.pointRadius = radiusm;
						feature.styleSize = affixStyle['width'].split()[0];
						newLayer.addFeatures(feature);
						this.currentPanle.sakuzu.addLayer(newLayer);
						var selectedfeature=[feature];
						this.currentPanle.sakuzu.showEditDialog(selectedfeature);
					}
				}
			});
		} else {
			drawControl = new OpenLayers.Control.DrawFeature(this.sakuzu.affixLayer, webtis.Handler.CircleFixedRadius, {
				"callbacks": {
					"done" : function(geometry) {
						var radiusm = this.currentPanle.fixedRadiusMeter;
						if ($.isNaN(radiusm)) {
							return;
						}
						// ここでスタイルを取得
						var affixStyle = this.currentPanle.retrieveDrawStyle();
						var style = this.currentPanle.sakuzu.convertToOLStyle(affixStyle);
						// 新たにレイヤーを作成して、そこに追加。
						var newLayer = new Sakuzu.LayerVector("_affix_."+Sakuzu.generateLayerId("circle",webtis));
						// 属性を取得
						var attributes = this.currentPanle.retrieveAttributes();
						var feature = new webtis.Feature.Vector(geometry, attributes, style);
						
						// ポイントですが、半径分の矩形を設定します。
						var centerLonLat = new OpenLayers.LonLat(geometry.x,geometry.y);
						centerLonLat = centerLonLat.transform(this.currentPanle.sakuzu.getMapObject().getProjectionObject(),Sakuzu.baseProjection);
						var topLL = OpenLayers.Util.destinationVincenty(centerLonLat,0,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var rightLL = OpenLayers.Util.destinationVincenty(centerLonLat,90,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var bottomLL = OpenLayers.Util.destinationVincenty(centerLonLat,180,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var leftLL = OpenLayers.Util.destinationVincenty(centerLonLat,270,radiusm).transform(Sakuzu.baseProjection,this.currentPanle.sakuzu.getMapObject().getProjectionObject());
						var newBounds = new OpenLayers.Bounds(leftLL.lon,bottomLL.lat,rightLL.lon,topLL.lat);
						geometry.bounds = newBounds;
						
						feature.pointRadius = radiusm;
						newLayer.styleType = "circle";
						newLayer.affixStyle = affixStyle;
						newLayer.JSGISelection = true;
						feature.styleSize = affixStyle['width'].split(",")[0];
						newLayer.addFeatures(feature);
						this.currentPanle.sakuzu.addLayer(newLayer);
						
						var selectedfeature=[feature];
						this.currentPanle.sakuzu.showEditDialog(selectedfeature);
					}
				}
			});
			// 半径を取得
			//var radius = this.additionalPanel.find("#sz_circle_raius").val();
			if (!$.isNaN(radius)) {
				//var unitMode = this.additionalPanel.find("#sz_circle_raius_unit option:selected").val();
				var radiusm = radius;
				if (unitMode == "km") {
					radiusm = radiusm * 1000;
				}
				this.fixedRadiusMeter = radiusm;
				drawControl.handler.radiusMeter = this.fixedRadiusMeter;
			}
		}
		drawControl.currentPanle = this;
		return drawControl;
	},

	updateRadius : function() {
		var radius = this.additionalPanel.find("#sz_circle_raius").val();
		if ($.isNaN(radius)) {
			alert("半径には、数字を入力してください。");
			return false;
		}
		radius = radius - 0;
		var unitMode = this.additionalPanel.find("#sz_circle_raius_unit option:selected").val();
		var radiusm = radius;
		if (unitMode == "km") {
			radiusm = radiusm * 1000;
		}
		this.fixedRadiusMeter = radiusm;
		return true;
		// panel.find("#sz_circle_radiusm").val(radiusm);
	},

	// 円スタイルパネル
	createStylePanel : function(affixStyle) {
		var stylePanel = $("\
				<div><div class=\"sz_stylebox\" style=\"margin-top:15px;margin-left:5px; margin-right:5px;\">\
					<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\">スタイル</div>\
					<div style=\"position:relative;top:-10px;\">\
				<table><tr class=\"sz_title\"><td style=\"vertical-align:middle;\">線幅</td>\
					<td id=\"sz_circle_line_width\" style=\"vertical-align:middle;cursor:pointer;\">\
						<img id=\"sz_circle_line_width_img\" style=\"height:2px;width:40px;\" src=\"" + Sakuzu.IMAGE_ROOT + "line_1px.png\" alt=\"5\">\
					</td>\
					<td id=\"sz_circle_line_width_label\" style=\"vertical-align:middle;\">2px</td>\
				</tr></table>\
				<table><tr class=\"sz_title\"><td>線色</td>\
					<td>\
						<p id=\"sz_circle_line_color\" class=\"sz_color_palette\" style=\"background-color:#FF0000\"></p>\
					</td>\
				</tr></table>\
				<table><tr class=\"sz_title\"><td>塗色</td>\
					<td>\
						<div style=\"border:1px solid black;\"><p id=\"sz_circle_fill_color\" class=\"sz_color_palette\" style=\"background-color:#00FF00;border:0px;\"></p></div>\
					</td>\
				</tr></table>\
				<table><tr class=\"sz_title\"><td>透過率</td>\
					<td>\
						<div id=\"opa_sakuzu_value\" style=\"float:left;position:absolute;\"></div>　<div id=\"opa_sakuzu_slider\" style=\"width:100px; left:40px; float:left;\"></div>\
					</td>\
				</tr></table>\
			</div></div>\
		");

		var lineWidth = stylePanel.find("#sz_circle_line_width");
		lineWidth.click(
			$.proxy(function(ev) {
				if (affixStyle){
					var widthParam = affixStyle["width"].split(",");
					strokeWidth = widthParam[0];
				}

				var imgElement = lineWidth.find("#sz_circle_line_width_img");
				var labelElement = stylePanel.find("#sz_circle_line_width_label");
				this.showLineWidthPickerDialog(imgElement,labelElement,strokeWidth);
			},this)
		);
		
		var lineColor = stylePanel.find("#sz_circle_line_color");
		lineColor.click(
			$.proxy(function() {
				this.showColorPickerDialog(lineColor);
			},this)
		);
		var fillColor = stylePanel.find("#sz_circle_fill_color");
		fillColor.click(
			$.proxy(function() {
				this.showColorPickerDialog(fillColor);
			},this)
		);
		var updateOpaValue = function(value) {
			stylePanel.find("#opa_sakuzu_value").text((~~value) + "％");
//			stylePanel.find("#opa_sakuzu_value").text(value + "％");
			setBackgroundColorOpacity(stylePanel.find("#sz_circle_fill_color"), (100 - parseInt(value, 10)) / 100);
		};
		
		var opaSlider = stylePanel.find("#opa_sakuzu_slider");
		opaSlider.slider({
			change: function(e, u){ updateOpaValue(u.value); },
			slide: function(e, u){ updateOpaValue(u.value); },
			max: 100,
			min: 0,
			value: 50
		});
		return stylePanel;
	},
	/** 選択されているスタイルを取得 **/
	retrieveDrawStyle : function(panel) {
		var strokeWidth = "";
		var stype = "static";
		var fillType = "solid";
		var strokeColor = "";
		var fillColor = "";

		if (!panel) {
			panel = this.stylePanel;
			if (this.sakuzu.btnObjs[this.sakuzu.btnObjs.CIRCLE].prevAffixStyle){
				strokeWidth = this.sakuzu.btnObjs[this.sakuzu.btnObjs.CIRCLE].prevAffixStyle.width.split(",")[0];
				strokeColor = this.sakuzu.btnObjs[this.sakuzu.btnObjs.CIRCLE].prevAffixStyle.rgb;
				fillColor = this.sakuzu.btnObjs[this.sakuzu.btnObjs.CIRCLE].prevAffixStyle.hrgb;
				fillOpacity = this.sakuzu.btnObjs[this.sakuzu.btnObjs.CIRCLE].prevAffixStyle.fillOpacity;
			}
		}

		if (strokeWidth == "") {
			strokeWidth = panel.find("#sz_circle_line_width_img").attr("alt");
			var colorElement = panel.find("#sz_circle_line_color")[0];
			strokeColor = Sakuzu.cssColorToDeci($(colorElement).css("backgroundColor"));
			var fillColorElement = panel.find("#sz_circle_fill_color")[0];
			fillColor = Sakuzu.cssColorToDeci($(fillColorElement).css("backgroundColor"));
			fillOpacity = (100 - panel.find("#opa_sakuzu_slider").slider("option", "value")) / 100;
		}

		var affixStyle = {
			"name" : "circleStyle",
			"type" : "CIRCLE",
			"display" : "ON",
			"displaylevel" : "all",
			"selection" : "ON",
			"transparent" : "ON",
			"width" : strokeWidth + ","+stype,
			"brgb" : strokeColor,
			"brush" : fillType,
			"rgb" : strokeColor,
			"hrgb" : fillColor,
			'strokeOpacity' : 0.5,
			'fillOpacity' : fillOpacity,
			"paint":"ON"
		};
		return affixStyle;
	},
	/** スタイルをUIに反映 **/
	setDrawStyle : function(affixStyle,panel) {
		if (!panel) {
			panel = this.stylePanel;
		}
		var widthParam = affixStyle["width"].split(",");
		var strokeWidth = widthParam[0];
		this.setLineWidth(panel.find("#sz_circle_line_width_img"),panel.find("#sz_circle_line_width_label"),strokeWidth);

		panel.find("#sz_circle_line_color").css("backgroundColor",Sakuzu.deciColorToCSSHex(affixStyle["rgb"]));
		panel.find("#sz_circle_fill_color").css("backgroundColor",Sakuzu.deciColorToCSSHex(affixStyle["hrgb"]));
		panel.find("#opa_sakuzu_slider").slider("option", "value", (100 - affixStyle["fillOpacity"] * 100));
		panel.find("#opa_sakuzu_value").text("" + (100 - affixStyle["fillOpacity"] * 100) + "％");
	}
});
	
/**************************/
/* 文字パネル             */
/**************************/
Sakuzu.TextPanel = Sakuzu.Class(Sakuzu.AbstractStylePanel,{
	// 属性パネルの編集
	editAttributePanel : function(attributePanel) {
		attributePanel.find("#sz_popupattr_title_lbael").html("名称");
	},
	/** 選択された時に呼び出される。**/
	selected : function() {
		//  文字の描画モード
		var webtis = this.sakuzu.getWebtis();
		var OpenLayers = this.sakuzu.getOpenLayers();
		var drawControl = new OpenLayers.Control.DrawFeature(this.sakuzu.affixLayer, OpenLayers.Handler.Point, {
			"callbacks": {
				"done" : function(point) {
					// 属性を取得
					var attributes = this.currentPanle.retrieveAttributes();

					attributes.name = jQuery.trim(attributes.name);
					// ここでスタイルを取得
					var affixStyle = this.currentPanle.retrieveDrawStyle();
					var style = this.currentPanle.sakuzu.convertToOLStyle(affixStyle);
					//var geometry = new webtis.Geometry.TextRectangle(point.x, point.y);
					var geometry = point;
					geometry.bounds = new OpenLayers.Bounds(geometry.x, geometry.y, geometry.x, geometry.y);
					geometry.components = [new OpenLayers.Geometry.Point(geometry.x, geometry.y)];
					geometry.selectDisplay = true;
					geometry.label = attributes.name;

					// 新たにレイヤーを作成して、そこに追加。
					var newLayer = new Sakuzu.LayerVector("_affix_."+Sakuzu.generateLayerId("text",webtis));
					var feature = new webtis.Feature.Vector(geometry, attributes, style);
					newLayer.styleType = "text";
					newLayer.JSGISelection = true;
					newLayer.affixStyle = affixStyle;
					// フォントの大きさをFeatureに埋め込み
					var textSize = affixStyle['font'].size;
					feature.styleSize = textSize;
					newLayer.addFeatures(feature);
					this.currentPanle.sakuzu.addLayer(newLayer);

					var selectedfeature=[feature];
					this.currentPanle.sakuzu.showEditDialog(selectedfeature);
				}

			}
		});
		drawControl.currentPanle = this;
		this.drawControl = drawControl;
		return [this.drawControl];
	},
	
	// スタイルパネルの下に追加で表示するパネル
	createAdditionalPanel : function() {
		return $("<div style=\"font-size:0.8em;line-height:14px;margin-top:6px;margin-bottom:6px;\">文字型データでは「タイトル」が文字列の値になります。</div>");
	},
	
	// テキストスタイルパネル
	createStylePanel : function(affixStyle) {
		var stylePanel = $("\
				<div><div class=\"sz_stylebox\" style=\"margin-top:15px;margin-left:5px; margin-right:5px;\">\
					<div style=\"position:relative;top:-10px;background-color:#eeeeee;display:inline;padding:5px;font-size:15px;font-weight:bold;\">スタイル</div>\
					<div style=\"position:relative;top:-10px;\">\
					<table>\
						<tr class=\"sz_title\">\
							<td style=\"vertical-align:middle;\">文字サイズ</td>\
							<td>\
								<p id=\"sz_text_size\" class=\"sz_size_selecter\" style=\"background-color:white;font-size:12px;font-family:ＭＳ ゴシック;\">A</p>\
							</td>\
							<td id=\"sz_text_size_label\" style=\"vertical-align:middle;\">12px</td>\
							<input type=\"hidden\" id=\"sz_icon\">\
							<input type=\"hidden\" id=\"sz_icon_size\">\
						</tr>\
					</table>\
					<table><tr class=\"sz_title\"><td>文字色</td>\
						<td>\
							<p id=\"sz_text_color\" class=\"sz_color_palette\" style=\"background-color:#000000\"></p>\
						</td>\
					</tr></table>\
				</form>\
				</div></div>\
			");
		var textSize = stylePanel.find("#sz_text_size");
		var textSizeLabel = stylePanel.find("#sz_text_size_label");
		var tsize = 0;
		if (affixStyle) tsize = parseInt(affixStyle["font"].size, 10);

		var textSizeTable=[10,12,20,30,40];
		textSize.click(
			$.proxy(function(ev) {
				var sizePanel = $("<table style='background-color:white'></table>");
				var exist = false;

				for (i=0; i<textSizeTable.length; i++){
					var fHeight = textSizeTable[i] + 4;
					if (fHeight < 16) fHeight=16;
					var line = "<tr class=\"sz_size_list\" style=\"height:40px;\"><td style=\"font-size:" + textSizeTable[i] + "px;width:190px;font-family:ＭＳ ゴシック;vertical-align:middle;\">Aaあいう</td>";
					line += "<td style=\"vertical-align:middle;width:30px;\">"+ textSizeTable[i] + "px</td></tr>";
					var lineObj = $(line);
					lineObj.attr({"_font-size":textSizeTable[i],"_height":fHeight});
					lineObj.click($.proxy(function(e){
						textSize.css("font-size", $(e.currentTarget).attr("_font-size")+"px");
						textSize.css("height", $(e.currentTarget).attr("_height") + "px");
						textSizeLabel.html($(e.currentTarget).attr("_font-size") + "px");
						sizePanel.dialog("destroy");
					},this));
					sizePanel.append(lineObj);
					if (tsize == textSizeTable[i]) exist = true;
				}
				
				if (!exist){
					if (tsize > 0){
						var fHeight = tsize + 4;
						if (fHeight < 16) fHeight=16;
						var line = "<tr class=\"sz_size_list\" style=\"height:40px;\"><td style=\"font-size:12px;width:190px;font-family:ＭＳ ゴシック;vertical-align:middle;\">その他のサイズ</td>";
						line += "<td style=\"vertical-align:middle;width:30px;\">"+ tsize + "px</td></tr>";

						var lineObj = $(line);
						lineObj.attr({"_font-size":tsize,"_height":fHeight});
						lineObj.click($.proxy(function(e){
							textSize.css("font-size", $(e.currentTarget).attr("_font-size")+"px");
							textSize.css("height", $(e.currentTarget).attr("_height") + "px");
							textSizeLabel.html($(e.currentTarget).attr("_font-size") + "px");
							sizePanel.dialog("destroy");
						},this));
						sizePanel.append(lineObj);
					}
				}

				sizePanel.dialog({
					dialogClass:'sz_color_palette_dialog',
					title: "文字サイズを選択してください",
					width: 220,
					height: 180,
					resizable: false,
					draggable: false,
					modal:true
				});
				
			},this)
		);

		var textColor = stylePanel.find("#sz_text_color");
		textColor.click(
			$.proxy(function() {
				this.showColorPickerDialog(textColor);
			},this)
		);

		return stylePanel;
	},
	/** 選択されているスタイルを取得 **/
	retrieveDrawStyle : function(panel) {
		var textSize = "";
		var textColor = "";

		if (!panel) {
			panel = this.stylePanel;
			if (this.sakuzu.btnObjs[this.sakuzu.btnObjs.LABEL].prevAffixStyle){
				textSize = this.sakuzu.btnObjs[this.sakuzu.btnObjs.LABEL].prevAffixStyle.font.size;
				textColor = this.sakuzu.btnObjs[this.sakuzu.btnObjs.LABEL].prevAffixStyle.rgb;
			}
		}
		
		if (textSize == ""){
			var textSizeElement = panel.find("#sz_text_size")[0];
			textSize = $(textSizeElement).css("font-size");
			var textColorElement = panel.find("#sz_text_color")[0];
			textColor = Sakuzu.cssColorToDeci($(textColorElement).css("backgroundColor"));
		}

		var iconSizeElement = panel.find("#sz_icon_size");
		var iconSize = iconSizeElement.val();
		var iconElement = panel.find("#sz_icon");
		var icon = iconElement.val();
		var affixStyle = {
			'name' : 'textStyle',
			'type' : 'TEXT',
			'display' : 'ON',
			'displaylevel' : 'all',
			'selection' : 'ON',
			'transparent' : 'ON',
			'rgb' : textColor,
			'fontOpacity' : 1,
			'paint' : 'ON',
			'symbol' : {
				'size' : iconSize + ',static',
				'uri' : icon
			},
			//'mode':'CC',
			'mode':'lm',
			'font' : {
				'name' : 'ＭＳ ゴシック',
				'style' : '標準',
				'size' : textSize
			}
		};
		return affixStyle;
	},
	/** スタイルをUIに反映 **/
	setDrawStyle : function(affixStyle,panel) {
		if (!panel) {
			panel = this.stylePanel;
		}

		var textSize = parseInt(affixStyle["font"].size, 10);
		panel.find("#sz_text_size_label").html(textSize + "px");

		if (textSize<1){
			textSize = 1;
		}else if (textSize>40){
			textSize = 40;
		}
		panel.find("#sz_text_size").css("font-size",textSize + "px");
		
		var h = textSize + 4;
		if (h < 16) h = 16;
		panel.find("#sz_text_size").css("height",h+"px");

		panel.find("#sz_text_color").css("backgroundColor",Sakuzu.deciColorToCSSHex(affixStyle["rgb"]));
		
		// hidden項目にアイコンURLを保持
		var icon = affixStyle["symbol"].uri;
		panel.find("#sz_icon").val(icon);

		// hidden項目にアイコンサイズを保持
		var iconSizeArray = affixStyle["symbol"].size.split(",");
		var iconSize = iconSizeArray[0];
		panel.find("#sz_icon_size").val(iconSize);
	}
});

// -------------- DefaultHandler
/*
//-- 電子国土APIで使用するときのハンドラー
Sakuzu.DefaultHandler = Sakuzu.Class({
	useStateSave : true,
	initialize: function(config) {
		this._mo = config.mapObj;
	},
	getMapObject : function() {
		return this.getWebtis().map;
	},
	getWebtis: function() {
		if (this._mo.webtis) {
			return this._mo.webtis;
		}
		return this._mo.maplt.webtis;
	},
	getOpenLayers: function() {
		if (this._mo.OpenLayers) {
			return this._mo.OpenLayers;
		}
		return this._mo.maplt.OpenLayers;
	}
});
*/
//-- OpenLayersで使用するときのハンドラー
Sakuzu.OpenLayersDefaultHandler = Sakuzu.Class({
//	useStateSave : false,
	useStateSave : true,	//地図タブの追加【Ver4.0】
	initialize: function(config) {
		this.config = config;
		this.mapObj = config.mapObj;
		if (config.webtis) {
			this.webtis = config.webtis;
		}
		if (config.OpenLayers) {
			this.OpenLayers = config.OpenLayers;
		}
	},
	getMapObject : function() {
		return this.mapObj;
	},
	getWebtis: function() {
		if (this.webtis) {
			return this.webtis;
		}
		return webtis;
	},
	getOpenLayers: function() {
		if (this.OpenLayers) {
			return this.OpenLayers;
		}
		return OpenLayers;
	}
});

/******** ユーティリティ関数  ***********/
// CSSのRGB表記あるいは、16進表記の#rrggbbの書式を10進表記の"r,g,b"に変換
Sakuzu.cssColorToDeci = function(cssColorStr,digit) {
	if (cssColorStr.indexOf("rgb")!=-1) {
		var rgb = cssColorStr.substring(cssColorStr.indexOf("(")+1,cssColorStr.indexOf(")")).split(",");
		var r = parseInt(rgb[0],10);
		var g = parseInt(rgb[1],10);
		var b = parseInt(rgb[2],10);
		return r+","+g+","+b;
	}
	var r = parseInt(cssColorStr.substring(1,3),16);
	var g = parseInt(cssColorStr.substring(3,5),16);
	var b = parseInt(cssColorStr.substring(5,7),16);
	return r+","+g+","+b;
};
//CSSのRGB表記あるいは、10進表記の"r,g,b"書式を16進表記の#rrggbbに変換
Sakuzu.deciColorToCSSHex = function(cssColorStr) {
	var rgb = cssColorStr.split(",");
	var r = parseInt(rgb[0],10);
	var g = parseInt(rgb[1],10);
	var b = parseInt(rgb[2],10);
	return ("#"+Sakuzu.padDeci(r.toString(16),2,"0")+Sakuzu.padDeci(g.toString(16),2,"0")+Sakuzu.padDeci(b.toString(16),2,"0")).toUpperCase();
};

//10進数を16進数に変換
Sakuzu.makeHex = function(deci) {
	var hex = deci.toString(16);
	if (hex.length < 2) {
		hex = "0"+hex;
	}
	return hex;
};

//10進数 10より小さいときは、スペースを付加
Sakuzu.padDeci = function(deci,padLen,pad) {
	var str = deci+"";
	if (!pad) {
		pad = " ";
	}
	while (str.length < padLen) {
		str = pad + str;
	}
	return str;
};
//基準色か否かを判定
Sakuzu.isBasicColor = function( color )
{
	var	x;
	var	theMax = color.length;
	
	for ( x = 0; x < theMax; x++ )
	{
		if ( ( color[ x ] != 0 ) && ( color[ x ] != 255 ) )
		{
			return false;
		}
	}
	
	return true;
};
//距離、面積計算関連
Sakuzu.calcGeo2 = function(geometries,unit,sourceProjection,baseProjection,OpenLayers) {
	if (geometries.length == 0) {
		return 0;
	}
	var result = 0;
	if (geometries[0].CLASS_NAME == "OpenLayers.Geometry.LineString") {
		for (var i = 0; i < geometries.length; i++) {
			var lineStringGeometry = geometries[i];
	        var length, geomUnits;
            length = lineStringGeometry.getGeodesicLength(sourceProjection);
			result += length;
		}
		// 単位を調整
		result *= unit;
	} else if (geometries[0].CLASS_NAME == "OpenLayers.Geometry.Polygon") {
		for (var i = 0; i < geometries.length; i++) {
			var polygonGeometry = geometries[i];
	        var area, geomUnits;
            area = polygonGeometry.getGeodesicArea(sourceProjection);
			result += area;
		}
		// 単位を調整　面積なので二乗
		result *= unit;
		result *= unit;
	}
	return result;
};

/** <layer><name>に格納されるIDを生成します。**/
Sakuzu.generateLayerId = function(styleType,webtis) {
	var now = new Date();
	var yyyyMMddHHmmssmm = webtis.Format.JSGIJSON.zeroPadDeci(now.getFullYear(),4)+webtis.Format.JSGIJSON.zeroPadDeci(now.getMonth(),2)+webtis.Format.JSGIJSON.zeroPadDeci(now.getDate(),2)+webtis.Format.JSGIJSON.zeroPadDeci(now.getHours(),2)+webtis.Format.JSGIJSON.zeroPadDeci(now.getMinutes(),2)+webtis.Format.JSGIJSON.zeroPadDeci(now.getSeconds(),2)+webtis.Format.JSGIJSON.zeroPadDeci(now.getMilliseconds(),3);
	return styleType.toUpperCase() + yyyyMMddHHmmssmm; 
};

//undo/redoのデータ
Sakuzu.OperationHistory = function(sakuzu) {
	
	var MAXDATA = 99;
	
	var undoData = [];
	var redoData = [];
	
	this.add = function(opcode, data) {
		if (undoData.length == MAXDATA-1) { undoData.shift(); }
		undoData.push({ "opcode" : opcode, "data" : data });
		// redoは、消去
		redoData.length = 0;
	};
	this.removeAllStacks = function() {
		undoData = [];
		redoData = [];
	};
	/** 取り消し **/
	this.undo = function() {
		if (undoData.length > 0) {
			sakuzu.unselectFeature();
			var op = undoData.pop();
			if (redoData.length == MAXDATA-1) { redoData.shift(); }
			if (op.opcode == 'move') {
				// 移動の取り消し
				redoData.push({ "opcode" : op.opcode, "data" : { "feature" : op.data.feature, "center" : op.data.feature.geometry.getBounds().getCenterLonLat() } });
				op.data.feature.move(op.data.center);
			} else if (op.opcode == 'del') {
				// 削除の取り消し
				var features = op.data;
				var redoFeatures = [];
				for (var i=0; i<features.length; i++) {
					var layer = features[i]._layer;
					if (layer.features.length == 0) {
						// 削除されているので追加する。
						var exist=false;
						if (layer.filename){
							for(var l=0; l<sakuzu.layers.length;l++){
								if (layer.filename == sakuzu.layers[l].filename){
									exist=true;
									break;
								}
							}
							if (!exist) Sakuzu.addLayerList(layer.filename);
						}
						sakuzu.addLayer(layer);
						sakuzu.setOperationModeControl();
					}
					layer.addFeatures(features[i]);
					redoFeatures.push(features[i]);
				}
				redoData.push({ "opcode" : op.opcode, "data" : redoFeatures });
			} else if (op.opcode == 'edit') {
				this.doEdit(op,redoData);
			} else if (op.opcode == 'new') {
				// 新規の取り消し
				var feature = op.data.feature;
				sakuzu.selectCtrl.unselect(feature);
				var layer = feature.layer;
				layer.removeFeatures(feature);
				if (layer.features.length == 0) {
					sakuzu.deleteLayer(layer);
				}
				redoData.push({ "opcode" : op.opcode, "data" : {"feature":feature,"layer":layer }});
			}
		}
	};
	/** やり直す **/
	this.redo = function() {
		if (redoData.length > 0) {
			var op = redoData.pop();
			if (undoData.length == MAXDATA-1) { undoData.shift(); }
			if (op.opcode == 'move') {
				undoData.push({ "opcode" : op.opcode, "data" : { "feature" : op.data.feature, "center" : op.data.feature.geometry.getBounds().getCenterLonLat() } });
				op.data.feature.move(op.data.center);
			} else if (op.opcode == 'del') {
				var features = op.data;
				var undoFeatures = [];
				for (var i=0; i<features.length; i++) {
					var layer = features[i].layer;
					features[i]._layer = layer;
					layer.removeFeatures(features[i]);
					if (layer.features.length == 0) {
						sakuzu.deleteLayer(layer);
					}
					undoFeatures.push(features[i]);
				}
				if (op.opcode == 'cut') {
					this.clipboardData = undoFeatures;
				}
				undoData.push({ "opcode" : op.opcode, "data" : undoFeatures });
			} else if (op.opcode == 'edit') {
				this.doEdit(op,undoData);
			} else if (op.opcode == 'new') {
				// 新規のやり直し
				var feature = op.data.feature;
				var layer = op.data.layer;
				if (layer.features.length == 0) {
					sakuzu.addLayer(layer);
					sakuzu.setOperationModeControl();
				}
				layer.addFeatures(feature);
				undoData.push({ "opcode" : op.opcode, "data" : {"feature":feature }});
			}
		} 
	};
	this.doEdit = function(op,stacks) {
		// 編集の取り消し
		// 属性に変更のあったFeature
		var feature = op.data.feature;
		// スタイルに変更のあったFeature
		var features = op.data.features;
		var affixStyle = op.data.affixStyle;
		var style = op.data.style;
		var attributes = op.data.attributes;
		var keepAttributes = null;
		if (feature && attributes) {
			keepAttributes = feature.attributes;
			feature.attributes = attributes;
			if (affixStyle.type == "TEXT" && attributes) {
				feature.geometry.label = attributes.name;
			}
		}
		
		var keepStyle = features[0].style;
		var keepAffixStyle = features[0].layer.affixStyle;
		var redoFeatures = [];
		for (var i=0; i<features.length; i++) {
			var curFeature = features[i];
			// スタイルを取得
			curFeature.layer.affixStyle = affixStyle;
			curFeature.style = style;

			curFeature.layer.redraw();
			redoFeatures.push(curFeature);
		}

		stacks.push({ "opcode" : "edit", "data" : {"feature":feature,"features":redoFeatures,"style":keepStyle,"affixStyle":keepAffixStyle,"attributes":keepAttributes} });
	};

};


/** **/
Sakuzu.calcFontSizeNumber = function(textSize,textDynamic) {
	var inputFontSizeNumber = null;
	if (textDynamic) {
		if ("biggest" == textSize) {
			inputFontSizeNumber = 150;
		} else if ("big" == textSize) {
			inputFontSizeNumber = 100;
		} else if ("medium" == textSize) {
			inputFontSizeNumber = 75;
		} else if ("small" == textSize) {
			inputFontSizeNumber = 50;
		} else if ("smallest" == textSize) {
			inputFontSizeNumber = 30;
		} else {
			inputFontSizeNumber = 75;
		}
	} else {
		if ("biggest" == textSize) {
			inputFontSizeNumber = 40;
		} else if ("big" == textSize) {
			inputFontSizeNumber = 30;
		} else if ("medium" == textSize) {
			inputFontSizeNumber = 20;
		} else if ("small" == textSize) {
			inputFontSizeNumber = 12;
		} else if ("smallest" == textSize) {
			inputFontSizeNumber = 9;
		} else {
			inputFontSizeNumber = 20;
		}
	}
	return inputFontSizeNumber;
};


/** **/
Sakuzu.getFontSizeString = function(textSize,textDynamic) {
	var fontSizeStr = null;
	if (textDynamic) {
		if ("150" == textSize) {
			fontSizeStr = "biggest";
		} else if ("100" == textSize) {
			fontSizeStr = "big";
		} else if ("75" == textSize) {
			fontSizeStr = "medium";
		} else if ("50" == textSize) {
			fontSizeStr = "small";
		} else if ("30" == textSize) {
			fontSizeStr = "smallest";
		} else {
			fontSizeStr = "medium";
		}
	} else {
		if ("40" == textSize) {
			fontSizeStr = "biggest";
		} else if ("30" == textSize) {
			fontSizeStr = "big";
		} else if ("20" == textSize) {
			fontSizeStr = "medium";
		} else if ("12" == textSize) {
			fontSizeStr = "small";
		} else if ("9" == textSize) {
			fontSizeStr = "smallest";
		} else {
			fontSizeStr = "medium";
		}
	}
	return fontSizeStr;
};

/**
 * Class: Sakuzu.Popup
 * ポップアップを表示するためのクラス
 *
 */
Sakuzu.Popup_popupId = 0;
Sakuzu.Popup = OpenLayers.Class({
	map : null,
	feature : null,
	onClose : null,
	initialize:function(map,onClose) {
		this.map = map;
		this.onClose = onClose;
		// マップをクリックしたら、ポップアップは消える。
		this.map.events.register("mouseup",this.map,this.removeEvent = 
				OpenLayers.Function.bindAsEventListener(function(evt) {
					if (this.feature && this.feature.popup) {
						this.map.removePopup(this.feature.popup);
//						this.feature.popup.destroy();
						this.feature.popup = null;
						this.feature = null;
					}
				}, this)
		);
		this.map.events.register("moveend",this.map,this.moveEndEvent = 
			OpenLayers.Function.bindAsEventListener(function(evt) {
				if (this.feature && this.feature.popup) {
					this.map.removePopup(this.feature.popup);
//					this.feature.popup.destroy();
					this.feature.popup = null;
					this.feature = null;
				}
			}, this)
	);
	},
	
	destroy : function() {
		this.map.events.unregister("mouseup",this.map,this.removeEvent);
		this.map.events.unregister("moveend",this.map,this.moveEndEvent);
	},
	/** Featureをポップアップしたときの動き **/
	onFeatureSelectPopup : function (evt) {
		var feature = evt.feature;
		if (feature.popup) return;

		// タイトルを取得
		var attr_title = feature.attributes.name ? feature.attributes.name : "";
		// 属性情報(<description>要素)を取得
		var description = feature.attributes.description ? feature.attributes.description : "";
//		if (feature.layer.CLASS_NAME == "Sakuzu.LayerVector" && !Sakuzu.isTableDescription(description)) {
		if (feature.layer.CLASS_NAME == "Sakuzu.LayerVector" ||
			feature.layer.CLASS_NAME == "webtis.Layer.Vector") {
			description = Sakuzu.escapeDescription(description);
		}
		// 属性情報(<description>要素)をポップアップ用HTMLに設定
		if (description != "") {
			var attrs = '<table id=""><tr><td class="frameCloudTitle" colspan="2" style="color:#FF0000;">' + webtis.Format.JSGIJSON.escapeHTML(attr_title) + '</td></tr><tr><td class="frameCloudDescription">' + description + '</td></tr></table>';
		} else if (attr_title != "") {
			var attrs = '<table><tr><td class="frameCloudTitle" colspan="2" style="color:#FF0000;">' + webtis.Format.JSGIJSON.escapeHTML(attr_title) + '</td></tr></table>';
		} else {
			return;
		}
		
		var xy;
		if (typeof mouseX != "undefined" && typeof mouseY != "undefined" && mouseX && mouseY) {
			var pix = new OpenLayers.Pixel(mouseX - this.map.div.offsetLeft, mouseY - this.map.div.offsetTop);
			xy = map.getLonLatFromViewPortPx(pix);
		}
		else {
			xy = feature.geometry.getBounds().getCenterLonLat();
		}

		var popup = new OpenLayers.Popup.FramedCloud(
				"featurePopup_" + (++Sakuzu.Popup_popupId),
//				feature.geometry.getBounds().getCenterLonLat(),
				xy,
				null,
				attrs,
				null,
				false,this.onPopupClose);

		popup.contentDisplayClass = "framedCloudPopupClass";
		popup.panMapIfOutOfView = false;
//		popup.autoSize = false;
		popup.maxSize = new OpenLayers.Size(400,400);
		feature.popup = popup;
		popup.feature = feature;
		
		if (this.feature && this.feature.popup) {
			this.map.removePopup(this.feature.popup);
//			this.feature.popup.destroy();
			this.feature.popup = null;
		}
		this.feature = feature;
		// ポップアップ表示
		this.map.addPopup(popup,true);
	},

	onFeatureUnselectPopup : function(evt) {
		var feature = evt.feature;
		if (feature.popup) {
			/**
			this.map.removePopup(feature.popup);
			feature.popup.destroy();
			feature.popup = null;
			**/
		}
	},
	
	onPopupClose : function(evt) {
		if (onClose) {
			onClose(this.feature);
		}
		// this.feature = null;
	},
	
	removePopup : function() {
		if (this.feature && this.feature.popup) {
			this.map.removePopup(this.feature.popup);
			this.feature.popup = null;
			this.feature = null;
		}
	//	this.map.removePopup(this.feature.popup);
	},
	CLASS_NAME : "Sakuzu.Popup"
});

/**
 * affixStyleをJSON化
 */
Sakuzu.makeStyleJSONString = function(layer){
	var affixStyle = layer.affixStyle;
	var styleJSON = null;
	var styleType = affixStyle.type;
	
	if (styleType == "SYMBOL") {
		var label = layer.features[0].attributes["name"];
		
		if (affixStyle.symbol && affixStyle.symbol.uri != ""){
			styleJSON = {
				'externalGraphic':affixStyle["symbol"].uri,
				'graphicOpacity':1,
				'graphicWidth':parseInt(affixStyle["symbol"].size.split(",")[0], 10),
				'graphicHeight':parseInt(affixStyle["symbol"].size.split(",")[0], 10),
				'label':label,
				'fontColor':affixStyle["rgb"],
				'fontSize':affixStyle.font.size,
				'fontOpacity':affixStyle["fontOpacity"]
			};
		} else {
			styleJSON = {
				'label':label,
				'fontColor':affixStyle["rgb"],
				'fontSize':affixStyle.font.size,
				'fontOpacity':affixStyle["fontOpacity"]
			};
		}
	}else if (styleType == "STRING") {
		styleJSON = {
			'strokeColor':affixStyle["rgb"],
			'strokeWidth':affixStyle["width"].split(",")[0],
			'strokeOpacity':affixStyle["strokeOpacity"],
			'strokeLinecap':'square'
		};
	}else if (styleType == "POLYGON") {
		styleJSON = {
			'strokeColor':affixStyle["rgb"],
			'strokeWidth':affixStyle["width"].split(",")[0],
			'strokeOpacity':affixStyle["strokeOpacity"],
			'fill':'1',
			'fillColor':affixStyle["hrgb"],
			'fillOpacity':affixStyle["fillOpacity"]
		};
	}else if (styleType == "CIRCLE") {
		styleJSON = {
			'strokeColor':affixStyle["rgb"],
			'strokeWidth':affixStyle["width"].split(",")[0],
			'strokeOpacity':affixStyle["strokeOpacity"],
			'fill':'1',
			'fillColor':affixStyle["hrgb"],
			'fillOpacity':affixStyle["fillOpacity"]
		};
	}else if (styleType == "TEXT") {
		var label = layer.features[0].attributes["name"];
		
		if (affixStyle.symbol && affixStyle.symbol.uri != ""){
			styleJSON = {
				'externalGraphic':affixStyle["symbol"].uri,
				'graphicOpacity':1,
				'graphicWidth':parseInt(affixStyle["symbol"].size.split(",")[0], 10),
				'graphicHeight':parseInt(affixStyle["symbol"].size.split(",")[0], 10),
				'label':label,
				'fontColor':affixStyle["rgb"],
				'fontSize':affixStyle.font.size,
				'fontOpacity':affixStyle["fontOpacity"]
			};
		} else {
			styleJSON = {
				'label':label,
				'fontColor':affixStyle["rgb"],
				'fontSize':affixStyle.font.size,
				'fontOpacity':affixStyle["fontOpacity"]
			};
		}
	}
	return styleJSON;
};

/**
 * レイヤーの配列をJSON化
 */
Sakuzu.makeJSONString = function(layers, baseProjection) {
	
	// 図形のノードのリストを作成
	var topNode = Sakuzu.makeJSONNodes(layers, baseProjection);	
	
	// ノードのリストをJSON文字列に変換
	var result = Sakuzu.makeJSONNodesToString(topNode);
	
	return result;
};

/** 図形のノードのリストを作成 **/
Sakuzu.makeJSONNodes = function(layers, baseProjection) {
	var layerNode = [];
	var topNode = new Array({"layer":layerNode});
	var geoJSON = new OpenLayers.Format.GeoJSON();
	var cnt = 0;
	for (var i = 0; i < layers.length; i++) {	
		var layer = layers[i];
		
		if (!layer.getVisibility()) {
			continue;
		}
		
		var dataNode = [];
		var styleNode = null;
		var primidPrefix = null;
		styleNode = Sakuzu.makeStyleJSONString(layer);
		if (layer.styleType == "string" || layer.styleType == "polygon") {
			primidPrefix = "cv";
		}
		var layerName = layer.name;
		if (layer.name.indexOf("_affix_.")==0) {
			layerName = layerName.substring(8);
		}
		var layerType = "";
		if (layer.styleType == "circle"){
			layerType = "Circle";
		} else if (layer.styleType == "polygon") {
			layerType = "Polygon";
		} else if (layer.styleType == "string") {
			layerType = "LineString";
		} else {
			layerType = "Point";
		}
		
		layerNode[cnt++] = {
			"name" : layerName,
			"type" : layerType,
			"style" : styleNode,
			"data" : dataNode
		};
		var primId = 1;
		for (var j = 0; j < layer.features.length; j++) {
			var feature = layer.features[j];
			var attributes = feature.attributes;
			var name = attributes["name"];
			var description = attributes["description"];
			//var description = "<![CDATA[" + attributes["description"] + "]]>";
			var geometryJSON = null;
			var meter = null;
			var data = null;
			if (layer.styleType == "circle") {
				if(feature.pointRadius){
					// 半径が定義されている=作図したデータは既存と同様の処理を実施
					var geometry = feature.geometry.clone().transform(layer.map.getProjectionObject(),baseProjection);
					eval("geometryJSON = "+geoJSON.write(geometry)+";");
					meter = feature.pointRadius;
				} else{
					// 半径が定義されていない=読み込んだデータは半径をもっていないので半径を算出する
					var ring = feature.geometry.clone().components[0];
					// 中心点を取得
					var geometry = ring.getCentroid().transform(layer.map.getProjectionObject(),baseProjection);
					eval("geometryJSON = "+geoJSON.write(geometry)+";");
					// 半径を算出
					var start = ring.components[0].transform(layer.map.getProjectionObject(),baseProjection);
					var end = ring.components[36].transform(layer.map.getProjectionObject(),baseProjection);
					var lonlat1 = new OpenLayers.LonLat(start.x, start.y);
					var lonlat2 = new OpenLayers.LonLat(end.x, end.y);
					meter = (OpenLayers.Util.distVincenty(lonlat1, lonlat2) / 2) * 1000;
				}
				geometryJSON.circle = meter;
				geometryJSON.type = "Circle";
			} else if (layer.styleType == "text") {
					//var geometry = feature.geometry.clone().components[0].transform(layer.map.getProjectionObject(),baseProjection);
					var geometry = feature.geometry.clone().transform(layer.map.getProjectionObject(),baseProjection);
					eval("geometryJSON = "+geoJSON.write(geometry)+";");
//					meter = feature.pointRadius;
			} else if (layer.styleType == "image") {
				var geometry = feature.geometry.clone().transform(layer.map.getProjectionObject(),baseProjection);
				var imageMapping = {
						"leftBottomCorner" : {"type" : "Point" , "coordinates" :[geometry.x,geometry.y-geometry.height]},
						"rightTopCorner" : {"type" : "Point" , "coordinates" :[geometry.x+geometry.width,geometry.y]},
						"leftTopCorner" : {"type" : "Point" , "coordinates" :[geometry.x,geometry.y]},
						"rightBottomCorner" : {"type" : "Point" , "coordinates" :[geometry.x+geometry.width,geometry.y-geometry.height]}
				};
				data = {
				        "name": name,
				        "description":description,
//				        "crs": "JGD2000 / (L, B)",
				        "type" : geometry.imageType,
				        "src" : geometry.imageUrl,
				        "imageMapping": imageMapping
					};
			} else {
				// window.console.log(layer.styleType+":"+feature.geometry.CLASS_NAME);
				var geometry = feature.geometry.clone().transform(layer.map.getProjectionObject(),baseProjection);
				eval("geometryJSON = "+geoJSON.write(geometry)+";");
			}
			if (!data) {
				data = {
			        "name": name,
			        "type":"Feature",
			        "properties":description,
			        "geometry": geometryJSON
				};
			}
			if (primidPrefix) {
				data = OpenLayers.Util.extend(data,{"primitiveId":primidPrefix+webtis.Format.JSGIJSON.zeroPadDeci(primId,3)});
			}
			dataNode[j] = data;
		}
	}
	
	return topNode;
};

/** ノードのリストをJSON文字列に変換 **/
Sakuzu.makeJSONNodesToString = function(topNode) {
	var result = webtis.Format.JSGIJSON.stringify(topNode);
	result = result.substring(1,result.length-1);
	result = result.substring(result.indexOf("{"),result.lastIndexOf("}")+1);
	// window.console.log(result);
	return result;
};

/**
 * JSONデータをマップにロード
 */
Sakuzu.loadJSON = function(result,zoomflg) {

	// 読み込み後に表示する地図の縮尺指定用
	var bounds = null;
	var json = result;
	var subLayers = json.layer;
	var geoJson = new OpenLayers.Format.GeoJSON();
	var resultProjection = new OpenLayers.Projection("EPSG:4326");
	var projection = new OpenLayers.Projection("EPSG:900913");
	var fileName = "";
	var defaultIcon = 'http://portal.cyberjapan.jp/sys/v4/symbols/080.png';

	for(var l=0; l<subLayers.length; l++){

		var features = [];
		var geometry = null;
		var defaultStyle = null;
		var selectStyle = null;
		var layerStyleMap = null;
		var affixStyle = null;
		var strokeArray = null;
		var fillArray = null;
		var fontArray = null;

		if(subLayers[l].data.type == 'symbol'){
			// 点
			var pointGeom = geoJson.parseGeometry(subLayers[l].data.geometry);
			geometry = pointGeom.transform(resultProjection, projection);
			//geometry = new webtis.Geometry.TextRectangle(geometry.x, geometry.y, true);
			geometry.bounds = new OpenLayers.Bounds(geometry.x, geometry.y, geometry.x, geometry.y);
			geometry.components = [new OpenLayers.Geometry.Point(geometry.x, geometry.y)];
			geometry.selectDisplay = true;
			geometry.label = subLayers[l].data.name;
			var icon = '';
			var iconScale = 1;
			var labelScale = 1;
			var labelColor = 'FF000000';
			var iconSize = 0;
			var fillOpa = 1;
			var offset = 0;
			var labelSelect = true;

			var iconStyle = subLayers[l].data.style.IconStyle;
			if(iconStyle != undefined){
				if(iconStyle.href != undefined){
					icon = iconStyle.href;
				}

				if(iconStyle.scale != undefined){
					iconScale = iconStyle.scale;
					iconSize = 20 * iconScale;
					offset = iconSize/2;
				}
			}

			var labelStyle = subLayers[l].data.style.LabelStyle;
			if(labelStyle != undefined){
				if(labelStyle.scale != undefined && labelStyle.scale != 0){
					labelScale = labelStyle.scale;
				}

				if(labelStyle.color != undefined && labelStyle.color != ''){
					labelColor = labelStyle.color;
				}
			}
			// テキストの基本サイズを10とする
			var labelSize = 10 * labelScale;

			// 文字の色と透明度を取得　文字色の指定がない場合は、デフォルトで黒を指定
			fontArray = Sakuzu.convertColor(labelColor);

			// アイコン＋ラベルにチェックがついていたら
			// テキストはデフォルトで表示
			var fontOpacity = iconlabel ? 1 : 0.00001;

			if (icon != '') labelSelect = false;

/*
			// アイコン＋ラベルにチェックがついていたら
			// アイコンはデフォルトで表示
			if(iconlabel){
				fillOpa = 1;
				offset = iconSize/2;
				if (icon != '') labelSelect = false;
			}
*/
			// style設定
			defaultStyle = new OpenLayers.Style({
				'fillOpacity' : fillOpa,
				'fill' : true,
				'externalGraphic' : icon,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': offset,
				'fontColor' : fontArray[0],
				'fontOpacity' : fontOpacity,
				'fontFamily' : 'ＭＳ ゴシック',
				'fontSize' : labelSize + 'px',
				'labelAlign' : 'lm',
				'labelSelect' : labelSelect
			});

			// 選択した時のスタイル
			var selectStyle = new OpenLayers.Style({
				'fillOpacity' : fillOpa,
				'fill' : true,
				'externalGraphic' : icon,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': offset,
				'fontColor' : fontArray[0],
				'fontOpacity' : fontOpacity,
				'fontFamily' : 'ＭＳ ゴシック',
				'fontSize' : labelSize + 'px',
				'labelAlign' : 'lm',
				'labelSelect' : labelSelect
			});

			// レイヤにstyle設定
			var _ds = {'default' : defaultStyle, 'select' : selectStyle};
			layerStyleMap = new OpenLayers.StyleMap(_ds);

			// 作図用に設定
			affixStyle = {
				'name' : 'textStyle',
				'type' : 'SYMBOL',
				'display' : 'ON',
				'displaylevel' : 'all',
				'selection' : 'ON',
				'transparent' : 'ON',
				'rgb' : Sakuzu.cssColorToDeci(fontArray[0]), //文字色
				'fontOpacity' : fontArray[1],
				'paint' : 'ON',
				'symbol' : {
					'size' : iconSize + ',static',
					'uri' : icon
				},
				'mode':'lm',          // 修正前はCC
				'font' : {
					'name' : 'ＭＳ ゴシック',
					'style' : '標準',
					'size' : labelSize + 'px'
				}
			};

		}else if(subLayers[l].data.type == 'string'){
			// 線
			var lineGeom = geoJson.parseGeometry(subLayers[l].data.geometry);
			lineGeom = lineGeom.transform(resultProjection, projection);
			geometry = new OpenLayers.Geometry.LineString(lineGeom.components);
			var strokeWidth = '2';
			var strokeColor = 'FF0000FF';

			var lineStyle = subLayers[l].data.style.LineStyle;
			if(lineStyle != undefined){
				if(lineStyle.width != undefined && lineStyle.width != 0){
					strokeWidth = lineStyle.width;
				}

				if(lineStyle.color != undefined){
					strokeColor = lineStyle.color;
				}
			}

			// 線の色と透明度を取得
			strokeArray = Sakuzu.convertColor(strokeColor);

			// style設定
			defaultStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor' : strokeArray[0],
				'strokeOpacity' : strokeArray[1],
				'strokeWidth' : strokeWidth,
				'strokeLinecap' : 'square',
				'fill' : false
			});

			// レイヤにstyle設定
			var _ds = {'default' : defaultStyle};
			layerStyleMap = new OpenLayers.StyleMap(_ds);

			// 作図用に設定
			affixStyle = {
				'name' : 'lineStringStyle',
				'type' : 'STRING',
				'width' : strokeWidth + ',static',
				'rgb' : Sakuzu.cssColorToDeci(strokeArray[0]),
				'strokeOpacity' : strokeArray[1],
				'display' : 'ON',
				'displaylevel' : 'all',
				'selection' : 'ON',
				'transparent' : 'ON'
			};
		}else if(subLayers[l].data.type == 'polygon'){
			// ポリゴン
			var polyGeom = geoJson.parseGeometry(subLayers[l].data.geometry);
			geometry = polyGeom.transform(resultProjection, projection);
			var strokeWidth = '2';
			var strokeColor = 'FF0000FF';
			var fillColor = 'FF00FF00';
			var fill = true;

			var lineStyle = subLayers[l].data.style.LineStyle;
			if(lineStyle != undefined){
				if(lineStyle.width != undefined && lineStyle.width != 0){
					strokeWidth = lineStyle.width;
				}

				if(lineStyle.color != undefined){
					strokeColor = lineStyle.color;
				}
			}

			var polyStyle = subLayers[l].data.style.PolyStyle;
			if(polyStyle != undefined){
				if(polyStyle.color != undefined){
					fillColor = polyStyle.color;
				}

				if(polyStyle.fill != undefined){
					fill = polyStyle.fill;
				}
			}

			// 線の色と透明度を取得
			strokeArray = Sakuzu.convertColor(strokeColor);
			// 面の色と透明度を取得
			fillArray = Sakuzu.convertColor(fillColor);

			// style設定
			defaultStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor' : strokeArray[0],
				'strokeOpacity' : strokeArray[1],
				'strokeWidth' : strokeWidth,
				'strokeLinecap' : 'square',
				'fillColor' : fillArray[0],
				'fillOpacity' : fillArray[1],
				'fill' : fill
			});

			// 選択した時のスタイル設定
			var selectStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor': '#0000FF',
				'strokeWidth': strokeWidth,
				'strokeLinecap' : 'square',
				'strokeOpacity' : 0.7,
				'fillOpacity' : 0.7,
				'fillColor' : '#0000FF',
				'fill' : true
			});

			// レイヤにstyle設定
			var _ds = {'default' : defaultStyle, 'select' : selectStyle};
			layerStyleMap = new OpenLayers.StyleMap(_ds);

			var paint;
			if(fill){
				paint = 'ON';
			} else{
				paint = 'OFF';
			}
			// 作図用に設定
			affixStyle = {
				'name' : 'polygonStyle',
				'type' : 'POLYGON',
				'display' : 'ON',
				'displaylevel' : 'all',
				'selection' : 'ON',
				'transparent' : 'ON',
				'width' : strokeWidth + ',static',
				'brgb' : Sakuzu.cssColorToDeci(strokeArray[0]),
				'brush' : 'solid',
				'rgb' : Sakuzu.cssColorToDeci(strokeArray[0]),
				'strokeOpacity' : strokeArray[1],
				'hrgb' : Sakuzu.cssColorToDeci(fillArray[0]),
				'fillOpacity' : fillArray[1],
				'paint': paint
			};
		}else if(subLayers[l].data.type == 'circle'){
			// 円
			var circleGeom = geoJson.parseGeometry(subLayers[l].data.geometry);
			geometry = circleGeom.transform(resultProjection, projection);
			var strokeWidth = '2';
			var strokeColor = 'FF0000FF';
			var fillColor = 'FF00FF00';
			var fill = true;

			var lineStyle = subLayers[l].data.style.LineStyle;
			if(lineStyle != undefined){
				if(lineStyle.width != undefined && lineStyle.width != 0){
					strokeWidth = lineStyle.width;
				}

				if(lineStyle.color != undefined){
					strokeColor = lineStyle.color;
				}
			}

			var polyStyle = subLayers[l].data.style.PolyStyle;
			if(polyStyle != undefined){
				if(polyStyle.color != undefined){
					fillColor = polyStyle.color;
				}

				if(polyStyle.fill != undefined){
					fill = polyStyle.fill;
				}
			}

			// 線の色と透明度を取得
			strokeArray = Sakuzu.convertColor(strokeColor);
			// 面の色と透明度を取得
			fillArray = Sakuzu.convertColor(fillColor);

			// style設定
			defaultStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor' : strokeArray[0],
				'strokeOpacity' : strokeArray[1],
				'strokeWidth' : strokeWidth,
				'strokeLinecap' : 'square',
				'fillColor' : fillArray[0],
				'fillOpacity' : fillArray[1],
				'fill' : fill
			});

			// 選択した時のスタイル設定
			var selectStyle = new OpenLayers.Style({
				'stroke' : true,
				'strokeColor': '#0000FF',
				'strokeWidth': strokeWidth,
				'strokeLinecap' : 'square',
				'strokeOpacity' : 0.7,
				'fillOpacity' : 0.7,
				'fillColor' : '#0000FF',
				'fill' : true
			});

			// レイヤにstyle設定
			var _ds = {'default' : defaultStyle, 'select' : selectStyle};
			layerStyleMap = new OpenLayers.StyleMap(_ds);

			var paint;
			if(fill){
				paint = 'ON';
			} else{
				paint = 'OFF';
			}
			// 作図用に設定
			affixStyle = {
				'name' : 'circleStyle',
				'type' : 'CIRCLE',
				'display' : 'ON',
//				'displaylevel' : 'all',
				'selection' : 'ON',
				'transparent' : 'ON',
				'width' : strokeWidth + ',static',
//				'brgb' : Sakuzu.cssColorToDeci(strokeArray[0]),
				'brush' : 'solid',
				'rgb' : Sakuzu.cssColorToDeci(strokeArray[0]),
				'strokeOpacity' : strokeArray[1],
				'hrgb' : Sakuzu.cssColorToDeci(fillArray[0]),
				'fillOpacity' : fillArray[1],
				'paint': paint
			};
		}else if(subLayers[l].data.type == 'text'){
			// 文字
			// → 内部的にシンボルとして扱うよう読み替える
			var pointGeom = geoJson.parseGeometry(subLayers[l].data.geometry);
			geometry = pointGeom.transform(resultProjection, projection);
			//geometry = new webtis.Geometry.TextRectangle(geometry.x, geometry.y, true);
			geometry.bounds = new OpenLayers.Bounds(geometry.x, geometry.y, geometry.x, geometry.y);
			geometry.components = [new OpenLayers.Geometry.Point(geometry.x, geometry.y)];
			geometry.selectDisplay = true;
			geometry.label = subLayers[l].data.name;
			var icon = '';
			var iconScale = 1;
			var labelScale = 1;
			var labelColor = 'FF000000';
			var iconSize = 0;
			var fillOpa = 1;
			var offset = 0;
			var labelSelect = true;

			var iconStyle = subLayers[l].data.style.IconStyle;
			if(iconStyle == undefined){
				iconStyle = {
					heading: 0,
					href: "http://portal.cyberjapan.jp/sys/v4/symbols/dot.png",
					scale: 1
				}
			}
			if(iconStyle.href == undefined || iconStyle.href == ""){
				iconStyle.href = "http://portal.cyberjapan.jp/sys/v4/symbols/dot.png";
			}
			icon = iconStyle.href;
			
			if(iconStyle.scale == undefined || iconStyle.scale == 0) {
				iconStyle.scale = 1;
			}
			iconScale = iconStyle.scale;
			iconSize = 20 * iconScale;

			var labelStyle = subLayers[l].data.style.LabelStyle;
			if(labelStyle != undefined){
				if(labelStyle.scale != undefined && labelStyle.scale != 0){
					labelScale = labelStyle.scale;
				}

				if(labelStyle.color != undefined && labelStyle.color != ''){
					labelColor = labelStyle.color;
				}
			}
			// テキストの基本サイズを10とする
			var labelSize = 10 * labelScale;

			// 文字の色と透明度を取得　文字色の指定がない場合は、デフォルトで黒を指定
			fontArray = Sakuzu.convertColor(labelColor);

			// アイコン＋ラベルにチェックがついていたら
			// テキストはデフォルトで表示
			var fontOpacity = iconlabel ? 1 : 0.00001;
			
			// style設定
			defaultStyle = new OpenLayers.Style({
				'fillOpacity' : fillOpa,
				'fill' : true,
				'externalGraphic' : icon,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': iconSize/2,
				'fontColor' : fontArray[0],
				'fontOpacity' : fontOpacity,
				'fontFamily' : 'ＭＳ ゴシック',
				'fontSize' : labelSize + 'px',
				'labelAlign' : 'lm',
				'labelSelect' : labelSelect
			});

			// 選択した時のスタイル
			var selectStyle = new OpenLayers.Style({
				'fillOpacity' : fillOpa,
				'fill' : true,
				'externalGraphic' : icon,
				'graphicWidth' : iconSize,
				'graphicHeight' : iconSize,
				'graphicXOffset' : -(iconSize/2),
				'graphicYOffset' : -(iconSize/2),
				'labelXOffset': iconSize/2,
				'fontColor' : fontArray[0],
				'fontOpacity' : fontOpacity,
				'fontFamily' : 'ＭＳ ゴシック',
				'fontSize' : labelSize + 'px',
				'labelAlign' : 'lm',
				'labelSelect' : labelSelect
			});

			// レイヤにstyle設定
			var _ds = {'default' : defaultStyle, 'select' : selectStyle};
			layerStyleMap = new OpenLayers.StyleMap(_ds);

			// 作図用に設定
			affixStyle = {
				'name' : 'textStyle',
				'type' : 'SYMBOL', // 'TEXT',
				'display' : 'ON',
				'displaylevel' : 'all',
				'selection' : 'ON',
				'transparent' : 'ON',
				'rgb' : Sakuzu.cssColorToDeci(fontArray[0]), //文字色
				'fontOpacity' : fontArray[1],
				'paint' : 'ON',
				'symbol' : {
					'size' : iconSize + ',static',
					'uri' : icon
				},
				'mode':'lm',          // 修正前はCC
				'font' : {
					'name' : 'ＭＳ ゴシック',
					'style' : '標準',
					'size' : labelSize + 'px'
				}
			};
			
			// テキスト→シンボルに読み替え
			subLayers[l].data.type = 'symbol';
		}

		// feature作成
		if (geometry) {
			//var feature = new OpenLayers.Feature.Vector(geometry, attributes, style);
			var attributes = {};
			attributes["name"] = subLayers[l].data.name ? subLayers[l].data.name : "";
			attributes["description"] = subLayers[l].data.description ? subLayers[l].data.description : "";
			var feature = new OpenLayers.Feature.Vector(geometry, attributes);
			features.push(feature);
		}

		// 読み込んだ地物情報を表示するのに、Sakuzu.LayerVectorを使用する
		var layerName = subLayers[l].data.layerName ? subLayers[l].data.layerName : "レイヤー";
		var layer = new Sakuzu.LayerVector(layerName, layerStyleMap ? {styleMap: layerStyleMap} : null);
		layer.description = subLayers[l].data.description;
		layer.visibility = true;
		layer.styleType = subLayers[l].data.type;
		// 選択出来るか否かを設定
		layer.JSGISelection = true;
		// レイヤの表示/非表示切り替え用
		layer.filename = subLayers[l].filename;
		layer.affixStyle = affixStyle;
		layer.addFeatures(features);
		sakuzuModule.addLayer(layer);
		var layerBounds = layer.getDataExtent();
		if (layerBounds) {
			if (!bounds) {
				bounds = new OpenLayers.Bounds(layerBounds.left, layerBounds.bottom, layerBounds.right, layerBounds.top);
			} else {
				bounds.extend(layerBounds);
			}
		}
		fileName = subLayers[l].filename;
		// ループの最後で切り替えエリアに読み込んだファイル名を表示する
		if(l == subLayers.length - 1){
			Sakuzu.addLayerList(fileName);
		}
	}

	if(dispFlg){
		// ポップアップ表示ONの時だけ実施
		sakuzuModule.enablePopupLayer();
	}
	if(bounds && zoomflg){
		map.zoomToExtent(bounds, false);
	}
};

/**
 * 色を変換する
 */
Sakuzu.convertColor = function(strColor) {
	var colorArray = [];
	var color = null;
	var opacity = 0;
	if(strColor == '' || strColor == undefined){
		color = '#00FF00';
		colorArray.push(color);
		opacity = 0.5;
		colorArray.push(opacity);
	} else{
		if(strColor.length == 8){
			// 文字列の長さが8桁だったら、変換対象にする
			color = '#' + strColor.substring(6,8) + strColor.substring(4,6) + strColor.substring(2,4);
			colorArray.push(color);
			var aa = strColor.substring(0,2);
			aa = (parseInt(aa,16) / 255) * 100;
			opacity = Math.round(aa) / 100;
			colorArray.push(opacity);
		} else{
			// 文字列の長さが8桁以外だったら、デフォルト値を設定する
			color = '#00FF00';
			colorArray.push(color);
			opacity = 0.5;
			colorArray.push(opacity);
		}
	}
	return colorArray;
};

/**
 * 現在の時刻を文字列で取得(yyyymmddhhmmss)
 */
Sakuzu.getCurrent = function(){
	var current = new Date();
	
	var Year = current.getFullYear();
	var Month = current.getMonth() + 1;
	var Day = current.getDate();
	var Hour = current.getHours();
	var Minute = current.getMinutes();
	var Second = current.getSeconds();

	var ret;
	ret = String(Year) + ("0" + String(Month)).slice(-2) + ("0" + String(Day)).slice(-2) + ("0" + String(Hour)).slice(-2) + ("0" + String(Minute)).slice(-2) + ("0" + String(Second)).slice(-2);
	
	return ret;
}

Sakuzu.addLayerList = function(fileName) {
	layerModule.addNode({name: fileName});
};

Sakuzu.isTableDescription = function(description) {
	var key = [];
	var value = [];

	// 属性情報入力方法切り替え
	// HTML指定フォーマット定義
	var table_start = '<table'
	var tr_start = 'tr'
	var key_start = 'td style="color:#0000FF;padding-right:1em;"'
	var val_start = 'td'
	var link_start = 'a href'
	var link_end = '/a'
	var td_end = '/td'
	var tr_end = '/tr'
	var table_end = '/table>'

	var okflg = 0;				// 構文チェックフラグ
	var status = 0;				// 0:文頭構文チェックＯＫ　1:項目名_取得準備完了　2:値_取得準備完了
	var key = new Array();		// 項目名
	var value = new Array();	// 値
	var j = 0;					// データ数

	if (description){
		var splitItems = description.split("><");
		for(var i = 0; i < splitItems.length; i++) {
			var item = splitItems[i];
			if(i == 0){	
			// 文頭が<table>か？
				if(item != table_start){
					break;
				}
				status = 1;
			} else if(i == splitItems.length-1){
			// 文末が</table>か？
				if(status != 1){
					break;
				}
				if(item != table_end){
					break;
				}
				okflg = 1;
			} else if(status == 1){
			// 【項目名のチェック＆取得】
				// 項目名の文頭構文チェック
				if(item != tr_start){				// <tr>かチェック
					break;
				}
				i = i + 1;
				var item = splitItems[i];
				var keyitem1 = item.split(">");
				if(keyitem1[0] != key_start){		// <td ・・・>かチェック
					break;
				}
				if(keyitem1.length == 2){
				// 項目名の構文チェック＜項目名データあり＞
					var keyitem2 = keyitem1[1].split("<");
					if(keyitem2.length != 2){		//「<」区切りの要素が2個かチェック
						break;
					}
					if(keyitem2[1] != td_end){		// </td>かチェック
						break;
					}
					key[j] = keyitem2[0];			// 項目名データを取得
				} else {
				// 項目名の構文チェック＜項目名データなし(空欄)＞
					i = i + 1;
					var item = splitItems[i];
					if(item != td_end){				// </td>かチェック
						break;
					}
					key[j] = "";					// 項目名データ(空)を取得
				}
				status = 2;
			} else if(status == 2){
			// 【値のチェック＆取得】
				var valitem1 = item.split(">");
				if(valitem1[0] != val_start){		// <td ・・・>かチェック
					break;
				}
				// 値の文末構文チェック＜値データあり(文字列)＞
				if(valitem1.length == 2){
					var valitem2 = valitem1[1].split("<");
					if(valitem2.length != 2){		//「<」区切りの要素が2個かチェック
						break;
					}
					if(valitem2[1] != td_end){		// </td>かチェック
						break;
					}
					i = i + 1;
					var item = splitItems[i];
					if(item != tr_end){				// </tr>かチェック
						break;
					}
					value[j] = valitem2[0];			// 値データを取得
					j = j + 1;
					status = 1;
				} else if(valitem1.length == 1){
					i = i + 1;
					var item = splitItems[i];
					if(item == td_end){				//「/td」かチェック
				// 値の文末構文チェック＜値データなし(空欄)＞
						i = i + 1;
						var item = splitItems[i];
						if(item != tr_end){			// </tr>かチェック
							break;
						}
						value[j] = "";				// 値データ(空)を取得
					} else {
				// 値の文末構文チェック＜値データあり(リンク)＞
						// リンクの文頭構文チェック
						var linkitem1 = item.split("=");
						if(linkitem1[0] != link_start){	// <a href>かチェック
							break;
						}
						// リンクの文末構文チェック
						linkitem1 = item.split(">");
						if(linkitem1.length != 2){		// 「>」区切りの要素が2個かチェック
							break;
						}
						var linkitem2 = linkitem1[1].split("<");
						if(linkitem2.length != 2){		// 「<」区切りの要素が2個かチェック
							break;
						}
						if(linkitem2[1] != link_end){	// </a>かチェック
							break;
						}
						i = i + 1;
						var item = splitItems[i];
						if(item != td_end){				// </td>かチェック
							break;
						}
						i = i + 1;
						var item = splitItems[i];
						if(item != tr_end){				// </tr>かチェック
							break;
						}
						value[j] = linkitem2[0];		// 値データ(リンク)を取得
					}
					j = j + 1;
					status = 1;
				}else{
					break;
				}
			} else {
				break;
			}
		}
	}

	return (okflg == 1 && j > 0 || !description);
}

Sakuzu.escapeDescription = function(str) {
	var parts = [];

	var str = str.replace(/\n/g, "");

	while (str.length > 0) {
		var m = str.match(/<[^>]+>/i);
		if (!m) {
			parts.push({
				part: str,
				istag: false
			});
			break;
		}
		
		if (m.index > 0) {
			parts.push({
				part: str.substr(0, m.index),
				istag: false
			});
		}
		
		parts.push({
			part: m[0],
			istag: true
		});
		str = str.substr(m.index + m[0].length);
	}

	var ret = "";

	var wlist = [
		{
			tag: "a",
			attr: [
				{ name: "href" },
				{ name: "style" }
			],
			force: [
				{ name: "target", value: "_blank" }
			]
		},
		{ tag: "br" },
		{ tag: "hr" },
		{ tag: "b" },
		{ tag: "i" },
		{ tag: "u" },
		{
			tag: "font",
			attr: [
				{ name: "size" },
				{ name: "color" },
				{ name: "style" }
			]
		},
		{
			tag: "table",
			attr: [
				{ name: "width" },
				{ name: "style" }
			]
		},
		{
			tag: "tr",
			attr: [
				{ name: "align" },
				{ name: "style" }
			]
		},
		{
			tag: "td",
			attr: [
				{ name: "align" },
				{ name: "height" },
				{ name: "width" },
				{ name: "colspan" },
				{ name: "rowspan" },
				{ name: "style" }
			]
		},
	]

	for (var i = 0; i < parts.length; i++) {
		if (parts[i].istag) {
		
			var part = parts[i].part;
		
			if (part.match(/javascript/i)){
				continue;
			}
		
			var tag = part.match(/<(\S+)(?:\s+.+)?>/);

			if (tag) {
				// タグ
				for (var j = 0; j < wlist.length; j++) {
					if (!wlist[j]) break;
					
					var re = new RegExp("\/?" + wlist[j].tag + "$", "i");
					var ma = tag[1].match(re);

					if (ma) {
						var vals = [];
						var attrs = wlist[j].attr ? wlist[j].attr : [];
						
						// 属性チェック
						for(var k = 0; k < attrs.length; k++) {
							// ダブルクォーテーションなし
							var re1 = new RegExp(".+<?\\s" + attrs[k].name + "=\\s*(.*?)[\\s|>].*", "i");
							var val1 = part.match(re1);
							if (val1 && !val1[1].match(/[\'|"]/i)) {
								vals.push({
									name: attrs[k].name,
									value: val1[1]
								});
								continue;
							}

							// ダブルクォーテーションあり
							var re2 = new RegExp(".+<?\\s" + attrs[k].name + "=[\\'|\"](.*?)[\\'|\"].*", "i");
							var val2 = part.match(re2);
							if (val2) {
								vals.push({
									name: attrs[k].name,
									value: val2[1]
								});
								continue;
							}
						}

						// 必須属性
						if (wlist[j].force) {
							vals = vals.concat(wlist[j].force);
						}

						if (vals.length > 0) {
							ret = ret + "<" +  wlist[j].tag;
							for (var m = 0; m < vals.length; m++) {
								ret = ret + ' ' + vals[m].name + '="' + vals[m].value + '"';
							}
							ret = ret + ">";
						}
						else {
							ret = ret + "<" + ma[0] + ">";
						}
					}
				}
			}
		}
		else {
			// タグ以外の文字をエスケープ
			ret = ret + webtis.Format.JSGIJSON.escapeHTML(parts[i].part);
		}
	}
	
	return ret;
};

Sakuzu.LayerVector = OpenLayers.Class(webtis.Layer.Vector, {
	
	displayLevel: "all",
	
	initialize: function(name, options) {
		this.renderers = [Sakuzu.RendererSVG, Sakuzu.RendererVML, 'Canvas'];
		//this.renderers = [webtis.Renderer.SVG, Sakuzu.RendererVML, 'Canvas'];
		OpenLayers.Layer.Vector.prototype.initialize.apply(this, arguments);
	},

	CLASS_NAME: "Sakuzu.LayerVector"
});

Sakuzu.RendererVML = OpenLayers.Class(webtis.Renderer.VML, {
	setStyle: function(node, style, options, geometry) {
		style = style  || node._style;
		options = options || node._options;
		var fillColor = style.fillColor;

		if (node._geometryClass === "OpenLayers.Geometry.Point") {
			if (style.externalGraphic && style.fillOpacity!=0) {
				if (style.graphicTitle) {
					node.title=style.graphicTitle;
				} 
				var width = style.graphicWidth || style.graphicHeight;
				var height = style.graphicHeight || style.graphicWidth;
				width = width ? width : style.pointRadius*2;
				height = height ? height : style.pointRadius*2;

				var resolution = this.getResolution();
				
				var xOffset = (style.graphicXOffset != undefined) ?
						style.graphicXOffset : -(0.5 * width);
				var yOffset = (style.graphicYOffset != undefined) ?
						style.graphicYOffset : -(0.5 * height);

				node.style.left = (((geometry.x/resolution - this.offset.x)+xOffset) | 0) + "px";
				node.style.top = (((geometry.y/resolution - this.offset.y)-(yOffset+height)) | 0) + "px";
				
				node.style.width = width + "px";
				node.style.height = height + "px";
				node.style.flip = "y";

				// modify fillColor and options for stroke styling below
				fillColor = "none";
				options.isStroked = false;
			} else if (this.isComplexSymbol(style.graphicName)) {
				var cache = this.importSymbol(style.graphicName);
				node.path = cache.path;
				node.coordorigin = cache.left + "," + cache.bottom;
				var size = cache.size;
				node.coordsize = size + "," + size;
				this.drawCircle(node, geometry, style.pointRadius);
				node.style.flip = "y";
			} else {
				this.drawCircle(node, geometry, style.pointRadius);
			}
		}

		// fill 
		if (options.isFilled) { 
			node.fillcolor = fillColor; 
		} else { 
			node.filled = "false"; 
		}
		var fills = node.getElementsByTagName("fill");
		var fill = (fills.length == 0) ? null : fills[0];
		if (!options.isFilled) {
			if (fill) {
				node.removeChild(fill);
			}
		} else {
			if (!fill) {
				fill = this.createNode('olv:fill', node.id + "_fill");
			}
			fill.opacity = style.fillOpacity;

			if (node._geometryClass === "OpenLayers.Geometry.Point" &&
					style.externalGraphic) {

				// override fillOpacity
				if (style.graphicOpacity) {
					fill.opacity = style.graphicOpacity;
				}

				fill.src = style.externalGraphic;
				fill.type = "frame";

				if (!(style.graphicWidth && style.graphicHeight)) {
					fill.aspect = "atmost";
				}
			}
			if (fill.parentNode != node) {
				node.appendChild(fill);
			}
		}

		if(node._geometryClass === "OpenLayers.Geometry.Point") {
			node.style.rotation = 0;
		}

		// stroke 
		var strokes = node.getElementsByTagName("stroke");
		var stroke = (strokes.length == 0) ? null : strokes[0];
		if (!options.isStroked) {
			node.stroked = false;
			if (stroke) {
				stroke.on = false;
			}
		} else {
			if (!stroke) {
				stroke = this.createNode('olv:stroke', node.id + "_stroke");
				node.appendChild(stroke);
			}
			stroke.on = true;
			stroke.color = style.strokeColor; 
			stroke.weight = style.strokeWidth + "px"; 
			stroke.opacity = style.strokeOpacity;
			stroke.endcap = style.strokeLinecap == 'butt' ? 'flat' :
				(style.strokeLinecap || 'round');
			if (style.strokeDashstyle) {
				stroke.dashstyle = this.dashStyle(style);
			}
		}

		if (style.cursor != "inherit" && style.cursor != null) {
			node.style.cursor = style.cursor;
		}
		return node;
	},
	_drawText: function(featureId, style, location, label) {
		var labelText = label;
		var label = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX, "olv:rect");
		var textbox = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_textbox", "olv:textbox");
		
		var labelFontSize = 12.0;
		if (style.fontSize) {
			labelFontSize = parseFloat(style.fontSize);
		}
		if (labelFontSize%2!=0) {
			labelFontSize+=1;
		}
		
		var labelWidth = this._calcLabelWidth(labelText,labelFontSize,style.fontWeight == "bold")+(labelFontSize/2);
		var labelHeight = ((labelFontSize * 1.5) | 0);
		
		var resolution = this.getResolution();
		
		var labelLeft = (location.x/resolution - this.offset.x) | 0;
		var labelTop = (location.y/resolution - this.offset.y) | 0;
		labelTop -= labelHeight;

		label.style.left = labelLeft + "px";
		label.style.top = labelTop + "px";
		label.style.width = labelWidth + "px";
		label.style.height = labelHeight + "px";
		label.style.flip = "y";

		//背景色・囲いは常になし
		label.stroked = false;
		label.filled = false;

		if (style.fill) { 
			label.fillcolor = style.fillColor;
			var fill = fill = this.createNode('olv:fill', featureId + "_fill");;
			fill.opacity = style.fillOpacity;
			label.appendChild(fill);
		}

		textbox.innerText = labelText;
		textbox.style.fontFamily = "monospace";
		textbox.style.fontSize = labelFontSize + "px";
		textbox.style.lineHeight = labelFontSize + "px";
		if (style.fontColor) {
			textbox.style.color = style.fontColor;
			if (style.orgStyle == 'select') textbox.style.color = "#0000ff";
		}
		if (style.fontOpacity) {
			textbox.style.filter = 'alpha(opacity=' + (style.fontOpacity * 100) + ')';
			if (style.orgStyle == 'select') textbox.style.filter = 'alpha(opacity=50)';
		}
		if (style.fontFamily) {
			textbox.style.fontFamily = style.fontFamily;
		}
		if (style.fontWeight) {
			textbox.style.fontWeight = style.fontWeight;
		}
		
		if(style.labelSelect === true) {
			label._featureId = featureId;
			textbox._featureId = featureId;
			textbox._geometry = location;
			textbox._geometryClass = location.CLASS_NAME;
		}else{
			textbox._featureId = null;
		}
		
		textbox.style.whiteSpace = "nowrap";
		
		var inset = ((labelFontSize/4) | 0) + "px";
		textbox.inset = inset + "," + inset + "," + inset + "," + inset;
		//if(!label.parentNode) {
			label.appendChild(textbox);
			this.textRoot.appendChild(label);
		//}
		
		var align = style.labelAlign || "cm";
		if (align.length == 1) {
			align += "m";
		}
		textbox.style.textAlign="center";
		var labelHeight = textbox.clientHeight;
		var xshift = 0;
		if (align.indexOf("l") == 0) {
			xshift = 0;;
		} else if (align.indexOf("r") == 0) {
			xshift = (labelWidth+(labelFontSize/2));
		} else {
			xshift = (labelWidth+(labelFontSize/2))/2;
		}
		var yshift = (labelHeight+(labelFontSize/2))/2;
		
		labelLeft = labelLeft - xshift - 1;
		labelTop = labelTop + yshift;
		
		label.style.left = (labelLeft | 0) + "px";
		label.style.top = (labelTop | 0) + "px";
		
	},

	CLASS_NAME: "Sakuzu.RendererVML"

});

Sakuzu.RendererSVG = OpenLayers.Class(webtis.Renderer.SVG, {
	_drawText: function(featureId, style, location, _label, _bbox) {
		var resolution = this.getResolution();
		
		var x = (location.x / resolution + this.left);
		var y = (location.y / resolution - this.top);
		
		var label = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX, "text");
		var tspan = this.nodeFactory(featureId + this.LABEL_ID_SUFFIX + "_tspan", "tspan");
		label.setAttributeNS(null, "x", x);
		label.setAttributeNS(null, "y", -y);

		if (style.fontColor) {
			label.setAttributeNS(null, "fill", style.fontColor);
			if (style.orgStyle == 'select'){
				label.setAttributeNS(null, "fill", "#0000ff");
			}
		}
		if (style.fontOpacity) {
			label.setAttributeNS(null, "opacity", style.fontOpacity);
			if (style.orgStyle == 'select'){
				label.setAttributeNS(null, "opacity", 0.5);
			}
		}
		if (style.fontFamily) {
			label.setAttributeNS(null, "font-family", style.fontFamily);
		}
		if (style.fontSize) {
			label.setAttributeNS(null, "font-size", style.fontSize);
			label.setAttributeNS(null,"style","line-height:1em;");
		}
		if (style.fontWeight) {
			label.setAttributeNS(null, "font-weight", style.fontWeight);
		}
		if(style.labelSelect === true) {
			label.setAttributeNS(null, "pointer-events", "visible");
			label._featureId = featureId;
			tspan._featureId = featureId;
			tspan._geometry = location;
			tspan._geometryClass = location.CLASS_NAME;
		} else {
			label.setAttributeNS(null, "pointer-events", "none");
		}
		var align = style.labelAlign || "cm";
		label.setAttributeNS(null, "text-anchor",
				OpenLayers.Renderer.SVG.LABEL_ALIGN[align[0]] || "middle");
		if (OpenLayers.IS_GECKO === true) {
			label.setAttributeNS(null, "dominant-baseline",
				OpenLayers.Renderer.SVG.LABEL_ALIGN[align[1]] || "central");
		}
		if (OpenLayers.IS_GECKO === false) {
			if (OpenLayers.BROWSER_NAME != "msie") {
				tspan.setAttributeNS(null, "baseline-shift",
					OpenLayers.Renderer.SVG.LABEL_VSHIFT[align[1]] || "-35%");
			}
		}
		tspan.textContent = _label;
		if(!label.parentNode) {
			label.appendChild(tspan);
			this.textRoot.appendChild(label);
		}
		var textBbox = label.getBBox();
		if(OpenLayers.BROWSER_NAME == "msie") {
			var ratio = 0;
			if (align[1] == "t") {
				ratio = 0.85;// 微調整済み
			} else if (align[1] == "b") {
				ratio = 0;
			} else {
				ratio = 0.35;
			}
			label.setAttributeNS(null, "y", -y+(textBbox.height*ratio));
			textBbox = label.getBBox();
		}
		
		// くくり線を設定。
		if (_bbox) {
			_bbox.setAttributeNS(null,"x",textBbox.x-5);
			_bbox.setAttributeNS(null,"y",textBbox.y);
			_bbox.setAttributeNS(null,"width",textBbox.width+10);
			_bbox.setAttributeNS(null,"height",textBbox.height);
		}
	},
	
	CLASS_NAME: "Sakuzu.RendererSVG"
});

//
// @source = dataset.js
//
var overLayer;
var dataSetObj = [];

// HTML保存したファイルから呼び出される
function changeDataSet(dataId){
	var mapId = dataId2mapId(dataId);
	changeMap(mapId);
}

function dataId2mapId(dataId)
{
	var mapId;
	switch (dataId) {
		case "GLMD":
		case "JAIS":
		case "BAFD1000K":
		case "BAFD200K":
		case "DJBMM":
		case "std2012":
			// 標準地図シンプルスキーム版（旧）
			mapId = "STD";
			break;

		case "std":
		case "D200K":
		case "D25K2BRWN":
		case "D25K2":
		case "D2500":
			// 標準地図シンプルスキーム版（ハイブリッド）
			mapId = "STD";
			break;

		case "JAISG":
		case "GRAY":
		case "D25KG":
		case "D2500G":
		case "monotoneshade2012":
			// モノトーン
			mapId = "pale";
			break;

		case "JAIS2":
//		case "D25K2":
//		case "D2500":
			// 春夏秋冬の区別ができないもの
			mapId = "STD";
			break;

		case "DJBMO":
		case "ort":
			// 2007～
			mapId = "DJBMO";
			break;

		case "NLII1":
			// 1974
			mapId = "NLII1";
			break;

		case "NLII2":
			// 1979
			mapId = "NLII2";
			break;

		case "NLII3":
			// 1984
			mapId = "NLII3";
			break;

		case "NLII4":
			// 1988
			mapId = "NLII4";
			break;

		case "SPRING":
			mapId = "STD";
			break;

		case "SUMMER":
		case "greenshade2012":
			mapId = "STD";
			break;

		case "AUTUMN":
		case "brownshade2012":
			mapId = "STD";
			break;

		case "WINTER":
			mapId = "STD";
			break;

		case "BLANK":
		case "blank":
			// 白地図
			mapId = "Blank";
			break;

		case "JAISE":
		case "english":
			// 英語
			mapId = "english";
			break;

		case "RELIEF":
			// 色別標高図
			mapId = "Relief";
			break;

		case "pale":
			// 淡色地図
			mapId = "pale";
			break;

		default:
			mapId = "STD";
			break;
	}

	return mapId;
}

function changeMap(mapid){

	if (!mapid) {
		return;
	}

	var tmpDataSet = dataSetObj.dataSet_Default;
	var overLayerZindex = 110;

	if(overLayer){
		map.removeLayer(overLayer);
		overLayer = null;
	}

	var overlayDataSet = null;
	var overlayName;

	switch (mapid){
		// 新版
		case 'STD':		tmpDataSet = dataSetObj.dataSet_Std;		break;
		case 'pale':	tmpDataSet = dataSetObj.dataSet_Pale;		break;
		case 'Blank':	tmpDataSet = dataSetObj.dataSet_Blank;		break;
		case 'english':	tmpDataSet = dataSetObj.dataSet_English;	break;

		// 旧版
		case 'STD2012':	tmpDataSet = dataSetObj.dataSet_Std2012;	break;
		case 'Summer':	tmpDataSet = dataSetObj.dataSet_Greenshade2012; overlayName = "greenshade2012"; overlayDataSet = dataSetObj.dataSetOverlay_Transparent2012; break;
		case 'Autumn':	tmpDataSet = dataSetObj.dataSet_Brownshade2012; overlayName = "brownshade2012"; overlayDataSet = dataSetObj.dataSetOverlay_Transparent2012; break;
		case 'Grey':	tmpDataSet = dataSetObj.dataSet_MonotoneShade2012;   overlayName = "monotoneshade2012";  overlayDataSet = dataSetObj.dataSetOverlay_Monotone2012;  break;

		// 写真
		case 'DJBMO':	tmpDataSet = dataSetObj.dataSet_Y2K7; overlayName = "IndexY2K7"; overlayDataSet = dataSetObj.dataSetOverlay_IndexY2K7; break;

		// 旧マップID対応
		case 'Season':	tmpDataSet = dataSetObj.dataSet_Season;	break;
		case 'Spring':	tmpDataSet = dataSetObj.dataSet_Spring; overlayName = "Color"; overlayDataSet = dataSetObj.dataSetOverlay_Color; break;
		case 'Summer_n':	tmpDataSet = dataSetObj.dataSet_Summer_n; overlayName = "Color"; overlayDataSet = dataSetObj.dataSetOverlay_Summer_n; break;
		case 'Autumn_n':	tmpDataSet = dataSetObj.dataSet_Autumn_n; overlayName = "Color"; overlayDataSet = dataSetObj.dataSetOverlay_Autumn_n; break;
		case 'Winter':	tmpDataSet = dataSetObj.dataSet_Winter; overlayName = "Color"; overlayDataSet = dataSetObj.dataSetOverlay_Color; break;
		case 'Grey_n':	tmpDataSet = dataSetObj.dataSet_Mono_n;   overlayName = "Grey";  overlayDataSet = dataSetObj.dataSetOverlay_Mono_n;  break;

		case 'Relief':	tmpDataSet = dataSetObj.dataSet_Relief;		break;
		case 'Jaise': 	tmpDataSet = dataSetObj.dataSet_English;	break;
		case 'NLII4':	tmpDataSet = dataSetObj.dataSet_YK88;		break;
		case 'NLII3':	tmpDataSet = dataSetObj.dataSet_YK84;		break;
		case 'NLII2':	tmpDataSet = dataSetObj.dataSet_YK79;		break;
		case 'NLII1':	tmpDataSet = dataSetObj.dataSet_YK74;		break;
		case 'DJBMM_n':	tmpDataSet = dataSetObj.dataSet_Std;		break;
		case 'DJBMM':	tmpDataSet = dataSetObj.dataSet_Std2012;	break;
		default:		tmpDataSet = dataSetObj.dataSet_Std;		break;
	}

	var command = "";

	var baseZIndex = 100;
	if (webtisMap) {
		baseZIndex = webtisMap.getZIndex();
		map.removeLayer(webtisMap);
	}

	var options = {
		wrapDateLine: true,
		dataSet: tmpDataSet,
		errorImagePath: webtis.TILE_URL.NODATA
	};
	if (typeof isReceivePrintData != "undefined" && isReceivePrintData == true) {
		options.tileSide = 128;
	}

	webtisMap = new webtis.Layer.BaseMap("Base map", options);

/*
	webtisMap = new webtis.Layer.BaseMap("Base map", {
		wrapDateLine: true,
		dataSet: tmpDataSet,
		errorImagePath: webtis.TILE_URL.NODATA
	});
*/
	map.addLayer(webtisMap);
	webtisMap.setZIndex(baseZIndex);

	setTimeout('webtisMap.redraw(true);', 3000);

	if (overlayDataSet != null) {
		var options = {
			isBaseLayer: false,
			dataSet: overlayDataSet,
			wrapDateLine: true
		};

		if (typeof isReceivePrintData != "undefined" && isReceivePrintData == true) {
			options.tileSide = 128;
		}
		overLayer = new webtis.Layer.BaseMap(overlayName, options);
/*
		overLayer = new webtis.Layer.BaseMap(overlayName, {
			isBaseLayer: false,
			dataSet: overlayDataSet,
			wrapDateLine: true,
		});
*/
		map.addLayer(overLayer);
		overLayer.setZIndex(overLayerZindex);

		setTimeout('overLayer.redraw(true);', 3000);
	}
}

/* 地図切り替え時のデータセットを定義 */
// 段彩陰影パターン春
dataSetObj.dataSet_Spring = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS2" },
	6: { "dataId" : "JAIS2" },
	7: { "dataId" : "JAIS2" },
	8: { "dataId" : "JAIS2" },

	9: { "dataId" : "SPRING" },
	10: { "dataId" : "SPRING" },
	11: { "dataId" : "SPRING" },
	12: { "dataId" : "SPRING" },
	13: { "dataId" : "SPRING" },
	14: { "dataId" : "SPRING" },

	15: { "dataId" : "D25K2" },
	16: { "dataId" : "D25K2" },
	17: { "dataId" : "D25K2" },

	18: { "dataId" : "D2500" }
};

// 段彩陰影パターン夏
dataSetObj.dataSet_Summer = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS2" },
	6: { "dataId" : "JAIS2" },
	7: { "dataId" : "JAIS2" },
	8: { "dataId" : "JAIS2" },

	9: { "dataId" : "SUMMER" },
	10: { "dataId" : "SUMMER" },
	11: { "dataId" : "SUMMER" },
	12: { "dataId" : "SUMMER" },
	13: { "dataId" : "SUMMER" },
	14: { "dataId" : "SUMMER" },

//	15: { "dataId" : "D25K2" },
//	16: { "dataId" : "D25K2" },
//	17: { "dataId" : "D25K2" },

//	18: { "dataId" : "D2500" }

	15: { "dataId" : "DJBMM" },
	16: { "dataId" : "DJBMM" },
	17: { "dataId" : "DJBMM" },

	18: { "dataId" : "FGD" }
};

// 段彩陰影パターン夏（新彩色地図用）
dataSetObj.dataSet_Summer_n = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS2" },
	6: { "dataId" : "JAIS2" },
	7: { "dataId" : "JAIS2" },
	8: { "dataId" : "JAIS2" },

	9: { "dataId" : "SUMMER" },
	10: { "dataId" : "SUMMER" },
	11: { "dataId" : "SUMMER" },
	12: { "dataId" : "D200KGRN" },
	13: { "dataId" : "D200KGRN" },
	14: { "dataId" : "D200KGRN" },

//	15: { "dataId" : "D25K2" },
//	16: { "dataId" : "D25K2" },
//	17: { "dataId" : "D25K2" },

//	18: { "dataId" : "D2500" }

	15: { "dataId" : "D25K2GRN" },
	16: { "dataId" : "D25K2" },
	17: { "dataId" : "D25K2" },

	18: { "dataId" : "D2500" }
};

// 段彩陰影パターン秋
dataSetObj.dataSet_Autumn = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS2" },
	6: { "dataId" : "JAIS2" },
	7: { "dataId" : "JAIS2" },
	8: { "dataId" : "JAIS2" },

	9: { "dataId" : "AUTUMN" },
	10: { "dataId" : "AUTUMN" },
	11: { "dataId" : "AUTUMN" },
	12: { "dataId" : "AUTUMN" },
	13: { "dataId" : "AUTUMN" },
	14: { "dataId" : "AUTUMN" },

//	15: { "dataId" : "D25K2" },
//	16: { "dataId" : "D25K2" },
//	17: { "dataId" : "D25K2" },

//	18: { "dataId" : "D2500" }
	15: { "dataId" : "DJBMM" },
	16: { "dataId" : "DJBMM" },
	17: { "dataId" : "DJBMM" },

	18: { "dataId" : "FGD" }
};

// 段彩陰影パターン冬
dataSetObj.dataSet_Winter = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS2" },
	6: { "dataId" : "JAIS2" },
	7: { "dataId" : "JAIS2" },
	8: { "dataId" : "JAIS2" },

	9: { "dataId" : "WINTER" },
	10: { "dataId" : "WINTER" },
	11: { "dataId" : "WINTER" },
	12: { "dataId" : "WINTER" },
	13: { "dataId" : "WINTER" },
	14: { "dataId" : "WINTER" },

	15: { "dataId" : "D25K2" },
	16: { "dataId" : "D25K2" },
	17: { "dataId" : "D25K2" },

	18: { "dataId" : "D2500" }
};

// 段彩陰影パターン秋（新彩色地図用）
dataSetObj.dataSet_Autumn_n = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS2" },
	6: { "dataId" : "JAIS2" },
	7: { "dataId" : "JAIS2" },
	8: { "dataId" : "JAIS2" },

	9: { "dataId" : "AUTUMN" },
	10: { "dataId" : "AUTUMN" },
	11: { "dataId" : "AUTUMN" },
	12: { "dataId" : "D200KBRWN" },
	13: { "dataId" : "D200KBRWN" },
	14: { "dataId" : "D200KBRWN" },

//	15: { "dataId" : "D25K2" },
//	16: { "dataId" : "D25K2" },
//	17: { "dataId" : "D25K2" },

//	18: { "dataId" : "D2500" }
	15: { "dataId" : "D25K2BRWN" },
	16: { "dataId" : "D25K2" },
	17: { "dataId" : "D25K2" },

	18: { "dataId" : "D2500" }
};

// 段彩陰影パターン特殊
dataSetObj.dataSet_Season = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS2" },
	6: { "dataId" : "JAIS2" },
	7: { "dataId" : "JAIS2" },
	8: { "dataId" : "JAIS2" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },
	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "D25K2" },
	16: { "dataId" : "D25K2" },
	17: { "dataId" : "D25K2" },

	18: { "dataId" : "D2500" }
};

// モノトーン地図
dataSetObj.dataSet_Mono = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAISG" },
	6: { "dataId" : "JAISG" },
	7: { "dataId" : "JAISG" },
	8: { "dataId" : "JAISG" },

	9: { "dataId" : "GRAY" },
	10: { "dataId" : "GRAY" },
	11: { "dataId" : "GRAY" },
	12: { "dataId" : "GRAY" },
	13: { "dataId" : "GRAY" },
	14: { "dataId" : "GRAY" },

//	15: { "dataId" : "D25KG" },
//	16: { "dataId" : "D25KG" },
//	17: { "dataId" : "D25KG" },

//	18: { "dataId" : "D2500G" }

	15: { "dataId" : "DJBMM" },
	16: { "dataId" : "DJBMM" },
	17: { "dataId" : "DJBMM" },

	18: { "dataId" : "FGD" }
};

// モノトーン地図(シンプルスキーム)
dataSetObj.dataSet_MonotoneShade2012 = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },

	5: { "dataId" : "monotone2012" },
	6: { "dataId" : "monotone2012" },
	7: { "dataId" : "monotone2012" },
	8: { "dataId" : "monotone2012" },

	9: { "dataId" : "monotoneshade2012" },
	10: { "dataId" : "monotoneshade2012" },
	11: { "dataId" : "monotoneshade2012" },

	12: { "dataId" : "monotoneshade2012" },
	13: { "dataId" : "monotoneshade2012" },
	14: { "dataId" : "monotoneshade2012" },

	15: { "dataId" : "std2012" },
	16: { "dataId" : "std2012" },
	17: { "dataId" : "std2012" },

	18: { "dataId" : "std2012" }
};

// 新モノトーン地図
dataSetObj.dataSet_Mono_n = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAISG" },
	6: { "dataId" : "JAISG" },
	7: { "dataId" : "JAISG" },
	8: { "dataId" : "JAISG" },

	9: { "dataId" : "GRAY" },
	10: { "dataId" : "GRAY" },
	11: { "dataId" : "GRAY" },
	12: { "dataId" : "D200KG" },
	13: { "dataId" : "D200KG" },
	14: { "dataId" : "D200KG" },

//	15: { "dataId" : "D25KG" },
//	16: { "dataId" : "D25KG" },
//	17: { "dataId" : "D25KG" },

//	18: { "dataId" : "D2500G" }

	15: { "dataId" : "D25KG" },
	16: { "dataId" : "D25KG" },
	17: { "dataId" : "D25KG" },

	18: { "dataId" : "D2500G" }
};

// 白地図
dataSetObj.dataSet_Blank = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },

	5: { "dataId" : "blank" },
	6: { "dataId" : "blank" },
	7: { "dataId" : "blank" },
	8: { "dataId" : "blank" },
	9: { "dataId" : "blank" },
	10: { "dataId" : "blank" },
	11: { "dataId" : "blank" },

	12: { "dataId" : "blank" },
	13: { "dataId" : "blank" },
	14: { "dataId" : "blank" },

	15: { "dataId" : "blank" },
	16: { "dataId" : "blank" },
	17: { "dataId" : "blank" },

	18: { "dataId" : "blank" }
};

// 標準地図
dataSetObj.dataSet_Default = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS" },
	6: { "dataId" : "JAIS" },
	7: { "dataId" : "JAIS" },
	8: { "dataId" : "JAIS" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },

	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "DJBMM" },
	16: { "dataId" : "DJBMM" },
	17: { "dataId" : "DJBMM" },

	18: { "dataId" : "FGD" }
};

// 標準地図(新版)
dataSetObj.dataSet_Default_n = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS" },
	6: { "dataId" : "JAIS" },
	7: { "dataId" : "JAIS" },
	8: { "dataId" : "JAIS" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },

	12: { "dataId" : "D200K" },
	13: { "dataId" : "D200K" },
	14: { "dataId" : "D200K" },

	15: { "dataId" : "D25K2BRWN" },
	16: { "dataId" : "D25K2" },
	17: { "dataId" : "D25K2" },

	18: { "dataId" : "D2500" }
};

// 標準地図（旧：シンプルスキーム版）
dataSetObj.dataSet_Std2012 = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },

	5: { "dataId" : "std" },
	6: { "dataId" : "std" },
	7: { "dataId" : "std" },
	8: { "dataId" : "std" },

	9: { "dataId" : "std" },
	10: { "dataId" : "std" },
	11: { "dataId" : "std" },

	12: { "dataId" : "std2012" },
	13: { "dataId" : "std2012" },
	14: { "dataId" : "std2012" },

	15: { "dataId" : "std2012" },
	16: { "dataId" : "std2012" },
	17: { "dataId" : "std2012" },

	18: { "dataId" : "std2012" }
};

// 標準地図（ハイブリッド版）
dataSetObj.dataSet_Std = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },
	5: { "dataId" : "std" },
	6: { "dataId" : "std" },
	7: { "dataId" : "std" },
	8: { "dataId" : "std" },
	9: { "dataId" : "std" },
	10: { "dataId" : "std" },
	11: { "dataId" : "std" },
	12: { "dataId" : "std" },
	13: { "dataId" : "std" },
	14: { "dataId" : "std" },
	15: { "dataId" : "std" },
	16: { "dataId" : "std" },
	17: { "dataId" : "std" },
	18: { "dataId" : "std" }
};

// 淡色地図
dataSetObj.dataSet_Pale = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },

	5: { "dataId" : "std" },
	6: { "dataId" : "std" },
	7: { "dataId" : "std" },
	8: { "dataId" : "std" },

	9: { "dataId" : "std" },
	10: { "dataId" : "std" },
	11: { "dataId" : "std" },

	12: { "dataId" : "pale" },
	13: { "dataId" : "pale" },
	14: { "dataId" : "pale" },
	15: { "dataId" : "pale" },
	16: { "dataId" : "pale" },
	17: { "dataId" : "pale" },

	18: { "dataId" : "pale" }
};

dataSetObj.dataSet_Brownshade2012 = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },
	5: { "dataId" : "std" },
	6: { "dataId" : "std" },
	7: { "dataId" : "std" },
	8: { "dataId" : "std" },

	9: { "dataId" : "brownshade2012" },
	10: { "dataId" : "brownshade2012" },
	11: { "dataId" : "brownshade2012" },
	12: { "dataId" : "brownshade2012" },
	13: { "dataId" : "brownshade2012" },
	14: { "dataId" : "brownshade2012" },

	15: { "dataId" : "std2012" },
	16: { "dataId" : "std2012" },
	17: { "dataId" : "std2012" },
	18: { "dataId" : "std2012" }
};

dataSetObj.dataSet_Greenshade2012 = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },
	5: { "dataId" : "std" },
	6: { "dataId" : "std" },
	7: { "dataId" : "std" },
	8: { "dataId" : "std" },

	9: { "dataId" : "greenshade2012" },
	10: { "dataId" : "greenshade2012" },
	11: { "dataId" : "greenshade2012" },
	12: { "dataId" : "greenshade2012" },
	13: { "dataId" : "greenshade2012" },
	14: { "dataId" : "greenshade2012" },

	15: { "dataId" : "std2012" },
	16: { "dataId" : "std2012" },
	17: { "dataId" : "std2012" },
	18: { "dataId" : "std2012" }
};

// 色別標高図
dataSetObj.dataSet_Relief = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },

	5: { "dataId" : "relief" },
	6: { "dataId" : "relief" },
	7: { "dataId" : "relief" },
	8: { "dataId" : "relief" },
	9: { "dataId" : "relief" },
	10: { "dataId" : "relief" },
	11: { "dataId" : "relief" },
	12: { "dataId" : "relief" },
	13: { "dataId" : "relief" },
	14: { "dataId" : "relief" },
	15: { "dataId" : "relief" },
	13: { "dataId" : "relief" },
	14: { "dataId" : "relief" },
	15: { "dataId" : "relief" },
	16: { "dataId" : "relief" },
	17: { "dataId" : "relief" },
	18: { "dataId" : "relief" }
};

// 英語
dataSetObj.dataSet_Jaise = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAISE" },
	6: { "dataId" : "JAISE" },
	7: { "dataId" : "JAISE" },
	8: { "dataId" : "JAISE" },

	9: { "dataId" : "JAISE1000K" },
	10: { "dataId" : "JAISE1000K" },
	11: { "dataId" : "JAISE1000K" },

	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "DJBMM" },
	16: { "dataId" : "DJBMM" },
	17: { "dataId" : "DJBMM" },

	18: { "dataId" : "FGD" }
};

// 英語（シンプルスキーム）
dataSetObj.dataSet_English = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },

	5: { "dataId" : "english" },
	6: { "dataId" : "english" },
	7: { "dataId" : "english" },
	8: { "dataId" : "english" },

	9: { "dataId" : "english" },
	10: { "dataId" : "english" },
	11: { "dataId" : "english" },

	12: { "dataId" : "std" },
	13: { "dataId" : "std" },
	14: { "dataId" : "std" },

	15: { "dataId" : "std" },
	16: { "dataId" : "std" },
	17: { "dataId" : "std" },

	18: { "dataId" : "std" }
};

// 2007-
dataSetObj.dataSet_Y2K7 = {
	0: { "dataId" : "std" },
	1: { "dataId" : "std" },
	2: { "dataId" : "std" },
	3: { "dataId" : "std" },
	4: { "dataId" : "std" },

	5: { "dataId" : "std" },
	6: { "dataId" : "std" },
	7: { "dataId" : "std" },
	8: { "dataId" : "std" },

	9: { "dataId" : "std" },
	10: { "dataId" : "std" },
	11: { "dataId" : "std" },

	12: { "dataId" : "std" },
	13: { "dataId" : "std" },
	14: { "dataId" : "std" },

	15: { "dataId" : "ort" },
	16: { "dataId" : "ort" },
	17: { "dataId" : "ort" },

	18: { "dataId" : "ort" }
};
/*
dataSetObj.dataSet_Y2K7 = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS" },
	6: { "dataId" : "JAIS" },
	7: { "dataId" : "JAIS" },
	8: { "dataId" : "JAIS" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },

	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "DJBMO" },
	16: { "dataId" : "DJBMO" },
	17: { "dataId" : "DJBMO" },

	18: { "dataId" : "DJBMO" }
};
*/

// 1988-90
dataSetObj.dataSet_YK88 = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS" },
	6: { "dataId" : "JAIS" },
	7: { "dataId" : "JAIS" },
	8: { "dataId" : "JAIS" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },

	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "NLII4" },
	16: { "dataId" : "NLII4" },
	17: { "dataId" : "NLII4" },

	18: { "dataId" : "NLII4" }
};

// 1984-87
dataSetObj.dataSet_YK84 = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS" },
	6: { "dataId" : "JAIS" },
	7: { "dataId" : "JAIS" },
	8: { "dataId" : "JAIS" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },

	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "NLII3" },
	16: { "dataId" : "NLII3" },
	17: { "dataId" : "NLII3" },

	18: { "dataId" : "NLII3" }
};

// 1979-83
dataSetObj.dataSet_YK79 = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS" },
	6: { "dataId" : "JAIS" },
	7: { "dataId" : "JAIS" },
	8: { "dataId" : "JAIS" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },

	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "NLII2" },
	16: { "dataId" : "NLII2" },
	17: { "dataId" : "NLII2" },

	18: { "dataId" : "NLII2" }
};

// 1974-78
dataSetObj.dataSet_YK74 = {
	0: { "dataId" : "GLMD" },
	1: { "dataId" : "GLMD" },
	2: { "dataId" : "GLMD" },
	3: { "dataId" : "GLMD" },
	4: { "dataId" : "GLMD" },

	5: { "dataId" : "JAIS" },
	6: { "dataId" : "JAIS" },
	7: { "dataId" : "JAIS" },
	8: { "dataId" : "JAIS" },

	9: { "dataId" : "BAFD1000K" },
	10: { "dataId" : "BAFD1000K" },
	11: { "dataId" : "BAFD1000K" },

	12: { "dataId" : "BAFD200K" },
	13: { "dataId" : "BAFD200K" },
	14: { "dataId" : "BAFD200K" },

	15: { "dataId" : "NLII1" },
	16: { "dataId" : "NLII1" },
	17: { "dataId" : "NLII1" },

	18: { "dataId" : "NLII1" }
};

// 彩色地図用レイヤー
dataSetObj.dataSetOverlay_Color = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },

	9: { "dataId" : "BAFD1000K2" },
	10: { "dataId" : "BAFD1000K2" },
	11: { "dataId" : "BAFD1000K2" },

	12: { "dataId" : "BAFD200K2" },
	13: { "dataId" : "BAFD200K2" },
	14: { "dataId" : "BAFD200K2" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 彩色地図用レイヤー(シンプルスキーム)
dataSetObj.dataSetOverlay_Transparent2012 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },

	9: { "dataId" : "transparent2012" },
	10: { "dataId" : "transparent2012" },
	11: { "dataId" : "transparent2012" },

	12: { "dataId" : "transparent2012" },
	13: { "dataId" : "transparent2012" },
	14: { "dataId" : "transparent2012" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// モノトーン用レイヤー（シンプルスキーム）
dataSetObj.dataSetOverlay_Monotone2012 = {
	0: { "dataId" : "transparent" },
	1: { "dataId" : "transparent" },
	2: { "dataId" : "transparent" },
	3: { "dataId" : "transparent" },
	4: { "dataId" : "transparent" },
	5: { "dataId" : "transparent" },
	6: { "dataId" : "transparent" },
	7: { "dataId" : "transparent" },
	8: { "dataId" : "transparent" },

	9: { "dataId" : "monotone2012" },
	10: { "dataId" : "monotone2012" },
	11: { "dataId" : "monotone2012" },
	12: { "dataId" : "monotone2012" },
	13: { "dataId" : "monotone2012" },
	14: { "dataId" : "monotone2012" },

	15: { "dataId" : "transparent" },
	16: { "dataId" : "transparent" },
	17: { "dataId" : "transparent" },
	18: { "dataId" : "transparent" }
};

// 新彩色地図（緑）用レイヤー
dataSetObj.dataSetOverlay_Summer_n = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },

	9: { "dataId" : "BAFD1000K2" },
	10: { "dataId" : "BAFD1000K2" },
	11: { "dataId" : "BAFD1000K2" },

	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 新彩色地図（茶）用レイヤー
dataSetObj.dataSetOverlay_Autumn_n = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },

	9: { "dataId" : "BAFD1000K2" },
	10: { "dataId" : "BAFD1000K2" },
	11: { "dataId" : "BAFD1000K2" },

	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// モノトーン地図用レイヤー
dataSetObj.dataSetOverlay_Mono = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },

	9: { "dataId" : "BAFD1000KG" },
	10: { "dataId" : "BAFD1000KG" },
	11: { "dataId" : "BAFD1000KG" },

	12: { "dataId" : "BAFD200KG" },
	13: { "dataId" : "BAFD200KG" },
	14: { "dataId" : "BAFD200KG" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// モノトーン地図用レイヤー(シンプルスキーム)
dataSetObj.dataSetOverlay_Monotone2012 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },

	9: { "dataId" : "monotone2012" },
	10: { "dataId" : "monotone2012" },
	11: { "dataId" : "monotone2012" },

	12: { "dataId" : "monotone2012" },
	13: { "dataId" : "monotone2012" },
	14: { "dataId" : "monotone2012" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// モノトーン地図用レイヤー
dataSetObj.dataSetOverlay_Mono_n = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },

	9: { "dataId" : "BAFD1000KG" },
	10: { "dataId" : "BAFD1000KG" },
	11: { "dataId" : "BAFD1000KG" },

	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

dataSetObj.dataSetOverlay_IndexY2K7 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "photoarea" },
	6: { "dataId" : "photoarea" },
	7: { "dataId" : "photoarea" },
	8: { "dataId" : "photoarea" },
	9: { "dataId" : "photoarea" },
	10: { "dataId" : "photoarea" },
	11: { "dataId" : "photoarea" },
	12: { "dataId" : "photoarea" },
	13: { "dataId" : "photoarea" },
	14: { "dataId" : "photoarea" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};
//
// @source = treelegend.js
//
/* 「ライブラリー」の下部に表示される凡例の表示 */
legendFuncObj = [];

// 汎用
legendFuncObj.getLibraryLegend_default = function (dtnode, pluginID)
{
	var title = "";
	var subname = "";
	var legend = "";
	
	if (dtnode.data.isFolder) {
		// フォルダ
		title =  dtnode.data.title;
	}
	else if(dtnode.data.noLegend) {
		// 地理院外で作成
		title =  dtnode.data.title;
	}
	else {
		// 地理院内で作成
		title =  dtnode.data.title;
		legend =  "(c)国土地理院";
	}
	
	$("#plugin_library_name" + pluginID)[0].innerHTML = title
	$("#plugin_library_subname" + pluginID)[0].innerHTML = subname;
	$("#plugin_library_legend" + pluginID)[0].innerHTML = legend;
}

//ポップアップリンク
function createPopupLink(url, label)
{
	var ret;
	
	ret = "<a href=\"" + url + "\" ";
	ret += "onClick=\"window.open('" + url + "', 'win', 'width=500, height=400, menubar=no, status=yes, scrollbars=yes, resizable=yes'); return false; \" ";
	ret += ">";
	ret += label;
	ret += "</a>";
	
	return ret;
}

/*
	// モノトーン地図
	function getLibraryLegend_mono(dtnode)
	{
		$("#sz_library_name")[0].innerHTML = dtnode.data.title;
		$("#sz_library_subname")[0].innerHTML = "";
		$("#sz_library_legend")[0].innerHTML = '凡例 (' +
			createPopupLink('http://cyberjapan.jp/legend/200000c-legend.pdf', '1/20万') + "・" +
			createPopupLink('http://cyberjapan.jp/legend/1000000c-legend.pdf', '1/100万') + ")" + "<br><br>(c)国土地理院";
	}
*///
// @source = tmsurl.js
//
var tmsUrlObj = [];

tmsUrlObj.zeroPad = function(num,len) {
   	var result = "" + num;
   	while (result.length < len) {
   		result = "0"+result;
  	}
   	return result;
}

tmsUrlObj.overlay_getTileURL = function(bounds)
{
	var res = this.map.getResolution();
	
	var x = Math.round((bounds.left - this.maxExtent.left) / (res * this.tileSize.w));
//	var y = Math.round((bounds.bottom - this.tileOrigin.lat) / (res * this.tileSize.h));
	var y = Math.round ((this.maxExtent.top - bounds.top) / (res * this.tileSize.h));		//Google
	var z = this.map.getZoom();
	
	x = tmsUrlObj.zeroPad(x,7);
	y = tmsUrlObj.zeroPad(y,7);
	
	var dir = '';
	for (var i = 0; i < 6; i++) {
		xi = x.substr(i, 1);
		yi = y.substr(i, 1);
		dir += "/" + xi + yi;
	}

	return this.url + z + dir + "/" + x + y + "." + this.type;
}
//
// @source = ZeroClipboard.js
//
// Simple Set Clipboard System
// Author: Joseph Huckaby

var ZeroClipboard = {
	
	version: "1.0.4",
	clients: {}, // registered upload clients on page, indexed by id
	moviePath: 'ZeroClipboard.swf', // URL to movie
	nextId: 1, // ID of next movie
	
	$: function(thingy) {
		// simple DOM lookup utility function
		if (typeof(thingy) == 'string') thingy = document.getElementById(thingy);
		if (!thingy.addClass) {
			// extend element with a few useful methods
			thingy.hide = function() { this.style.display = 'none'; };
			thingy.show = function() { this.style.display = ''; };
			thingy.addClass = function(name) { this.removeClass(name); this.className += ' ' + name; };
			thingy.removeClass = function(name) {
				this.className = this.className.replace( new RegExp("\\s*" + name + "\\s*"), " ").replace(/^\s+/, '').replace(/\s+$/, '');
			};
			thingy.hasClass = function(name) {
				return !!this.className.match( new RegExp("\\s*" + name + "\\s*") );
			}
		}
		return thingy;
	},
	
	setMoviePath: function(path) {
		// set path to ZeroClipboard.swf
		this.moviePath = path;
	},
	
	dispatch: function(id, eventName, args) {
		// receive event from flash movie, send to client		
		var client = this.clients[id];
		if (client) {
			client.receiveEvent(eventName, args);
		}
	},
	
	register: function(id, client) {
		// register new client to receive events
		this.clients[id] = client;
	},
	
	getDOMObjectPosition: function(obj) {
		// get absolute coordinates for dom element
		var info = {
			left: 0, 
			top: 0, 
			width: obj.width ? obj.width : obj.offsetWidth, 
			height: obj.height ? obj.height : obj.offsetHeight
		};

		while (obj) {
			info.left += obj.offsetLeft;
			info.top += obj.offsetTop;
			obj = obj.offsetParent;
		}

		return info;
	},
	
	Client: function(elem) {
		// constructor for new simple upload client
		this.handlers = {};
		
		// unique ID
		this.id = ZeroClipboard.nextId++;
		this.movieId = 'ZeroClipboardMovie_' + this.id;
		
		// register client with singleton to receive flash events
		ZeroClipboard.register(this.id, this);
		
		// create movie
		if (elem) this.glue(elem);
	}
};

ZeroClipboard.Client.prototype = {
	
	id: 0, // unique ID for us
	ready: false, // whether movie is ready to receive events or not
	movie: null, // reference to movie object
	clipText: '', // text to copy to clipboard
	handCursorEnabled: true, // whether to show hand cursor, or default pointer cursor
	cssEffects: true, // enable CSS mouse effects on dom container
	handlers: null, // user event handlers
	
	glue: function(elem) {
		// glue to DOM element
		// elem can be ID or actual DOM element object
		this.domElement = ZeroClipboard.$(elem);
		
		// float just above object, or zIndex 99 if dom element isn't set
		var zIndex = 99;
		if (this.domElement.style.zIndex) {
			zIndex = parseInt(this.domElement.style.zIndex) + 1;
		}
		
		// find X/Y position of domElement
		var box = ZeroClipboard.getDOMObjectPosition(this.domElement);
		
		// create floating DIV above element
		this.div = document.createElement('div');
		var style = this.div.style;
		style.position = 'absolute';
		style.left = '' + box.left + 'px';
		style.top = '' + box.top + 'px';
		style.width = '' + box.width + 'px';
		style.height = '' + box.height + 'px';
		style.zIndex = zIndex;
		
		// style.backgroundColor = '#f00'; // debug
		
		var body = document.getElementsByTagName('body')[0];
		body.appendChild(this.div);
		
		this.div.innerHTML = this.getHTML( box.width, box.height );
	},
	
	getHTML: function(width, height) {
		// return HTML for movie
		var html = '';
		var flashvars = 'id=' + this.id + 
			'&width=' + width + 
			'&height=' + height;
			
		if (navigator.userAgent.match(/MSIE/)) {
			// IE gets an OBJECT tag
			var protocol = location.href.match(/^https/i) ? 'https://' : 'http://';
			html += '<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="'+protocol+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" width="'+width+'" height="'+height+'" id="'+this.movieId+'" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="'+ZeroClipboard.moviePath+'" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="'+flashvars+'"/><param name="wmode" value="transparent"/></object>';
		}
		else {
			// all other browsers get an EMBED tag
			html += '<embed id="'+this.movieId+'" src="'+ZeroClipboard.moviePath+'" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="'+width+'" height="'+height+'" name="'+this.movieId+'" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="'+flashvars+'" wmode="transparent" />';
		}
		return html;
	},
	
	hide: function() {
		// temporarily hide floater offscreen
		if (this.div) {
			this.div.style.left = '-2000px';
		}
	},
	
	show: function() {
		// show ourselves after a call to hide()
		this.reposition();
	},
	
	destroy: function() {
		// destroy control and floater
		if (this.domElement && this.div) {
			this.hide();
			this.div.innerHTML = '';
			
			var body = document.getElementsByTagName('body')[0];
			try { body.removeChild( this.div ); } catch(e) {;}
			
			this.domElement = null;
			this.div = null;
		}
	},
	
	reposition: function(elem) {
		// reposition our floating div, optionally to new container
		// warning: container CANNOT change size, only position
		if (elem) {
			this.domElement = ZeroClipboard.$(elem);
			if (!this.domElement) this.hide();
		}
		
		if (this.domElement && this.div) {
			var box = ZeroClipboard.getDOMObjectPosition(this.domElement);
			var style = this.div.style;
			style.left = '' + box.left + 'px';
			style.top = '' + box.top + 'px';
		}
	},
	
	setText: function(newText) {
		// set text to be copied to clipboard
		this.clipText = newText;
		if (this.ready) this.movie.setText(newText);
	},
	
	addEventListener: function(eventName, func) {
		// add user event listener for event
		// event types: load, queueStart, fileStart, fileComplete, queueComplete, progress, error, cancel
		eventName = eventName.toString().toLowerCase().replace(/^on/, '');
		if (!this.handlers[eventName]) this.handlers[eventName] = [];
		this.handlers[eventName].push(func);
	},
	
	setHandCursor: function(enabled) {
		// enable hand cursor (true), or default arrow cursor (false)
		this.handCursorEnabled = enabled;
		if (this.ready) this.movie.setHandCursor(enabled);
	},
	
	setCSSEffects: function(enabled) {
		// enable or disable CSS effects on DOM container
		this.cssEffects = !!enabled;
	},
	
	receiveEvent: function(eventName, args) {
		// receive event from flash
		eventName = eventName.toString().toLowerCase().replace(/^on/, '');
				
		// special behavior for certain events
		switch (eventName) {
			case 'load':
				// movie claims it is ready, but in IE this isn't always the case...
				// bug fix: Cannot extend EMBED DOM elements in Firefox, must use traditional function
				this.movie = document.getElementById(this.movieId);
				if (!this.movie) {
					var self = this;
					setTimeout( function() { self.receiveEvent('load', null); }, 1 );
					return;
				}
				
				// firefox on pc needs a "kick" in order to set these in certain cases
				if (!this.ready && navigator.userAgent.match(/Firefox/) && navigator.userAgent.match(/Windows/)) {
					var self = this;
					setTimeout( function() { self.receiveEvent('load', null); }, 100 );
					this.ready = true;
					return;
				}
				
				this.ready = true;
				this.movie.setText( this.clipText );
				this.movie.setHandCursor( this.handCursorEnabled );
				break;
			
			case 'mouseover':
				if (this.domElement && this.cssEffects) {
					this.domElement.addClass('hover');
					if (this.recoverActive) this.domElement.addClass('active');
				}
				break;
			
			case 'mouseout':
				if (this.domElement && this.cssEffects) {
					this.recoverActive = false;
					if (this.domElement.hasClass('active')) {
						this.domElement.removeClass('active');
						this.recoverActive = true;
					}
					this.domElement.removeClass('hover');
				}
				break;
			
			case 'mousedown':
				if (this.domElement && this.cssEffects) {
					this.domElement.addClass('active');
				}
				break;
			
			case 'mouseup':
				if (this.domElement && this.cssEffects) {
					this.domElement.removeClass('active');
					this.recoverActive = false;
				}
				break;
		} // switch eventName
		
		if (this.handlers[eventName]) {
			for (var idx = 0, len = this.handlers[eventName].length; idx < len; idx++) {
				var func = this.handlers[eventName][idx];
			
				if (typeof(func) == 'function') {
					// actual function reference
					func(this, args);
				}
				else if ((typeof(func) == 'object') && (func.length == 2)) {
					// PHP style object + method, i.e. [myObject, 'myMethod']
					func[0][ func[1] ](this, args);
				}
				else if (typeof(func) == 'string') {
					// name of function
					window[func](this, args);
				}
			} // foreach event handler defined
		} // user defined handler for event
	}
	
};
//
// @source = jquery.zclip.min.js
//
/*
 * zClip :: jQuery ZeroClipboard v1.1.1
 * http://steamdev.com/zclip
 *
 * Copyright 2011, SteamDev
 * Released under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 *
 * Date: Wed Jun 01, 2011
 */

(function(a){a.fn.zclip=function(c){if(typeof c=="object"&&!c.length){var b=a.extend({path:"ZeroClipboard.swf",copy:null,beforeCopy:null,afterCopy:null,clickAfter:true,setHandCursor:true,setCSSEffects:true},c);return this.each(function(){var e=a(this);if(e.is(":visible")&&(typeof b.copy=="string"||a.isFunction(b.copy))){ZeroClipboard.setMoviePath(b.path);var d=new ZeroClipboard.Client();if(a.isFunction(b.copy)){e.bind("zClip_copy",b.copy)}if(a.isFunction(b.beforeCopy)){e.bind("zClip_beforeCopy",b.beforeCopy)}if(a.isFunction(b.afterCopy)){e.bind("zClip_afterCopy",b.afterCopy)}d.setHandCursor(b.setHandCursor);d.setCSSEffects(b.setCSSEffects);d.addEventListener("mouseOver",function(f){e.trigger("mouseenter")});d.addEventListener("mouseOut",function(f){e.trigger("mouseleave")});d.addEventListener("mouseDown",function(f){e.trigger("mousedown");if(!a.isFunction(b.copy)){d.setText(b.copy)}else{d.setText(e.triggerHandler("zClip_copy"))}if(a.isFunction(b.beforeCopy)){e.trigger("zClip_beforeCopy")}});d.addEventListener("complete",function(f,g){if(a.isFunction(b.afterCopy)){e.trigger("zClip_afterCopy")}else{if(g.length>500){g=g.substr(0,500)+"...\n\n("+(g.length-500)+" characters not shown)"}e.removeClass("hover");alert("Copied text to clipboard:\n\n "+g)}if(b.clickAfter){e.trigger("click")}});d.glue(e[0],e.parent()[0]);a(window).bind("load resize",function(){d.reposition()})}})}else{if(typeof c=="string"){return this.each(function(){var f=a(this);c=c.toLowerCase();var e=f.data("zclipId");var d=a("#"+e+".zclip");if(c=="remove"){d.remove();f.removeClass("active hover")}else{if(c=="hide"){d.hide();f.removeClass("active hover")}else{if(c=="show"){d.show()}}}})}}}})(jQuery);var ZeroClipboard={version:"1.0.7",clients:{},moviePath:"ZeroClipboard.swf",nextId:1,$:function(a){if(typeof(a)=="string"){a=document.getElementById(a)}if(!a.addClass){a.hide=function(){this.style.display="none"};a.show=function(){this.style.display=""};a.addClass=function(b){this.removeClass(b);this.className+=" "+b};a.removeClass=function(d){var e=this.className.split(/\s+/);var b=-1;for(var c=0;c<e.length;c++){if(e[c]==d){b=c;c=e.length}}if(b>-1){e.splice(b,1);this.className=e.join(" ")}return this};a.hasClass=function(b){return !!this.className.match(new RegExp("\\s*"+b+"\\s*"))}}return a},setMoviePath:function(a){this.moviePath=a},dispatch:function(d,b,c){var a=this.clients[d];if(a){a.receiveEvent(b,c)}},register:function(b,a){this.clients[b]=a},getDOMObjectPosition:function(c,a){var b={left:0,top:0,width:c.width?c.width:c.offsetWidth,height:c.height?c.height:c.offsetHeight};if(c&&(c!=a)){b.left+=c.offsetLeft;b.top+=c.offsetTop}return b},Client:function(a){this.handlers={};this.id=ZeroClipboard.nextId++;this.movieId="ZeroClipboardMovie_"+this.id;ZeroClipboard.register(this.id,this);if(a){this.glue(a)}}};ZeroClipboard.Client.prototype={id:0,ready:false,movie:null,clipText:"",handCursorEnabled:true,cssEffects:true,handlers:null,glue:function(d,b,e){this.domElement=ZeroClipboard.$(d);var f=99;if(this.domElement.style.zIndex){f=parseInt(this.domElement.style.zIndex,10)+1}if(typeof(b)=="string"){b=ZeroClipboard.$(b)}else{if(typeof(b)=="undefined"){b=document.getElementsByTagName("body")[0]}}var c=ZeroClipboard.getDOMObjectPosition(this.domElement,b);this.div=document.createElement("div");this.div.className="zclip";this.div.id="zclip-"+this.movieId;$(this.domElement).data("zclipId","zclip-"+this.movieId);var a=this.div.style;a.position="absolute";a.left=""+c.left+"px";a.top=""+c.top+"px";a.width=""+c.width+"px";a.height=""+c.height+"px";a.zIndex=f;if(typeof(e)=="object"){for(addedStyle in e){a[addedStyle]=e[addedStyle]}}b.appendChild(this.div);this.div.innerHTML=this.getHTML(c.width,c.height)},getHTML:function(d,a){var c="";var b="id="+this.id+"&width="+d+"&height="+a;if(navigator.userAgent.match(/MSIE/)){var e=location.href.match(/^https/i)?"https://":"http://";c+='<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="'+e+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" width="'+d+'" height="'+a+'" id="'+this.movieId+'" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="'+ZeroClipboard.moviePath+'" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="'+b+'"/><param name="wmode" value="transparent"/></object>'}else{c+='<embed id="'+this.movieId+'" src="'+ZeroClipboard.moviePath+'" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="'+d+'" height="'+a+'" name="'+this.movieId+'" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="'+b+'" wmode="transparent" />'}return c},hide:function(){if(this.div){this.div.style.left="-2000px"}},show:function(){this.reposition()},destroy:function(){if(this.domElement&&this.div){this.hide();this.div.innerHTML="";var a=document.getElementsByTagName("body")[0];try{a.removeChild(this.div)}catch(b){}this.domElement=null;this.div=null}},reposition:function(c){if(c){this.domElement=ZeroClipboard.$(c);if(!this.domElement){this.hide()}}if(this.domElement&&this.div){var b=ZeroClipboard.getDOMObjectPosition(this.domElement);var a=this.div.style;a.left=""+b.left+"px";a.top=""+b.top+"px"}},setText:function(a){this.clipText=a;if(this.ready){this.movie.setText(a)}},addEventListener:function(a,b){a=a.toString().toLowerCase().replace(/^on/,"");if(!this.handlers[a]){this.handlers[a]=[]}this.handlers[a].push(b)},setHandCursor:function(a){this.handCursorEnabled=a;if(this.ready){this.movie.setHandCursor(a)}},setCSSEffects:function(a){this.cssEffects=!!a},receiveEvent:function(d,f){d=d.toString().toLowerCase().replace(/^on/,"");switch(d){case"load":this.movie=document.getElementById(this.movieId);if(!this.movie){var c=this;setTimeout(function(){c.receiveEvent("load",null)},1);return}if(!this.ready&&navigator.userAgent.match(/Firefox/)&&navigator.userAgent.match(/Windows/)){var c=this;setTimeout(function(){c.receiveEvent("load",null)},100);this.ready=true;return}this.ready=true;try{this.movie.setText(this.clipText)}catch(h){}try{this.movie.setHandCursor(this.handCursorEnabled)}catch(h){}break;case"mouseover":if(this.domElement&&this.cssEffects){this.domElement.addClass("hover");if(this.recoverActive){this.domElement.addClass("active")}}break;case"mouseout":if(this.domElement&&this.cssEffects){this.recoverActive=false;if(this.domElement.hasClass("active")){this.domElement.removeClass("active");this.recoverActive=true}this.domElement.removeClass("hover")}break;case"mousedown":if(this.domElement&&this.cssEffects){this.domElement.addClass("active")}break;case"mouseup":if(this.domElement&&this.cssEffects){this.domElement.removeClass("active");this.recoverActive=false}break}if(this.handlers[d]){for(var b=0,a=this.handlers[d].length;b<a;b++){var g=this.handlers[d][b];if(typeof(g)=="function"){g(this,f)}else{if((typeof(g)=="object")&&(g.length==2)){g[0][g[1]](this,f)}else{if(typeof(g)=="string"){window[g](this,f)}}}}}}};//
// @source = GisOverviewMap.js
//
/* Copyright (c) 2006-2013 by OpenLayers Contributors (see authors.txt for
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

/** 
 * @requires OpenLayers/Control.js
 * @requires OpenLayers/BaseTypes.js
 * @requires OpenLayers/Events/buttonclick.js
 * @requires OpenLayers/Map.js
 * @requires OpenLayers/Handler/Click.js
 * @requires OpenLayers/Handler/Drag.js
 */

/**
 * Class: OpenLayers.Control.OverviewMap
 * The OverMap control creates a small overview map, useful to display the 
 * extent of a zoomed map and your main map and provide additional 
 * navigation options to the User.  By default the overview map is drawn in
 * the lower right corner of the main map. Create a new overview map with the
 * <OpenLayers.Control.OverviewMap> constructor.
 *
 * Inherits from:
 *  - <OpenLayers.Control>
 */
webtis.Control.GisOverviewMap = OpenLayers.Class(OpenLayers.Control, {

    /**
     * Property: element
     * {DOMElement} The DOM element that contains the overview map
     */
    element: null,
    
    /**
     * APIProperty: ovmap
     * {<OpenLayers.Map>} A reference to the overview map itself.
     */
    ovmap: null,

    /**
     * APIProperty: size
     * {<OpenLayers.Size>} The overvew map size in pixels.  Note that this is
     * the size of the map itself - the element that contains the map (default
     * class name olControlOverviewMapElement) may have padding or other style
     * attributes added via CSS.
     */
    size: {w: 180, h: 90},

    /**
     * APIProperty: layers
     * {Array(<OpenLayers.Layer>)} Ordered list of layers in the overview map.
     * If none are sent at construction, the base layer for the main map is used.
     */
    layers: null,
    
    /**
     * APIProperty: minRectSize
     * {Integer} The minimum width or height (in pixels) of the extent
     *     rectangle on the overview map.  When the extent rectangle reaches
     *     this size, it will be replaced depending on the value of the
     *     <minRectDisplayClass> property.  Default is 15 pixels.
     */
    minRectSize: 15,
    
    /**
     * APIProperty: minRectDisplayClass
     * {String} Replacement style class name for the extent rectangle when
     *     <minRectSize> is reached.  This string will be suffixed on to the
     *     displayClass.  Default is "RectReplacement".
     *
     * Example CSS declaration:
     * (code)
     * .olControlOverviewMapRectReplacement {
     *     overflow: hidden;
     *     cursor: move;
     *     background-image: url("img/overview_replacement.gif");
     *     background-repeat: no-repeat;
     *     background-position: center;
     * }
     * (end)
     */
    minRectDisplayClass: "RectReplacement",

    /**
     * APIProperty: minRatio
     * {Float} The ratio of the overview map resolution to the main map
     *     resolution at which to zoom farther out on the overview map.
     */
    minRatio: 8,

    /**
     * APIProperty: maxRatio
     * {Float} The ratio of the overview map resolution to the main map
     *     resolution at which to zoom farther in on the overview map.
     */
    maxRatio: 32,
    
    /**
     * APIProperty: mapOptions
     * {Object} An object containing any non-default properties to be sent to
     *     the overview map's map constructor.  These should include any
     *     non-default options that the main map was constructed with.
     */
    mapOptions: null,

    /**
     * APIProperty: autoPan
     * {Boolean} Always pan the overview map, so the extent marker remains in
     *     the center.  Default is false.  If true, when you drag the extent
     *     marker, the overview map will update itself so the marker returns
     *     to the center.
     */
    autoPan: false,
    
    /**
     * Property: handlers
     * {Object}
     */
    handlers: null,

    /**
     * Property: resolutionFactor
     * {Object}
     */
    resolutionFactor: 1,

    /**
     * APIProperty: maximized
     * {Boolean} Start as maximized (visible). Defaults to false.
     */
    maximized: false,

    /**
     * APIProperty: maximizeTitle
     * {String}  This property is used for showing a tooltip over the  
     * maximize div. Defaults to "" (no title).
     */ 
    maximizeTitle: "",

    /**
     * APIProperty: minimizeTitle
     * {String}  This property is used for showing a tooltip over the  
     * minimize div. Defaults to "" (no title).
     */ 
    minimizeTitle: "",

	// 2.13 add
	maxSize: new OpenLayers.Size(360, 300),
	resized: true,
	isFirstDraw: true,

    /**
     * Constructor: OpenLayers.Control.OverviewMap
     * Create a new overview map
     *
     * Parameters:
     * options - {Object} Properties of this object will be set on the overview
     * map object.  Note, to set options on the map object contained in this
     * control, set <mapOptions> as one of the options properties.
     */
    initialize: function(options) {
        this.layers = [];
        this.handlers = {};
        OpenLayers.Control.prototype.initialize.apply(this, [options]);
    },
    
    /**
     * APIMethod: destroy
     * Deconstruct the control
     */
    destroy: function() {
        if (!this.mapDiv) { // we've already been destroyed
            return;
        }
        if (this.handlers.click) {
            this.handlers.click.destroy();
        }
        if (this.handlers.drag) {
            this.handlers.drag.destroy();
        }

        this.ovmap && this.ovmap.viewPortDiv.removeChild(this.extentRectangle);
        this.extentRectangle = null;

        if (this.rectEvents) {
            this.rectEvents.destroy();
            this.rectEvents = null;
        }

        if (this.ovmap) {
            this.ovmap.destroy();
            this.ovmap = null;
        }
        
        this.element.removeChild(this.mapDiv);
        this.mapDiv = null;

        this.div.removeChild(this.element);
        this.element = null;

        if (this.maximizeDiv) {
            this.div.removeChild(this.maximizeDiv);
            this.maximizeDiv = null;
        }
        
        if (this.minimizeDiv) {
            this.div.removeChild(this.minimizeDiv);
            this.minimizeDiv = null;
        }
		
		if (this.resizeDiv) {
			OpenLayers.Event.stopObservingElement(this.resizeDiv);
			this.div.removeChild(this.resizeDiv);
			this.resizeDiv = null;
		}
		
        this.map.events.un({
            buttonclick: this.onButtonClick,
            moveend: this.update,
            changebaselayer: this.baseLayerDraw,
            scope: this
        });

        OpenLayers.Control.prototype.destroy.apply(this, arguments);    
    },

    /**
     * Method: draw
     * Render the control in the browser.
     */    
    draw: function() {
        OpenLayers.Control.prototype.draw.apply(this, arguments);
        if (this.layers.length === 0) {
            if (this.map.baseLayer) {
                var layer = this.map.baseLayer.clone();
                this.layers = [layer];
            } else {
                this.map.events.register("changebaselayer", this, this.baseLayerDraw);
                return this.div;
            }
        }

        // create overview map DOM elements
        this.element = document.createElement('div');
        this.element.className = this.displayClass + 'Element';
        this.element.style.display = 'none';

        this.mapDiv = document.createElement('div');
        var mapSize = this.resized ? this.maxSize : this.size;
        
		this.mapDiv.style.width = mapSize.w + 'px';
		this.mapDiv.style.height = mapSize.h + 'px';
		
        this.mapDiv.style.position = 'relative';
        this.mapDiv.style.overflow = 'hidden';
        this.mapDiv.id = OpenLayers.Util.createUniqueID('overviewMap');
        
        this.extentRectangle = document.createElement('div');
        this.extentRectangle.style.position = 'absolute';
        this.extentRectangle.style.zIndex = 1000;  //HACK
        this.extentRectangle.className = this.displayClass+'ExtentRectangle';

        this.element.appendChild(this.mapDiv);  

        this.div.appendChild(this.element);

        // Optionally add min/max buttons if the control will go in the
        // map viewport.
        if(!this.outsideViewport) {
            this.div.className += " " + this.displayClass + 'Container';
            
            // maximize button div
            var img = OpenLayers.Util.getImageLocation('layer-switcher-maximize.png');
            this.maximizeDiv = OpenLayers.Util.createAlphaImageDiv(
                                        this.displayClass + 'MaximizeButton', 
                                        null, 
                                        null, 
                                        img, 
                                        'absolute');
            this.maximizeDiv.style.display = 'none';
            this.maximizeDiv.className = this.displayClass + 'MaximizeButton olButton';
            if (this.maximizeTitle) {
                this.maximizeDiv.title = this.maximizeTitle;
            }
            this.div.appendChild(this.maximizeDiv);

            // resize button div
            var img = "http://cyberjapandata.gsi.go.jp/portal/sys/v4/image/layer-switcher-loupe.png";
            this.resizeDiv = OpenLayers.Util.createAlphaImageDiv(
                                        this.displayClass + 'ResizeButton', 
                                        null, 
                                        null, 
                                        img, 
                                        'absolute');
                                        
            this.resizeDiv.style.display = 'none';
            this.resizeDiv.className = this.displayClass + 'ResizeButton olButton';
            if (this.resizeTitle) {
                this.resizeDiv.title = this.resizeTitle;
            }
            this.div.appendChild(this.resizeDiv);

            // minimize button div
            var img = OpenLayers.Util.getImageLocation('layer-switcher-minimize.png');
            this.minimizeDiv = OpenLayers.Util.createAlphaImageDiv(
                                        'OpenLayers_Control_minimizeDiv', 
                                        null, 
                                        null, 
                                        img, 
                                        'absolute');
            this.minimizeDiv.style.display = 'none';
            this.minimizeDiv.className = this.displayClass + 'MinimizeButton olButton';
            if (this.minimizeTitle) {
                this.minimizeDiv.title = this.minimizeTitle;
            }
            this.div.appendChild(this.minimizeDiv);
            
            this.minimizeControl();
        } else {
            // show the overview map
            this.element.style.display = '';
        }
        if(this.map.getExtent()) {
            this.update();
        }
        
        this.map.events.on({
            buttonclick: this.onButtonClick,
            moveend: this.update,
            scope: this
        });
        
        if (this.maximized) {
            this.maximizeControl();
        }
        return this.div;
    },
    
    /**
     * Method: baseLayerDraw
     * Draw the base layer - called if unable to complete in the initial draw
     */
    baseLayerDraw: function() {
        this.draw();
        this.map.events.unregister("changebaselayer", this, this.baseLayerDraw);
    },

    /**
     * Method: rectDrag
     * Handle extent rectangle drag
     *
     * Parameters:
     * px - {<OpenLayers.Pixel>} The pixel location of the drag.
     */
    rectDrag: function(px) {
        var deltaX = this.handlers.drag.last.x - px.x;
        var deltaY = this.handlers.drag.last.y - px.y;
        if(deltaX != 0 || deltaY != 0) {
            var rectTop = this.rectPxBounds.top;
            var rectLeft = this.rectPxBounds.left;
            var rectHeight = Math.abs(this.rectPxBounds.getHeight());
            var rectWidth = this.rectPxBounds.getWidth();
            // don't allow dragging off of parent element
            var newTop = Math.max(0, (rectTop - deltaY));
            newTop = Math.min(newTop,
                              this.ovmap.size.h - this.hComp - rectHeight);
            var newLeft = Math.max(0, (rectLeft - deltaX));
            newLeft = Math.min(newLeft,
                               this.ovmap.size.w - this.wComp - rectWidth);
            this.setRectPxBounds(new OpenLayers.Bounds(newLeft,
                                                       newTop + rectHeight,
                                                       newLeft + rectWidth,
                                                       newTop));
        }
    },
    
    /**
     * Method: mapDivClick
     * Handle browser events
     *
     * Parameters:
     * evt - {<OpenLayers.Event>} evt
     */
    mapDivClick: function(evt) {
        var pxCenter = this.rectPxBounds.getCenterPixel();
        var deltaX = evt.xy.x - pxCenter.x;
        var deltaY = evt.xy.y - pxCenter.y;
        var top = this.rectPxBounds.top;
        var left = this.rectPxBounds.left;
        var height = Math.abs(this.rectPxBounds.getHeight());
        var width = this.rectPxBounds.getWidth();
        var newTop = Math.max(0, (top + deltaY));
        newTop = Math.min(newTop, this.ovmap.size.h - height);
        var newLeft = Math.max(0, (left + deltaX));
        newLeft = Math.min(newLeft, this.ovmap.size.w - width);
        this.setRectPxBounds(new OpenLayers.Bounds(newLeft,
                                                   newTop + height,
                                                   newLeft + width,
                                                   newTop));
        this.updateMapToRect();
    },
    
    /**
     * Method: onButtonClick
     *
     * Parameters:
     * evt - {Event}
     */
    onButtonClick: function(evt) {
        if (evt.buttonElement === this.minimizeDiv) {
            this.minimizeControl();
        } else if (evt.buttonElement === this.maximizeDiv) {
            this.maximizeControl();
        } else if (evt.buttonElement === this.resizeDiv) {
        	this.resizeControl();
        }
    },

    /**
     * Method: maximizeControl
     * Unhide the control.  Called when the control is in the map viewport.
     *
     * Parameters:
     * e - {<OpenLayers.Event>}
     */
    maximizeControl: function(e) {
        this.element.style.display = '';
        this.showToggle(false);
        if (this.isFirstDraw) {
            this.ovmap.baseLayer.redraw(true);
            this.isFirstDraw = false;
        }
        if (e != null) {
            OpenLayers.Event.stop(e);                                            
        }
    },

    /**
     * Method: minimizeControl
     * Hide all the contents of the control, shrink the size, 
     * add the maximize icon
     * 
     * Parameters:
     * e - {<OpenLayers.Event>}
     */
    minimizeControl: function(e) {
        this.element.style.display = 'none';
        this.showToggle(true);
        if (e != null) {
            OpenLayers.Event.stop(e);                                            
        }
    },
	
	resizeControl: function(e) {
		this.resized = !this.resized;
        
		var mapSize = this.resized ? this.maxSize : this.size;
		this.mapDiv.style.width = mapSize.w + 'px';
		this.mapDiv.style.height = mapSize.h + 'px';
		this.ovmap.size.w = mapSize.w;
		this.ovmap.size.h = mapSize.h;

		var mapExtent = this.ovmap.getExtent();
		var maxExtent = this.ovmap.getMaxExtent();
        var testExtent = new OpenLayers.Bounds(
                                Math.max(mapExtent.left, maxExtent.left),
                                Math.max(mapExtent.bottom, maxExtent.bottom),
                                Math.min(mapExtent.right, maxExtent.right),
                                Math.min(mapExtent.top, maxExtent.top));
        if (this.ovmap.getProjection() != this.map.getProjection()) {
            testExtent = testExtent.transform(
                this.map.getProjectionObject(),
                this.ovmap.getProjectionObject() );
        }
        
        var pxBounds = this.getRectBoundsFromMapBounds(testExtent);
        if (pxBounds) {
			this.ovmap.zoomToExtent(pxBounds);
        }

		this.updateOverview();

		var center = this.map.getCenter();
        this.ovmap.setCenter(center);
        
		if (e != null) {
			OpenLayers.Event.stop(e);
		}
	},
	
    /**
     * Method: showToggle
     * Hide/Show the toggle depending on whether the control is minimized
     *
     * Parameters:
     * minimize - {Boolean} 
     */
    showToggle: function(minimize) {
        if (this.maximizeDiv) {
            this.maximizeDiv.style.display = minimize ? '' : 'none';
        }
        if (this.minimizeDiv) {
            this.minimizeDiv.style.display = minimize ? 'none' : '';
        }
        if (this.resizeDiv) {
            this.resizeDiv.style.display = minimize ? 'none' : '';
        }
    },

    /**
     * Method: update
     * Update the overview map after layers move.
     */
    update: function() {
        if(this.ovmap == null) {
            this.createMap();
        }
        
        if(this.autoPan || !this.isSuitableOverview()) {
            this.updateOverview();
        }
        
        this.ovmap.setCenter(this.map.getCenter());

        // update extent rectangle
        this.updateRectToMap();
    },
    
    /**
     * Method: isSuitableOverview
     * Determines if the overview map is suitable given the extent and
     * resolution of the main map.
     */
    isSuitableOverview: function() {
        var mapExtent = this.map.getExtent();
        var maxExtent = this.map.getMaxExtent();
        var testExtent = new OpenLayers.Bounds(
                                Math.max(mapExtent.left, maxExtent.left),
                                Math.max(mapExtent.bottom, maxExtent.bottom),
                                Math.min(mapExtent.right, maxExtent.right),
                                Math.min(mapExtent.top, maxExtent.top));        

        if (this.ovmap.getProjection() != this.map.getProjection()) {
            testExtent = testExtent.transform(
                this.map.getProjectionObject(),
                this.ovmap.getProjectionObject() );
        }

        var resRatio = this.ovmap.getResolution() / this.map.getResolution();
        return ((resRatio > this.minRatio) &&
                (resRatio <= this.maxRatio) &&
                (this.ovmap.getExtent().containsBounds(testExtent)));
    },
    
    /**
     * Method updateOverview
     * Called by <update> if <isSuitableOverview> returns true
     */
    updateOverview: function() {
        var mapRes = this.map.getResolution();
        var targetRes = this.ovmap.getResolution();
        var resRatio = targetRes / mapRes;
        if(resRatio > this.maxRatio) {
            // zoom in overview map
            targetRes = this.minRatio * mapRes;            
        } else if(resRatio <= this.minRatio) {
            // zoom out overview map
            targetRes = this.maxRatio * mapRes;
        }
        var center;
        if (this.ovmap.getProjection() != this.map.getProjection()) {
            center = this.map.center.clone();
            center.transform(this.map.getProjectionObject(),
                this.ovmap.getProjectionObject() );
        } else {
            center = this.map.center;
        }
        this.ovmap.setCenter(center, this.ovmap.getZoomForResolution(
            targetRes * this.resolutionFactor));
        this.updateRectToMap();
    },
    
    /**
     * Method: createMap
     * Construct the map that this control contains
     */
    createMap: function() {
        // create the overview map
        var options = OpenLayers.Util.extend(
                        {controls: [], maxResolution: 'auto', 
                         fallThrough: false}, this.mapOptions);
        this.ovmap = new OpenLayers.Map(this.mapDiv, options);
        this.ovmap.viewPortDiv.appendChild(this.extentRectangle);
        
        // prevent ovmap from being destroyed when the page unloads, because
        // the OverviewMap control has to do this (and does it).
        OpenLayers.Event.stopObserving(window, 'unload', this.ovmap.unloadDestroy);
        
        this.ovmap.addLayers(this.layers);
        this.ovmap.zoomToMaxExtent();
        // check extent rectangle border width
        this.wComp = parseInt(OpenLayers.Element.getStyle(this.extentRectangle,
                                               'border-left-width')) +
                     parseInt(OpenLayers.Element.getStyle(this.extentRectangle,
                                               'border-right-width'));
        this.wComp = (this.wComp) ? this.wComp : 2;
        this.hComp = parseInt(OpenLayers.Element.getStyle(this.extentRectangle,
                                               'border-top-width')) +
                     parseInt(OpenLayers.Element.getStyle(this.extentRectangle,
                                               'border-bottom-width'));
        this.hComp = (this.hComp) ? this.hComp : 2;

        this.handlers.drag = new OpenLayers.Handler.Drag(
            this, {move: this.rectDrag, done: this.updateMapToRect},
            {map: this.ovmap}
        );
        this.handlers.click = new OpenLayers.Handler.Click(
            this, {
                "click": this.mapDivClick
            },{
                "single": true, "double": false,
                "stopSingle": true, "stopDouble": true,
                "pixelTolerance": 1,
                map: this.ovmap
            }
        );
        this.handlers.click.activate();
        
        this.rectEvents = new OpenLayers.Events(this, this.extentRectangle,
                                                null, true);
        this.rectEvents.register("mouseover", this, function(e) {
            if(!this.handlers.drag.active && !this.map.dragging) {
                this.handlers.drag.activate();
            }
        });
        this.rectEvents.register("mouseout", this, function(e) {
            if(!this.handlers.drag.dragging) {
                this.handlers.drag.deactivate();
            }
        });

        if (this.ovmap.getProjection() != this.map.getProjection()) {
            var sourceUnits = this.map.getProjectionObject().getUnits() ||
                this.map.units || this.map.baseLayer.units;
            var targetUnits = this.ovmap.getProjectionObject().getUnits() ||
                this.ovmap.units || this.ovmap.baseLayer.units;
            this.resolutionFactor = sourceUnits && targetUnits ?
                OpenLayers.INCHES_PER_UNIT[sourceUnits] /
                OpenLayers.INCHES_PER_UNIT[targetUnits] : 1;
        }
    },
        
    /**
     * Method: updateRectToMap
     * Updates the extent rectangle position and size to match the map extent
     */
    updateRectToMap: function() {
        // If the projections differ we need to reproject
        var bounds;
        if (this.ovmap.getProjection() != this.map.getProjection()) {
            bounds = this.map.getExtent().transform(
                this.map.getProjectionObject(), 
                this.ovmap.getProjectionObject() );
        } else {
            bounds = this.map.getExtent();
        }
        var pxBounds = this.getRectBoundsFromMapBounds(bounds);
        if (pxBounds) {
            this.setRectPxBounds(pxBounds);
        }
    },
    
    /**
     * Method: updateMapToRect
     * Updates the map extent to match the extent rectangle position and size
     */
    updateMapToRect: function() {
        var lonLatBounds = this.getMapBoundsFromRectBounds(this.rectPxBounds);
        if (this.ovmap.getProjection() != this.map.getProjection()) {
            lonLatBounds = lonLatBounds.transform(
                this.ovmap.getProjectionObject(),
                this.map.getProjectionObject() );
        }
        this.map.panTo(lonLatBounds.getCenterLonLat());
    },

    /**
     * Method: setRectPxBounds
     * Set extent rectangle pixel bounds.
     *
     * Parameters:
     * pxBounds - {<OpenLayers.Bounds>}
     */
    setRectPxBounds: function(pxBounds) {
        var top = Math.max(pxBounds.top, 0);
        var left = Math.max(pxBounds.left, 0);
        var bottom = Math.min(pxBounds.top + Math.abs(pxBounds.getHeight()),
                              this.ovmap.size.h - this.hComp);
        var right = Math.min(pxBounds.left + pxBounds.getWidth(),
                             this.ovmap.size.w - this.wComp);
        var width = Math.max(right - left, 0);
        var height = Math.max(bottom - top, 0);
        if(width < this.minRectSize || height < this.minRectSize) {
            this.extentRectangle.className = this.displayClass +
                                             this.minRectDisplayClass;
            var rLeft = left + (width / 2) - (this.minRectSize / 2);
            var rTop = top + (height / 2) - (this.minRectSize / 2);
            this.extentRectangle.style.top = Math.round(rTop) + 'px';
            this.extentRectangle.style.left = Math.round(rLeft) + 'px';
            this.extentRectangle.style.height = this.minRectSize + 'px';
            this.extentRectangle.style.width = this.minRectSize + 'px';
        } else {
            this.extentRectangle.className = this.displayClass +
                                             'ExtentRectangle';
            this.extentRectangle.style.top = Math.round(top) + 'px';
            this.extentRectangle.style.left = Math.round(left) + 'px';
            this.extentRectangle.style.height = Math.round(height) + 'px';
            this.extentRectangle.style.width = Math.round(width) + 'px';
        }
        this.rectPxBounds = new OpenLayers.Bounds(
            Math.round(left), Math.round(bottom),
            Math.round(right), Math.round(top)
        );
    },

    /**
     * Method: getRectBoundsFromMapBounds
     * Get the rect bounds from the map bounds.
     *
     * Parameters:
     * lonLatBounds - {<OpenLayers.Bounds>}
     *
     * Returns:
     * {<OpenLayers.Bounds>}A bounds which is the passed-in map lon/lat extent
     * translated into pixel bounds for the overview map
     */
    getRectBoundsFromMapBounds: function(lonLatBounds) {
        var leftBottomPx = this.getOverviewPxFromLonLat({
            lon: lonLatBounds.left,
            lat: lonLatBounds.bottom
        });
        var rightTopPx = this.getOverviewPxFromLonLat({
            lon: lonLatBounds.right,
            lat: lonLatBounds.top
        });
        var bounds = null;
        if (leftBottomPx && rightTopPx) {
            bounds = new OpenLayers.Bounds(leftBottomPx.x, leftBottomPx.y,
                                           rightTopPx.x, rightTopPx.y);
        }
        return bounds;
    },

    /**
     * Method: getMapBoundsFromRectBounds
     * Get the map bounds from the rect bounds.
     *
     * Parameters:
     * pxBounds - {<OpenLayers.Bounds>}
     *
     * Returns:
     * {<OpenLayers.Bounds>} Bounds which is the passed-in overview rect bounds
     * translated into lon/lat bounds for the overview map
     */
    getMapBoundsFromRectBounds: function(pxBounds) {
        var leftBottomLonLat = this.getLonLatFromOverviewPx({
            x: pxBounds.left,
            y: pxBounds.bottom
        });
        var rightTopLonLat = this.getLonLatFromOverviewPx({
            x: pxBounds.right,
            y: pxBounds.top
        });
        return new OpenLayers.Bounds(leftBottomLonLat.lon, leftBottomLonLat.lat,
                                     rightTopLonLat.lon, rightTopLonLat.lat);
    },

    /**
     * Method: getLonLatFromOverviewPx
     * Get a map location from a pixel location
     *
     * Parameters:
     * overviewMapPx - {<OpenLayers.Pixel>|Object} OpenLayers.Pixel or
     *                                             an object with a
     *                                             'x' and 'y' properties.
     *
     * Returns:
     * {Object} Location which is the passed-in overview map
     * OpenLayers.Pixel, translated into lon/lat by the overview
     * map. An object with a 'lon' and 'lat' properties.
     */
    getLonLatFromOverviewPx: function(overviewMapPx) {
        var size = this.ovmap.size;
        var res  = this.ovmap.getResolution();
        var center = this.ovmap.getExtent().getCenterLonLat();
    
        var deltaX = overviewMapPx.x - (size.w / 2);
        var deltaY = overviewMapPx.y - (size.h / 2);

        return {
            lon: center.lon + deltaX * res,
            lat: center.lat - deltaY * res
        };
    },

    /**
     * Method: getOverviewPxFromLonLat
     * Get a pixel location from a map location
     *
     * Parameters:
     * lonlat - {<OpenLayers.LonLat>|Object} OpenLayers.LonLat or an
     *     object with a 'lon' and 'lat' properties.
     *
     * Returns:
     * {Object} Location which is the passed-in OpenLayers.LonLat, 
     * translated into overview map pixels
     */
    getOverviewPxFromLonLat: function(lonlat) {
        var res = this.ovmap.getResolution();
        var extent = this.ovmap.getExtent();
        if (extent) {
            return {
                x: Math.round(1/res * (lonlat.lon - extent.left)),
                y: Math.round(1/res * (extent.top - lonlat.lat))
            };
        } 
    },

    CLASS_NAME: 'webtis.Control.GisOverviewMap'
});
//
// @source = zuyou.js
//
//2014年06月30日現在
var zuyou_list = {		//左下の経度、左下の緯度、右上の経度、右上の緯度が順に秒単位で入っています。
"知床岬":{b200k:"知床岬11号-3",west:522805,south:159320,east:523385,north:159660},
"知床岳":{b200k:"知床岬11号-4",west:522835,south:159000,east:523415,north:159340},
"ルシャ川":{b200k:"知床岬15号-2",west:522385,south:159000,east:522965,north:159340},
"硫黄山":{b200k:"知床岬16号-1",west:522540,south:158680,east:523115,north:159020},
"羅臼":{b200k:"知床岬16号-2",west:522385,south:158380,east:522960,north:158720},
"知床五湖":{b200k:"知床岬16号-3",west:522000,south:158680,east:522575,north:159020},
"知床峠":{b200k:"知床岬16号-4",west:521935,south:158380,east:522510,north:158720},
"納沙布":{b200k:"標津4号-4",west:524565,south:155980,east:525135,north:156320},
"根室北部":{b200k:"標津8号-2",west:524060,south:155980,east:524630,north:156320},
"野付崎":{b200k:"標津11号-3",west:522840,south:156730,east:523410,north:157070},
"本別海":{b200k:"標津12号-4",west:522840,south:155980,east:523410,north:156320},
//"遠音別岳":{b200k:"標津13号-3",west:522040,south:158080,east:522615,north:158420}, 140630変更
"遠音別岳":{b200k:"標津13号-3",west:522060,south:158080,east:522635,north:158420},
"根室峯浜":{b200k:"標津13号-4",west:521935,south:157780,east:522510,north:158120},
"薫別":{b200k:"標津14号-3",west:521935,south:157480,east:522510,north:157820},
"伊茶仁":{b200k:"標津14号-4",west:521935,south:157180,east:522510,north:157520},
"標津":{b200k:"標津15号-1",west:522390,south:156880,east:522960,north:157220},
"尾岱沼":{b200k:"標津15号-2",west:522390,south:156580,east:522960,north:156920},
"川北":{b200k:"標津15号-3",west:521940,south:156880,east:522510,north:157220},
"俵橋":{b200k:"標津15号-4",west:521940,south:156580,east:522510,north:156920},
"床丹":{b200k:"標津16号-1",west:522410,south:156280,east:522980,north:156620},
"別海":{b200k:"標津16号-2",west:522390,south:155980,east:522960,north:156320},
"中春別":{b200k:"標津16号-3",west:521940,south:156280,east:522510,north:156620},
"豊原":{b200k:"標津16号-4",west:521940,south:155980,east:522510,north:156320},
"友知":{b200k:"根室5号-1",west:524190,south:155680,east:524760,north:156020},
"根室南部":{b200k:"根室5号-3",west:523740,south:155680,east:524310,north:156020},
"落石":{b200k:"根室5号-4",west:523740,south:155370,east:524310,north:155710},
"東梅":{b200k:"根室9号-1",west:523290,south:155680,east:523860,north:156020},
"別当賀":{b200k:"根室9号-2",west:523290,south:155380,east:523860,north:155720},
"風蓮湖":{b200k:"根室9号-3",west:522840,south:155680,east:523410,north:156020},
"厚床":{b200k:"根室9号-4",west:522840,south:155365,east:523410,north:155705},
"奥行":{b200k:"根室13号-1",west:522390,south:155680,east:522960,north:156020},
"姉別":{b200k:"根室13号-2",west:522390,south:155380,east:522960,north:155720},
"上風連":{b200k:"根室13号-3",west:521940,south:155680,east:522510,north:156020},
"東円朱別":{b200k:"根室13号-4",west:521940,south:155380,east:522510,north:155720},
"奔幌戸":{b200k:"根室14号-1",west:522390,south:155080,east:522955,north:155420},
"霧多布":{b200k:"根室14号-2",west:522390,south:154780,east:522955,north:155120},
"茶内":{b200k:"根室14号-3",west:521940,south:155080,east:522505,north:155420},
"琵琶瀬":{b200k:"根室14号-4",west:521940,south:154780,east:522505,north:155120},
"ウトロ":{b200k:"網走4号-2",west:521485,south:158380,east:522060,north:158720},
"網走":{b200k:"網走12号-4",west:519235,south:158380,east:519810,north:158720},
"能取岬":{b200k:"網走16号-1",west:518785,south:158680,east:519360,north:159020},
"能取湖":{b200k:"網走16号-2",west:518785,south:158380,east:519360,north:158720},
"常呂":{b200k:"網走16号-3",west:518335,south:158680,east:518910,north:159020},
"卯原内":{b200k:"網走16号-4",west:518335,south:158380,east:518910,north:158720},
"真鯉":{b200k:"斜里1号-1",west:521520,south:158080,east:522095,north:158420},
"海別岳":{b200k:"斜里1号-2",west:521485,south:157780,east:522060,north:158120},
"峰浜":{b200k:"斜里1号-3",west:521035,south:158080,east:521610,north:158420},
"朱円":{b200k:"斜里1号-4",west:521035,south:157780,east:521610,north:158120},
"西古多糠":{b200k:"斜里2号-1",west:521485,south:157480,east:522060,north:157820},
"武佐岳":{b200k:"斜里2号-2",west:521485,south:157180,east:522060,north:157520},
"瑠辺斯岳":{b200k:"斜里2号-3",west:521035,south:157480,east:521610,north:157820},
"俣落岳":{b200k:"斜里2号-4",west:521035,south:157180,east:521610,north:157520},
"武佐":{b200k:"斜里3号-1",west:521490,south:156880,east:522060,north:157220},
"中標津":{b200k:"斜里3号-2",west:521490,south:156580,east:522060,north:156920},
"第二俣落":{b200k:"斜里3号-3",west:521040,south:156880,east:521610,north:157220},
"西竹":{b200k:"斜里3号-4",west:521040,south:156580,east:521610,north:156920},
"上春別":{b200k:"斜里4号-1",west:521490,south:156280,east:522060,north:156620},
"中西別":{b200k:"斜里4号-2",west:521490,south:155980,east:522060,north:156320},
"計根別":{b200k:"斜里4号-3",west:521040,south:156280,east:521610,north:156620},
"西春別":{b200k:"斜里4号-4",west:521040,south:155980,east:521610,north:156320},
"斜里":{b200k:"斜里5号-2",west:520585,south:157790,east:521160,north:158130},
"清里":{b200k:"斜里5号-4",west:520135,south:157805,east:520710,north:158145},
"斜里岳":{b200k:"斜里6号-1",west:520585,south:157480,east:521160,north:157820},
"サマッケヌプリ山":{b200k:"斜里6号-2",west:520585,south:157180,east:521160,north:157520},
"札弦":{b200k:"斜里6号-3",west:520135,south:157480,east:520710,north:157820},
"緑":{b200k:"斜里6号-4",west:520135,south:157180,east:520710,north:157520},
"養老牛温泉":{b200k:"斜里7号-1",west:520590,south:156880,east:521160,north:157220},
"養老牛":{b200k:"斜里7号-2",west:520590,south:156580,east:521160,north:156920},
"摩周湖北部":{b200k:"斜里7号-3",west:520140,south:156880,east:520710,north:157220},
"摩周湖南部":{b200k:"斜里7号-4",west:520140,south:156580,east:520710,north:156920},
"虹別":{b200k:"斜里8号-1",west:520590,south:156280,east:521160,north:156620},
"泉川":{b200k:"斜里8号-2",west:520590,south:155980,east:521160,north:156320},
"南弟子屈":{b200k:"斜里8号-3",west:520140,south:156280,east:520710,north:156620},
"磯分内":{b200k:"斜里8号-4",west:520140,south:155980,east:520710,north:156320},
"浜小清水":{b200k:"斜里9号-1",west:519685,south:158080,east:520260,north:158420},
"小清水":{b200k:"斜里9号-2",west:519685,south:157780,east:520260,north:158120},
"藻琴":{b200k:"斜里9号-3",west:519235,south:158080,east:519810,north:158420},
"東藻琴":{b200k:"斜里9号-4",west:519235,south:157780,east:519810,north:158120},
"上徳":{b200k:"斜里10号-1",west:519685,south:157480,east:520260,north:157820},
"野上峠":{b200k:"斜里10号-2",west:519685,south:157180,east:520260,north:157520},
"末広":{b200k:"斜里10号-3",west:519235,south:157480,east:519810,north:157820},
"藻琴山":{b200k:"斜里10号-4",west:519235,south:157180,east:519810,north:157520},
"川湯":{b200k:"斜里11号-1",west:519690,south:156880,east:520260,north:157220},
"美留和":{b200k:"斜里11号-2",west:519690,south:156580,east:520260,north:156920},
"屈斜路湖":{b200k:"斜里11号-3",west:519240,south:156880,east:519810,north:157220},
"和琴":{b200k:"斜里11号-4",west:519240,south:156580,east:519810,north:156920},
"弟子屈":{b200k:"斜里12号-1",west:519690,south:156280,east:520260,north:156620},
"上オソツベツ":{b200k:"斜里12号-2",west:519690,south:155980,east:520260,north:156320},
"辺計礼山":{b200k:"斜里12号-3",west:519240,south:156280,east:519810,north:156620},
"奥久著呂":{b200k:"斜里12号-4",west:519240,south:155980,east:519810,north:156320},
"呼人":{b200k:"斜里13号-1",west:518785,south:158080,east:519360,north:158420},
"女満別":{b200k:"斜里13号-2",west:518785,south:157780,east:519360,north:158120},
"越歳":{b200k:"斜里13号-3",west:518335,south:158080,east:518910,north:158420},
"緋牛内":{b200k:"斜里13号-4",west:518335,south:157780,east:518910,north:158120},
"北見福住":{b200k:"斜里14号-1",west:518785,south:157480,east:519360,north:157820},
"古梅":{b200k:"斜里14号-2",west:518785,south:157180,east:519360,north:157520},
"美幌":{b200k:"斜里14号-3",west:518335,south:157480,east:518910,north:157820},
"津別":{b200k:"斜里14号-4",west:518335,south:157180,east:518910,north:157520},
"サマッカリヌプリ":{b200k:"斜里15号-1",west:518790,south:156880,east:519360,north:157220},
"コトニヌプリ":{b200k:"斜里15号-2",west:518790,south:156580,east:519360,north:156920},
"上里":{b200k:"斜里15号-3",west:518340,south:156880,east:518910,north:157220},
"木禽岳":{b200k:"斜里15号-4",west:518340,south:156580,east:518910,north:156920},
"雄阿寒岳":{b200k:"斜里16号-1",west:518790,south:156280,east:519360,north:156620},
"ピリカネップ":{b200k:"斜里16号-2",west:518790,south:155980,east:519360,north:156320},
"阿寒湖":{b200k:"斜里16号-3",west:518340,south:156280,east:518910,north:156620},
"雌阿寒岳":{b200k:"斜里16号-4",west:518340,south:155980,east:518910,north:156320},
"矢臼別":{b200k:"釧路1号-1",west:521490,south:155680,east:522060,north:156020},
"茶内原野":{b200k:"釧路1号-2",west:521490,south:155380,east:522060,north:155720},
"フッポウシ川":{b200k:"釧路1号-3",west:521040,south:155680,east:521610,north:156020},
"別寒辺牛川中流":{b200k:"釧路1号-4",west:521040,south:155380,east:521610,north:155720},
"糸魚沢":{b200k:"釧路2号-1",west:521490,south:155080,east:522055,north:155420},
"厚岸湖":{b200k:"釧路2号-2",west:521490,south:154780,east:522055,north:155120},
"釧路太田":{b200k:"釧路2号-3",west:521040,south:155080,east:521605,north:155420},
"厚岸":{b200k:"釧路2号-4",west:521040,south:154780,east:521605,north:155120},
"床潭":{b200k:"釧路3号-1",west:521490,south:154480,east:522055,north:154820},
"尻羽岬":{b200k:"釧路3号-3",west:521040,south:154480,east:521605,north:154820},
"上チャンベツ":{b200k:"釧路5号-1",west:520590,south:155680,east:521160,north:156020},
"中チャンベツ":{b200k:"釧路5号-2",west:520590,south:155380,east:521160,north:155720},
"標茶":{b200k:"釧路5号-3",west:520140,south:155680,east:520710,north:156020},
"五十石":{b200k:"釧路5号-4",west:520140,south:155380,east:520710,north:155720},
"片無去":{b200k:"釧路6号-1",west:520590,south:155080,east:521155,north:155420},
"尾幌":{b200k:"釧路6号-2",west:520590,south:154780,east:521155,north:155120},
"塘路湖":{b200k:"釧路6号-3",west:520140,south:155080,east:520705,north:155420},
"上尾幌":{b200k:"釧路6号-4",west:520140,south:154780,east:520705,north:155120},
"仙鳳趾":{b200k:"釧路7号-1",west:520590,south:154480,east:521155,north:154820},
"昆布森":{b200k:"釧路7号-3",west:520140,south:154480,east:520705,north:154820},
"中久著呂":{b200k:"釧路9号-1",west:519690,south:155680,east:520260,north:156020},
"下久著呂":{b200k:"釧路9号-2",west:519690,south:155380,east:520260,north:155720},
"茂雪裡":{b200k:"釧路9号-3",west:519240,south:155680,east:519810,north:156020},
"鶴居":{b200k:"釧路9号-4",west:519240,south:155380,east:519810,north:155720},
"細岡":{b200k:"釧路10号-1",west:519690,south:155080,east:520255,north:155420},
"遠矢":{b200k:"釧路10号-2",west:519690,south:154780,east:520255,north:155120},
"下幌呂":{b200k:"釧路10号-3",west:519240,south:155080,east:519805,north:155420},
"大楽毛":{b200k:"釧路10号-4",west:519240,south:154780,east:519805,north:155120},
"釧路":{b200k:"釧路11号-1",west:519690,south:154480,east:520255,north:154820},
"釧路港":{b200k:"釧路11号-3",west:519240,south:154480,east:519805,north:154820},
"上幌呂":{b200k:"釧路13号-1",west:518790,south:155680,east:519360,north:156020},
"徹別":{b200k:"釧路13号-2",west:518790,south:155380,east:519360,north:155720},
"上徹別":{b200k:"釧路13号-3",west:518340,south:155680,east:518910,north:156020},
"布伏内":{b200k:"釧路13号-4",west:518340,south:155380,east:518910,north:155720},
"阿寒":{b200k:"釧路14号-1",west:518790,south:155080,east:519355,north:155420},
"山花":{b200k:"釧路14号-2",west:518790,south:154780,east:519355,north:155120},
"上庶路":{b200k:"釧路14号-3",west:518340,south:155080,east:518905,north:155420},
"中庶路":{b200k:"釧路14号-4",west:518340,south:154780,east:518905,north:155120},
"庶路":{b200k:"釧路15号-1",west:518790,south:154480,east:519355,north:154820},
"白糠":{b200k:"釧路15号-3",west:518340,south:154480,east:518905,north:154820},
"サロマ湖東部":{b200k:"紋別4号-1",west:517885,south:158680,east:518460,north:159020},
"浜佐呂間":{b200k:"紋別4号-2",west:517885,south:158380,east:518460,north:158720},
"サロマ湖":{b200k:"紋別4号-3",west:517435,south:158710,east:518010,north:159050},
"佐呂間":{b200k:"紋別4号-4",west:517435,south:158380,east:518010,north:158720},
"登栄床":{b200k:"紋別7号-2",west:517035,south:158980,east:517615,north:159320},
"中湧別":{b200k:"紋別7号-4",west:516535,south:159005,east:517115,north:159345},
"芭露":{b200k:"紋別8号-1",west:516985,south:158680,east:517560,north:159020},
"若里":{b200k:"紋別8号-2",west:516985,south:158380,east:517560,north:158720},
"上湧別":{b200k:"紋別8号-3",west:516535,south:158680,east:517110,north:159020},
"遠軽":{b200k:"紋別8号-4",west:516535,south:158380,east:517110,north:158720},
"紋別":{b200k:"紋別10号-4",west:515635,south:159580,east:516215,north:159920},
"小向":{b200k:"紋別11号-1",west:516135,south:159280,east:516715,north:159620},
"志文":{b200k:"紋別11号-2",west:516085,south:158980,east:516665,north:159320},
"中渚滑":{b200k:"紋別11号-3",west:515635,south:159280,east:516215,north:159620},
"上渚滑":{b200k:"紋別11号-4",west:515635,south:158980,east:516215,north:159320},
"上富美":{b200k:"紋別12号-1",west:516085,south:158680,east:516660,north:159020},
"瀬戸瀬":{b200k:"紋別12号-2",west:516085,south:158380,east:516660,north:158720},
"立牛岳":{b200k:"紋別12号-3",west:515635,south:158680,east:516210,north:159020},
"丸瀬布北部":{b200k:"紋別12号-4",west:515635,south:158380,east:516210,north:158720},
"沢木":{b200k:"紋別13号-4",west:514735,south:160180,east:515315,north:160520},
"沙留":{b200k:"紋別14号-1",west:515185,south:159880,east:515765,north:160220},
"豊野":{b200k:"紋別14号-2",west:515185,south:159580,east:515765,north:159920},
"興部":{b200k:"紋別14号-3",west:514735,south:159880,east:515315,north:160220},
"秋里":{b200k:"紋別14号-4",west:514735,south:159580,east:515315,north:159920},
"中宇津々":{b200k:"紋別15号-1",west:515185,south:159280,east:515765,north:159620},
"北見滝下":{b200k:"紋別15号-2",west:515185,south:158980,east:515765,north:159320},
"欝岳":{b200k:"紋別15号-3",west:514735,south:159280,east:515315,north:159620},
"滝上":{b200k:"紋別15号-4",west:514735,south:158980,east:515315,north:159320},
"立牛":{b200k:"紋別16号-1",west:515185,south:158680,east:515760,north:159020},
"丸立峠":{b200k:"紋別16号-2",west:515185,south:158380,east:515760,north:158720},
"滝西":{b200k:"紋別16号-3",west:514735,south:158680,east:515310,north:159020},
"上雄柏":{b200k:"紋別16号-4",west:514735,south:158380,east:515310,north:158720},
"日吉":{b200k:"北見1号-1",west:517885,south:158080,east:518460,north:158420},
"端野":{b200k:"北見1号-2",west:517885,south:157780,east:518460,north:158120},
"佐呂間山":{b200k:"北見1号-3",west:517435,south:158080,east:518010,north:158420},
"上仁頃":{b200k:"北見1号-4",west:517435,south:157780,east:518010,north:158120},
"北見":{b200k:"北見2号-1",west:517885,south:157480,east:518460,north:157820},
"開成":{b200k:"北見2号-2",west:517885,south:157180,east:518460,north:157520},
"相内":{b200k:"北見2号-3",west:517435,south:157480,east:518010,north:157820},
"常川":{b200k:"北見2号-4",west:517435,south:157180,east:518010,north:157520},
"本岐":{b200k:"北見3号-1",west:517890,south:156880,east:518460,north:157220},
"北見相生":{b200k:"北見3号-2",west:517890,south:156580,east:518460,north:156920},
"訓津峠":{b200k:"北見3号-3",west:517440,south:156880,east:518010,north:157220},
"上陸別":{b200k:"北見3号-4",west:517440,south:156580,east:518010,north:156920},
"イユダニヌプリ山":{b200k:"北見4号-1",west:517890,south:156280,east:518460,north:156620},
"オンネトー":{b200k:"北見4号-2",west:517890,south:155980,east:518460,north:156320},
"陸別東部":{b200k:"北見4号-3",west:517440,south:156280,east:518010,north:156620},
"上足寄":{b200k:"北見4号-4",west:517440,south:155980,east:518010,north:156320},
"若佐":{b200k:"北見5号-1",west:516985,south:158080,east:517560,north:158420},
"花園":{b200k:"北見5号-2",west:516985,south:157780,east:517560,north:158120},
"生田原":{b200k:"北見5号-3",west:516535,south:158080,east:517110,north:158420},
"伊吹":{b200k:"北見5号-4",west:516535,south:157780,east:517110,north:158120},
"留辺蘂東部":{b200k:"北見6号-1",west:516985,south:157480,east:517560,north:157820},
"訓子府":{b200k:"北見6号-2",west:516985,south:157180,east:517560,north:157520},
"留辺蘂西部":{b200k:"北見6号-3",west:516535,south:157480,east:517110,north:157820},
"置戸":{b200k:"北見6号-4",west:516535,south:157180,east:517110,north:157520},
"小利別":{b200k:"北見7号-1",west:516990,south:156880,east:517560,north:157220},
"釧路川上":{b200k:"北見7号-2",west:516990,south:156580,east:517560,north:156920},
"北見勝山":{b200k:"北見7号-3",west:516540,south:156880,east:517110,north:157220},
"勲祢別川上流":{b200k:"北見7号-4",west:516540,south:156580,east:517110,north:156920},
"陸別":{b200k:"北見8号-1",west:516990,south:156280,east:517560,north:156620},
"大誉地":{b200k:"北見8号-2",west:516990,south:155980,east:517560,north:156320},
"西斗満":{b200k:"北見8号-3",west:516540,south:156280,east:517110,north:156620},
"上利別":{b200k:"北見8号-4",west:516540,south:155980,east:517110,north:156320},
"瀬戸瀬温泉":{b200k:"北見9号-1",west:516085,south:158080,east:516660,north:158420},
"岩戸":{b200k:"北見9号-2",west:516085,south:157780,east:516660,north:158120},
"丸瀬布南部":{b200k:"北見9号-3",west:515635,south:158080,east:516210,north:158420},
"上武利":{b200k:"北見9号-4",west:515635,south:157780,east:516210,north:158120},
"花丘":{b200k:"北見10号-1",west:516085,south:157480,east:516660,north:157820},
"大和":{b200k:"北見10号-2",west:516085,south:157180,east:516660,north:157520},
"武利川上流":{b200k:"北見10号-3",west:515635,south:157480,east:516210,north:157820},
"富士見":{b200k:"北見10号-4",west:515635,south:157180,east:516210,north:157520},
"常元":{b200k:"北見11号-1",west:516090,south:156880,east:516660,north:157220},
"東三国山":{b200k:"北見11号-2",west:516090,south:156580,east:516660,north:156920},
"曲り沢峠":{b200k:"北見11号-3",west:515640,south:156880,east:516210,north:157220},
"クマネシリ岳":{b200k:"北見11号-4",west:515640,south:156580,east:516210,north:156920},
"喜登牛山":{b200k:"北見12号-1",west:516090,south:156280,east:516660,north:156620},
"喜登牛":{b200k:"北見12号-2",west:516090,south:155980,east:516660,north:156320},
"美里別川上流":{b200k:"北見12号-3",west:515640,south:156280,east:516210,north:156620},
"芽登温泉":{b200k:"北見12号-4",west:515640,south:155980,east:516210,north:156320},
"旧白滝":{b200k:"北見13号-1",west:515185,south:158080,east:515760,north:158420},
"白滝":{b200k:"北見13号-2",west:515185,south:157780,east:515760,north:158120},
"雄柏山":{b200k:"北見13号-3",west:514735,south:158080,east:515310,north:158420},
"北見峠":{b200k:"北見13号-4",west:514735,south:157780,east:515310,north:158120},
"上支湧別":{b200k:"北見14号-1",west:515185,south:157480,east:515760,north:157820},
"武利岳":{b200k:"北見14号-2",west:515185,south:157180,east:515760,north:157520},
"平山":{b200k:"北見14号-3",west:514735,south:157480,east:515310,north:157820},
"大函":{b200k:"北見14号-4",west:514735,south:157180,east:515310,north:157520},
"石北峠":{b200k:"北見15号-1",west:515190,south:156880,east:515760,north:157220},
"十勝三股":{b200k:"北見15号-2",west:515190,south:156580,east:515760,north:156920},
"大雪湖":{b200k:"北見15号-3",west:514740,south:156880,east:515310,north:157220},
"石狩岳":{b200k:"北見15号-4",west:514740,south:156580,east:515310,north:156920},
"幌加":{b200k:"北見16号-1",west:515190,south:156280,east:515760,north:156620},
"糠平":{b200k:"北見16号-2",west:515190,south:155980,east:515760,north:156320},
"ニペソツ山":{b200k:"北見16号-3",west:514740,south:156280,east:515310,north:156620},
"ウペペサンケ山":{b200k:"北見16号-4",west:514740,south:155980,east:515310,north:156320},
"庶路川上流":{b200k:"帯広1号-1",west:517890,south:155680,east:518460,north:156020},
"右股":{b200k:"帯広1号-2",west:517890,south:155380,east:518460,north:155720},
"上螺湾":{b200k:"帯広1号-3",west:517440,south:155680,east:518010,north:156020},
"ウコタキヌプリ":{b200k:"帯広1号-4",west:517440,south:155380,east:518010,north:155720},
"上茶路":{b200k:"帯広2号-1",west:517890,south:155080,east:518455,north:155420},
"縫別":{b200k:"帯広2号-2",west:517890,south:154780,east:518455,north:155120},
"ピラウンナイ川":{b200k:"帯広2号-3",west:517440,south:155080,east:518005,north:155420},
"ヌプキベツ":{b200k:"帯広2号-4",west:517440,south:154780,east:518005,north:155120},
"河原":{b200k:"帯広3号-1",west:517890,south:154480,east:518455,north:154820},
"音別":{b200k:"帯広3号-2",west:517890,south:154180,east:518455,north:154520},
"霧里":{b200k:"帯広3号-3",west:517440,south:154480,east:518005,north:154820},
"直別":{b200k:"帯広3号-4",west:517440,south:154180,east:518005,north:154520},
"厚内":{b200k:"帯広4号-3",west:517440,south:153880,east:518005,north:154220},
"螺湾":{b200k:"帯広5号-1",west:516990,south:155680,east:517560,north:156020},
"奥仙美里":{b200k:"帯広5号-2",west:516990,south:155380,east:517560,north:155720},
"愛冠":{b200k:"帯広5号-3",west:516540,south:155680,east:517110,north:156020},
"足寄":{b200k:"帯広5号-4",west:516540,south:155380,east:517110,north:155720},
"栄穂":{b200k:"帯広6号-1",west:516990,south:155080,east:517555,north:155420},
"川流布":{b200k:"帯広6号-2",west:516990,south:154780,east:517555,north:155120},
"本別":{b200k:"帯広6号-3",west:516540,south:155080,east:517105,north:155420},
"宝生":{b200k:"帯広6号-4",west:516540,south:154780,east:517105,north:155120},
"活平":{b200k:"帯広7号-1",west:516990,south:154480,east:517555,north:154820},
"常室":{b200k:"帯広7号-2",west:516990,south:154180,east:517555,north:154520},
"東台":{b200k:"帯広7号-3",west:516540,south:154480,east:517105,north:154820},
"十弗":{b200k:"帯広7号-4",west:516540,south:154180,east:517105,north:154520},
"浦幌":{b200k:"帯広8号-1",west:516990,south:153880,east:517555,north:154220},
"十勝大津":{b200k:"帯広8号-2",west:516990,south:153580,east:517555,north:153920},
"茂岩":{b200k:"帯広8号-3",west:516540,south:153880,east:517105,north:154220},
"旅来":{b200k:"帯広8号-4",west:516540,south:153580,east:517105,north:153920},
"芽登":{b200k:"帯広9号-1",west:516090,south:155680,east:516660,north:156020},
"活込":{b200k:"帯広9号-2",west:516090,south:155380,east:516660,north:155720},
"萩ヶ岡":{b200k:"帯広9号-3",west:515640,south:155680,east:516210,north:156020},
"上士幌":{b200k:"帯広9号-4",west:515640,south:155380,east:516210,north:155720},
"押帯":{b200k:"帯広10号-1",west:516090,south:155080,east:516655,north:155420},
"十勝高島":{b200k:"帯広10号-2",west:516090,south:154780,east:516655,north:155120},
"士幌":{b200k:"帯広10号-3",west:515640,south:155080,east:516205,north:155420},
"東音更":{b200k:"帯広10号-4",west:515640,south:154780,east:516205,north:155120},
"十勝池田":{b200k:"帯広11号-1",west:516090,south:154480,east:516655,north:154820},
"川合":{b200k:"帯広11号-2",west:516090,south:154180,east:516655,north:154520},
"十勝川温泉":{b200k:"帯広11号-3",west:515640,south:154480,east:516205,north:154820},
"幕別":{b200k:"帯広11号-4",west:515640,south:154180,east:516205,north:154520},
"農野牛":{b200k:"帯広12号-1",west:516090,south:153880,east:516655,north:154220},
"二宮":{b200k:"帯広12号-2",west:516090,south:153580,east:516655,north:153920},
"糠内":{b200k:"帯広12号-3",west:515640,south:153880,east:516205,north:154220},
"駒畠":{b200k:"帯広12号-4",west:515640,south:153580,east:516205,north:153920},
"勢多山":{b200k:"帯広13号-1",west:515190,south:155680,east:515760,north:156020},
"中音更":{b200k:"帯広13号-2",west:515190,south:155380,east:515760,north:155720},
"然別湖":{b200k:"帯広13号-3",west:514740,south:155680,east:515310,north:156020},
"扇ヶ原":{b200k:"帯広13号-4",west:514740,south:155380,east:515310,north:155720},
"中士幌":{b200k:"帯広14号-1",west:515190,south:155080,east:515755,north:155420},
"駒場":{b200k:"帯広14号-2",west:515190,south:154780,east:515755,north:155120},
"瓜幕":{b200k:"帯広14号-3",west:514740,south:155080,east:515305,north:155420},
"上然別":{b200k:"帯広14号-4",west:514740,south:154780,east:515305,north:155120},
"帯広北部":{b200k:"帯広15号-1",west:515190,south:154480,east:515755,north:154820},
"帯広南部":{b200k:"帯広15号-2",west:515190,south:154180,east:515755,north:154520},
"祥栄":{b200k:"帯広15号-3",west:514740,south:154480,east:515305,north:154820},
"芽室":{b200k:"帯広15号-4",west:514740,south:154180,east:515305,north:154520},
"大正":{b200k:"帯広16号-1",west:515190,south:153880,east:515755,north:154220},
"中札内":{b200k:"帯広16号-2",west:515190,south:153580,east:515755,north:153920},
"上帯広":{b200k:"帯広16号-3",west:514740,south:153880,east:515305,north:154220},
"十勝清川":{b200k:"帯広16号-4",west:514740,south:153580,east:515305,north:153920},
"湧洞沼":{b200k:"広尾5号-3",west:516540,south:153280,east:517105,north:153620},
"生花":{b200k:"広尾9号-1",west:516090,south:153280,east:516655,north:153620},
"晩成":{b200k:"広尾9号-2",west:516135,south:152980,east:516695,north:153320},
"上更別":{b200k:"広尾9号-3",west:515640,south:153280,east:516205,north:153620},
"忠類":{b200k:"広尾9号-4",west:515645,south:152980,east:516205,north:153320},
"浜大樹":{b200k:"広尾10号-1",west:516095,south:152680,east:516655,north:153020},
"大樹":{b200k:"広尾10号-3",west:515645,south:152680,east:516205,north:153020},
"豊似":{b200k:"広尾10号-4",west:515680,south:152380,east:516240,north:152720},
"広尾":{b200k:"広尾11号-3",west:515645,south:152080,east:516205,north:152420},
"音調津":{b200k:"広尾11号-4",west:515645,south:151780,east:516205,north:152120},
"日高目黒":{b200k:"広尾12号-3",west:515645,south:151480,east:516205,north:151820},
"庶野":{b200k:"広尾12号-4",west:515645,south:151180,east:516205,north:151520},
"更別":{b200k:"広尾13号-1",west:515190,south:153280,east:515755,north:153620},
"尾田":{b200k:"広尾13号-2",west:515195,south:152980,east:515755,north:153320},
"上札内":{b200k:"広尾13号-3",west:514740,south:153280,east:515305,north:153620},
"拓進":{b200k:"広尾13号-4",west:514745,south:152980,east:515305,north:153320},
"開進":{b200k:"広尾14号-1",west:515195,south:152680,east:515755,north:153020},
"中豊似":{b200k:"広尾14号-2",west:515195,south:152380,east:515755,north:152720},
"ヌビナイ川上流":{b200k:"広尾14号-3",west:514745,south:152680,east:515305,north:153020},
"トヨニ岳":{b200k:"広尾14号-4",west:514745,south:152380,east:515305,north:152720},
"札楽古":{b200k:"広尾15号-1",west:515195,south:152080,east:515755,north:152420},
"広尾岳":{b200k:"広尾15号-2",west:515195,south:151780,east:515755,north:152120},
"楽古岳":{b200k:"広尾15号-3",west:514745,south:152080,east:515305,north:152420},
"新富":{b200k:"広尾15号-4",west:514745,south:151780,east:515305,north:152120},
"袴腰山":{b200k:"広尾16号-1",west:515195,south:151480,east:515755,north:151820},
"えりも":{b200k:"広尾16号-2",west:515195,south:151180,east:515755,north:151520},
"アポイ岳":{b200k:"広尾16号-3",west:514745,south:151480,east:515305,north:151820},
"幌満":{b200k:"広尾16号-4",west:514745,south:151180,east:515305,north:151520},
"襟裳岬":{b200k:"広尾南13号-1",west:515285,south:150880,east:515840,north:151220},
"音標":{b200k:"枝幸4号-4",west:513830,south:160780,east:514415,north:161120},
"目梨泊":{b200k:"枝幸6号-4",west:512930,south:161980,east:513515,north:162320},
"徳志別":{b200k:"枝幸7号-2",west:513380,south:161380,east:513965,north:161720},
"枝幸":{b200k:"枝幸7号-3",west:512930,south:161680,east:513515,north:162020},
"下幌別":{b200k:"枝幸7号-4",west:512930,south:161380,east:513515,north:161720},
"乙忠部":{b200k:"枝幸8号-1",west:513380,south:161080,east:513965,north:161420},
"上音標":{b200k:"枝幸8号-2",west:513380,south:160780,east:513965,north:161120},
"志美宇丹":{b200k:"枝幸8号-3",west:512930,south:161080,east:513515,north:161420},
"上徳志別":{b200k:"枝幸8号-4",west:512930,south:160780,east:513515,north:161120},
"浅茅野台地":{b200k:"枝幸9号-4",west:512030,south:162580,east:512620,north:162920},
"頓別":{b200k:"枝幸10号-1",west:512480,south:162280,east:513065,north:162620},
"斜内":{b200k:"枝幸10号-2",west:512480,south:161980,east:513065,north:162320},
"浜頓別":{b200k:"枝幸10号-3",west:512030,south:162280,east:512615,north:162620},
"下頓別":{b200k:"枝幸10号-4",west:512030,south:161980,east:512615,north:162320},
"ポロヌプリ山":{b200k:"枝幸11号-1",west:512480,south:161680,east:513065,north:162020},
"歌登":{b200k:"枝幸11号-2",west:512480,south:161380,east:513065,north:161720},
"中頓別":{b200k:"枝幸11号-3",west:512030,south:161680,east:512615,north:162020},
"上頓別":{b200k:"枝幸11号-4",west:512030,south:161380,east:512615,north:161720},
"本幌別":{b200k:"枝幸12号-1",west:512480,south:161080,east:513065,north:161420},
"屋根棟山":{b200k:"枝幸12号-2",west:512480,south:160780,east:513065,north:161120},
"小頓別":{b200k:"枝幸12号-3",west:512030,south:161080,east:512615,north:161420},
"音威子府":{b200k:"枝幸12号-4",west:512030,south:160780,east:512615,north:161120},
"猿払":{b200k:"枝幸13号-1",west:511580,south:162880,east:512170,north:163220},
"浅茅野":{b200k:"枝幸13号-2",west:511580,south:162580,east:512170,north:162920},
"鬼志別":{b200k:"枝幸13号-3",west:511130,south:162880,east:511720,north:163220},
"エタンパック山":{b200k:"枝幸13号-4",west:511130,south:162580,east:511720,north:162920},
"安別":{b200k:"枝幸14号-1",west:511580,south:162280,east:512165,north:162620},
"イソサンヌプリ山":{b200k:"枝幸14号-2",west:511580,south:161980,east:512165,north:162320},
"セキタンベツ川":{b200k:"枝幸14号-3",west:511130,south:162280,east:511715,north:162620},
"上問寒":{b200k:"枝幸14号-4",west:511130,south:161980,east:511715,north:162320},
"松音知":{b200k:"枝幸15号-1",west:511580,south:161680,east:512165,north:162020},
"敏音知":{b200k:"枝幸15号-2",west:511580,south:161380,east:512165,north:161720},
"中問寒":{b200k:"枝幸15号-3",west:511130,south:161680,east:511715,north:162020},
"問寒別":{b200k:"枝幸15号-4",west:511130,south:161380,east:511715,north:161720},
"ペンケ山":{b200k:"枝幸16号-1",west:511580,south:161080,east:512165,north:161420},
"筬島":{b200k:"枝幸16号-2",west:511580,south:160780,east:512165,north:161120},
"天塩中川":{b200k:"枝幸16号-3",west:511130,south:161080,east:511715,north:161420},
"佐久":{b200k:"枝幸16号-4",west:511130,south:160780,east:511715,north:161120},
"北見幌内":{b200k:"名寄1号-1",west:514285,south:160480,east:514865,north:160820},
"雄武":{b200k:"名寄1号-2",west:514285,south:160180,east:514865,north:160520},
"中幌内":{b200k:"名寄1号-3",west:513835,south:160480,east:514415,north:160820},
"上雄武":{b200k:"名寄1号-4",west:513835,south:160180,east:514415,north:160520},
"トーウツ岳":{b200k:"名寄2号-1",west:514285,south:159880,east:514865,north:160220},
"上興部":{b200k:"名寄2号-2",west:514285,south:159580,east:514865,north:159920},
"毛鐘尻山":{b200k:"名寄2号-3",west:513835,south:159880,east:514415,north:160220},
"奥興部":{b200k:"名寄2号-4",west:513835,south:159580,east:514415,north:159920},
"西興部":{b200k:"名寄3号-1",west:514285,south:159280,east:514865,north:159620},
"上札久留":{b200k:"名寄3号-2",west:514285,south:158980,east:514865,north:159320},
"一の橋":{b200k:"名寄3号-3",west:513835,south:159280,east:514415,north:159620},
"名寄川上流":{b200k:"名寄3号-4",west:513835,south:158980,east:514415,north:159320},
"茂瀬":{b200k:"名寄4号-1",west:514285,south:158680,east:514860,north:159020},
"渚滑岳":{b200k:"名寄4号-2",west:514285,south:158380,east:514860,north:158720},
"藻瀬狩山":{b200k:"名寄4号-3",west:513835,south:158680,east:514410,north:159020},
"於鬼頭岳":{b200k:"名寄4号-4",west:513835,south:158380,east:514410,north:158720},
"シアッシリ山":{b200k:"名寄5号-1",west:513385,south:160480,east:513965,north:160820},
"美深峠":{b200k:"名寄5号-2",west:513385,south:160180,east:513965,north:160520},
"黒岩山":{b200k:"名寄5号-3",west:512935,south:160480,east:513515,north:160820},
"仁宇布":{b200k:"名寄5号-4",west:512935,south:160180,east:513515,north:160520},
"幌内越峠":{b200k:"名寄6号-1",west:513385,south:159880,east:513965,north:160220},
"サンル":{b200k:"名寄6号-2",west:513385,south:159580,east:513965,north:159920},
"ピヤシリ山":{b200k:"名寄6号-3",west:512935,south:159880,east:513515,north:160220},
"見晴山":{b200k:"名寄6号-4",west:512935,south:159580,east:513515,north:159920},
"下川":{b200k:"名寄7号-1",west:513385,south:159280,east:513965,north:159620},
"新下川":{b200k:"名寄7号-2",west:513385,south:158980,east:513965,north:159320},
"上名寄":{b200k:"名寄7号-3",west:512935,south:159280,east:513515,north:159620},
"日進":{b200k:"名寄7号-4",west:512935,south:158980,east:513515,north:159320},
"岩尾内湖":{b200k:"名寄8号-1",west:513385,south:158680,east:513960,north:159020},
"茂志利":{b200k:"名寄8号-2",west:513385,south:158380,east:513960,north:158720},
"中央":{b200k:"名寄8号-3",west:512935,south:158680,east:513510,north:159020},
"乙部山":{b200k:"名寄8号-4",west:512935,south:158380,east:513510,north:158720},
"函岳":{b200k:"名寄9号-1",west:512485,south:160480,east:513065,north:160820},
"雄木禽":{b200k:"名寄9号-2",west:512485,south:160180,east:513065,north:160520},
"恩根内":{b200k:"名寄9号-3",west:512035,south:160480,east:512615,north:160820},
"紋穂内":{b200k:"名寄9号-4",west:512035,south:160180,east:512615,north:160520},
"智恵文":{b200k:"名寄10号-1",west:512485,south:159880,east:513065,north:160220},
"名寄":{b200k:"名寄10号-2",west:512485,south:159580,east:513065,north:159920},
"美深":{b200k:"名寄10号-3",west:512035,south:159880,east:512615,north:160220},
"母子里":{b200k:"名寄10号-4",west:512035,south:159580,east:512615,north:159920},
"天塩風連":{b200k:"名寄11号-1",west:512485,south:159280,east:513065,north:159620},
"士別":{b200k:"名寄11号-2",west:512485,south:158980,east:513065,north:159320},
"西風連":{b200k:"名寄11号-3",west:512035,south:159280,east:512615,north:159620},
"温根別":{b200k:"名寄11号-4",west:512035,south:158980,east:512615,north:159320},
"上士別":{b200k:"名寄12号-1",west:512485,south:158680,east:513060,north:159020},
"和寒":{b200k:"名寄12号-2",west:512485,south:158380,east:513060,north:158720},
"剣淵":{b200k:"名寄12号-3",west:512035,south:158680,east:512610,north:159020},
"三和":{b200k:"名寄12号-4",west:512035,south:158380,east:512610,north:158720},
"小車峠":{b200k:"名寄13号-1",west:511585,south:160480,east:512165,north:160820},
"小車岳":{b200k:"名寄13号-2",west:511585,south:160180,east:512165,north:160520},
"共和":{b200k:"名寄13号-3",west:511135,south:160480,east:511715,north:160820},
"茶古志山":{b200k:"名寄13号-4",west:511135,south:160180,east:511715,north:160520},
"苦頓別山":{b200k:"名寄14号-1",west:511585,south:159880,east:512165,north:160220},
"朱鞠内湖北部":{b200k:"名寄14号-2",west:511585,south:159580,east:512165,north:159920},
"遠別川上流":{b200k:"名寄14号-3",west:511135,south:159880,east:511715,north:160220},
"ピッシリ山":{b200k:"名寄14号-4",west:511135,south:159580,east:511715,north:159920},
"朱鞠内":{b200k:"名寄15号-1",west:511585,south:159280,east:512165,north:159620},
"添牛内":{b200k:"名寄15号-2",west:511585,south:158980,east:512165,north:159320},
"羽幌岳":{b200k:"名寄15号-3",west:511135,south:159280,east:511715,north:159620},
"霧立峠":{b200k:"名寄15号-4",west:511135,south:158980,east:511715,north:159320},
"政和":{b200k:"名寄16号-1",west:511585,south:158680,east:512160,north:159020},
"幌加内":{b200k:"名寄16号-2",west:511585,south:158380,east:512160,north:158720},
"三頭山":{b200k:"名寄16号-3",west:511135,south:158680,east:511710,north:159020},
"長留内岳":{b200k:"名寄16号-4",west:511135,south:158380,east:511710,north:158720},
"天塩岳":{b200k:"旭川1号-1",west:514285,south:158080,east:514860,north:158420},
"中越":{b200k:"旭川1号-2",west:514285,south:157780,east:514860,north:158120},
"宇江内山":{b200k:"旭川1号-3",west:513835,south:158080,east:514410,north:158420},
"上川":{b200k:"旭川1号-4",west:513835,south:157780,east:514410,north:158120},
"万景壁":{b200k:"旭川2号-1",west:514285,south:157480,east:514860,north:157820},
"層雲峡":{b200k:"旭川2号-2",west:514285,south:157180,east:514860,north:157520},
"菊水":{b200k:"旭川2号-3",west:513835,south:157480,east:514410,north:157820},
"愛山溪温泉":{b200k:"旭川2号-4",west:513835,south:157180,east:514410,north:157520},
"白雲岳":{b200k:"旭川3号-1",west:514290,south:156880,east:514860,north:157220},
"五色ヶ原":{b200k:"旭川3号-2",west:514290,south:156580,east:514860,north:156920},
"旭岳":{b200k:"旭川3号-3",west:513840,south:156880,east:514410,north:157220},
"トムラウシ山":{b200k:"旭川3号-4",west:513840,south:156580,east:514410,north:156920},
"トムラウシ川":{b200k:"旭川4号-1",west:514290,south:156280,east:514860,north:156620},
"ペンケベツ":{b200k:"旭川4号-2",west:514290,south:155980,east:514860,north:156320},
"オプタテシケ山":{b200k:"旭川4号-3",west:513840,south:156280,east:514410,north:156620},
"チカベツ山":{b200k:"旭川4号-4",west:513840,south:155980,east:514410,north:156320},
"中愛別山":{b200k:"旭川5号-1",west:513385,south:158080,east:513960,north:158420},
"中愛別":{b200k:"旭川5号-2",west:513385,south:157780,east:513960,north:158120},
"協和":{b200k:"旭川5号-3",west:512935,south:158080,east:513510,north:158420},
"愛別":{b200k:"旭川5号-4",west:512935,south:157780,east:513510,north:158120},
"東山":{b200k:"旭川6号-1",west:513385,south:157480,east:513960,north:157820},
"石狩瑞穂":{b200k:"旭川6号-2",west:513385,south:157180,east:513960,north:157520},
"当麻":{b200k:"旭川6号-3",west:512935,south:157480,east:513510,north:157820},
"岐登牛山":{b200k:"旭川6号-4",west:512935,south:157180,east:513510,north:157520},
"俵真布":{b200k:"旭川7号-1",west:513390,south:156880,east:513960,north:157220},
"藤山":{b200k:"旭川7号-2",west:513390,south:156580,east:513960,north:156920},
"志比内":{b200k:"旭川7号-3",west:512940,south:156880,east:513510,north:157220},
"置杵牛":{b200k:"旭川7号-4",west:512940,south:156580,east:513510,north:156920},
"白金温泉":{b200k:"旭川8号-1",west:513390,south:156280,east:513960,north:156620},
"十勝岳":{b200k:"旭川8号-2",west:513390,south:155980,east:513960,north:156320},
"旭野":{b200k:"旭川8号-3",west:512940,south:156280,east:513510,north:156620},
"本幸":{b200k:"旭川8号-4",west:512940,south:155980,east:513510,north:156320},
"蘭留":{b200k:"旭川9号-1",west:512485,south:158080,east:513060,north:158420},
"比布":{b200k:"旭川9号-2",west:512485,south:157780,east:513060,north:158120},
"福原":{b200k:"旭川9号-3",west:512035,south:158080,east:512610,north:158420},
"鷹栖":{b200k:"旭川9号-4",west:512035,south:157780,east:512610,north:158120},
"永山":{b200k:"旭川10号-1",west:512485,south:157480,east:513060,north:157820},
"西神楽":{b200k:"旭川10号-2",west:512485,south:157180,east:513060,north:157520},
"旭川":{b200k:"旭川10号-3",west:512035,south:157480,east:512610,north:157820},
"雨紛":{b200k:"旭川10号-4",west:512035,south:157180,east:512610,north:157520},
"美瑛":{b200k:"旭川11号-1",west:512490,south:156880,east:513060,north:157220},
"美馬牛":{b200k:"旭川11号-2",west:512490,south:156580,east:513060,north:156920},
"神楽岳":{b200k:"旭川11号-3",west:512040,south:156880,east:512610,north:157220},
"瑠辺蘂山":{b200k:"旭川11号-4",west:512040,south:156580,east:512610,north:156920},
"上富良野":{b200k:"旭川12号-1",west:512490,south:156280,east:513060,north:156620},
"富良野":{b200k:"旭川12号-2",west:512490,south:155980,east:513060,north:156320},
"野花南":{b200k:"旭川12号-3",west:512040,south:156280,east:512610,north:156620},
"島ノ下":{b200k:"旭川12号-4",west:512040,south:155980,east:512610,north:156320},
"沼牛":{b200k:"旭川13号-1",west:511585,south:158080,east:512160,north:158420},
"江丹別":{b200k:"旭川13号-2",west:511585,south:157780,east:512160,north:158120},
"鷹泊貯水池":{b200k:"旭川13号-3",west:511135,south:158080,east:511710,north:158420},
"鷹泊":{b200k:"旭川13号-4",west:511135,south:157780,east:511710,north:158120},
"湯内":{b200k:"旭川14号-1",west:511585,south:157480,east:512160,north:157820},
"神居古潭":{b200k:"旭川14号-2",west:511585,south:157180,east:512160,north:157520},
"多度志":{b200k:"旭川14号-3",west:511135,south:157480,east:511710,north:157820},
"石狩深川":{b200k:"旭川14号-4",west:511135,south:157180,east:511710,north:157520},
"石狩新城":{b200k:"旭川15号-1",west:511590,south:156880,east:512160,north:157220},
"芦別":{b200k:"旭川15号-2",west:511590,south:156580,east:512160,north:156920},
"イルムケップ山":{b200k:"旭川15号-3",west:511140,south:156880,east:511710,north:157220},
"赤平":{b200k:"旭川15号-4",west:511140,south:156580,east:511710,north:156920},
"上芦別":{b200k:"旭川16号-1",west:511590,south:156280,east:512160,north:156620},
"奥芦別":{b200k:"旭川16号-2",west:511590,south:155980,east:512160,north:156320},
"文珠":{b200k:"旭川16号-3",west:511140,south:156280,east:511710,north:156620},
"美唄山":{b200k:"旭川16号-4",west:511140,south:155980,east:511710,north:156320},
"ニペソツ":{b200k:"夕張岳1号-1",west:514290,south:155680,east:514860,north:156020},
"岩松":{b200k:"夕張岳1号-2",west:514290,south:155380,east:514860,north:155720},
"十勝ペンケ山":{b200k:"夕張岳1号-3",west:513840,south:155680,east:514410,north:156020},
"佐幌岳":{b200k:"夕張岳1号-4",west:513840,south:155380,east:514410,north:155720},
"鹿追":{b200k:"夕張岳2号-1",west:514290,south:155080,east:514855,north:155420},
"十勝清水":{b200k:"夕張岳2号-2",west:514290,south:154780,east:514855,north:155120},
"狩勝峠":{b200k:"夕張岳2号-3",west:513840,south:155080,east:514405,north:155420},
"新得":{b200k:"夕張岳2号-4",west:513840,south:154780,east:514405,north:155120},
"御影":{b200k:"夕張岳3号-1",west:514290,south:154480,east:514855,north:154820},
"渋山":{b200k:"夕張岳3号-2",west:514290,south:154180,east:514855,north:154520},
"十勝石山":{b200k:"夕張岳3号-3",west:513840,south:154480,east:514405,north:154820},
"芽室岳":{b200k:"夕張岳3号-4",west:513840,south:154180,east:514405,north:154520},
"上美生":{b200k:"夕張岳4号-1",west:514290,south:153880,east:514855,north:154220},
"拓成":{b200k:"夕張岳4号-2",west:514290,south:153580,east:514855,north:153920},
"妙敷山":{b200k:"夕張岳4号-3",west:513840,south:153880,east:514405,north:154220},
"札内岳":{b200k:"夕張岳4号-4",west:513840,south:153580,east:514405,north:153920},
"シーソラプチ川":{b200k:"夕張岳5号-1",west:513390,south:155680,east:513960,north:156020},
"北落合":{b200k:"夕張岳5号-2",west:513390,south:155380,east:513960,north:155720},
"麓郷":{b200k:"夕張岳5号-3",west:512940,south:155680,east:513510,north:156020},
"西達布":{b200k:"夕張岳5号-4",west:512940,south:155380,east:513510,north:155720},
"落合":{b200k:"夕張岳6号-1",west:513390,south:155080,east:513955,north:155420},
"上トマム":{b200k:"夕張岳6号-2",west:513390,south:154780,east:513955,north:155120},
"幾寅":{b200k:"夕張岳6号-3",west:512940,south:155080,east:513505,north:155420},
"下トマム":{b200k:"夕張岳6号-4",west:512940,south:154780,east:513505,north:155120},
"沙流岳":{b200k:"夕張岳7号-1",west:513390,south:154480,east:513955,north:154820},
"ペンケヌーシ岳":{b200k:"夕張岳7号-2",west:513390,south:154180,east:513955,north:154520},
"双珠別湖":{b200k:"夕張岳7号-3",west:512940,south:154480,east:513505,north:154820},
"千栄":{b200k:"夕張岳7号-4",west:512940,south:154180,east:513505,north:154520},
"ピパイロ岳":{b200k:"夕張岳8号-1",west:513390,south:153880,east:513955,north:154220},
"幌尻岳":{b200k:"夕張岳8号-2",west:513390,south:153580,east:513955,north:153920},
"二岐岳":{b200k:"夕張岳8号-3",west:512940,south:153880,east:513505,north:154220},
"ヌカンライ岳":{b200k:"夕張岳8号-4",west:512940,south:153580,east:513505,north:153920},
"布部":{b200k:"夕張岳9号-1",west:512490,south:155680,east:513060,north:156020},
"山部":{b200k:"夕張岳9号-2",west:512490,south:155380,east:513060,north:155720},
"布部岳":{b200k:"夕張岳9号-3",west:512040,south:155680,east:512610,north:156020},
"芦別岳":{b200k:"夕張岳9号-4",west:512040,south:155380,east:512610,north:155720},
"石狩金山":{b200k:"夕張岳10号-1",west:512490,south:155080,east:513055,north:155420},
"占冠":{b200k:"夕張岳10号-2",west:512490,south:154780,east:513055,north:155120},
"夕張岳":{b200k:"夕張岳10号-3",west:512040,south:155080,east:512605,north:155420},
"屏風山":{b200k:"夕張岳10号-4",west:512040,south:154780,east:512605,north:155120},
"占冠中央":{b200k:"夕張岳11号-1",west:512490,south:154480,east:513055,north:154820},
"日高":{b200k:"夕張岳11号-2",west:512490,south:154180,east:513055,north:154520},
"ニニウ":{b200k:"夕張岳11号-3",west:512040,south:154480,east:512605,north:154820},
"胆振福山":{b200k:"夕張岳11号-4",west:512040,south:154180,east:512605,north:154520},
"三岩":{b200k:"夕張岳12号-1",west:512490,south:153880,east:513055,north:154220},
"豊糠":{b200k:"夕張岳12号-2",west:512490,south:153580,east:513055,north:153920},
"仁世宇":{b200k:"夕張岳12号-3",west:512040,south:153880,east:512605,north:154220},
"振内":{b200k:"夕張岳12号-4",west:512040,south:153580,east:512605,north:153920},
"崕山":{b200k:"夕張岳13号-1",west:511590,south:155680,east:512160,north:156020},
"幾春別岳":{b200k:"夕張岳13号-2",west:511590,south:155380,east:512160,north:155720},
"芦別湖":{b200k:"夕張岳13号-3",west:511140,south:155680,east:511710,north:156020},
"桂沢湖":{b200k:"夕張岳13号-4",west:511140,south:155380,east:511710,north:155720},
"滝ノ沢岳":{b200k:"夕張岳14号-1",west:511590,south:155080,east:512155,north:155420},
"白金川":{b200k:"夕張岳14号-2",west:511590,south:154780,east:512155,north:155120},
"夕張川上流":{b200k:"夕張岳14号-3",west:511140,south:155080,east:511705,north:155420},
"シューパロ湖":{b200k:"夕張岳14号-4",west:511140,south:154780,east:511705,north:155120},
"長和":{b200k:"夕張岳15号-1",west:511590,south:154480,east:512155,north:154820},
"稲里":{b200k:"夕張岳15号-2",west:511590,south:154180,east:512155,north:154520},
"紅葉山":{b200k:"夕張岳15号-3",west:511140,south:154480,east:511705,north:154820},
"十三里":{b200k:"夕張岳15号-4",west:511140,south:154180,east:511705,north:154520},
"穂別":{b200k:"夕張岳16号-1",west:511590,south:153880,east:512155,north:154220},
"荷負":{b200k:"夕張岳16号-2",west:511590,south:153580,east:512155,north:153920},
"厚真川上流":{b200k:"夕張岳16号-3",west:511140,south:153880,east:511705,north:154220},
"胆振豊田":{b200k:"夕張岳16号-4",west:511140,south:153580,east:511705,north:153920},
"岩内川上流":{b200k:"浦河1号-1",west:514290,south:153280,east:514855,north:153620},
"歴舟川上流":{b200k:"浦河1号-2",west:514295,south:152980,east:514855,north:153320},
"札内川上流":{b200k:"浦河1号-3",west:513840,south:153280,east:514405,north:153620},
"ヤオロマップ岳":{b200k:"浦河1号-4",west:513845,south:152980,east:514405,north:153320},
"神威岳":{b200k:"浦河2号-1",west:514295,south:152680,east:514855,north:153020},
"ピリカヌプリ":{b200k:"浦河2号-2",west:514295,south:152380,east:514855,north:152720},
"ピリガイ山":{b200k:"浦河2号-3",west:513845,south:152680,east:514405,north:153020},
"元浦川上流":{b200k:"浦河2号-4",west:513845,south:152380,east:514405,north:152720},
"日高幌別川上流":{b200k:"浦河3号-1",west:514295,south:152080,east:514855,north:152420},
"上杵臼":{b200k:"浦河3号-2",west:514295,south:151780,east:514855,north:152120},
"上野深":{b200k:"浦河3号-3",west:513845,south:152080,east:514405,north:152420},
"西舎":{b200k:"浦河3号-4",west:513845,south:151780,east:514405,north:152120},
"様似":{b200k:"浦河4号-1",west:514295,south:151480,east:514855,north:151820},
"浦河":{b200k:"浦河4号-3",west:513845,south:151480,east:514405,north:151820},
"イドンナップ岳":{b200k:"浦河5号-1",west:513390,south:153280,east:513955,north:153620},
"日高大山":{b200k:"浦河5号-2",west:513395,south:152980,east:513955,north:153320},
"新冠湖":{b200k:"浦河5号-3",west:512940,south:153280,east:513505,north:153620},
"岩清水":{b200k:"浦河5号-4",west:512945,south:152980,east:513505,north:153320},
"セタウシ山":{b200k:"浦河6号-1",west:513395,south:152680,east:513955,north:153020},
"美河":{b200k:"浦河6号-2",west:513395,south:152380,east:513955,north:152720},
"農屋":{b200k:"浦河6号-3",west:512945,south:152680,east:513505,north:153020},
"ペラリ山":{b200k:"浦河6号-4",west:512945,south:152380,east:513505,north:152720},
"歌笛":{b200k:"浦河7号-1",west:513395,south:152080,east:513955,north:152420},
"荻伏":{b200k:"浦河7号-2",west:513330,south:151780,east:513890,north:152120},
"三石":{b200k:"浦河7号-3",west:512945,south:152080,east:513505,north:152420},
"貫気別山":{b200k:"浦河9号-1",west:512490,south:153280,east:513055,north:153620},
"太陽":{b200k:"浦河9号-2",west:512495,south:152980,east:513055,north:153320},
"日高旭":{b200k:"浦河9号-3",west:512040,south:153280,east:512605,north:153620},
"新和":{b200k:"浦河9号-4",west:512045,south:152980,east:512605,north:153320},
"明和":{b200k:"浦河10号-1",west:512495,south:152680,east:513055,north:153020},
"御園":{b200k:"浦河10号-2",west:512495,south:152380,east:513055,north:152720},
"共栄":{b200k:"浦河10号-3",west:512045,south:152680,east:512605,north:153020},
"静内":{b200k:"浦河10号-4",west:512000,south:152380,east:512560,north:152720},
"東静内":{b200k:"浦河11号-1",west:512470,south:152080,east:513030,north:152420},
"平取":{b200k:"浦河13号-1",west:511590,south:153280,east:512155,north:153620},
"庫富":{b200k:"浦河13号-2",west:511595,south:152980,east:512155,north:153320},
"旭岡":{b200k:"浦河13号-3",west:511140,south:153280,east:511705,north:153620},
"富川":{b200k:"浦河13号-4",west:511145,south:152980,east:511705,north:153320},
"厚賀":{b200k:"浦河14号-1",west:511595,south:152680,east:512155,north:153020},
"門別":{b200k:"浦河14号-3",west:511145,south:152680,east:511705,north:153020},
"宗谷岬":{b200k:"稚内3号-2",west:510680,south:163780,east:511270,north:164120},
"宗谷":{b200k:"稚内4号-1",west:510760,south:163480,east:511350,north:163820},
"モイマ山":{b200k:"稚内4号-2",west:510680,south:163180,east:511270,north:163520},
"富磯":{b200k:"稚内4号-3",west:510230,south:163480,east:510820,north:163820},
"声問":{b200k:"稚内4号-4",west:510230,south:163180,east:510820,north:163520},
"野寒布岬":{b200k:"稚内8号-1",west:509780,south:163480,east:510370,north:163820},
"稚内":{b200k:"稚内8号-2",west:509780,south:163180,east:510370,north:163520},
"船泊":{b200k:"稚内16号-3",west:507380,south:163490,east:507970,north:163830},
"礼文岳":{b200k:"稚内16号-4",west:507380,south:163180,east:507970,north:163520},
"知来別":{b200k:"稚内東16号-4",west:511185,south:163180,east:511775,north:163520},
"曲淵":{b200k:"天塩1号-1",west:510680,south:162880,east:511270,north:163220},
"下豊別":{b200k:"天塩1号-2",west:510680,south:162580,east:511270,north:162920},
"樺岡":{b200k:"天塩1号-3",west:510230,south:162880,east:510820,north:163220},
"沼川":{b200k:"天塩1号-4",west:510230,south:162580,east:510820,north:162920},
"豊幌":{b200k:"天塩2号-1",west:510680,south:162280,east:511265,north:162620},
"本流":{b200k:"天塩2号-2",west:510680,south:161980,east:511265,north:162320},
"豊富":{b200k:"天塩2号-3",west:510230,south:162280,east:510815,north:162620},
"幌延":{b200k:"天塩2号-4",west:510230,south:161980,east:510815,north:162320},
"安牛":{b200k:"天塩3号-1",west:510680,south:161680,east:511265,north:162020},
"雄信内":{b200k:"天塩3号-2",west:510680,south:161380,east:511265,north:161720},
"振老":{b200k:"天塩3号-3",west:510230,south:161680,east:510815,north:162020},
"更岸":{b200k:"天塩3号-4",west:510200,south:161380,east:510785,north:161720},
"泉源":{b200k:"天塩4号-1",west:510680,south:161080,east:511265,north:161420},
"天塩清川":{b200k:"天塩4号-2",west:510680,south:160780,east:511265,north:161120},
"丸松":{b200k:"天塩4号-3",west:510230,south:161080,east:510815,north:161420},
"遠別":{b200k:"天塩4号-4",west:510230,south:160780,east:510815,north:161120},
"上勇知":{b200k:"天塩5号-1",west:509700,south:162880,east:510290,north:163220},
"兜沼":{b200k:"天塩5号-2",west:509780,south:162580,east:510370,north:162920},
"夕来":{b200k:"天塩5号-4",west:509330,south:162580,east:509920,north:162920},
"豊徳":{b200k:"天塩6号-1",west:509690,south:162280,east:510275,north:162620},
"稚咲内":{b200k:"天塩6号-2",west:509780,south:161980,east:510365,north:162320},
"浜里":{b200k:"天塩7号-1",west:509780,south:161680,east:510365,north:162020},
"雄忠志内":{b200k:"天塩9号-4",west:508430,south:162580,east:509020,north:162920},
"鬼脇":{b200k:"天塩10号-3",west:508430,south:162280,east:509015,north:162620},
"鴛泊":{b200k:"天塩13号-2",west:507980,south:162600,east:508570,north:162940},
"香深":{b200k:"天塩13号-3",west:507530,south:162880,east:508120,north:163220},
"仙法志":{b200k:"天塩14号-1",west:507980,south:162280,east:508565,north:162620},
"東野":{b200k:"羽幌1号-1",west:510685,south:160480,east:511265,north:160820},
"大成":{b200k:"羽幌1号-2",west:510685,south:160180,east:511265,north:160520},
"歌越":{b200k:"羽幌1号-3",west:510235,south:160480,east:510815,north:160820},
"初山別":{b200k:"羽幌1号-4",west:510235,south:160180,east:510815,north:160520},
"初山別川上流":{b200k:"羽幌2号-1",west:510685,south:159880,east:511265,north:160220},
"羽幌貯水池":{b200k:"羽幌2号-2",west:510685,south:159580,east:511265,north:159920},
"天塩有明":{b200k:"羽幌2号-3",west:510235,south:159880,east:510815,north:160220},
"曙":{b200k:"羽幌2号-4",west:510235,south:159580,east:510815,north:159920},
"幌別山":{b200k:"羽幌3号-1",west:510685,south:159280,east:511265,north:159620},
"白頭山":{b200k:"羽幌3号-2",west:510685,south:158980,east:511265,north:159320},
"上羽幌":{b200k:"羽幌3号-3",west:510235,south:159280,east:510815,north:159620},
"三溪":{b200k:"羽幌3号-4",west:510235,south:158980,east:510815,north:159320},
"大天狗岳":{b200k:"羽幌4号-1",west:510685,south:158680,east:511260,north:159020},
"滝下":{b200k:"羽幌4号-2",west:510685,south:158380,east:511260,north:158720},
"ルペシュペナイ川":{b200k:"羽幌4号-3",west:510235,south:158680,east:510810,north:159020},
"達布":{b200k:"羽幌4号-4",west:510235,south:158380,east:510810,north:158720},
"羽幌":{b200k:"羽幌6号-2",west:509785,south:159580,east:510365,north:159920},
"苫前":{b200k:"羽幌7号-1",west:509785,south:159280,east:510365,north:159620},
"力昼":{b200k:"羽幌7号-2",west:509785,south:158980,east:510365,north:159320},
"港町":{b200k:"羽幌8号-1",west:509785,south:158680,east:510360,north:159020},
"小平":{b200k:"羽幌8号-2",west:509785,south:158380,east:510360,north:158720},
"焼尻島":{b200k:"羽幌10号-3",west:508640,south:159880,east:509220,north:160220},
"ホロピリ湖":{b200k:"留萌1号-1",west:510685,south:158080,east:511260,north:158420},
"恵比島":{b200k:"留萌1号-2",west:510685,south:157780,east:511260,north:158120},
"ポロシリ山":{b200k:"留萌1号-3",west:510235,south:158080,east:510810,north:158420},
"幌糠":{b200k:"留萌1号-4",west:510235,south:157780,east:510810,north:158120},
"石狩沼田":{b200k:"留萌2号-1",west:510685,south:157480,east:511260,north:157820},
"妹背牛":{b200k:"留萌2号-2",west:510685,south:157180,east:511260,north:157520},
"美葉牛":{b200k:"留萌2号-3",west:510235,south:157480,east:510810,north:157820},
"恵岱別":{b200k:"留萌2号-4",west:510235,south:157180,east:510810,north:157520},
"江部乙":{b200k:"留萌3号-1",west:510690,south:156880,east:511260,north:157220},
"滝川":{b200k:"留萌3号-2",west:510690,south:156580,east:511260,north:156920},
"石狩大和":{b200k:"留萌3号-3",west:510240,south:156880,east:510810,north:157220},
"総進":{b200k:"留萌3号-4",west:510240,south:156580,east:510810,north:156920},
"砂川":{b200k:"留萌4号-1",west:510690,south:156280,east:511260,north:156620},
"茶志内":{b200k:"留萌4号-2",west:510690,south:155980,east:511260,north:156320},
"浦臼":{b200k:"留萌4号-3",west:510240,south:156280,east:510810,north:156620},
"晩生内":{b200k:"留萌4号-4",west:510240,south:155980,east:510810,north:156320},
"留萌":{b200k:"留萌5号-1",west:509785,south:158080,east:510360,north:158420},
"大和田":{b200k:"留萌5号-2",west:509785,south:157780,east:510360,north:158120},
"増毛":{b200k:"留萌5号-4",west:509335,south:157780,east:509910,north:158120},
"信砂御料":{b200k:"留萌6号-1",west:509785,south:157480,east:510360,north:157820},
"恵岱岳":{b200k:"留萌6号-2",west:509785,south:157180,east:510360,north:157520},
"暑寒沢":{b200k:"留萌6号-3",west:509335,south:157480,east:509910,north:157820},
"暑寒別岳":{b200k:"留萌6号-4",west:509280,south:157180,east:509855,north:157520},
"吉野":{b200k:"留萌7号-1",west:509790,south:156880,east:510360,north:157220},
"南幌加":{b200k:"留萌7号-2",west:509790,south:156580,east:510360,north:156920},
"御料地":{b200k:"留萌7号-3",west:509340,south:156880,east:509910,north:157220},
"四番川":{b200k:"留萌7号-4",west:509340,south:156580,east:509910,north:156920},
"ピンネシリ":{b200k:"留萌8号-1",west:509790,south:156280,east:510360,north:156620},
"月形":{b200k:"留萌8号-2",west:509790,south:155980,east:510360,north:156320},
"二番川":{b200k:"留萌8号-3",west:509340,south:156280,east:509910,north:156620},
"青山中央":{b200k:"留萌8号-4",west:509340,south:155980,east:509910,north:156320},
"別苅":{b200k:"留萌10号-1",west:508820,south:157500,east:509395,north:157840},
"雄冬":{b200k:"留萌10号-2",west:508770,south:157180,east:509345,north:157520},
"浜益":{b200k:"留萌11号-1",west:508820,south:156880,east:509390,north:157220},
"柏木":{b200k:"留萌11号-2",west:508820,south:156580,east:509390,north:156920},
"濃昼":{b200k:"留萌12号-1",west:508890,south:156280,east:509460,north:156620},
"厚田":{b200k:"留萌12号-2",west:508890,south:155980,east:509460,north:156320},
"幾春別":{b200k:"札幌1号-1",west:510690,south:155680,east:511260,north:156020},
"三笠":{b200k:"札幌1号-2",west:510690,south:155380,east:511260,north:155720},
"美唄":{b200k:"札幌1号-3",west:510240,south:155680,east:510810,north:156020},
"岩見沢":{b200k:"札幌1号-4",west:510240,south:155380,east:510810,north:155720},
"美流渡":{b200k:"札幌2号-1",west:510690,south:155080,east:511255,north:155420},
"夕張":{b200k:"札幌2号-2",west:510690,south:154780,east:511255,north:155120},
"上志文":{b200k:"札幌2号-3",west:510240,south:155080,east:510805,north:155420},
"栗山":{b200k:"札幌2号-4",west:510240,south:154780,east:510805,north:155120},
"雨霧山":{b200k:"札幌3号-1",west:510690,south:154480,east:511255,north:154820},
"川端":{b200k:"札幌3号-2",west:510690,south:154180,east:511255,north:154520},
"三川":{b200k:"札幌3号-3",west:510240,south:154480,east:510805,north:154820},
"追分":{b200k:"札幌3号-4",west:510240,south:154180,east:510805,north:154520},
"幌内":{b200k:"札幌4号-1",west:510690,south:153880,east:511255,north:154220},
"厚真":{b200k:"札幌4号-2",west:510690,south:153580,east:511255,north:153920},
"早来":{b200k:"札幌4号-3",west:510240,south:153880,east:510805,north:154220},
"遠浅":{b200k:"札幌4号-4",west:510240,south:153580,east:510805,north:153920},
"市南":{b200k:"札幌5号-1",west:509790,south:155680,east:510360,north:156020},
"上幌向":{b200k:"札幌5号-2",west:509790,south:155380,east:510360,north:155720},
"弁華別":{b200k:"札幌5号-3",west:509340,south:155680,east:509910,north:156020},
"石狩当別":{b200k:"札幌5号-4",west:509340,south:155380,east:509910,north:155720},
"栗沢":{b200k:"札幌6号-1",west:509790,south:155080,east:510355,north:155420},
"長沼":{b200k:"札幌6号-2",west:509790,south:154780,east:510355,north:155120},
"江別":{b200k:"札幌6号-3",west:509340,south:155080,east:509905,north:155420},
"野幌":{b200k:"札幌6号-4",west:509340,south:154780,east:509905,north:155120},
"南長沼":{b200k:"札幌7号-1",west:509790,south:154480,east:510355,north:154820},
"長都":{b200k:"札幌7号-2",west:509790,south:154180,east:510355,north:154520},
"北広島":{b200k:"札幌7号-3",west:509340,south:154480,east:509905,north:154820},
"恵庭":{b200k:"札幌7号-4",west:509340,south:154180,east:509905,north:154520},
"千歳":{b200k:"札幌8号-1",west:509790,south:153880,east:510355,north:154220},
"ウトナイ湖":{b200k:"札幌8号-2",west:509790,south:153580,east:510355,north:153920},
"胆振蘭越":{b200k:"札幌8号-3",west:509340,south:153880,east:509905,north:154220},
"胆振高丘":{b200k:"札幌8号-4",west:509340,south:153580,east:509905,north:153920},
"望来":{b200k:"札幌9号-1",west:508860,south:155680,east:509430,north:156020},
"太美":{b200k:"札幌9号-2",west:508890,south:155380,east:509460,north:155720},
"石狩":{b200k:"札幌9号-4",west:508440,south:155380,east:509010,north:155720},
"札幌東北部":{b200k:"札幌10号-1",west:508890,south:155080,east:509455,north:155420},
"札幌東部":{b200k:"札幌10号-2",west:508890,south:154780,east:509455,north:155120},
"札幌北部":{b200k:"札幌10号-3",west:508440,south:155080,east:509005,north:155420},
"札幌":{b200k:"札幌10号-4",west:508440,south:154780,east:509005,north:155120},
"清田":{b200k:"札幌11号-1",west:508890,south:154480,east:509455,north:154820},
"島松山":{b200k:"札幌11号-2",west:508890,south:154180,east:509455,north:154520},
"石山":{b200k:"札幌11号-3",west:508440,south:154480,east:509005,north:154820},
"空沼岳":{b200k:"札幌11号-4",west:508440,south:154180,east:509005,north:154520},
"支笏湖温泉":{b200k:"札幌12号-1",west:508890,south:153880,east:509455,north:154220},
"樽前山":{b200k:"札幌12号-2",west:508890,south:153580,east:509455,north:153920},
"恵庭岳":{b200k:"札幌12号-3",west:508440,south:153880,east:509005,north:154220},
"風不死岳":{b200k:"札幌12号-4",west:508440,south:153580,east:509005,north:153920},
"小樽東部":{b200k:"札幌13号-4",west:507540,south:155380,east:508110,north:155720},
"銭函":{b200k:"札幌14号-1",west:507990,south:155095,east:508560,north:155435},
"手稲山":{b200k:"札幌14号-2",west:507990,south:154780,east:508555,north:155120},
"張碓":{b200k:"札幌14号-3",west:507540,south:155080,east:508105,north:155420},
"余市岳":{b200k:"札幌14号-4",west:507540,south:154780,east:508105,north:155120},
"定山溪":{b200k:"札幌15号-1",west:507990,south:154480,east:508555,north:154820},
"札幌岳":{b200k:"札幌15号-2",west:507990,south:154180,east:508555,north:154520},
"無意根山":{b200k:"札幌15号-3",west:507540,south:154480,east:508105,north:154820},
"中山峠":{b200k:"札幌15号-4",west:507540,south:154180,east:508105,north:154520},
"漁岳":{b200k:"札幌16号-1",west:507990,south:153880,east:508555,north:154220},
"白老岳":{b200k:"札幌16号-2",west:507990,south:153580,east:508555,north:153920},
"栄":{b200k:"札幌16号-3",west:507540,south:153880,east:508105,north:154220},
"双葉":{b200k:"札幌16号-4",west:507540,south:153580,east:508105,north:153920},
"軽舞":{b200k:"苫小牧1号-1",west:510690,south:153280,east:511255,north:153620},
"鵡川":{b200k:"苫小牧1号-2",west:510695,south:152980,east:511255,north:153320},
"上厚真":{b200k:"苫小牧1号-3",west:510240,south:153280,east:510805,north:153620},
"勇払":{b200k:"苫小牧5号-1",west:509790,south:153280,east:510355,north:153620},
"苫小牧":{b200k:"苫小牧5号-3",west:509340,south:153280,east:509905,north:153620},
"錦岡":{b200k:"苫小牧9号-1",west:508890,south:153280,east:509455,north:153620},
"社台":{b200k:"苫小牧9号-2",west:508895,south:152980,east:509455,north:153320},
"森野":{b200k:"苫小牧9号-3",west:508440,south:153280,east:509005,north:153620},
"白老":{b200k:"苫小牧9号-4",west:508445,south:152980,east:509005,north:153320},
"徳舜瞥山":{b200k:"苫小牧13号-1",west:507990,south:153280,east:508555,north:153620},
"飛生":{b200k:"苫小牧13号-2",west:507995,south:152980,east:508555,north:153320},
"蟠溪":{b200k:"苫小牧13号-3",west:507540,south:153280,east:508105,north:153620},
"カルルス温泉":{b200k:"苫小牧13号-4",west:507545,south:152980,east:508105,north:153320},
"登別温泉":{b200k:"苫小牧14号-1",west:508035,south:152680,east:508595,north:153020},
"鷲別岳":{b200k:"苫小牧14号-3",west:507545,south:152680,east:508105,north:153020},
"室蘭東北部":{b200k:"苫小牧14号-4",west:507545,south:152380,east:508105,north:152720},
"尻屋":{b200k:"尻屋崎12号-2",west:508900,south:148805,east:509450,north:149145},
"入口":{b200k:"尻屋崎12号-4",west:508450,south:148780,east:509000,north:149120},
"尾札部":{b200k:"尻屋崎13号-4",west:507545,south:150580,east:508100,north:150920},
"恵山":{b200k:"尻屋崎14号-1",west:507995,south:150400,east:508550,north:150740},
"古武井":{b200k:"尻屋崎14号-3",west:507545,south:150280,east:508100,north:150620},
"戸井":{b200k:"尻屋崎14号-4",west:507545,south:149980,east:508100,north:150320},
"木野部":{b200k:"尻屋崎16号-1",west:507995,south:149080,east:508550,north:149420},
"大畑":{b200k:"尻屋崎16号-2",west:508000,south:148780,east:508550,north:149120},
"下風呂":{b200k:"尻屋崎16号-3",west:507545,south:149080,east:508100,north:149420},
"薬研温泉":{b200k:"尻屋崎16号-4",west:507550,south:148780,east:508100,north:149120},
"小樽西部":{b200k:"岩内1号-2",west:507090,south:155380,east:507660,north:155720},
"余市":{b200k:"岩内1号-4",west:506640,south:155380,east:507210,north:155720},
"於古発山":{b200k:"岩内2号-1",west:507090,south:155080,east:507655,north:155420},
"阿女鱒岳":{b200k:"岩内2号-2",west:507090,south:154780,east:507655,north:155120},
"仁木":{b200k:"岩内2号-3",west:506640,south:155080,east:507205,north:155420},
"赤井川":{b200k:"岩内2号-4",west:506640,south:154780,east:507205,north:155120},
"本倶登山":{b200k:"岩内3号-1",west:507090,south:154480,east:507655,north:154820},
"京極":{b200k:"岩内3号-2",west:507090,south:154180,east:507655,north:154520},
"瑞穂":{b200k:"岩内3号-3",west:506640,south:154480,east:507205,north:154820},
"倶知安":{b200k:"岩内3号-4",west:506640,south:154180,east:507205,north:154520},
"喜茂別":{b200k:"岩内4号-1",west:507090,south:153880,east:507655,north:154220},
"留寿都":{b200k:"岩内4号-2",west:507090,south:153580,east:507655,north:153920},
"羊蹄山":{b200k:"岩内4号-3",west:506640,south:153880,east:507205,north:154220},
"三ノ原":{b200k:"岩内4号-4",west:506640,south:153580,east:507205,north:153920},
"豊浜":{b200k:"岩内5号-2",west:506190,south:155410,east:506760,north:155750},
"美国":{b200k:"岩内5号-3",west:505785,south:155680,east:506355,north:156020},
"両古美山":{b200k:"岩内5号-4",west:505740,south:155380,east:506310,north:155720},
"然別":{b200k:"岩内6号-1",west:506190,south:155080,east:506755,north:155420},
"銀山":{b200k:"岩内6号-2",west:506190,south:154780,east:506755,north:155120},
"熊追山":{b200k:"岩内6号-3",west:505740,south:155080,east:506305,north:155420},
"茅沼":{b200k:"岩内6号-4",west:505720,south:154780,east:506285,north:155120},
"小沢":{b200k:"岩内7号-1",west:506190,south:154480,east:506755,north:154820},
"ニセコアンヌプリ":{b200k:"岩内7号-2",west:506190,south:154180,east:506755,north:154520},
"岩内":{b200k:"岩内7号-3",west:505740,south:154480,east:506305,north:154820},
"チセヌプリ":{b200k:"岩内7号-4",west:505740,south:154180,east:506305,north:154520},
"ニセコ":{b200k:"岩内8号-1",west:506190,south:153880,east:506755,north:154220},
"昆布岳":{b200k:"岩内8号-2",west:506190,south:153580,east:506755,north:153920},
"蘭越":{b200k:"岩内8号-3",west:505740,south:153880,east:506305,north:154220},
"後志立川":{b200k:"岩内8号-4",west:505740,south:153580,east:506305,north:153920},
"余別":{b200k:"岩内9号-1",west:505290,south:155680,east:505860,north:156020},
"ポンネアンチシ山":{b200k:"岩内9号-2",west:505290,south:155380,east:505860,north:155720},
"神威岬":{b200k:"岩内9号-3",west:504840,south:155695,east:505410,north:156035},
"珊内":{b200k:"岩内9号-4",west:504840,south:155380,east:505410,north:155720},
"神恵内":{b200k:"岩内10号-1",west:505290,south:155080,east:505855,north:155420},
"雷電岬":{b200k:"岩内11号-1",west:505290,south:154480,east:505855,north:154820},
"雷電山":{b200k:"岩内11号-2",west:505290,south:154180,east:505855,north:154520},
"島古丹":{b200k:"岩内11号-4",west:504840,south:154180,east:505405,north:154520},
"目名":{b200k:"岩内12号-1",west:505290,south:153880,east:505855,north:154220},
"白井川":{b200k:"岩内12号-2",west:505290,south:153580,east:505855,north:153920},
"歌棄":{b200k:"岩内12号-3",west:504840,south:153880,east:505405,north:154220},
"熱郛":{b200k:"岩内12号-4",west:504840,south:153580,east:505405,north:153920},
"寿都":{b200k:"岩内16号-1",west:504390,south:153880,east:504955,north:154220},
"本目":{b200k:"岩内16号-2",west:504390,south:153580,east:504955,north:153920},
"永豊":{b200k:"岩内16号-4",west:503940,south:153580,east:504505,north:153920},
"積丹岬":{b200k:"岩内北8号-4",west:505530,south:155980,east:506100,north:156320},
"仲洞爺":{b200k:"室蘭1号-1",west:507090,south:153280,east:507655,north:153620},
"壮瞥":{b200k:"室蘭1号-2",west:507095,south:152980,east:507655,north:153320},
"洞爺":{b200k:"室蘭1号-3",west:506640,south:153280,east:507205,north:153620},
"洞爺湖温泉":{b200k:"室蘭1号-4",west:506580,south:152980,east:507140,north:153320},
"稀府":{b200k:"室蘭2号-1",west:507095,south:152680,east:507655,north:153020},
"本輪西":{b200k:"室蘭2号-2",west:507095,south:152380,east:507655,north:152720},
"伊達":{b200k:"室蘭2号-3",west:506645,south:152680,east:507205,north:153020},
"室蘭":{b200k:"室蘭3号-1",west:507320,south:152080,east:507880,north:152420},
"鹿部":{b200k:"室蘭4号-4",west:506645,south:151180,east:507205,north:151520},
"豊浦":{b200k:"室蘭5号-1",west:506190,south:153280,east:506755,north:153620},
"礼文華峠":{b200k:"室蘭5号-3",west:505740,south:153280,east:506305,north:153620},
"礼文華":{b200k:"室蘭5号-4",west:505745,south:152980,east:506305,north:153320},
"砂原":{b200k:"室蘭8号-1",west:506230,south:151480,east:506790,north:151820},
"駒ヶ岳":{b200k:"室蘭8号-2",west:506195,south:151180,east:506755,north:151520},
"渡島森":{b200k:"室蘭8号-3",west:505745,south:151480,east:506305,north:151820},
"姫川":{b200k:"室蘭8号-4",west:505745,south:151180,east:506305,north:151520},
"静狩":{b200k:"室蘭9号-1",west:505290,south:153280,east:505855,north:153620},
"長万部":{b200k:"室蘭9号-2",west:505295,south:152980,east:505855,north:153320},
"黒松内":{b200k:"室蘭9号-3",west:504840,south:153280,east:505405,north:153620},
"渡島双葉":{b200k:"室蘭9号-4",west:504845,south:152980,east:505405,north:153320},
"国縫":{b200k:"室蘭10号-3",west:504845,south:152680,east:505405,north:153020},
"黒岩":{b200k:"室蘭10号-4",west:504845,south:152380,east:505405,north:152720},
"落部":{b200k:"室蘭11号-2",west:505295,south:151780,east:505855,north:152120},
"八雲":{b200k:"室蘭11号-3",west:504845,south:152080,east:505405,north:152420},
"山越":{b200k:"室蘭11号-4",west:504845,south:151780,east:505405,north:152120},
"濁川":{b200k:"室蘭12号-1",west:505295,south:151480,east:505855,north:151820},
"狗神岳":{b200k:"室蘭12号-2",west:505295,south:151180,east:505855,north:151520},
"野田追岳":{b200k:"室蘭12号-3",west:504845,south:151480,east:505405,north:151820},
"乙部岳":{b200k:"室蘭12号-4",west:504845,south:151180,east:505405,north:151520},
"大平山":{b200k:"室蘭13号-1",west:504390,south:153280,east:504955,north:153620},
"二股温泉":{b200k:"室蘭13号-2",west:504395,south:152980,east:504955,north:153320},
"賀老高原":{b200k:"室蘭13号-3",west:503940,south:153280,east:504505,north:153620},
"メップ岳":{b200k:"室蘭13号-4",west:503945,south:152980,east:504505,north:153320},
"美利河":{b200k:"室蘭14号-1",west:504395,south:152680,east:504955,north:153020},
"ルコツ岳":{b200k:"室蘭14号-2",west:504395,south:152380,east:504955,north:152720},
"今金":{b200k:"室蘭14号-3",west:503945,south:152680,east:504505,north:153020},
"八束":{b200k:"室蘭14号-4",west:503945,south:152380,east:504505,north:152720},
"上八雲":{b200k:"室蘭15号-1",west:504395,south:152080,east:504955,north:152420},
"春日":{b200k:"室蘭15号-2",west:504395,south:151780,east:504955,north:152120},
"後志日進":{b200k:"室蘭15号-3",west:503945,south:152080,east:504505,north:152420},
"遊楽部岳":{b200k:"室蘭15号-4",west:503945,south:151780,east:504505,north:152120},
"砂蘭部岳":{b200k:"室蘭16号-1",west:504395,south:151480,east:504955,north:151820},
"ササマクリ山":{b200k:"室蘭16号-2",west:504395,south:151180,east:504955,north:151520},
"渡島鮎川":{b200k:"室蘭16号-3",west:503945,south:151480,east:504505,north:151820},
"相沼":{b200k:"室蘭16号-4",west:503945,south:151180,east:504505,north:151520},
"臼尻":{b200k:"函館1号-1",west:507095,south:150880,east:507650,north:151220},
"川汲":{b200k:"函館1号-2",west:507095,south:150580,east:507650,north:150920},
"横津岳":{b200k:"函館1号-3",west:506645,south:150880,east:507200,north:151220},
"赤川":{b200k:"函館1号-4",west:506645,south:150580,east:507200,north:150920},
"鉄山":{b200k:"函館2号-1",west:507095,south:150280,east:507650,north:150620},
"汐首":{b200k:"函館2号-2",west:507095,south:149980,east:507650,north:150320},
"五稜郭":{b200k:"函館2号-3",west:506645,south:150280,east:507200,north:150620},
"大間":{b200k:"函館3号-2",west:507095,south:149380,east:507650,north:149720},
"佐井":{b200k:"函館4号-1",west:507035,south:149080,east:507590,north:149420},
"白土山":{b200k:"函館4号-2",west:507100,south:148780,east:507650,north:149120},
"長後":{b200k:"函館4号-4",west:506650,south:148780,east:507200,north:149120},
"大沼公園":{b200k:"函館5号-1",west:506195,south:150880,east:506750,north:151220},
"七飯":{b200k:"函館5号-2",west:506195,south:150580,east:506750,north:150920},
"木地挽山":{b200k:"函館5号-3",west:505745,south:150880,east:506300,north:151220},
"陣屋":{b200k:"函館5号-4",west:505745,south:150580,east:506300,north:150920},
"函館":{b200k:"函館6号-1",west:506195,south:150260,east:506750,north:150600},
"茂辺地":{b200k:"函館6号-3",west:505745,south:150280,east:506300,north:150620},
"当別":{b200k:"函館6号-4",west:505745,south:149980,east:506300,north:150320},
"設計山":{b200k:"函館9号-1",west:505295,south:150880,east:505850,north:151220},
"富里":{b200k:"函館9号-2",west:505295,south:150580,east:505850,north:150920},
"鶉町":{b200k:"函館9号-3",west:504845,south:150880,east:505400,north:151220},
"館":{b200k:"函館9号-4",west:504845,south:150580,east:505400,north:150920},
"桂岳":{b200k:"函館10号-1",west:505295,south:150280,east:505850,north:150620},
"木古内":{b200k:"函館10号-2",west:505295,south:149980,east:505850,north:150320},
"瓜谷山":{b200k:"函館10号-3",west:504845,south:150280,east:505400,north:150620},
"神明":{b200k:"函館10号-4",west:504845,south:149980,east:505400,north:150320},
"渡島知内":{b200k:"函館11号-1",west:505295,south:149680,east:505850,north:150020},
"涌元":{b200k:"函館11号-2",west:505295,south:149380,east:505850,north:149720},
"湯ノ里":{b200k:"函館11号-3",west:504845,south:149680,east:505400,north:150020},
"千軒":{b200k:"函館11号-4",west:504845,south:149380,east:505400,north:149720},
"乙部":{b200k:"函館13号-1",west:504395,south:150880,east:504950,north:151220},
"江差":{b200k:"函館13号-2",west:504390,south:150580,east:504945,north:150920},
"桂岡":{b200k:"函館14号-1",west:504395,south:150280,east:504950,north:150620},
"湯ノ岱":{b200k:"函館14号-2",west:504395,south:149980,east:504950,north:150320},
"上ノ国":{b200k:"函館14号-3",west:503945,south:150280,east:504500,north:150620},
"石崎":{b200k:"函館14号-4",west:503945,south:149980,east:504500,north:150320},
"七ッ岳":{b200k:"函館15号-1",west:504395,south:149680,east:504950,north:150020},
"大千軒岳":{b200k:"函館15号-2",west:504395,south:149380,east:504950,north:149720},
"原口":{b200k:"函館15号-3",west:503895,south:149680,east:504450,north:150020},
"江良":{b200k:"函館15号-4",west:503895,south:149380,east:504450,north:149720},
"渡島福島":{b200k:"函館12号-3",west:504845,south:149080,east:505400,north:149420},
"渡島吉岡":{b200k:"函館16号-1",west:504395,south:149080,east:504950,north:149420},
"白神岬":{b200k:"函館16号-2",west:504570,south:148780,east:505120,north:149120},
"松前":{b200k:"函館16号-3",west:503945,south:149080,east:504500,north:149420},
"狩場山":{b200k:"久遠1号-1",west:503490,south:153280,east:504055,north:153620},
"カスベ岳":{b200k:"久遠1号-2",west:503495,south:152980,east:504055,north:153320},
"須築":{b200k:"久遠1号-3",west:503040,south:153280,east:503605,north:153620},
"美谷":{b200k:"久遠1号-4",west:503040,south:152980,east:503600,north:153320},
"瀬棚":{b200k:"久遠2号-1",west:503405,south:152680,east:503965,north:153020},
"北檜山":{b200k:"久遠2号-2",west:503495,south:152380,east:504055,north:152720},
"太櫓":{b200k:"久遠2号-4",west:503045,south:152380,east:503605,north:152720},
"左股":{b200k:"久遠3号-1",west:503495,south:152080,east:504055,north:152420},
"貝取澗":{b200k:"久遠3号-2",west:503495,south:151780,east:504055,north:152120},
"後志太田":{b200k:"久遠3号-3",west:503045,south:152080,east:503605,north:152420},
"久遠":{b200k:"久遠3号-4",west:503045,south:151780,east:503605,north:152120},
"熊石":{b200k:"久遠4号-1",west:503495,south:151480,east:504055,north:151820},
"奥尻":{b200k:"久遠7号-4",west:502145,south:151780,east:502705,north:152120},
"赤石":{b200k:"久遠12号-1",west:501815,south:151480,east:502375,north:151820},
"青苗":{b200k:"久遠12号-2",west:501815,south:151180,east:502375,north:151520},
"神威脇":{b200k:"久遠11号-2",west:501695,south:151780,east:502255,north:152120},
"原歌":{b200k:"久遠北4号-2",west:503490,south:153580,east:504055,north:153920},
"渡島大島":{b200k:"渡島大島12号-1",west:501485,south:149200,east:502040,north:149540},
"猿ヶ森":{b200k:"野辺地9号-1",west:508900,south:148480,east:509450,north:148820},
"蒲野沢":{b200k:"野辺地9号-3",west:508450,south:148480,east:509000,north:148820},
"近川":{b200k:"野辺地9号-4",west:508530,south:148180,east:509080,north:148520},
"陸奥泊":{b200k:"野辺地10号-1",west:508900,south:147880,east:509450,north:148220},
"出戸":{b200k:"野辺地10号-2",west:508900,south:147580,east:509450,north:147920},
"有畑":{b200k:"野辺地10号-3",west:508450,south:147880,east:509000,north:148220},
"陸奥横浜":{b200k:"野辺地10号-4",west:508420,south:147580,east:508970,north:147920},
"尾駮":{b200k:"野辺地11号-1",west:508900,south:147280,east:509450,north:147620},
"天ヶ森":{b200k:"野辺地11号-2",west:508900,south:146980,east:509450,north:147320},
"戸鎖":{b200k:"野辺地11号-3",west:508450,south:147280,east:509000,north:147620},
"平沼":{b200k:"野辺地11号-4",west:508450,south:146980,east:509000,north:147320},
"六川目":{b200k:"野辺地12号-1",west:508900,south:146680,east:509445,north:147020},
"浜三沢":{b200k:"野辺地12号-2",west:508900,south:146380,east:509445,north:146720},
"甲地":{b200k:"野辺地12号-3",west:508450,south:146680,east:508995,north:147020},
"三沢":{b200k:"野辺地12号-4",west:508450,south:146380,east:508995,north:146720},
"むつ":{b200k:"野辺地13号-1",west:508000,south:148480,east:508550,north:148820},
"城ヶ沢":{b200k:"野辺地13号-2",west:508020,south:148180,east:508570,north:148520},
"恐山":{b200k:"野辺地13号-3",west:507550,south:148480,east:508100,north:148820},
"戸沢":{b200k:"野辺地13号-4",west:507550,south:148180,east:508100,north:148520},
"目ノ越":{b200k:"野辺地15号-1",west:508000,south:147280,east:508550,north:147620},
"野辺地":{b200k:"野辺地15号-2",west:508000,south:146980,east:508550,north:147320},
"清水川":{b200k:"野辺地15号-3",west:507550,south:147280,east:508100,north:147620},
"狩場沢":{b200k:"野辺地15号-4",west:507550,south:146980,east:508100,north:147320},
"乙供":{b200k:"野辺地16号-1",west:508000,south:146680,east:508545,north:147020},
"七戸":{b200k:"野辺地16号-2",west:508000,south:146380,east:508545,north:146720},
"上清水目":{b200k:"野辺地16号-3",west:507550,south:146680,east:508095,north:147020},
"銀南木":{b200k:"野辺地16号-4",west:507550,south:146380,east:508095,north:146720},
"陸中中野":{b200k:"八戸3号-3",west:510250,south:144880,east:510795,north:145220},
"久慈":{b200k:"八戸3号-4",west:510255,south:144580,east:510795,north:144920},
"普代":{b200k:"八戸4号-2",west:510705,south:143980,east:511245,north:144320},
"陸中野田":{b200k:"八戸4号-3",west:510270,south:144280,east:510810,north:144620},
"玉川":{b200k:"八戸4号-4",west:510255,south:143980,east:510795,north:144320},
"八戸東部":{b200k:"八戸5号-4",west:509350,south:145780,east:509895,north:146120},
"角浜":{b200k:"八戸6号-1",west:509800,south:145480,east:510345,north:145820},
"種市":{b200k:"八戸6号-2",west:509800,south:145180,east:510345,north:145520},
"新井田":{b200k:"八戸6号-3",west:509350,south:145480,east:509895,north:145820},
"階上岳":{b200k:"八戸6号-4",west:509350,south:145180,east:509895,north:145520},
"陸中大野":{b200k:"八戸7号-1",west:509800,south:144880,east:510345,north:145220},
"大川目":{b200k:"八戸7号-2",west:509805,south:144580,east:510345,north:144920},
"小軽米":{b200k:"八戸7号-3",west:509350,south:144880,east:509895,north:145220},
"戸呂町":{b200k:"八戸7号-4",west:509355,south:144580,east:509895,north:144920},
"岩瀬張":{b200k:"八戸8号-1",west:509805,south:144280,east:510345,north:144620},
"端神":{b200k:"八戸8号-2",west:509805,south:143980,east:510345,north:144320},
"陸中関":{b200k:"八戸8号-3",west:509355,south:144280,east:509895,north:144620},
"安家森":{b200k:"八戸8号-4",west:509355,south:143980,east:509895,north:144320},
"百石":{b200k:"八戸9号-1",west:508900,south:146080,east:509445,north:146420},
"八戸西部":{b200k:"八戸9号-2",west:508900,south:145780,east:509445,north:146120},
"犬落瀬":{b200k:"八戸9号-3",west:508450,south:146080,east:508995,north:146420},
"五戸":{b200k:"八戸9号-4",west:508450,south:145780,east:508995,north:146120},
"苫米地":{b200k:"八戸10号-1",west:508900,south:145480,east:509445,north:145820},
"市野沢":{b200k:"八戸10号-2",west:508900,south:145180,east:509445,north:145520},
"剣吉":{b200k:"八戸10号-3",west:508450,south:145480,east:508995,north:145820},
"三戸":{b200k:"八戸10号-4",west:508450,south:145180,east:508995,north:145520},
"陸中軽米":{b200k:"八戸11号-1",west:508900,south:144880,east:509445,north:145220},
"伊保内":{b200k:"八戸11号-2",west:508905,south:144580,east:509445,north:144920},
"陸奥福岡":{b200k:"八戸11号-3",west:508450,south:144880,east:508995,north:145220},
"一戸":{b200k:"八戸11号-4",west:508455,south:144580,east:508995,north:144920},
"陸中戸田":{b200k:"八戸12号-1",west:508905,south:144280,east:509445,north:144620},
"葛巻":{b200k:"八戸12号-2",west:508905,south:143980,east:509445,north:144320},
"仁昌寺":{b200k:"八戸12号-3",west:508455,south:144280,east:508995,north:144620},
"宇別":{b200k:"八戸12号-4",west:508455,south:143980,east:508995,north:144320},
"十和田":{b200k:"八戸13号-1",west:508000,south:146080,east:508545,north:146420},
"切田":{b200k:"八戸13号-2",west:508000,south:145780,east:508545,north:146120},
"法量":{b200k:"八戸13号-3",west:507550,south:146080,east:508095,north:146420},
"奥瀬":{b200k:"八戸13号-4",west:507550,south:145780,east:508095,north:146120},
"金ヶ沢":{b200k:"八戸14号-1",west:508000,south:145480,east:508545,north:145820},
"田子":{b200k:"八戸14号-2",west:508000,south:145180,east:508545,north:145520},
"戸来岳":{b200k:"八戸14号-3",west:507550,south:145480,east:508095,north:145820},
"清水頭":{b200k:"八戸14号-4",west:507550,south:145180,east:508095,north:145520},
"上斗米":{b200k:"八戸15号-1",west:508000,south:144880,east:508545,north:145220},
"浄法寺":{b200k:"八戸15号-2",west:508005,south:144580,east:508545,north:144920},
"石亀":{b200k:"八戸15号-3",west:507550,south:144880,east:508095,north:145220},
"稲庭岳":{b200k:"八戸15号-4",west:507555,south:144580,east:508095,north:144920},
"駒ヶ嶺":{b200k:"八戸16号-1",west:508005,south:144280,east:508545,north:144620},
"陸奥中山":{b200k:"八戸16号-2",west:508005,south:143980,east:508545,north:144320},
"陸奥荒屋":{b200k:"八戸16号-3",west:507555,south:144280,east:508095,north:144620},
"七時雨山":{b200k:"八戸16号-4",west:507555,south:143980,east:508095,north:144320},
"田野畑":{b200k:"盛岡1号-1",west:510705,south:143680,east:511245,north:144020},
"小本":{b200k:"盛岡1号-2",west:510705,south:143380,east:511245,north:143720},
"沼袋":{b200k:"盛岡1号-3",west:510255,south:143680,east:510795,north:144020},
"岩泉":{b200k:"盛岡1号-4",west:510255,south:143380,east:510795,north:143720},
"田老鉱山":{b200k:"盛岡2号-1",west:510705,south:143080,east:511245,north:143420},
"田老":{b200k:"盛岡2号-2",west:510705,south:142780,east:511245,north:143120},
"有芸":{b200k:"盛岡2号-3",west:510255,south:143080,east:510795,north:143420},
"峠ノ神山":{b200k:"盛岡2号-4",west:510255,south:142780,east:510795,north:143120},
"宮古":{b200k:"盛岡3号-1",west:510705,south:142480,east:511245,north:142820},
"津軽石":{b200k:"盛岡3号-2",west:510705,south:142180,east:511240,north:142520},
"茂市":{b200k:"盛岡3号-3",west:510255,south:142480,east:510795,north:142820},
"高滝森":{b200k:"盛岡3号-4",west:510255,south:142180,east:510790,north:142520},
"陸中山田":{b200k:"盛岡4号-1",west:510705,south:141880,east:511240,north:142220},
"大槌":{b200k:"盛岡4号-2",west:510720,south:141580,east:511255,north:141920},
"陸中金沢":{b200k:"盛岡4号-3",west:510255,south:141880,east:510790,north:142220},
"橋野":{b200k:"盛岡4号-4",west:510255,south:141580,east:510790,north:141920},
"安家":{b200k:"盛岡5号-1",west:509805,south:143680,east:510345,north:144020},
"門":{b200k:"盛岡5号-2",west:509805,south:143380,east:510345,north:143720},
"陸中五日市":{b200k:"盛岡5号-3",west:509355,south:143680,east:509895,north:144020},
"早坂高原":{b200k:"盛岡5号-4",west:509355,south:143380,east:509895,north:143720},
"陸中大川":{b200k:"盛岡6号-1",west:509805,south:143080,east:510345,north:143420},
"和井内":{b200k:"盛岡6号-2",west:509805,south:142780,east:510345,north:143120},
"釜津田":{b200k:"盛岡6号-3",west:509355,south:143080,east:509895,north:143420},
"害鷹森":{b200k:"盛岡6号-4",west:509355,south:142780,east:509895,north:143120},
"陸中川井":{b200k:"盛岡7号-1",west:509805,south:142480,east:510345,north:142820},
"江繋":{b200k:"盛岡7号-2",west:509805,south:142180,east:510340,north:142520},
"陸中川内":{b200k:"盛岡7号-3",west:509355,south:142480,east:509895,north:142820},
"高桧山":{b200k:"盛岡7号-4",west:509355,south:142180,east:509890,north:142520},
"白見山":{b200k:"盛岡8号-1",west:509805,south:141880,east:510340,north:142220},
"能舟木":{b200k:"盛岡8号-2",west:509805,south:141580,east:510340,north:141920},
"大出":{b200k:"盛岡8号-3",west:509355,south:141880,east:509890,north:142220},
"土淵":{b200k:"盛岡8号-4",west:509355,south:141580,east:509890,north:141920},
"小屋瀬":{b200k:"盛岡9号-1",west:508905,south:143680,east:509445,north:144020},
"薮川":{b200k:"盛岡9号-2",west:508905,south:143380,east:509445,north:143720},
"陸中北山形":{b200k:"盛岡9号-3",west:508455,south:143680,east:508995,north:144020},
"陸中南山形":{b200k:"盛岡9号-4",west:508455,south:143380,east:508995,north:143720},
"岩洞":{b200k:"盛岡10号-1",west:508905,south:143080,east:509445,north:143420},
"青松葉山":{b200k:"盛岡10号-2",west:508905,south:142780,east:509445,north:143120},
"外山":{b200k:"盛岡10号-3",west:508455,south:143080,east:508995,north:143420},
"大志田":{b200k:"盛岡10号-4",west:508455,south:142780,east:508995,north:143120},
"松草":{b200k:"盛岡11号-1",west:508905,south:142480,east:509445,north:142820},
"早池峰山":{b200k:"盛岡11号-2",west:508905,south:142180,east:509440,north:142520},
"区界":{b200k:"盛岡11号-3",west:508455,south:142480,east:508995,north:142820},
"陸中折壁":{b200k:"盛岡11号-4",west:508455,south:142180,east:508990,north:142520},
"竪沢":{b200k:"盛岡12号-1",west:508905,south:141880,east:509440,north:142220},
"上宮守":{b200k:"盛岡12号-2",west:508905,south:141580,east:509440,north:141920},
"大迫":{b200k:"盛岡12号-3",west:508455,south:141880,east:508990,north:142220},
"宮守":{b200k:"盛岡12号-4",west:508455,south:141580,east:508990,north:141920},
"沼宮内":{b200k:"盛岡13号-1",west:508005,south:143680,east:508545,north:144020},
"渋民":{b200k:"盛岡13号-2",west:508005,south:143380,east:508545,north:143720},
"平舘":{b200k:"盛岡13号-3",west:507555,south:143680,east:508095,north:144020},
"大更":{b200k:"盛岡13号-4",west:507555,south:143380,east:508095,north:143720},
"鷹高":{b200k:"盛岡14号-1",west:508005,south:143080,east:508545,north:143420},
"盛岡":{b200k:"盛岡14号-2",west:508005,south:142780,east:508545,north:143120},
"姥屋敷":{b200k:"盛岡14号-3",west:507555,south:143080,east:508095,north:143420},
"小岩井農場":{b200k:"盛岡14号-4",west:507555,south:142780,east:508095,north:143120},
"矢幅":{b200k:"盛岡15号-1",west:508005,south:142480,east:508545,north:142820},
"日詰":{b200k:"盛岡15号-2",west:508005,south:142180,east:508540,north:142520},
"南昌山":{b200k:"盛岡15号-3",west:507555,south:142480,east:508095,north:142820},
"志和":{b200k:"盛岡15号-4",west:507555,south:142180,east:508090,north:142520},
"石鳥谷":{b200k:"盛岡16号-1",west:508005,south:141880,east:508540,north:142220},
"土沢":{b200k:"盛岡16号-2",west:508005,south:141580,east:508540,north:141920},
"花巻温泉":{b200k:"盛岡16号-3",west:507555,south:141880,east:508090,north:142220},
"花巻":{b200k:"盛岡16号-4",west:507555,south:141580,east:508090,north:141920},
"閉伊崎":{b200k:"盛岡東15号-3",west:511155,south:142480,east:511695,north:142820},
"舘":{b200k:"盛岡東15号-4",west:511155,south:142180,east:511690,north:142520},
"霞露ヶ岳":{b200k:"盛岡東16号-3",west:511155,south:141880,east:511690,north:142220},
"釜石":{b200k:"一関1号-1",west:510705,south:141280,east:511240,north:141620},
"陸中平田":{b200k:"一関1号-2",west:510705,south:140980,east:511240,north:141320},
"小佐野":{b200k:"一関1号-3",west:510255,south:141280,east:510790,north:141620},
"小白浜":{b200k:"一関1号-4",west:510255,south:140980,east:510790,north:141320},
"陸前千歳":{b200k:"一関2号-1",west:510705,south:140680,east:511240,north:141020},
"越喜来":{b200k:"一関2号-3",west:510255,south:140680,east:510790,north:141020},
"綾里":{b200k:"一関2号-4",west:510255,south:140380,east:510790,north:140720},
"陸中大橋":{b200k:"一関5号-1",west:509805,south:141280,east:510340,north:141620},
"五葉山":{b200k:"一関5号-2",west:509805,south:140980,east:510340,north:141320},
"遠野":{b200k:"一関5号-3",west:509355,south:141280,east:509890,north:141620},
"陸前八日町":{b200k:"一関5号-4",west:509355,south:140980,east:509890,north:141320},
"盛":{b200k:"一関6号-1",west:509805,south:140680,east:510340,north:141020},
"大船渡":{b200k:"一関6号-2",west:509805,south:140380,east:510340,north:140720},
"世田米":{b200k:"一関6号-3",west:509355,south:140680,east:509890,north:141020},
"今泉":{b200k:"一関6号-4",west:509355,south:140380,east:509890,north:140720},
"陸前広田":{b200k:"一関7号-1",west:509805,south:140080,east:510340,north:140420},
"唐桑":{b200k:"一関7号-2",west:509810,south:139780,east:510340,north:140120},
"鹿折":{b200k:"一関7号-3",west:509355,south:140080,east:509890,north:140420},
"気仙沼":{b200k:"一関7号-4",west:509360,south:139780,east:509890,north:140120},
"津谷":{b200k:"一関8号-3",west:509360,south:139480,east:509890,north:139820},
"伊里前":{b200k:"一関8号-4",west:509360,south:139180,east:509890,north:139520},
"小友":{b200k:"一関9号-1",west:508905,south:141280,east:509440,north:141620},
"種山ヶ原":{b200k:"一関9号-2",west:508905,south:140980,east:509440,north:141320},
"野手崎":{b200k:"一関9号-3",west:508455,south:141280,east:508990,north:141620},
"人首":{b200k:"一関9号-4",west:508455,south:140980,east:508990,north:141320},
"鷹ノ巣山":{b200k:"一関10号-1",west:508905,south:140680,east:509440,north:141020},
"陸中大原":{b200k:"一関10号-2",west:508905,south:140380,east:509440,north:140720},
"阿原山":{b200k:"一関10号-3",west:508455,south:140680,east:508990,north:141020},
"沖田":{b200k:"一関10号-4",west:508455,south:140380,east:508990,north:140720},
"折壁":{b200k:"一関11号-1",west:508905,south:140080,east:509440,north:140420},
"津谷川":{b200k:"一関11号-2",west:508910,south:139780,east:509440,north:140120},
"千厩北部":{b200k:"一関11号-3",west:508455,south:140080,east:508990,north:140420},
"千厩南部":{b200k:"一関11号-4",west:508460,south:139780,east:508990,north:140120},
"馬籠":{b200k:"一関12号-1",west:508910,south:139480,east:509440,north:139820},
"志津川":{b200k:"一関12号-2",west:508910,south:139180,east:509440,north:139520},
"米川":{b200k:"一関12号-3",west:508460,south:139480,east:508990,north:139820},
"米谷":{b200k:"一関12号-4",west:508460,south:139180,east:508990,north:139520},
"口内":{b200k:"一関13号-1",west:508005,south:141280,east:508540,north:141620},
"陸中江刺":{b200k:"一関13号-2",west:508005,south:140980,east:508540,north:141320},
"北上":{b200k:"一関13号-3",west:507555,south:141280,east:508090,north:141620},
"金ヶ崎":{b200k:"一関13号-4",west:507555,south:140980,east:508090,north:141320},
"水沢":{b200k:"一関14号-1",west:508005,south:140680,east:508540,north:141020},
"前沢":{b200k:"一関14号-2",west:508005,south:140380,east:508540,north:140720},
"供養塚":{b200k:"一関14号-3",west:507555,south:140680,east:508090,north:141020},
"古戸":{b200k:"一関14号-4",west:507555,south:140380,east:508090,north:140720},
"一関":{b200k:"一関15号-1",west:508005,south:140080,east:508540,north:140420},
"有壁":{b200k:"一関15号-2",west:508010,south:139780,east:508540,north:140120},
"平泉":{b200k:"一関15号-3",west:507555,south:140080,east:508090,north:140420},
"萩荘":{b200k:"一関15号-4",west:507560,south:139780,east:508090,north:140120},
"若柳":{b200k:"一関16号-1",west:508010,south:139480,east:508540,north:139820},
"佐沼":{b200k:"一関16号-2",west:508010,south:139180,east:508540,north:139520},
"金成":{b200k:"一関16号-3",west:507560,south:139480,east:508090,north:139820},
"築館":{b200k:"一関16号-4",west:507560,south:139180,east:508090,north:139520},
"陸前相川":{b200k:"石巻5号-3",west:509360,south:138880,east:509890,north:139220},
"大須":{b200k:"石巻5号-4",west:509360,south:138580,east:509890,north:138920},
"出島":{b200k:"石巻6号-3",west:509360,south:138280,east:509890,north:138620},
"寄磯":{b200k:"石巻6号-4",west:509360,south:137980,east:509890,north:138320},
"金華山":{b200k:"石巻7号-3",west:509360,south:137680,east:509890,north:138020},
"折立":{b200k:"石巻9号-1",west:508910,south:138880,east:509440,north:139220},
"雄勝":{b200k:"石巻9号-2",west:508910,south:138580,east:509440,north:138920},
"登米":{b200k:"石巻9号-3",west:508460,south:138880,east:508990,north:139220},
"飯野川":{b200k:"石巻9号-4",west:508460,south:138580,east:508990,north:138920},
"女川":{b200k:"石巻10号-1",west:508910,south:138280,east:509440,north:138620},
"荻浜":{b200k:"石巻10号-2",west:508910,south:137980,east:509440,north:138320},
"石巻":{b200k:"石巻10号-3",west:508460,south:138280,east:508990,north:138620},
"渡波":{b200k:"石巻10号-4",west:508460,south:137980,east:508990,north:138320},
"網地島":{b200k:"石巻11号-1",west:508910,south:137675,east:509440,north:138015},
"西野":{b200k:"石巻13号-1",west:508010,south:138880,east:508540,north:139220},
"涌谷":{b200k:"石巻13号-2",west:508010,south:138580,east:508540,north:138920},
"高清水":{b200k:"石巻13号-3",west:507560,south:138880,east:508090,north:139220},
"小牛田":{b200k:"石巻13号-4",west:507560,south:138580,east:508090,north:138920},
"広淵":{b200k:"石巻14号-1",west:508010,south:138280,east:508540,north:138620},
"小野":{b200k:"石巻14号-2",west:508010,south:137980,east:508540,north:138320},
"鹿島台":{b200k:"石巻14号-3",west:507560,south:138280,east:508090,north:138620},
"松島":{b200k:"石巻14号-4",west:507560,south:137980,east:508090,north:138320},
"宮戸島":{b200k:"石巻15号-1",west:508010,south:137680,east:508540,north:138020},
"塩竈":{b200k:"石巻15号-3",west:507560,south:137680,east:508090,north:138020},
"陸奥畑":{b200k:"青森1号-1",west:507100,south:148480,east:507650,north:148820},
"陸奥川内":{b200k:"青森1号-2",west:507100,south:148180,east:507650,north:148520},
"牛滝":{b200k:"青森1号-3",west:506650,south:148480,east:507200,north:148820},
"源藤城":{b200k:"青森1号-4",west:506650,south:148180,east:507200,north:148520},
"脇野沢":{b200k:"青森2号-3",west:506650,south:147880,east:507200,north:148220},
"小湊":{b200k:"青森3号-1",west:507100,south:147280,east:507650,north:147620},
"東岳":{b200k:"青森3号-2",west:507100,south:146980,east:507650,north:147320},
"茂浦":{b200k:"青森3号-3",west:506750,south:147280,east:507300,north:147620},
"浅虫":{b200k:"青森3号-4",west:506650,south:146980,east:507200,north:147320},
"折紙山":{b200k:"青森4号-1",west:507100,south:146680,east:507645,north:147020},
"田代平":{b200k:"青森4号-2",west:507100,south:146380,east:507645,north:146720},
"青森東部":{b200k:"青森4号-3",west:506650,south:146680,east:507195,north:147020},
"雲谷":{b200k:"青森4号-4",west:506650,south:146380,east:507195,north:146720},
"袰月":{b200k:"青森5号-4",west:505780,south:148180,east:506330,north:148520},
"大川平":{b200k:"青森6号-3",west:505780,south:147880,east:506330,north:148220},
"蟹田":{b200k:"青森6号-4",west:505810,south:147580,east:506360,north:147920},
"蓬田":{b200k:"青森7号-1",west:506200,south:147280,east:506750,north:147620},
"油川":{b200k:"青森7号-2",west:506200,south:146980,east:506750,north:147320},
"大倉岳":{b200k:"青森7号-3",west:505750,south:147280,east:506300,north:147620},
"源八森":{b200k:"青森7号-4",west:505750,south:146980,east:506300,north:147320},
"青森西部":{b200k:"青森8号-1",west:506200,south:146680,east:506745,north:147020},
"王余魚沢":{b200k:"青森8号-2",west:506200,south:146380,east:506745,north:146720},
"大釈迦":{b200k:"青森8号-3",west:505750,south:146680,east:506295,north:147020},
"浪岡":{b200k:"青森8号-4",west:505750,south:146380,east:506295,north:146720},
"三厩":{b200k:"青森9号-2",west:505300,south:148180,east:505850,north:148520},
"龍飛崎":{b200k:"青森9号-4",west:504850,south:148180,east:505400,north:148520},
"増川岳":{b200k:"青森10号-1",west:505300,south:147880,east:505850,north:148220},
"薄市":{b200k:"青森10号-2",west:505300,south:147580,east:505850,north:147920},
"小泊":{b200k:"青森10号-3",west:504850,south:147880,east:505400,north:148220},
"津軽相内":{b200k:"青森10号-4",west:504850,south:147580,east:505400,north:147920},
"中里":{b200k:"青森11号-1",west:505300,south:147280,east:505850,north:147620},
"金木":{b200k:"青森11号-2",west:505300,south:146980,east:505850,north:147320},
"車力":{b200k:"青森11号-3",west:504850,south:147280,east:505400,north:147620},
"菰槌":{b200k:"青森11号-4",west:504850,south:146980,east:505400,north:147320},
"五所川原":{b200k:"青森12号-1",west:505300,south:146680,east:505845,north:147020},
"板柳":{b200k:"青森12号-2",west:505300,south:146380,east:505845,north:146720},
"森田":{b200k:"青森12号-3",west:504850,south:146680,east:505395,north:147020},
"十面沢":{b200k:"青森12号-4",west:504850,south:146380,east:505395,north:146720},
"鰺ヶ沢":{b200k:"青森16号-1",west:504400,south:146680,east:504945,north:147020},
"種里":{b200k:"青森16号-2",west:504400,south:146380,east:504945,north:146720},
"田野沢":{b200k:"青森16号-3",west:503950,south:146680,east:504495,north:147020},
"北金ヶ沢":{b200k:"青森16号-4",west:503950,south:146380,east:504495,north:146720},
"驫木":{b200k:"青森西4号-2",west:503500,south:146380,east:504045,north:146720},
"八甲田山":{b200k:"弘前1号-1",west:507100,south:146080,east:507645,north:146420},
"陸奥焼山":{b200k:"弘前1号-2",west:507100,south:145780,east:507645,north:146120},
"酸ヶ湯":{b200k:"弘前1号-3",west:506650,south:146080,east:507195,north:146420},
"温川":{b200k:"弘前1号-4",west:506650,south:145780,east:507195,north:146120},
"十和田湖東部":{b200k:"弘前2号-1",west:507100,south:145480,east:507645,north:145820},
"中滝":{b200k:"弘前2号-2",west:507100,south:145180,east:507645,north:145520},
"十和田湖西部":{b200k:"弘前2号-3",west:506650,south:145480,east:507195,north:145820},
"小坂鉱山":{b200k:"弘前2号-4",west:506650,south:145180,east:507195,north:145520},
"犬吠森":{b200k:"弘前3号-1",west:507100,south:144880,east:507645,north:145220},
"四角岳":{b200k:"弘前3号-2",west:507105,south:144580,east:507645,north:144920},
"毛馬内":{b200k:"弘前3号-3",west:506650,south:144880,east:507195,north:145220},
"花輪":{b200k:"弘前3号-4",west:506655,south:144580,east:507195,north:144920},
"田山":{b200k:"弘前4号-1",west:507105,south:144280,east:507645,north:144620},
"竜ヶ森":{b200k:"弘前4号-2",west:507105,south:143980,east:507645,north:144320},
"湯瀬":{b200k:"弘前4号-3",west:506655,south:144280,east:507195,north:144620},
"熊沢":{b200k:"弘前4号-4",west:506655,south:143980,east:507195,north:144320},
"温湯":{b200k:"弘前5号-1",west:506200,south:146080,east:506745,north:146420},
"沖浦":{b200k:"弘前5号-2",west:506200,south:145780,east:506745,north:146120},
"黒石":{b200k:"弘前5号-3",west:505750,south:146080,east:506295,north:146420},
"大鰐":{b200k:"弘前5号-4",west:505750,south:145780,east:506295,north:146120},
"碇ヶ関":{b200k:"弘前6号-1",west:506200,south:145480,east:506745,north:145820},
"陸中濁川":{b200k:"弘前6号-2",west:506200,south:145180,east:506745,north:145520},
"阿闍羅山":{b200k:"弘前6号-3",west:505750,south:145480,east:506295,north:145820},
"白沢":{b200k:"弘前6号-4",west:505750,south:145180,east:506295,north:145520},
"小坂":{b200k:"弘前7号-1",west:506200,south:144880,east:506745,north:145220},
"十二所":{b200k:"弘前7号-2",west:506205,south:144580,east:506745,north:144920},
"大館":{b200k:"弘前7号-3",west:505750,south:144880,east:506295,north:145220},
"扇田":{b200k:"弘前7号-4",west:505755,south:144580,east:506295,north:144920},
"大葛":{b200k:"弘前8号-1",west:506205,south:144280,east:506745,north:144620},
"サンケ森":{b200k:"弘前8号-2",west:506205,south:143980,east:506745,north:144320},
"明利又":{b200k:"弘前8号-3",west:505755,south:144280,east:506295,north:144620},
"太平湖":{b200k:"弘前8号-4",west:505755,south:143980,east:506295,north:144320},
"弘前":{b200k:"弘前9号-1",west:505300,south:146080,east:505845,north:146420},
"久渡寺":{b200k:"弘前9号-2",west:505300,south:145780,east:505845,north:146120},
"岩木山":{b200k:"弘前9号-3",west:504850,south:146080,east:505395,north:146420},
"陸奥田代":{b200k:"弘前9号-4",west:504850,south:145780,east:505395,north:146120},
"田代岳":{b200k:"弘前10号-1",west:505300,south:145480,east:505845,north:145820},
"越山":{b200k:"弘前10号-2",west:505300,south:145180,east:505845,north:145520},
"尾太岳":{b200k:"弘前10号-3",west:504850,south:145480,east:505395,north:145820},
"真名子":{b200k:"弘前10号-4",west:504850,south:145180,east:505395,north:145520},
"早口":{b200k:"弘前11号-1",west:505300,south:144880,east:505845,north:145220},
"鷹巣東部":{b200k:"弘前11号-2",west:505305,south:144580,east:505845,north:144920},
"藤琴":{b200k:"弘前11号-3",west:504850,south:144880,east:505395,north:145220},
"鷹巣西部":{b200k:"弘前11号-4",west:504855,south:144580,east:505395,north:144920},
"桂瀬":{b200k:"弘前12号-1",west:505305,south:144280,east:505845,north:144620},
"阿仁前田":{b200k:"弘前12号-2",west:505305,south:143980,east:505845,north:144320},
"米内沢":{b200k:"弘前12号-3",west:504855,south:144280,east:505395,north:144620},
"沖田面":{b200k:"弘前12号-4",west:504855,south:143980,east:505395,north:144320},
"枯木平":{b200k:"弘前13号-1",west:504400,south:146080,east:504945,north:146420},
"川原平":{b200k:"弘前13号-2",west:504400,south:145780,east:504945,north:146120},
"長慶平":{b200k:"弘前13号-3",west:503950,south:146080,east:504495,north:146420},
"白神岳":{b200k:"弘前13号-4",west:503950,south:145780,east:504495,north:146120},
"冷水岳":{b200k:"弘前14号-1",west:504400,south:145480,east:504945,north:145820},
"羽後焼山":{b200k:"弘前14号-2",west:504400,south:145180,east:504945,north:145520},
"二ッ森":{b200k:"弘前14号-3",west:503950,south:145480,east:504495,north:145820},
"中浜":{b200k:"弘前14号-4",west:503950,south:145180,east:504495,north:145520},
"根城岱":{b200k:"弘前15号-1",west:504400,south:144880,east:504945,north:145220},
"二ツ井":{b200k:"弘前15号-2",west:504405,south:144580,east:504945,north:144920},
"羽後水沢":{b200k:"弘前15号-3",west:503950,south:144880,east:504495,north:145220},
"能代":{b200k:"弘前15号-4",west:503900,south:144580,east:504440,north:144920},
"下岩川":{b200k:"弘前16号-1",west:504405,south:144280,east:504945,north:144620},
"小又口":{b200k:"弘前16号-2",west:504405,south:143980,east:504945,north:144320},
"森岳":{b200k:"弘前16号-3",west:503955,south:144280,east:504495,north:144620},
"鹿渡":{b200k:"弘前16号-4",west:503955,south:143980,east:504495,north:144320},
"茶臼岳":{b200k:"秋田1号-1",west:507105,south:143680,east:507645,north:144020},
"松川温泉":{b200k:"秋田1号-2",west:507105,south:143380,east:507645,north:143720},
"八幡平":{b200k:"秋田1号-3",west:506655,south:143680,east:507195,north:144020},
"曲崎山":{b200k:"秋田1号-4",west:506655,south:143380,east:507195,north:143720},
"篠崎":{b200k:"秋田2号-1",west:507105,south:143080,east:507645,north:143420},
"雫石":{b200k:"秋田2号-2",west:507105,south:142780,east:507645,north:143120},
"秋田駒ヶ岳":{b200k:"秋田2号-3",west:506655,south:143080,east:507195,north:143420},
"国見温泉":{b200k:"秋田2号-4",west:506655,south:142780,east:507195,north:143120},
"鶯宿":{b200k:"秋田3号-1",west:507105,south:142480,east:507645,north:142820},
"須賀倉山":{b200k:"秋田3号-2",west:507105,south:142180,east:507640,north:142520},
"羽後朝日岳":{b200k:"秋田3号-3",west:506655,south:142480,east:507195,north:142820},
"北川舟":{b200k:"秋田3号-4",west:506655,south:142180,east:507190,north:142520},
"鉛":{b200k:"秋田4号-1",west:507105,south:141880,east:507640,north:142220},
"尻平川":{b200k:"秋田4号-2",west:507105,south:141580,east:507640,north:141920},
"陸中猿橋":{b200k:"秋田4号-3",west:506655,south:141880,east:507190,north:142220},
"新町":{b200k:"秋田4号-4",west:506655,south:141580,east:507190,north:141920},
"玉川温泉":{b200k:"秋田5号-1",west:506205,south:143680,east:506745,north:144020},
"羽後玉川":{b200k:"秋田5号-2",west:506205,south:143380,east:506745,north:143720},
"森吉山":{b200k:"秋田5号-3",west:505755,south:143680,east:506295,north:144020},
"戸鳥内":{b200k:"秋田5号-4",west:505755,south:143380,east:506295,north:143720},
"田沢":{b200k:"秋田6号-1",west:506205,south:143080,east:506745,north:143420},
"田沢湖":{b200k:"秋田6号-2",west:506205,south:142780,east:506745,north:143120},
"上桧木内":{b200k:"秋田6号-3",west:505755,south:143080,east:506295,north:143420},
"下桧木内":{b200k:"秋田6号-4",west:505755,south:142780,east:506295,north:143120},
"抱返り溪谷":{b200k:"秋田7号-1",west:506205,south:142480,east:506745,north:142820},
"大神成":{b200k:"秋田7号-2",west:506205,south:142180,east:506740,north:142520},
"角館":{b200k:"秋田7号-3",west:505755,south:142480,east:506295,north:142820},
"羽後長野":{b200k:"秋田7号-4",west:505755,south:142180,east:506290,north:142520},
"真昼岳":{b200k:"秋田8号-1",west:506205,south:141880,east:506740,north:142220},
"左草":{b200k:"秋田8号-2",west:506205,south:141580,east:506740,north:141920},
"六郷":{b200k:"秋田8号-3",west:505755,south:141880,east:506290,north:142220},
"金沢本町":{b200k:"秋田8号-4",west:505755,south:141580,east:506290,north:141920},
"阿仁合":{b200k:"秋田9号-1",west:505305,south:143680,east:505845,north:144020},
"比立内":{b200k:"秋田9号-2",west:505305,south:143380,east:505845,north:143720},
"八木沢":{b200k:"秋田9号-3",west:504855,south:143680,east:505395,north:144020},
"天上倉山":{b200k:"秋田9号-4",west:504855,south:143380,east:505395,north:143720},
"番鳥森":{b200k:"秋田10号-1",west:505305,south:143080,east:505845,north:143420},
"羽後庄内":{b200k:"秋田10号-2",west:505305,south:142780,east:505845,north:143120},
"太平山":{b200k:"秋田10号-3",west:504855,south:143080,east:505395,north:143420},
"岩見三内":{b200k:"秋田10号-4",west:504855,south:142780,east:505395,north:143120},
"稲沢":{b200k:"秋田11号-1",west:505305,south:142480,east:505845,north:142820},
"刈和野東部":{b200k:"秋田11号-2",west:505305,south:142180,east:505840,north:142520},
"羽後境":{b200k:"秋田11号-3",west:504855,south:142480,east:505395,north:142820},
"刈和野":{b200k:"秋田11号-4",west:504855,south:142180,east:505390,north:142520},
"大曲":{b200k:"秋田12号-1",west:505305,south:141880,east:505840,north:142220},
"角間川":{b200k:"秋田12号-2",west:505305,south:141580,east:505840,north:141920},
"悪戸野":{b200k:"秋田12号-3",west:504855,south:141880,east:505390,north:142220},
"八沢木":{b200k:"秋田12号-4",west:504855,south:141580,east:505390,north:141920},
"湯ノ又":{b200k:"秋田13号-1",west:504405,south:143680,east:504945,north:144020},
"蓬内台":{b200k:"秋田13号-2",west:504405,south:143380,east:504945,north:143720},
"五城目":{b200k:"秋田13号-3",west:503955,south:143680,east:504495,north:144020},
"大久保":{b200k:"秋田13号-4",west:503955,south:143380,east:504495,north:143720},
"松原":{b200k:"秋田14号-1",west:504405,south:143080,east:504945,north:143420},
"秋田東部":{b200k:"秋田14号-2",west:504405,south:142780,east:504945,north:143120},
"土崎":{b200k:"秋田14号-3",west:503955,south:143080,east:504495,north:143420},
"秋田西部":{b200k:"秋田14号-4",west:503955,south:142780,east:504495,north:143120},
"羽後和田":{b200k:"秋田15号-1",west:504405,south:142480,east:504945,north:142820},
"新波":{b200k:"秋田15号-2",west:504405,south:142180,east:504940,north:142520},
"羽川":{b200k:"秋田15号-3",west:503955,south:142480,east:504495,north:142820},
"内道川":{b200k:"秋田15号-4",west:503955,south:142180,east:504490,north:142520},
"新沢":{b200k:"秋田16号-1",west:504405,south:141880,east:504940,north:142220},
"岩野目沢":{b200k:"秋田16号-2",west:504405,south:141580,east:504940,north:141920},
"岩谷":{b200k:"秋田16号-3",west:503955,south:141880,east:504490,north:142220},
"本荘":{b200k:"秋田16号-4",west:503955,south:141580,east:504490,north:141920},
"和賀仙人":{b200k:"新庄1号-1",west:507105,south:141280,east:507640,north:141620},
"夏油温泉":{b200k:"新庄1号-2",west:507105,south:140980,east:507640,north:141320},
"陸中川尻":{b200k:"新庄1号-3",west:506655,south:141280,east:507190,north:141620},
"三界山":{b200k:"新庄1号-4",west:506655,south:140980,east:507190,north:141320},
"石淵ダム":{b200k:"新庄2号-1",west:507105,south:140680,east:507640,north:141020},
"高檜能山":{b200k:"新庄2号-2",west:507105,south:140380,east:507640,north:140720},
"焼石岳":{b200k:"新庄2号-3",west:506655,south:140680,east:507190,north:141020},
"真湯温泉":{b200k:"新庄2号-4",west:506655,south:140380,east:507190,north:140720},
"本寺":{b200k:"新庄3号-1",west:507105,south:140080,east:507640,north:140420},
"沼倉":{b200k:"新庄3号-2",west:507110,south:139780,east:507640,north:140120},
"栗駒山":{b200k:"新庄3号-3",west:506655,south:140080,east:507190,north:140420},
"切留":{b200k:"新庄3号-4",west:506660,south:139780,east:507190,north:140120},
"岩ヶ崎":{b200k:"新庄4号-1",west:507110,south:139480,east:507640,north:139820},
"真坂":{b200k:"新庄4号-2",west:507110,south:139180,east:507640,north:139520},
"花山湖":{b200k:"新庄4号-3",west:506660,south:139480,east:507190,north:139820},
"川渡":{b200k:"新庄4号-4",west:506660,south:139180,east:507190,north:139520},
"羽後黒沢":{b200k:"新庄5号-1",west:506205,south:141280,east:506740,north:141620},
"田子内":{b200k:"新庄5号-2",west:506205,south:140980,east:506740,north:141320},
"横手":{b200k:"新庄5号-3",west:505755,south:141280,east:506290,north:141620},
"十文字":{b200k:"新庄5号-4",west:505755,south:140980,east:506290,north:141320},
"椿台":{b200k:"新庄6号-1",west:506205,south:140680,east:506740,north:141020},
"小安温泉":{b200k:"新庄6号-2",west:506205,south:140380,east:506740,north:140720},
"稲庭":{b200k:"新庄6号-3",west:505755,south:140680,east:506290,north:141020},
"菅生":{b200k:"新庄6号-4",west:505755,south:140380,east:506290,north:140720},
"桂沢":{b200k:"新庄7号-1",west:506205,south:140080,east:506740,north:140420},
"軍沢":{b200k:"新庄7号-2",west:506210,south:139780,east:506740,north:140120},
"秋ノ宮":{b200k:"新庄7号-3",west:505755,south:140080,east:506290,north:140420},
"鬼首峠":{b200k:"新庄7号-4",west:505760,south:139780,east:506290,north:140120},
"鬼首":{b200k:"新庄8号-1",west:506210,south:139480,east:506740,north:139820},
"鳴子":{b200k:"新庄8号-2",west:506210,south:139180,east:506740,north:139520},
"向町":{b200k:"新庄8号-3",west:505760,south:139480,east:506290,north:139820},
"羽前赤倉":{b200k:"新庄8号-4",west:505760,south:139180,east:506290,north:139520},
"浅舞":{b200k:"新庄9号-1",west:505305,south:141280,east:505840,north:141620},
"西馬音内":{b200k:"新庄9号-2",west:505305,south:140980,east:505840,north:141320},
"老方":{b200k:"新庄9号-3",west:504855,south:141280,east:505390,north:141620},
"羽後田代":{b200k:"新庄9号-4",west:504855,south:140980,east:505390,north:141320},
"湯沢":{b200k:"新庄10号-1",west:505305,south:140680,east:505840,north:141020},
"横堀":{b200k:"新庄10号-2",west:505305,south:140380,east:505840,north:140720},
"上笹子":{b200k:"新庄10号-3",west:504855,south:140680,east:505390,north:141020},
"松ノ木峠":{b200k:"新庄10号-4",west:504855,south:140380,east:505390,north:140720},
"羽後川井":{b200k:"新庄11号-1",west:505305,south:140080,east:505840,north:140420},
"神室山":{b200k:"新庄11号-2",west:505310,south:139780,east:505840,north:140120},
"及位":{b200k:"新庄11号-3",west:504855,south:140080,east:505390,north:140420},
"羽前金山":{b200k:"新庄11号-4",west:504860,south:139780,east:505390,north:140120},
"瀬見":{b200k:"新庄12号-1",west:505310,south:139480,east:505840,north:139820},
"月楯":{b200k:"新庄12号-2",west:505310,south:139180,east:505840,north:139520},
"新庄":{b200k:"新庄12号-3",west:504860,south:139480,east:505390,north:139820},
"舟形":{b200k:"新庄12号-4",west:504860,south:139180,east:505390,north:139520},
"大琴":{b200k:"新庄13号-1",west:504405,south:141280,east:504940,north:141620},
"矢島":{b200k:"新庄13号-2",west:504405,south:140980,east:504940,north:141320},
"前郷":{b200k:"新庄13号-3",west:503955,south:141280,east:504490,north:141620},
"川辺":{b200k:"新庄13号-4",west:503955,south:140980,east:504490,north:141320},
"中直根":{b200k:"新庄14号-1",west:504405,south:140680,east:504940,north:141020},
"丁岳":{b200k:"新庄14号-2",west:504405,south:140380,east:504940,north:140720},
"鳥海山":{b200k:"新庄14号-3",west:503955,south:140680,east:504490,north:141020},
"湯ノ台":{b200k:"新庄14号-4",west:503955,south:140380,east:504490,north:140720},
"差首鍋":{b200k:"新庄15号-1",west:504405,south:140080,east:504940,north:140420},
"大沢":{b200k:"新庄15号-2",west:504410,south:139780,east:504940,north:140120},
"升田":{b200k:"新庄15号-3",west:503955,south:140080,east:504490,north:140420},
"中野俣":{b200k:"新庄15号-4",west:503960,south:139780,east:504490,north:140120},
"羽根沢温泉":{b200k:"新庄16号-1",west:504410,south:139480,east:504940,north:139820},
"古口":{b200k:"新庄16号-2",west:504410,south:139180,east:504940,north:139520},
"清川":{b200k:"新庄16号-3",west:503960,south:139480,east:504490,north:139820},
"木の沢":{b200k:"新庄16号-4",west:503960,south:139180,east:504490,north:139520},
"荒谷":{b200k:"仙台1号-1",west:507110,south:138880,east:507640,north:139220},
"古川":{b200k:"仙台1号-2",west:507110,south:138580,east:507640,north:138920},
"岩出山":{b200k:"仙台1号-3",west:506660,south:138880,east:507190,north:139220},
"中新田":{b200k:"仙台1号-4",west:506660,south:138580,east:507190,north:138920},
"吉岡":{b200k:"仙台2号-1",west:507110,south:138280,east:507640,north:138620},
"富谷":{b200k:"仙台2号-2",west:507110,south:137980,east:507640,north:138320},
"七ッ森":{b200k:"仙台2号-3",west:506660,south:138280,east:507190,north:138620},
"根白石":{b200k:"仙台2号-4",west:506660,south:137980,east:507190,north:138320},
"仙台東北部":{b200k:"仙台3号-1",west:507110,south:137680,east:507640,north:138020},
"仙台東南部":{b200k:"仙台3号-2",west:507135,south:137380,east:507660,north:137720},
"仙台西北部":{b200k:"仙台3号-3",west:506660,south:137680,east:507190,north:138020},
"仙台西南部":{b200k:"仙台3号-4",west:506660,south:137380,east:507185,north:137720},
"仙台空港":{b200k:"仙台4号-1",west:507110,south:137080,east:507635,north:137420},
"荒浜":{b200k:"仙台4号-2",west:507110,south:136780,east:507635,north:137120},
"岩沼":{b200k:"仙台4号-3",west:506660,south:137080,east:507185,north:137420},
"亘理":{b200k:"仙台4号-4",west:506660,south:136780,east:507185,north:137120},
"西上野目":{b200k:"仙台5号-1",west:506210,south:138880,east:506740,north:139220},
"薬莱山":{b200k:"仙台5号-2",west:506210,south:138580,east:506740,north:138920},
"魚取沼":{b200k:"仙台5号-3",west:505760,south:138880,east:506290,north:139220},
"銀山温泉":{b200k:"仙台5号-4",west:505760,south:138580,east:506290,north:138920},
"升沢":{b200k:"仙台6号-1",west:506210,south:138280,east:506740,north:138620},
"定義":{b200k:"仙台6号-2",west:506210,south:137980,east:506740,north:138320},
"船形山":{b200k:"仙台6号-3",west:505760,south:138280,east:506290,north:138620},
"関山峠":{b200k:"仙台6号-4",west:505760,south:137980,east:506290,north:138320},
"熊ケ根":{b200k:"仙台7号-1",west:506210,south:137680,east:506740,north:138020},
"陸前川崎":{b200k:"仙台7号-2",west:506210,south:137380,east:506735,north:137720},
"作並":{b200k:"仙台7号-3",west:505760,south:137680,east:506290,north:138020},
"今宿":{b200k:"仙台7号-4",west:505760,south:137380,east:506285,north:137720},
"村田":{b200k:"仙台8号-1",west:506210,south:137080,east:506735,north:137420},
"大河原":{b200k:"仙台8号-2",west:506210,south:136780,east:506735,north:137120},
"遠刈田":{b200k:"仙台8号-3",west:505760,south:137080,east:506285,north:137420},
"白石":{b200k:"仙台8号-4",west:505760,south:136780,east:506285,north:137120},
"尾花沢":{b200k:"仙台9号-1",west:505310,south:138880,east:505840,north:139220},
"延沢":{b200k:"仙台9号-2",west:505310,south:138580,east:505840,north:138920},
"海谷":{b200k:"仙台9号-3",west:504860,south:138880,east:505390,north:139220},
"富並":{b200k:"仙台9号-4",west:504860,south:138580,east:505390,north:138920},
"楯岡":{b200k:"仙台10号-1",west:505310,south:138280,east:505840,north:138620},
"天童":{b200k:"仙台10号-2",west:505310,south:137980,east:505840,north:138320},
"谷地":{b200k:"仙台10号-3",west:504860,south:138280,east:505390,north:138620},
"寒河江":{b200k:"仙台10号-4",west:504860,south:137980,east:505390,north:138320},
"山寺":{b200k:"仙台11号-1",west:505310,south:137680,east:505840,north:138020},
"笹谷峠":{b200k:"仙台11号-2",west:505310,south:137380,east:505835,north:137720},
"山形北部":{b200k:"仙台11号-3",west:504860,south:137680,east:505390,north:138020},
"山形南部":{b200k:"仙台11号-4",west:504860,south:137380,east:505385,north:137720},
"蔵王山":{b200k:"仙台12号-1",west:505310,south:137080,east:505835,north:137420},
"不忘山":{b200k:"仙台12号-2",west:505310,south:136780,east:505835,north:137120},
"上山":{b200k:"仙台12号-3",west:504860,south:137080,east:505385,north:137420},
"二井宿":{b200k:"仙台12号-4",west:504860,south:136780,east:505385,north:137120},
"肘折":{b200k:"仙台13号-1",west:504410,south:138880,east:504940,north:139220},
"葉山":{b200k:"仙台13号-2",west:504410,south:138580,east:504940,north:138920},
"立谷沢":{b200k:"仙台13号-3",west:503960,south:138880,east:504490,north:139220},
"月山":{b200k:"仙台13号-4",west:503960,south:138580,east:504490,north:138920},
"海味":{b200k:"仙台14号-1",west:504410,south:138280,east:504940,north:138620},
"左沢":{b200k:"仙台14号-2",west:504410,south:137980,east:504940,north:138320},
"本道寺":{b200k:"仙台14号-3",west:503960,south:138280,east:504490,north:138620},
"貫見":{b200k:"仙台14号-4",west:503960,south:137980,east:504490,north:138320},
"宮宿":{b200k:"仙台15号-1",west:504410,south:137680,east:504940,north:138020},
"白鷹山":{b200k:"仙台15号-2",west:504410,south:137380,east:504935,north:137720},
"太郎":{b200k:"仙台15号-3",west:503960,south:137680,east:504490,north:138020},
"荒砥":{b200k:"仙台15号-4",west:503960,south:137380,east:504485,north:137720},
"羽前中山":{b200k:"仙台16号-1",west:504410,south:137080,east:504935,north:137420},
"赤湯":{b200k:"仙台16号-2",west:504410,south:136780,east:504935,north:137120},
"長井":{b200k:"仙台16号-3",west:503960,south:137080,east:504485,north:137420},
"羽前小松":{b200k:"仙台16号-4",west:503960,south:136780,east:504485,north:137120},
"山下":{b200k:"福島1号-1",west:507110,south:136480,east:507635,north:136820},
"新地":{b200k:"福島1号-2",west:507110,south:136180,east:507635,north:136520},
"角田":{b200k:"福島1号-3",west:506660,south:136480,east:507185,north:136820},
"丸森":{b200k:"福島1号-4",west:506660,south:136180,east:507185,north:136520},
"相馬中村":{b200k:"福島2号-1",west:507110,south:135880,east:507635,north:136220},
"磐城鹿島":{b200k:"福島2号-2",west:507110,south:135580,east:507635,north:135920},
"青葉":{b200k:"福島2号-3",west:506660,south:135880,east:507185,north:136220},
"磐城草野":{b200k:"福島2号-4",west:506660,south:135580,east:507185,north:135920},
"原町":{b200k:"福島3号-1",west:507110,south:135280,east:507635,north:135620},
"小高":{b200k:"福島3号-2",west:507115,south:134980,east:507635,north:135320},
"小宮":{b200k:"福島3号-3",west:506660,south:135280,east:507185,north:135620},
"下津島":{b200k:"福島3号-4",west:506665,south:134980,east:507185,north:135320},
"浪江":{b200k:"福島4号-1",west:507115,south:134680,east:507635,north:135020},
"夜の森":{b200k:"福島4号-2",west:507115,south:134380,east:507635,north:134720},
"古道":{b200k:"福島4号-3",west:506665,south:134680,east:507185,north:135020},
"上川内":{b200k:"福島4号-4",west:506665,south:134380,east:507185,north:134720},
"白石東南部":{b200k:"福島5号-1",west:506210,south:136480,east:506735,north:136820},
"舟生":{b200k:"福島5号-2",west:506210,south:136180,east:506735,north:136520},
"白石南部":{b200k:"福島5号-3",west:505760,south:136480,east:506285,north:136820},
"桑折":{b200k:"福島5号-4",west:505760,south:136180,east:506285,north:136520},
"霊山":{b200k:"福島6号-1",west:506210,south:135880,east:506735,north:136220},
"萩平":{b200k:"福島6号-2",west:506210,south:135580,east:506735,north:135920},
"保原":{b200k:"福島6号-3",west:505760,south:135880,east:506285,north:136220},
"月舘":{b200k:"福島6号-4",west:505760,south:135580,east:506285,north:135920},
"飯樋":{b200k:"福島7号-1",west:506210,south:135280,east:506735,north:135620},
"上移":{b200k:"福島7号-2",west:506215,south:134980,east:506735,north:135320},
"川俣":{b200k:"福島7号-3",west:505760,south:135280,east:506285,north:135620},
"岩代小浜":{b200k:"福島7号-4",west:505765,south:134980,east:506285,north:135320},
"常葉":{b200k:"福島8号-1",west:506215,south:134680,east:506735,north:135020},
"上大越":{b200k:"福島8号-2",west:506215,south:134380,east:506735,north:134720},
"船引":{b200k:"福島8号-3",west:505765,south:134680,east:506285,north:135020},
"柳橋":{b200k:"福島8号-4",west:505765,south:134380,east:506285,north:134720},
"関":{b200k:"福島9号-1",west:505310,south:136480,east:505835,north:136820},
"中茂庭":{b200k:"福島9号-2",west:505310,south:136180,east:505835,north:136520},
"稲子":{b200k:"福島9号-3",west:504860,south:136480,east:505385,north:136820},
"栗子山":{b200k:"福島9号-4",west:504860,south:136180,east:505385,north:136520},
"福島北部":{b200k:"福島10号-1",west:505310,south:135880,east:505835,north:136220},
"福島南部":{b200k:"福島10号-2",west:505310,south:135580,east:505835,north:135920},
"板谷":{b200k:"福島10号-3",west:504860,south:135880,east:505385,north:136220},
"土湯温泉":{b200k:"福島10号-4",west:504860,south:135580,east:505385,north:135920},
"二本松":{b200k:"福島11号-1",west:505310,south:135280,east:505835,north:135620},
"岩代本宮":{b200k:"福島11号-2",west:505315,south:134980,east:505835,north:135320},
"安達太良山":{b200k:"福島11号-3",west:504860,south:135280,east:505385,north:135620},
"玉井":{b200k:"福島11号-4",west:504865,south:134980,east:505385,north:135320},
"三春":{b200k:"福島12号-1",west:505315,south:134680,east:505835,north:135020},
"郡山":{b200k:"福島12号-2",west:505315,south:134380,east:505835,north:134720},
"磐梯熱海":{b200k:"福島12号-3",west:504865,south:134680,east:505385,north:135020},
"郡山西部":{b200k:"福島12号-4",west:504865,south:134380,east:505385,north:134720},
"糠野目":{b200k:"福島13号-1",west:504410,south:136480,east:504935,north:136820},
"米沢東部":{b200k:"福島13号-2",west:504410,south:136180,east:504935,north:136520},
"米沢北部":{b200k:"福島13号-3",west:503960,south:136480,east:504485,north:136820},
"米沢":{b200k:"福島13号-4",west:503960,south:136180,east:504485,north:136520},
"天元台":{b200k:"福島14号-1",west:504410,south:135880,east:504935,north:136220},
"吾妻山":{b200k:"福島14号-2",west:504410,south:135580,east:504935,north:135920},
"白布温泉":{b200k:"福島14号-3",west:503960,south:135880,east:504485,north:136220},
"桧原湖":{b200k:"福島14号-4",west:503960,south:135580,east:504485,north:135920},
"中ノ沢":{b200k:"福島15号-1",west:504410,south:135280,east:504935,north:135620},
"関都":{b200k:"福島15号-2",west:504415,south:134980,east:504935,north:135320},
"磐梯山":{b200k:"福島15号-3",west:503960,south:135280,east:504485,north:135620},
"猪苗代":{b200k:"福島15号-4",west:503965,south:134980,east:504485,north:135320},
"山潟":{b200k:"福島16号-1",west:504415,south:134680,east:504935,north:135020},
"岩代中野":{b200k:"福島16号-2",west:504415,south:134380,east:504935,north:134720},
"原":{b200k:"福島16号-3",west:503965,south:134680,east:504485,north:135020},
"岩代福良":{b200k:"福島16号-4",west:503965,south:134380,east:504485,north:134720},
"南海老":{b200k:"福島東14号-4",west:507560,south:135580,east:508085,north:135920},
"大甕":{b200k:"福島東15号-3",west:507560,south:135280,east:508085,north:135620},
"塚原":{b200k:"福島東15号-4",west:507565,south:134980,east:508085,north:135320},
"磐城双葉":{b200k:"福島東16号-3",west:507565,south:134680,east:508085,north:135020},
"磐城富岡":{b200k:"福島東16号-4",west:507565,south:134380,east:508085,north:134720},
"成子内":{b200k:"白河1号-1",west:507115,south:134080,east:507635,north:134420},
"上浅見川":{b200k:"白河1号-2",west:507115,south:133780,east:507635,north:134120},
"坂シ内":{b200k:"白河1号-3",west:506665,south:134080,east:507185,north:134420},
"川前":{b200k:"白河1号-4",west:506665,south:133780,east:507185,north:134120},
"四倉":{b200k:"白河2号-1",west:507130,south:133480,east:507650,north:133820},
"平":{b200k:"白河2号-2",west:507115,south:133180,east:507635,north:133520},
"水石山":{b200k:"白河2号-3",west:506665,south:133480,east:507185,north:133820},
"常磐湯本":{b200k:"白河2号-4",west:506665,south:133180,east:507185,north:133520},
"小名浜":{b200k:"白河3号-1",west:507115,south:132880,east:507635,north:133220},
"磐城泉":{b200k:"白河3号-3",west:506665,south:132880,east:507185,north:133220},
"勿来":{b200k:"白河3号-4",west:506665,south:132580,east:507185,north:132920},
"大津":{b200k:"白河4号-3",west:506665,south:132280,east:507180,north:132620},
"小野新町":{b200k:"白河5号-1",west:506215,south:134080,east:506735,north:134420},
"上三坂":{b200k:"白河5号-2",west:506215,south:133780,east:506735,north:134120},
"田母神":{b200k:"白河5号-3",west:505765,south:134080,east:506285,north:134420},
"上蓬田":{b200k:"白河5号-4",west:505765,south:133780,east:506285,north:134120},
"下市萱":{b200k:"白河6号-1",west:506215,south:133480,east:506735,north:133820},
"上遠野":{b200k:"白河6号-2",west:506215,south:133180,east:506735,north:133520},
"竹貫":{b200k:"白河6号-3",west:505765,south:133480,east:506285,north:133820},
"磐城新宿":{b200k:"白河6号-4",west:505765,south:133180,east:506285,north:133520},
"上平石":{b200k:"白河7号-1",west:506215,south:132880,east:506735,north:133220},
"川部":{b200k:"白河7号-2",west:506215,south:132580,east:506735,north:132920},
"橋場":{b200k:"白河7号-3",west:505765,south:132880,east:506285,north:133220},
"磐城片貝":{b200k:"白河7号-4",west:505765,south:132580,east:506285,north:132920},
"磯原":{b200k:"白河8号-1",west:506215,south:132280,east:506730,north:132620},
"高萩":{b200k:"白河8号-2",west:506215,south:131980,east:506730,north:132320},
"里美牧場":{b200k:"白河8号-3",west:505765,south:132280,east:506280,north:132620},
"竪破山":{b200k:"白河8号-4",west:505765,south:131980,east:506280,north:132320},
"須賀川東部":{b200k:"白河9号-1",west:505315,south:134080,east:505835,north:134420},
"母畑":{b200k:"白河9号-2",west:505315,south:133780,east:505835,north:134120},
"須賀川西部":{b200k:"白河9号-3",west:504865,south:134080,east:505385,north:134420},
"矢吹":{b200k:"白河9号-4",west:504865,south:133780,east:505385,north:134120},
"磐城石川":{b200k:"白河10号-1",west:505315,south:133480,east:505835,north:133820},
"棚倉":{b200k:"白河10号-2",west:505315,south:133180,east:505835,north:133520},
"泉崎":{b200k:"白河10号-3",west:504865,south:133480,east:505385,north:133820},
"磐城金山":{b200k:"白河10号-4",west:504865,south:133180,east:505385,north:133520},
"塙":{b200k:"白河11号-1",west:505315,south:132880,east:505835,north:133220},
"東舘":{b200k:"白河11号-2",west:505315,south:132580,east:505835,north:132920},
"八溝山":{b200k:"白河11号-3",west:504865,south:132880,east:505385,north:133220},
"町付":{b200k:"白河11号-4",west:504865,south:132580,east:505385,north:132920},
"袋田":{b200k:"白河12号-1",west:505315,south:132280,east:505830,north:132620},
"大中宿":{b200k:"白河12号-2",west:505315,south:131980,east:505830,north:132320},
"大子":{b200k:"白河12号-3",west:504865,south:132280,east:505380,north:132620},
"常陸大沢":{b200k:"白河12号-4",west:504865,south:131980,east:505380,north:132320},
"岩代長沼":{b200k:"白河13号-1",west:504415,south:134080,east:504935,north:134420},
"上小屋":{b200k:"白河13号-2",west:504415,south:133780,east:504935,north:134120},
"羽鳥湖":{b200k:"白河13号-3",west:503965,south:134080,east:504485,north:134420},
"新甲子":{b200k:"白河13号-4",west:503965,south:133780,east:504485,north:134120},
"白河":{b200k:"白河14号-1",west:504415,south:133480,east:504935,north:133820},
"旗宿":{b200k:"白河14号-2",west:504415,south:133180,east:504935,north:133520},
"那須湯本":{b200k:"白河14号-3",west:503965,south:133480,east:504485,north:133820},
"黒田原":{b200k:"白河14号-4",west:503965,south:133180,east:504485,north:133520},
"伊王野":{b200k:"白河15号-1",west:504415,south:132880,east:504935,north:133220},
"黒羽田町":{b200k:"白河15号-2",west:504415,south:132580,east:504935,north:132920},
"黒磯":{b200k:"白河15号-3",west:503965,south:132880,east:504485,north:133220},
"大田原":{b200k:"白河15号-4",west:503965,south:132580,east:504485,north:132920},
"下野小川":{b200k:"白河16号-1",west:504415,south:132280,east:504930,north:132620},
"馬頭":{b200k:"白河16号-2",west:504415,south:131980,east:504930,north:132320},
"佐久山":{b200k:"白河16号-3",west:503965,south:132280,east:504480,north:132620},
"喜連川":{b200k:"白河16号-4",west:503965,south:131980,east:504480,north:132320},
"井出":{b200k:"白河東13号-3",west:507565,south:134080,east:508085,north:134420},
"下浅見川":{b200k:"白河東13号-4",west:507565,south:133780,east:508085,north:134120},
"日立":{b200k:"水戸5号-1",west:506215,south:131680,east:506730,north:132020},
"日立南部":{b200k:"水戸5号-2",west:506215,south:131380,east:506730,north:131720},
"町屋":{b200k:"水戸5号-3",west:505765,south:131680,east:506280,north:132020},
"常陸太田":{b200k:"水戸5号-4",west:505765,south:131380,east:506280,north:131720},
"常陸久慈":{b200k:"水戸6号-3",west:505787,south:131080,east:506302,north:131420},
"ひたちなか":{b200k:"水戸6号-4",west:505800,south:130780,east:506315,north:131120},
"磯浜":{b200k:"水戸7号-3",west:505765,south:130480,east:506280,north:130820},
"徳宿":{b200k:"水戸7号-4",west:505765,south:130180,east:506280,north:130520},
"荒野":{b200k:"水戸8号-2",west:506220,south:129580,east:506730,north:129920},
"鉾田":{b200k:"水戸8号-3",west:505765,south:129880,east:506280,north:130220},
"武井":{b200k:"水戸8号-4",west:505770,south:129580,east:506280,north:129920},
"山方":{b200k:"水戸9号-1",west:505315,south:131680,east:505830,north:132020},
"常陸大宮":{b200k:"水戸9号-2",west:505315,south:131380,east:505830,north:131720},
"上小瀬":{b200k:"水戸9号-3",west:504865,south:131680,east:505380,north:132020},
"野口":{b200k:"水戸9号-4",west:504865,south:131380,east:505380,north:131720},
"石塚":{b200k:"水戸10号-1",west:505315,south:131080,east:505830,north:131420},
"水戸":{b200k:"水戸10号-2",west:505315,south:130780,east:505830,north:131120},
"徳蔵":{b200k:"水戸10号-3",west:504865,south:131080,east:505380,north:131420},
"笠間":{b200k:"水戸10号-4",west:504865,south:130780,east:505380,north:131120},
"小鶴":{b200k:"水戸11号-1",west:505315,south:130480,east:505830,north:130820},
"下吉影":{b200k:"水戸11号-2",west:505315,south:130180,east:505830,north:130520},
"岩間":{b200k:"水戸11号-3",west:504865,south:130480,east:505380,north:130820},
"石岡":{b200k:"水戸11号-4",west:504865,south:130180,east:505380,north:130520},
"常陸玉造":{b200k:"水戸12号-1",west:505315,south:129880,east:505830,north:130220},
"西蓮寺":{b200k:"水戸12号-2",west:505320,south:129580,east:505830,north:129920},
"常陸高浜":{b200k:"水戸12号-3",west:504865,south:129880,east:505380,north:130220},
"木原":{b200k:"水戸12号-4",west:504870,south:129580,east:505380,north:129920},
"烏山":{b200k:"水戸13号-1",west:504415,south:131680,east:504930,north:132020},
"茂木":{b200k:"水戸13号-2",west:504415,south:131380,east:504930,north:131720},
"仁井田":{b200k:"水戸13号-3",west:503965,south:131680,east:504480,north:132020},
"祖母井":{b200k:"水戸13号-4",west:503965,south:131380,east:504480,north:131720},
"中飯":{b200k:"水戸14号-1",west:504415,south:131080,east:504930,north:131420},
"羽黒":{b200k:"水戸14号-2",west:504415,south:130780,east:504930,north:131120},
"真岡":{b200k:"水戸14号-3",west:503965,south:131080,east:504480,north:131420},
"岩瀬":{b200k:"水戸14号-4",west:503965,south:130780,east:504480,north:131120},
"加波山":{b200k:"水戸15号-1",west:504415,south:130480,east:504930,north:130820},
"柿岡":{b200k:"水戸15号-2",west:504415,south:130180,east:504930,north:130520},
"真壁":{b200k:"水戸15号-3",west:503965,south:130480,east:504480,north:130820},
"筑波":{b200k:"水戸15号-4",west:503965,south:130180,east:504480,north:130520},
"常陸藤沢":{b200k:"水戸16号-1",west:504415,south:129880,east:504930,north:130220},
"土浦":{b200k:"水戸16号-2",west:504420,south:129580,east:504930,north:129920},
"上郷":{b200k:"水戸16号-3",west:503965,south:129880,east:504480,north:130220},
"谷田部":{b200k:"水戸16号-4",west:503970,south:129580,east:504480,north:129920},
"鹿島矢田部":{b200k:"千葉2号-3",west:506670,south:128680,east:507180,north:129020},
"銚子":{b200k:"千葉2号-4",west:506670,south:128380,east:507180,north:128720},
"常陸鹿島":{b200k:"千葉5号-1",west:506220,south:129280,east:506730,north:129620},
"神栖":{b200k:"千葉5号-2",west:506235,south:128980,east:506745,north:129320},
"潮来":{b200k:"千葉5号-3",west:505770,south:129280,east:506280,north:129620},
"佐原東部":{b200k:"千葉5号-4",west:505770,south:128980,east:506280,north:129320},
"小南":{b200k:"千葉6号-1",west:506220,south:128680,east:506730,north:129020},
"旭":{b200k:"千葉6号-2",west:506220,south:128380,east:506730,north:128720},
"岩部":{b200k:"千葉6号-3",west:505770,south:128680,east:506280,north:129020},
"八日市場":{b200k:"千葉6号-4",west:505770,south:128380,east:506280,north:128720},
"木戸":{b200k:"千葉7号-3",west:505770,south:128075,east:506280,north:128415},
"麻生":{b200k:"千葉9号-1",west:505320,south:129280,east:505830,north:129620},
"佐原西部":{b200k:"千葉9号-2",west:505320,south:128980,east:505830,north:129320},
"江戸崎":{b200k:"千葉9号-3",west:504870,south:129280,east:505380,north:129620},
"下総滑川":{b200k:"千葉9号-4",west:504870,south:128980,east:505380,north:129320},
"成田国際空港":{b200k:"千葉10号-1",west:505320,south:128680,east:505830,north:129020},
"多古":{b200k:"千葉10号-2",west:505320,south:128380,east:505830,north:128720},
"成田":{b200k:"千葉10号-3",west:504870,south:128680,east:505380,north:129020},
"酒々井":{b200k:"千葉10号-4",west:504870,south:128380,east:505380,north:128720},
"成東":{b200k:"千葉11号-1",west:505320,south:128080,east:505830,north:128420},
"上総片貝":{b200k:"千葉11号-2",west:505320,south:127780,east:505830,north:128120},
"八街":{b200k:"千葉11号-3",west:504870,south:128080,east:505380,north:128420},
"東金":{b200k:"千葉11号-4",west:504870,south:127780,east:505380,north:128120},
"四天木":{b200k:"千葉12号-1",west:505320,south:127480,east:505830,north:127820},
"東浪見":{b200k:"千葉12号-2",west:505320,south:127180,east:505830,north:127520},
"茂原":{b200k:"千葉12号-3",west:504870,south:127480,east:505380,north:127820},
"上総一宮":{b200k:"千葉12号-4",west:504870,south:127180,east:505380,north:127520},
"牛久":{b200k:"千葉13号-1",west:504420,south:129280,east:504930,north:129620},
"龍ケ崎":{b200k:"千葉13号-2",west:504420,south:128980,east:504930,north:129320},
"藤代":{b200k:"千葉13号-3",west:503970,south:129280,east:504480,north:129620},
"取手":{b200k:"千葉13号-4",west:503970,south:128980,east:504480,north:129320},
"小林":{b200k:"千葉14号-1",west:504420,south:128680,east:504930,north:129020},
"佐倉":{b200k:"千葉14号-2",west:504420,south:128380,east:504930,north:128720},
"白井":{b200k:"千葉14号-3",west:503970,south:128680,east:504480,north:129020},
"習志野":{b200k:"千葉14号-4",west:503970,south:128380,east:504480,north:128720},
"千葉東部":{b200k:"千葉15号-1",west:504420,south:128080,east:504930,north:128420},
"蘇我":{b200k:"千葉15号-2",west:504420,south:127780,east:504930,north:128120},
"千葉西部":{b200k:"千葉15号-3",west:503970,south:128080,east:504480,north:128420},
"五井":{b200k:"千葉15号-4",west:503970,south:127780,east:504480,north:128120},
"海士有木":{b200k:"千葉16号-1",west:504420,south:127480,east:504930,north:127820},
"鶴舞":{b200k:"千葉16号-2",west:504420,south:127180,east:504930,north:127520},
"姉崎":{b200k:"千葉16号-3",west:503970,south:127480,east:504480,north:127820},
"上総横田":{b200k:"千葉16号-4",west:503970,south:127180,east:504480,north:127520},
"上総長者":{b200k:"大多喜9号-1",west:505320,south:126880,east:505825,north:127220},
"上総大原":{b200k:"大多喜9号-2",west:505320,south:126580,east:505825,north:126920},
"国吉":{b200k:"大多喜9号-3",west:504870,south:126880,east:505375,north:127220},
"御宿":{b200k:"大多喜9号-4",west:504870,south:126580,east:505375,north:126920},
"勝浦":{b200k:"大多喜10号-3",west:504870,south:126280,east:505375,north:126620},
"大多喜":{b200k:"大多喜13号-1",west:504420,south:126880,east:504925,north:127220},
"上総中野":{b200k:"大多喜13号-2",west:504420,south:126580,east:504925,north:126920},
"久留里":{b200k:"大多喜13号-3",west:503970,south:126880,east:504475,north:127220},
"坂畑":{b200k:"大多喜13号-4",west:503970,south:126580,east:504475,north:126920},
"安房小湊":{b200k:"大多喜14号-1",west:504420,south:126280,east:504925,north:126620},
"鴨川":{b200k:"大多喜14号-3",west:503970,south:126280,east:504475,north:126620},
"安房和田":{b200k:"大多喜14号-4",west:503970,south:125980,east:504475,north:126320},
"深浦":{b200k:"深浦1号-1",west:503480,south:146080,east:504025,north:146420},
"十二湖":{b200k:"深浦1号-2",west:503500,south:145780,east:504045,north:146120},
"大間越":{b200k:"深浦2号-1",west:503500,south:145480,east:504045,north:145820},
"岩館":{b200k:"深浦2号-2",west:503500,south:145180,east:504045,north:145520},
"羽後浜田":{b200k:"深浦4号-1",west:503505,south:144280,east:504045,north:144620},
"大潟":{b200k:"深浦4号-2",west:503505,south:143980,east:504045,north:144320},
"寒風山":{b200k:"男鹿1号-1",west:503505,south:143680,east:504045,north:144020},
"船越":{b200k:"男鹿1号-2",west:503505,south:143380,east:504045,north:143720},
"北浦":{b200k:"男鹿1号-3",west:503055,south:143680,east:503595,north:144020},
"船川":{b200k:"男鹿1号-4",west:503000,south:143380,east:503540,north:143720},
"戸賀":{b200k:"男鹿5号-1",west:502605,south:143665,east:503145,north:144005},
"平沢":{b200k:"酒田1号-1",west:503505,south:141280,east:504040,north:141620},
"象潟":{b200k:"酒田1号-2",west:503505,south:140980,east:504040,north:141320},
"小砂川":{b200k:"酒田2号-1",west:503505,south:140680,east:504040,north:141020},
"吹浦":{b200k:"酒田2号-2",west:503505,south:140380,east:504040,north:140720},
"十里塚":{b200k:"酒田2号-4",west:503055,south:140380,east:503590,north:140720},
"羽後観音寺":{b200k:"酒田3号-1",west:503505,south:140080,east:504040,north:140420},
"余目":{b200k:"酒田3号-2",west:503510,south:139780,east:504040,north:140120},
"酒田北部":{b200k:"酒田3号-3",west:503055,south:140080,east:503590,north:140420},
"酒田南部":{b200k:"酒田3号-4",west:503060,south:139780,east:503590,north:140120},
"藤島":{b200k:"酒田4号-1",west:503510,south:139480,east:504040,north:139820},
"羽黒山":{b200k:"酒田4号-2",west:503510,south:139180,east:504040,north:139520},
"湯野浜":{b200k:"酒田4号-3",west:503010,south:139480,east:503540,north:139820},
"鶴岡":{b200k:"酒田4号-4",west:503060,south:139180,east:503590,north:139520},
"三瀬":{b200k:"酒田8号-2",west:502590,south:139180,east:503120,north:139520},
"大網":{b200k:"村上1号-1",west:503510,south:138880,east:504040,north:139220},
"湯殿山":{b200k:"村上1号-2",west:503510,south:138580,east:504040,north:138920},
"下名川":{b200k:"村上1号-3",west:503060,south:138880,east:503590,north:139220},
"上田沢":{b200k:"村上1号-4",west:503060,south:138580,east:503590,north:138920},
"赤見堂岳":{b200k:"村上2号-1",west:503510,south:138280,east:504040,north:138620},
"大井沢":{b200k:"村上2号-2",west:503510,south:137980,east:504040,north:138320},
"大鳥":{b200k:"村上2号-3",west:503060,south:138280,east:503590,north:138620},
"大鳥池":{b200k:"村上2号-4",west:503060,south:137980,east:503590,north:138320},
"朝日岳":{b200k:"村上3号-1",west:503510,south:137680,east:504040,north:138020},
"羽前葉山":{b200k:"村上3号-2",west:503510,south:137380,east:504035,north:137720},
"相模山":{b200k:"村上3号-3",west:503060,south:137680,east:503590,north:138020},
"徳網":{b200k:"村上3号-4",west:503060,south:137380,east:503585,north:137720},
"羽前上郷":{b200k:"村上4号-1",west:503510,south:137080,east:504035,north:137420},
"手ノ子":{b200k:"村上4号-2",west:503510,south:136780,east:504035,north:137120},
"五味沢":{b200k:"村上4号-3",west:503060,south:137080,east:503585,north:137420},
"小国東部":{b200k:"村上4号-4",west:503060,south:136780,east:503585,north:137120},
"山五十川":{b200k:"村上5号-1",west:502610,south:138880,east:503140,north:139220},
"木野俣":{b200k:"村上5号-2",west:502610,south:138580,east:503140,north:138920},
"温海":{b200k:"村上5号-3",west:502160,south:138880,east:502690,north:139220},
"鼠ヶ関":{b200k:"村上5号-4",west:502160,south:138580,east:502690,north:138920},
"雷":{b200k:"村上6号-1",west:502610,south:138280,east:503140,north:138620},
"鳴海山":{b200k:"村上6号-2",west:502610,south:137980,east:503140,north:138320},
"勝木":{b200k:"村上6号-3",west:502160,south:138280,east:502690,north:138620},
"蒲萄":{b200k:"村上6号-4",west:502160,south:137980,east:502690,north:138320},
"円吾山":{b200k:"村上7号-1",west:502610,south:137680,east:503140,north:138020},
"三面":{b200k:"村上7号-2",west:502610,south:137380,east:503135,north:137720},
"塩野町":{b200k:"村上7号-3",west:502160,south:137680,east:502690,north:138020},
"越後門前":{b200k:"村上7号-4",west:502160,south:137380,east:502685,north:137720},
"舟渡":{b200k:"村上8号-1",west:502610,south:137080,east:503135,north:137420},
"小国":{b200k:"村上8号-2",west:502610,south:136780,east:503135,north:137120},
"越後下関":{b200k:"村上8号-3",west:502160,south:137080,east:502685,north:137420},
"安角":{b200k:"村上8号-4",west:502160,south:136780,east:502685,north:137120},
"越後寒川":{b200k:"村上10号-1",west:501710,south:138280,east:502240,north:138620},
"笹川":{b200k:"村上10号-2",west:501710,south:137980,east:502240,north:138320},
"柏尾":{b200k:"村上11号-1",west:501710,south:137680,east:502240,north:138020},
"村上":{b200k:"村上11号-2",west:501710,south:137380,east:502235,north:137720},
"坂町":{b200k:"村上12号-1",west:501670,south:137080,east:502195,north:137420},
"中条":{b200k:"村上12号-2",west:501710,south:136780,east:502235,north:137120},
"稲荷岡":{b200k:"村上12号-4",west:501215,south:136780,east:501740,north:137120},
"玉庭":{b200k:"新潟1号-1",west:503510,south:136480,east:504035,north:136820},
"入田沢":{b200k:"新潟1号-2",west:503510,south:136180,east:504035,north:136520},
"叶水":{b200k:"新潟1号-3",west:503060,south:136480,east:503585,north:136820},
"岩倉":{b200k:"新潟1号-4",west:503060,south:136180,east:503585,north:136520},
"飯森山":{b200k:"新潟2号-1",west:503510,south:135880,east:504035,north:136220},
"熱塩":{b200k:"新潟2号-2",west:503510,south:135580,east:504035,north:135920},
"川入":{b200k:"新潟2号-3",west:503060,south:135880,east:503585,north:136220},
"加納":{b200k:"新潟2号-4",west:503060,south:135580,east:503585,north:135920},
"喜多方東部":{b200k:"新潟3号-1",west:503510,south:135280,east:504035,north:135620},
"会津広田":{b200k:"新潟3号-2",west:503515,south:134980,east:504035,north:135320},
"喜多方西部":{b200k:"新潟3号-3",west:503060,south:135280,east:503585,north:135620},
"坂下":{b200k:"新潟3号-4",west:503065,south:134980,east:503585,north:135320},
"若松":{b200k:"新潟4号-1",west:503515,south:134680,east:504035,north:135020},
"上三寄":{b200k:"新潟4号-2",west:503515,south:134380,east:504035,north:134720},
"会津高田":{b200k:"新潟4号-3",west:503065,south:134680,east:503585,north:135020},
"東尾岐":{b200k:"新潟4号-4",west:503065,south:134380,east:503585,north:134720},
"長者原":{b200k:"新潟5号-1",west:502610,south:136480,east:503135,north:136820},
"飯豊山":{b200k:"新潟5号-2",west:502610,south:136180,east:503135,north:136520},
"えぶり差岳":{b200k:"新潟5号-3",west:502160,south:136480,east:502685,north:136820},
"二王子岳":{b200k:"新潟5号-4",west:502160,south:136180,east:502685,north:136520},
"大日岳":{b200k:"新潟6号-1",west:502610,south:135880,east:503135,north:136220},
"飯里":{b200k:"新潟6号-2",west:502610,south:135580,east:503135,north:135920},
"蒜場山":{b200k:"新潟6号-3",west:502160,south:135880,east:502685,north:136220},
"日出谷":{b200k:"新潟6号-4",west:502160,south:135580,east:502685,north:135920},
"野沢":{b200k:"新潟7号-1",west:502610,south:135280,east:503135,north:135620},
"柳津":{b200k:"新潟7号-2",west:502615,south:134980,east:503135,north:135320},
"徳沢":{b200k:"新潟7号-3",west:502160,south:135280,east:502685,north:135620},
"安座":{b200k:"新潟7号-4",west:502165,south:134980,east:502685,north:135320},
"宮下":{b200k:"新潟8号-1",west:502615,south:134680,east:503135,north:135020},
"博士山":{b200k:"新潟8号-2",west:502615,south:134380,east:503135,north:134720},
"沼沢沼":{b200k:"新潟8号-3",west:502165,south:134680,east:502685,north:135020},
"野尻":{b200k:"新潟8号-4",west:502165,south:134380,east:502685,north:134720},
"菅谷":{b200k:"新潟9号-1",west:501710,south:136480,east:502235,north:136820},
"上赤谷":{b200k:"新潟9号-2",west:501710,south:136180,east:502235,north:136520},
"新発田":{b200k:"新潟9号-3",west:501260,south:136480,east:501785,north:136820},
"天王":{b200k:"新潟9号-4",west:501260,south:136180,east:501785,north:136520},
"東赤谷":{b200k:"新潟10号-1",west:501710,south:135880,east:502235,north:136220},
"津川":{b200k:"新潟10号-2",west:501710,south:135580,east:502235,north:135920},
"出湯":{b200k:"新潟10号-3",west:501260,south:135880,east:501785,north:136220},
"馬下":{b200k:"新潟10号-4",west:501260,south:135580,east:501785,north:135920},
"越後豊川":{b200k:"新潟11号-1",west:501710,south:135280,east:502235,north:135620},
"御神楽岳":{b200k:"新潟11号-2",west:501715,south:134980,east:502235,north:135320},
"高石":{b200k:"新潟11号-3",west:501260,south:135280,east:501785,north:135620},
"室谷":{b200k:"新潟11号-4",west:501265,south:134980,east:501785,north:135320},
"貉ヶ森山":{b200k:"新潟12号-1",west:501715,south:134680,east:502235,north:135020},
"会津横田":{b200k:"新潟12号-2",west:501715,south:134380,east:502235,north:134720},
"駒形山":{b200k:"新潟12号-3",west:501265,south:134680,east:501785,north:135020},
"只見":{b200k:"新潟12号-4",west:501265,south:134380,east:501785,north:134720},
"松浜":{b200k:"新潟13号-1",west:500810,south:136480,east:501335,north:136820},
"水原":{b200k:"新潟13号-2",west:500810,south:136180,east:501335,north:136520},
"新潟北部":{b200k:"新潟13号-3",west:500360,south:136480,east:500885,north:136820},
"新潟南部":{b200k:"新潟13号-4",west:500360,south:136180,east:500885,north:136520},
"新津":{b200k:"新潟14号-1",west:500810,south:135880,east:501335,north:136220},
"村松":{b200k:"新潟14号-2",west:500810,south:135580,east:501335,north:135920},
"白根":{b200k:"新潟14号-3",west:500360,south:135880,east:500885,north:136220},
"矢代田":{b200k:"新潟14号-4",west:500360,south:135580,east:500885,north:135920},
"越後白山":{b200k:"新潟15号-1",west:500810,south:135280,east:501335,north:135620},
"粟ヶ岳":{b200k:"新潟15号-2",west:500815,south:134980,east:501335,north:135320},
"加茂":{b200k:"新潟15号-3",west:500360,south:135280,east:500885,north:135620},
"森町":{b200k:"新潟15号-4",west:500365,south:134980,east:500885,north:135320},
"光明山":{b200k:"新潟16号-1",west:500815,south:134680,east:501335,north:135020},
"守門岳":{b200k:"新潟16号-2",west:500815,south:134380,east:501335,north:134720},
"栃堀":{b200k:"新潟16号-3",west:500365,south:134680,east:500885,north:135020},
"穴沢":{b200k:"新潟16号-4",west:500365,south:134380,east:500885,north:134720},
"湯野上":{b200k:"日光1号-1",west:503515,south:134080,east:504035,north:134420},
"甲子山":{b200k:"日光1号-2",west:503515,south:133780,east:504035,north:134120},
"林中":{b200k:"日光1号-3",west:503065,south:134080,east:503585,north:134420},
"田島":{b200k:"日光1号-4",west:503065,south:133780,east:503585,north:134120},
"那須岳":{b200k:"日光2号-1",west:503515,south:133480,east:504035,north:133820},
"板室":{b200k:"日光2号-2",west:503515,south:133180,east:504035,north:133520},
"栗生沢":{b200k:"日光2号-3",west:503065,south:133480,east:503585,north:133820},
"日留賀岳":{b200k:"日光2号-4",west:503065,south:133180,east:503585,north:133520},
"関谷":{b200k:"日光3号-1",west:503515,south:132880,east:504035,north:133220},
"西那須野":{b200k:"日光3号-2",west:503515,south:132580,east:504035,north:132920},
"塩原":{b200k:"日光3号-3",west:503065,south:132880,east:503585,north:133220},
"高原山":{b200k:"日光3号-4",west:503065,south:132580,east:503585,north:132920},
"矢板":{b200k:"日光4号-1",west:503515,south:132280,east:504030,north:132620},
"氏家":{b200k:"日光4号-2",west:503515,south:131980,east:504030,north:132320},
"玉生":{b200k:"日光4号-3",west:503065,south:132280,east:503580,north:132620},
"下野大沢":{b200k:"日光4号-4",west:503065,south:131980,east:503580,north:132320},
"大芦":{b200k:"日光5号-1",west:502615,south:134080,east:503135,north:134420},
"針生":{b200k:"日光5号-2",west:502615,south:133780,east:503135,north:134120},
"和泉田":{b200k:"日光5号-3",west:502165,south:134080,east:502685,north:134420},
"会津山口":{b200k:"日光5号-4",west:502165,south:133780,east:502685,north:134120},
"糸沢":{b200k:"日光6号-1",west:502615,south:133480,east:503135,north:133820},
"荒海山":{b200k:"日光6号-2",west:502615,south:133180,east:503135,north:133520},
"松戸原":{b200k:"日光6号-3",west:502165,south:133480,east:502685,north:133820},
"湯ノ花":{b200k:"日光6号-4",west:502165,south:133180,east:502685,north:133520},
"五十里湖":{b200k:"日光7号-1",west:502615,south:132880,east:503135,north:133220},
"川治":{b200k:"日光7号-2",west:502615,south:132580,east:503135,north:132920},
"湯西川":{b200k:"日光7号-3",west:502165,south:132880,east:502685,north:133220},
"川俣湖":{b200k:"日光7号-4",west:502165,south:132580,east:502685,north:132920},
"鬼怒川温泉":{b200k:"日光8号-1",west:502615,south:132280,east:503130,north:132620},
"今市":{b200k:"日光8号-2",west:502615,south:131980,east:503130,north:132320},
"日光北部":{b200k:"日光8号-3",west:502165,south:132280,east:502680,north:132620},
"日光南部":{b200k:"日光8号-4",west:502165,south:131980,east:502680,north:132320},
"会津小林":{b200k:"日光9号-1",west:501715,south:134080,east:502235,north:134420},
"城郭朝日山":{b200k:"日光9号-2",west:501715,south:133780,east:502235,north:134120},
"田子倉湖":{b200k:"日光9号-3",west:501265,south:134080,east:501785,north:134420},
"会津朝日岳":{b200k:"日光9号-4",west:501265,south:133780,east:501785,north:134120},
"内川":{b200k:"日光10号-1",west:501715,south:133480,east:502235,north:133820},
"檜枝岐":{b200k:"日光10号-2",west:501715,south:133180,east:502235,north:133520},
"高幽山":{b200k:"日光10号-3",west:501265,south:133480,east:501785,north:133820},
"会津駒ヶ岳":{b200k:"日光10号-4",west:501265,south:133180,east:501785,north:133520},
"帝釈山":{b200k:"日光11号-1",west:501715,south:132880,east:502235,north:133220},
"川俣温泉":{b200k:"日光11号-2",west:501715,south:132580,east:502235,north:132920},
"燧ヶ岳":{b200k:"日光11号-3",west:501265,south:132880,east:501785,north:133220},
"三平峠":{b200k:"日光11号-4",west:501265,south:132580,east:501785,north:132920},
"男体山":{b200k:"日光12号-1",west:501715,south:132280,east:502230,north:132620},
"中禅寺湖":{b200k:"日光12号-2",west:501715,south:131980,east:502230,north:132320},
"丸沼":{b200k:"日光12号-3",west:501265,south:132280,east:501780,north:132620},
"皇海山":{b200k:"日光12号-4",west:501265,south:131980,east:501780,north:132320},
"毛猛山":{b200k:"日光13号-1",west:500815,south:134080,east:501335,north:134420},
"未丈ヶ岳":{b200k:"日光13号-2",west:500815,south:133780,east:501335,north:134120},
"須原":{b200k:"日光13号-3",west:500365,south:134080,east:500885,north:134420},
"大湯":{b200k:"日光13号-4",west:500365,south:133780,east:500885,north:134120},
"奥只見湖":{b200k:"日光14号-1",west:500815,south:133480,east:501335,north:133820},
"平ヶ岳":{b200k:"日光14号-2",west:500815,south:133180,east:501335,north:133520},
"八海山":{b200k:"日光14号-3",west:500365,south:133480,east:500885,north:133820},
"兎岳":{b200k:"日光14号-4",west:500365,south:133180,east:500885,north:133520},
"尾瀬ヶ原":{b200k:"日光15号-1",west:500815,south:132880,east:501335,north:133220},
"至仏山":{b200k:"日光15号-2",west:500815,south:132580,east:501335,north:132920},
"奥利根湖":{b200k:"日光15号-3",west:500365,south:132880,east:500885,north:133220},
"藤原":{b200k:"日光15号-4",west:500365,south:132580,east:500885,north:132920},
"鎌田":{b200k:"日光16号-1",west:500815,south:132280,east:501330,north:132620},
"追貝":{b200k:"日光16号-2",west:500815,south:131980,east:501330,north:132320},
"藤原湖":{b200k:"日光16号-3",west:500365,south:132280,east:500880,north:132620},
"後閑":{b200k:"日光16号-4",west:500365,south:131980,east:500880,north:132320},
"宝積寺":{b200k:"宇都宮1号-1",west:503515,south:131680,east:504030,north:132020},
"宇都宮東部":{b200k:"宇都宮1号-2",west:503515,south:131380,east:504030,north:131720},
"大谷":{b200k:"宇都宮1号-3",west:503065,south:131680,east:503580,north:132020},
"宇都宮西部":{b200k:"宇都宮1号-4",west:503065,south:131380,east:503580,north:131720},
"上三川":{b200k:"宇都宮2号-1",west:503515,south:131080,east:504030,north:131420},
"久下田":{b200k:"宇都宮2号-2",west:503515,south:130780,east:504030,north:131120},
"壬生":{b200k:"宇都宮2号-3",west:503065,south:131080,east:503580,north:131420},
"小金井":{b200k:"宇都宮2号-4",west:503065,south:130780,east:503580,north:131120},
"下館":{b200k:"宇都宮3号-1",west:503515,south:130480,east:504030,north:130820},
"下妻":{b200k:"宇都宮3号-2",west:503515,south:130180,east:504030,north:130520},
"小山":{b200k:"宇都宮3号-3",west:503065,south:130480,east:503580,north:130820},
"諸川":{b200k:"宇都宮3号-4",west:503065,south:130180,east:503580,north:130520},
"石下":{b200k:"宇都宮4号-1",west:503515,south:129880,east:504030,north:130220},
"水海道":{b200k:"宇都宮4号-2",west:503520,south:129580,east:504030,north:129920},
"下総境":{b200k:"宇都宮4号-3",west:503065,south:129880,east:503580,north:130220},
"宝珠花":{b200k:"宇都宮4号-4",west:503070,south:129580,east:503580,north:129920},
"文挾":{b200k:"宇都宮5号-1",west:502615,south:131680,east:503130,north:132020},
"鹿沼":{b200k:"宇都宮5号-2",west:502615,south:131380,east:503130,north:131720},
"古峰原":{b200k:"宇都宮5号-3",west:502165,south:131680,east:502680,north:132020},
"中粕尾":{b200k:"宇都宮5号-4",west:502165,south:131380,east:502680,north:131720},
"下野大柿":{b200k:"宇都宮6号-1",west:502615,south:131080,east:503130,north:131420},
"栃木":{b200k:"宇都宮6号-2",west:502615,south:130780,east:503130,north:131120},
"仙波":{b200k:"宇都宮6号-3",west:502165,south:131080,east:502680,north:131420},
"田沼":{b200k:"宇都宮6号-4",west:502165,south:130780,east:502680,north:131120},
"下野藤岡":{b200k:"宇都宮7号-1",west:502615,south:130480,east:503130,north:130820},
"古河":{b200k:"宇都宮7号-2",west:502615,south:130180,east:503130,north:130520},
"佐野":{b200k:"宇都宮7号-3",west:502165,south:130480,east:502680,north:130820},
"館林":{b200k:"宇都宮7号-4",west:502165,south:130180,east:502680,north:130520},
"栗橋":{b200k:"宇都宮8号-1",west:502615,south:129880,east:503130,north:130220},
"久喜":{b200k:"宇都宮8号-2",west:502620,south:129580,east:503130,north:129920},
"加須":{b200k:"宇都宮8号-3",west:502165,south:129880,east:502680,north:130220},
"鴻巣":{b200k:"宇都宮8号-4",west:502170,south:129580,east:502680,north:129920},
"足尾":{b200k:"宇都宮9号-1",west:501715,south:131680,east:502230,north:132020},
"沢入":{b200k:"宇都宮9号-2",west:501715,south:131380,east:502230,north:131720},
"袈裟丸山":{b200k:"宇都宮9号-3",west:501265,south:131680,east:501780,north:132020},
"上野花輪":{b200k:"宇都宮9号-4",west:501265,south:131380,east:501780,north:131720},
"番場":{b200k:"宇都宮10号-1",west:501715,south:131080,east:502230,north:131420},
"足利北部":{b200k:"宇都宮10号-2",west:501715,south:130780,east:502230,north:131120},
"大間々":{b200k:"宇都宮10号-3",west:501265,south:131080,east:501780,north:131420},
"桐生":{b200k:"宇都宮10号-4",west:501265,south:130780,east:501780,north:131120},
"足利南部":{b200k:"宇都宮11号-1",west:501715,south:130480,east:502230,north:130820},
"妻沼":{b200k:"宇都宮11号-2",west:501715,south:130180,east:502230,north:130520},
"上野境":{b200k:"宇都宮11号-3",west:501265,south:130480,east:501780,north:130820},
"深谷":{b200k:"宇都宮11号-4",west:501265,south:130180,east:501780,north:130520},
"熊谷":{b200k:"宇都宮12号-1",west:501715,south:129880,east:502230,north:130220},
"東松山":{b200k:"宇都宮12号-2",west:501720,south:129580,east:502230,north:129920},
"三ヶ尻":{b200k:"宇都宮12号-3",west:501265,south:129880,east:501780,north:130220},
"武蔵小川":{b200k:"宇都宮12号-4",west:501270,south:129580,east:501780,north:129920},
"高平":{b200k:"宇都宮13号-1",west:500815,south:131680,east:501330,north:132020},
"赤城山":{b200k:"宇都宮13号-2",west:500815,south:131380,east:501330,north:131720},
"沼田":{b200k:"宇都宮13号-3",west:500365,south:131680,east:500880,north:132020},
"鯉沢":{b200k:"宇都宮13号-4",west:500365,south:131380,east:500880,north:131720},
"鼻毛石":{b200k:"宇都宮14号-1",west:500815,south:131080,east:501330,north:131420},
"大胡":{b200k:"宇都宮14号-2",west:500815,south:130780,east:501330,north:131120},
"渋川":{b200k:"宇都宮14号-3",west:500365,south:131080,east:500880,north:131420},
"前橋":{b200k:"宇都宮14号-4",west:500365,south:130780,east:500880,north:131120},
"伊勢崎":{b200k:"宇都宮15号-1",west:500815,south:130480,east:501330,north:130820},
"本庄":{b200k:"宇都宮15号-2",west:500815,south:130180,east:501330,north:130520},
"高崎":{b200k:"宇都宮15号-3",west:500365,south:130480,east:500880,north:130820},
"藤岡":{b200k:"宇都宮15号-4",west:500365,south:130180,east:500880,north:130520},
"寄居":{b200k:"宇都宮16号-1",west:500815,south:129880,east:501330,north:130220},
"安戸":{b200k:"宇都宮16号-2",west:500820,south:129580,east:501330,north:129920},
"鬼石":{b200k:"宇都宮16号-3",west:500365,south:129880,east:500880,north:130220},
"皆野":{b200k:"宇都宮16号-4",west:500370,south:129580,east:500880,north:129920},
"守谷":{b200k:"東京1号-1",west:503520,south:129280,east:504030,north:129620},
"流山":{b200k:"東京1号-2",west:503520,south:128980,east:504030,north:129320},
"野田市":{b200k:"東京1号-3",west:503070,south:129280,east:503580,north:129620},
"越谷":{b200k:"東京1号-4",west:503070,south:128980,east:503580,north:129320},
"松戸":{b200k:"東京2号-1",west:503520,south:128680,east:504030,north:129020},
"船橋":{b200k:"東京2号-2",west:503520,south:128380,east:504030,north:128720},
"草加":{b200k:"東京2号-3",west:503070,south:128680,east:503580,north:129020},
"東京首部":{b200k:"東京2号-4",west:503070,south:128380,east:503580,north:128720},
"浦安":{b200k:"東京3号-1",west:503520,south:128080,east:504030,north:128420},
"東京南部":{b200k:"東京3号-3",west:503070,south:128080,east:503580,north:128420},
"東京国際空港":{b200k:"東京3号-4",west:503070,south:127780,east:503580,north:128120},
"奈良輪":{b200k:"東京4号-1",west:503520,south:127480,east:504030,north:127820},
"木更津":{b200k:"東京4号-2",west:503520,south:127180,east:504030,north:127520},
"東扇島":{b200k:"東京4号-3",west:503070,south:127480,east:503580,north:127820},
"大堀":{b200k:"東京4号-4",west:503070,south:127180,east:503580,north:127520},
"岩槻":{b200k:"東京5号-1",west:502620,south:129280,east:503130,north:129620},
"浦和":{b200k:"東京5号-2",west:502620,south:128980,east:503130,north:129320},
"上尾":{b200k:"東京5号-3",west:502170,south:129280,east:502680,north:129620},
"与野":{b200k:"東京5号-4",west:502170,south:128980,east:502680,north:129320},
"赤羽":{b200k:"東京6号-1",west:502620,south:128680,east:503130,north:129020},
"東京西部":{b200k:"東京6号-2",west:502620,south:128380,east:503130,north:128720},
"志木":{b200k:"東京6号-3",west:502170,south:128680,east:502680,north:129020},
"吉祥寺":{b200k:"東京6号-4",west:502170,south:128380,east:502680,north:128720},
"東京西南部":{b200k:"東京7号-1",west:502620,south:128080,east:503130,north:128420},
"川崎":{b200k:"東京7号-2",west:502620,south:127780,east:503130,north:128120},
"溝口":{b200k:"東京7号-3",west:502170,south:128080,east:502680,north:128420},
"荏田":{b200k:"東京7号-4",west:502170,south:127780,east:502680,north:128120},
"横浜東部":{b200k:"東京8号-1",west:502620,south:127480,east:503130,north:127820},
"本牧":{b200k:"東京8号-2",west:502620,south:127180,east:503130,north:127520},
"横浜西部":{b200k:"東京8号-3",west:502170,south:127480,east:502680,north:127820},
"戸塚":{b200k:"東京8号-4",west:502170,south:127180,east:502680,north:127520},
"川越北部":{b200k:"東京9号-1",west:501720,south:129280,east:502230,north:129620},
"川越南部":{b200k:"東京9号-2",west:501720,south:128980,east:502230,north:129320},
"越生":{b200k:"東京9号-3",west:501270,south:129280,east:501780,north:129620},
"飯能":{b200k:"東京9号-4",west:501270,south:128980,east:501780,north:129320},
"所沢":{b200k:"東京10号-1",west:501720,south:128680,east:502230,north:129020},
"立川":{b200k:"東京10号-2",west:501720,south:128380,east:502230,north:128720},
"青梅":{b200k:"東京10号-3",west:501270,south:128680,east:501780,north:129020},
"拝島":{b200k:"東京10号-4",west:501270,south:128380,east:501780,north:128720},
"武蔵府中":{b200k:"東京11号-1",west:501720,south:128080,east:502230,north:128420},
"原町田":{b200k:"東京11号-2",west:501720,south:127780,east:502230,north:128120},
"八王子":{b200k:"東京11号-3",west:501270,south:128080,east:501780,north:128420},
"上溝":{b200k:"東京11号-4",west:501270,south:127780,east:501780,north:128120},
"座間":{b200k:"東京12号-1",west:501720,south:127480,east:502230,north:127820},
"藤沢":{b200k:"東京12号-2",west:501720,south:127180,east:502230,north:127520},
"厚木":{b200k:"東京12号-3",west:501270,south:127480,east:501780,north:127820},
"伊勢原":{b200k:"東京12号-4",west:501270,south:127180,east:501780,north:127520},
"正丸峠":{b200k:"東京13号-1",west:500820,south:129280,east:501330,north:129620},
"原市場":{b200k:"東京13号-2",west:500820,south:128980,east:501330,north:129320},
"秩父":{b200k:"東京13号-3",west:500370,south:129280,east:500880,north:129620},
"武蔵日原":{b200k:"東京13号-4",west:500370,south:128980,east:500880,north:129320},
"武蔵御岳":{b200k:"東京14号-1",west:500820,south:128680,east:501330,north:129020},
"五日市":{b200k:"東京14号-2",west:500820,south:128380,east:501330,north:128720},
"奥多摩湖":{b200k:"東京14号-3",west:500370,south:128680,east:500880,north:129020},
"猪丸":{b200k:"東京14号-4",west:500370,south:128380,east:500880,north:128720},
"与瀬":{b200k:"東京15号-1",west:500820,south:128080,east:501330,north:128420},
"青野原":{b200k:"東京15号-2",west:500820,south:127780,east:501330,north:128120},
"上野原":{b200k:"東京15号-3",west:500370,south:128080,east:500880,north:128420},
"大室山":{b200k:"東京15号-4",west:500370,south:127780,east:500880,north:128120},
"大山":{b200k:"東京16号-1",west:500820,south:127480,east:501330,north:127820},
"秦野":{b200k:"東京16号-2",west:500820,south:127180,east:501330,north:127520},
"中川":{b200k:"東京16号-3",west:500370,south:127480,east:500880,north:127820},
"山北":{b200k:"東京16号-4",west:500370,south:127180,east:500880,north:127520},
"鹿野山":{b200k:"横須賀1号-1",west:503520,south:126880,east:504025,north:127220},
"鬼泪山":{b200k:"横須賀1号-2",west:503520,south:126580,east:504025,north:126920},
"富津":{b200k:"横須賀1号-3",west:503070,south:126880,east:503575,north:127220},
"上総湊":{b200k:"横須賀1号-4",west:503070,south:126580,east:503575,north:126920},
"金束":{b200k:"横須賀2号-1",west:503520,south:126280,east:504025,north:126620},
"安房古川":{b200k:"横須賀2号-2",west:503520,south:125980,east:504025,north:126320},
"保田":{b200k:"横須賀2号-3",west:503070,south:126280,east:503575,north:126620},
"那古":{b200k:"横須賀2号-4",west:503070,south:125980,east:503575,north:126320},
"千倉":{b200k:"横須賀3号-1",west:503520,south:125680,east:504025,north:126020},
"白浜":{b200k:"横須賀3号-2",west:503340,south:125380,east:503845,north:125720},
"館山":{b200k:"横須賀3号-3",west:503070,south:125680,east:503575,north:126020},
"横須賀":{b200k:"横須賀5号-1",west:502620,south:126880,east:503125,north:127220},
"浦賀":{b200k:"横須賀5号-2",west:502620,south:126580,east:503125,north:126920},
"鎌倉":{b200k:"横須賀5号-3",west:502170,south:126880,east:502675,north:127220},
"秋谷":{b200k:"横須賀5号-4",west:502170,south:126580,east:502675,north:126920},
"三浦三崎":{b200k:"横須賀6号-1",west:502470,south:126280,east:502975,north:126620},
"江の島":{b200k:"横須賀9号-1",west:501720,south:126880,east:502225,north:127220},
"平塚":{b200k:"横須賀9号-3",west:501270,south:126880,east:501775,north:127220},
"大島北部":{b200k:"横須賀12号-1",west:501600,south:125080,east:502105,north:125420},
"大島南部":{b200k:"横須賀12号-2",west:501600,south:124780,east:502105,north:125120},
"小田原北部":{b200k:"横須賀13号-1",west:500820,south:126880,east:501325,north:127220},
"小田原南部":{b200k:"横須賀13号-2",west:500820,south:126580,east:501325,north:126920},
"関本":{b200k:"横須賀13号-3",west:500370,south:126880,east:500875,north:127220},
"箱根":{b200k:"横須賀13号-4",west:500370,south:126580,east:500875,north:126920},
"真鶴岬":{b200k:"横須賀14号-1",west:500820,south:126280,east:501325,north:126620},
"熱海":{b200k:"横須賀14号-3",west:500370,south:126280,east:500875,north:126620},
"網代":{b200k:"横須賀14号-4",west:500370,south:125980,east:500875,north:126320},
"川奈":{b200k:"横須賀15号-1",west:500820,south:125530,east:501325,north:125870},
"伊東":{b200k:"横須賀15号-3",west:500370,south:125680,east:500875,north:126020},
"天城山":{b200k:"横須賀15号-4",west:500370,south:125380,east:500875,north:125720},
"稲取":{b200k:"横須賀16号-3",west:500370,south:125080,east:500875,north:125420},
"三宅島":{b200k:"三宅島8号-3",west:501995,south:122530,east:502495,north:122870},
"利島":{b200k:"三宅島9号-4",west:501065,south:124030,east:501570,north:124370},
"新島":{b200k:"三宅島10号-3",west:501065,south:123730,east:501565,north:124070},
"式根島":{b200k:"三宅島10号-4",west:501065,south:123430,east:501565,north:123770},
"神津島":{b200k:"三宅島15号-2",west:500625,south:123040,east:501125,north:123380},
"御蔵島":{b200k:"御蔵島1号-4",west:502265,south:121780,east:502765,north:122120},
"八丈島":{b200k:"八丈島2号-3",west:503075,south:119080,east:503570,north:119420},
"八丈島南部":{b200k:"八丈島2号-4",west:503075,south:118780,east:503570,north:119120},
"八丈小島":{b200k:"八丈島6号-1",west:502625,south:119080,east:503120,north:119420},
"鳥島":{b200k:"号-",west:504885,south:109480,east:505365,north:109820},
"兄島":{b200k:"小笠原諸島13号-1",west:511635,south:97600,east:512100,north:97940},
"父島":{b200k:"小笠原諸島13号-2",west:511695,south:97300,east:512160,north:97640},
"母島北部":{b200k:"小笠原諸島15号-2",west:511560,south:95830,east:512025,north:96170},
"母島南部":{b200k:"小笠原諸島16号-1",west:511635,south:95530,east:512100,north:95870},
"北硫黄島":{b200k:"号-",west:508500,south:91420,east:508960,north:91760},
"硫黄島":{b200k:"号-",west:508560,south:89020,east:509015,north:89360},
"南硫黄島":{b200k:"号-",west:508945,south:86980,east:509400,north:87320},
"媒島":{b200k:"号-",west:511635,south:99280,east:512100,north:99620},
"聟島":{b200k:"号-",west:511380,south:99580,east:511850,north:99920},
"水津":{b200k:"相川8号-4",west:498480,south:136780,east:499005,north:137120},
"鷲崎":{b200k:"相川11号-1",west:498210,south:137695,east:498740,north:138035},
"小田":{b200k:"相川11号-2",west:498110,south:137380,east:498635,north:137720},
"北田野浦":{b200k:"相川11号-4",west:497660,south:137380,east:498185,north:137720},
"両津北部":{b200k:"相川12号-1",west:498110,south:137080,east:498635,north:137420},
"両津":{b200k:"相川12号-2",west:498065,south:136780,east:498590,north:137120},
"金北山":{b200k:"相川12号-3",west:497650,south:137080,east:498175,north:137420},
"相川":{b200k:"相川12号-4",west:497580,south:136780,east:498105,north:137120},
"内野":{b200k:"長岡1号-2",west:499910,south:136180,east:500435,north:136520},
"巻":{b200k:"長岡2号-1",west:499910,south:135880,east:500435,north:136220},
"越後吉田":{b200k:"長岡2号-2",west:499910,south:135580,east:500435,north:135920},
"角田山":{b200k:"長岡2号-3",west:499460,south:135880,east:499985,north:136220},
"弥彦":{b200k:"長岡2号-4",west:499460,south:135580,east:499985,north:135920},
"三条":{b200k:"長岡3号-1",west:499910,south:135280,east:500435,north:135620},
"見附":{b200k:"長岡3号-2",west:499915,south:134980,east:500435,north:135320},
"寺泊":{b200k:"長岡3号-3",west:499430,south:135280,east:499955,north:135620},
"与板":{b200k:"長岡3号-4",west:499465,south:134980,east:499985,north:135320},
"栃尾":{b200k:"長岡4号-1",west:499915,south:134680,east:500435,north:135020},
"半蔵金":{b200k:"長岡4号-2",west:499915,south:134380,east:500435,north:134720},
"長岡":{b200k:"長岡4号-3",west:499465,south:134680,east:499985,north:135020},
"片貝":{b200k:"長岡4号-4",west:499465,south:134380,east:499985,north:134720},
"岩首":{b200k:"長岡5号-3",west:498480,south:136480,east:499005,north:136820},
"出雲崎":{b200k:"長岡7号-2",west:499015,south:134980,east:499535,north:135320},
"西山":{b200k:"長岡8号-1",west:499015,south:134680,east:499535,north:135020},
"塚野山":{b200k:"長岡8号-2",west:499015,south:134380,east:499535,north:134720},
"宮川":{b200k:"長岡8号-3",west:498565,south:134680,east:499085,north:135020},
"柏崎":{b200k:"長岡8号-4",west:498520,south:134380,east:499040,north:134720},
"畑野":{b200k:"長岡9号-1",west:498065,south:136480,east:498590,north:136820},
"赤泊":{b200k:"長岡9号-2",west:498110,south:136180,east:498635,north:136520},
"河原田":{b200k:"長岡9号-3",west:497580,south:136480,east:498105,north:136820},
"羽茂本郷":{b200k:"長岡9号-4",west:497660,south:136180,east:498185,north:136520},
"小木":{b200k:"長岡10号-3",west:497660,south:135880,east:498185,north:136220},
"小平尾":{b200k:"高田1号-1",west:499915,south:134080,east:500435,north:134420},
"小出":{b200k:"高田1号-2",west:499915,south:133780,east:500435,north:134120},
"小千谷":{b200k:"高田1号-3",west:499465,south:134080,east:499985,north:134420},
"岩沢":{b200k:"高田1号-4",west:499465,south:133780,east:499985,north:134120},
"五日町":{b200k:"高田2号-1",west:499915,south:133480,east:500435,north:133820},
"六日町":{b200k:"高田2号-2",west:499915,south:133180,east:500435,north:133520},
"十日町":{b200k:"高田2号-3",west:499465,south:133480,east:499985,north:133820},
"塩沢":{b200k:"高田2号-4",west:499465,south:133180,east:499985,north:133520},
"巻機山":{b200k:"高田3号-1",west:499915,south:132880,east:500435,north:133220},
"茂倉岳":{b200k:"高田3号-2",west:499915,south:132580,east:500435,north:132920},
"越後湯沢":{b200k:"高田3号-3",west:499465,south:132880,east:499985,north:133220},
"土樽":{b200k:"高田3号-4",west:499465,south:132580,east:499985,north:132920},
"水上":{b200k:"高田4号-1",west:499915,south:132280,east:500430,north:132620},
"猿ヶ京":{b200k:"高田4号-2",west:499915,south:131980,east:500430,north:132320},
"三国峠":{b200k:"高田4号-3",west:499465,south:132280,east:499980,north:132620},
"四万":{b200k:"高田4号-4",west:499465,south:131980,east:499980,north:132320},
"法坂":{b200k:"高田5号-1",west:499015,south:134080,east:499535,north:134420},
"岡野町":{b200k:"高田5号-2",west:499015,south:133780,east:499535,north:134120},
"越後野田":{b200k:"高田5号-3",west:498565,south:134080,east:499085,north:134420},
"石黒":{b200k:"高田5号-4",west:498565,south:133780,east:499085,north:134120},
"千手":{b200k:"高田6号-1",west:499015,south:133480,east:499535,north:133820},
"大割野":{b200k:"高田6号-2",west:499015,south:133180,east:499535,north:133520},
"松代":{b200k:"高田6号-3",west:498565,south:133480,east:499085,north:133820},
"松之山温泉":{b200k:"高田6号-4",west:498565,south:133180,east:499085,north:133520},
"赤沢":{b200k:"高田7号-1",west:499015,south:132880,east:499535,north:133220},
"苗場山":{b200k:"高田7号-2",west:499015,south:132580,east:499535,north:132920},
"信濃森":{b200k:"高田7号-3",west:498565,south:132880,east:499085,north:133220},
"鳥甲山":{b200k:"高田7号-4",west:498565,south:132580,east:499085,north:132920},
"佐武流山":{b200k:"高田8号-1",west:499015,south:132280,east:499530,north:132620},
"野反湖":{b200k:"高田8号-2",west:499015,south:131980,east:499530,north:132320},
"切明":{b200k:"高田8号-3",west:498565,south:132280,east:499080,north:132620},
"岩菅山":{b200k:"高田8号-4",west:498565,south:131980,east:499080,north:132320},
"柿崎":{b200k:"高田9号-1",west:498080,south:134080,east:498600,north:134420},
"原之町":{b200k:"高田9号-2",west:498115,south:133780,east:498635,north:134120},
"潟町":{b200k:"高田9号-4",west:497640,south:133780,east:498160,north:134120},
"安塚":{b200k:"高田10号-1",west:498115,south:133480,east:498635,north:133820},
"柳島":{b200k:"高田10号-2",west:498115,south:133180,east:498635,north:133520},
"高田東部":{b200k:"高田10号-3",west:497665,south:133480,east:498185,north:133820},
"新井":{b200k:"高田10号-4",west:497665,south:133180,east:498185,north:133520},
"野沢温泉":{b200k:"高田11号-1",west:498115,south:132880,east:498635,north:133220},
"往郷":{b200k:"高田11号-2",west:498115,south:132580,east:498635,north:132920},
"猿橋":{b200k:"高田11号-3",west:497665,south:132880,east:498185,north:133220},
"飯山":{b200k:"高田11号-4",west:497665,south:132580,east:498185,north:132920},
"夜間瀬":{b200k:"高田12号-1",west:498115,south:132280,east:498630,north:132620},
"中野東部":{b200k:"高田12号-2",west:498115,south:131980,east:498630,north:132320},
"替佐":{b200k:"高田12号-3",west:497665,south:132280,east:498180,north:132620},
"中野西部":{b200k:"高田12号-4",west:497665,south:131980,east:498180,north:132320},
"高田西部":{b200k:"高田14号-1",west:497215,south:133500,east:497735,north:133840},
"重倉山":{b200k:"高田14号-2",west:497215,south:133180,east:497735,north:133520},
"名立大町":{b200k:"高田14号-3",west:496720,south:133500,east:497240,north:133840},
"槇":{b200k:"高田14号-4",west:496765,south:133180,east:497285,north:133520},
"関山":{b200k:"高田15号-1",west:497215,south:132880,east:497735,north:133220},
"赤倉":{b200k:"高田15号-2",west:497215,south:132580,east:497735,north:132920},
"湯川内":{b200k:"高田15号-3",west:496765,south:132880,east:497285,north:133220},
"妙高山":{b200k:"高田15号-4",west:496765,south:132580,east:497285,north:132920},
"信濃柏原":{b200k:"高田16号-1",west:497215,south:132280,east:497730,north:132620},
"若槻":{b200k:"高田16号-2",west:497215,south:131980,east:497730,north:132320},
"高妻山":{b200k:"高田16号-3",west:496765,south:132280,east:497280,north:132620},
"戸隠":{b200k:"高田16号-4",west:496765,south:131980,east:497280,north:132320},
"上野中山":{b200k:"長野1号-1",west:499915,south:131680,east:500430,north:132020},
"金井":{b200k:"長野1号-2",west:499915,south:131380,east:500430,north:131720},
"中之条":{b200k:"長野1号-3",west:499465,south:131680,east:499980,north:132020},
"群馬原町":{b200k:"長野1号-4",west:499465,south:131380,east:499980,north:131720},
"伊香保":{b200k:"長野2号-1",west:499915,south:131080,east:500430,north:131420},
"下室田":{b200k:"長野2号-2",west:499915,south:130780,east:500430,north:131120},
"榛名湖":{b200k:"長野2号-3",west:499465,south:131080,east:499980,north:131420},
"三ノ倉":{b200k:"長野2号-4",west:499465,south:130780,east:499980,north:131120},
"富岡":{b200k:"長野3号-1",west:499915,south:130480,east:500430,north:130820},
"上野吉井":{b200k:"長野3号-2",west:499915,south:130180,east:500430,north:130520},
"松井田":{b200k:"長野3号-3",west:499465,south:130480,east:499980,north:130820},
"下仁田":{b200k:"長野3号-4",west:499465,south:130180,east:499980,north:130520},
"万場":{b200k:"長野4号-1",west:499915,south:129880,east:500430,north:130220},
"長又":{b200k:"長野4号-2",west:499920,south:129580,east:500430,north:129920},
"神ヶ原":{b200k:"長野4号-3",west:499465,south:129880,east:499980,north:130220},
"両神山":{b200k:"長野4号-4",west:499470,south:129580,east:499980,north:129920},
"小雨":{b200k:"長野5号-1",west:499015,south:131680,east:499530,north:132020},
"長野原":{b200k:"長野5号-2",west:499015,south:131380,east:499530,north:131720},
"上野草津":{b200k:"長野5号-3",west:498565,south:131680,east:499080,north:132020},
"大前":{b200k:"長野5号-4",west:498565,south:131380,east:499080,north:131720},
"浅間隠山":{b200k:"長野6号-1",west:499015,south:131080,east:499530,north:131420},
"軽井沢":{b200k:"長野6号-2",west:499015,south:130780,east:499530,north:131120},
"北軽井沢":{b200k:"長野6号-3",west:498565,south:131080,east:499080,north:131420},
"浅間山":{b200k:"長野6号-4",west:498565,south:130780,east:499080,north:131120},
"南軽井沢":{b200k:"長野7号-1",west:499015,south:130480,east:499530,north:130820},
"荒船山":{b200k:"長野7号-2",west:499015,south:130180,east:499530,north:130520},
"御代田":{b200k:"長野7号-3",west:498565,south:130480,east:499080,north:130820},
"信濃田口":{b200k:"長野7号-4",west:498565,south:130180,east:499080,north:130520},
"十石峠":{b200k:"長野8号-1",west:499015,south:129880,east:499530,north:130220},
"浜平":{b200k:"長野8号-2",west:499020,south:129580,east:499530,north:129920},
"海瀬":{b200k:"長野8号-3",west:498565,south:129880,east:499080,north:130220},
"信濃中島":{b200k:"長野8号-4",west:498570,south:129580,east:499080,north:129920},
"御飯岳":{b200k:"長野9号-1",west:498115,south:131680,east:498630,north:132020},
"四阿山":{b200k:"長野9号-2",west:498115,south:131380,east:498630,north:131720},
"須坂":{b200k:"長野9号-3",west:497665,south:131680,east:498180,north:132020},
"菅平":{b200k:"長野9号-4",west:497665,south:131380,east:498180,north:131720},
"嬬恋田代":{b200k:"長野10号-1",west:498115,south:131080,east:498630,north:131420},
"車坂峠":{b200k:"長野10号-2",west:498115,south:130780,east:498630,north:131120},
"真田":{b200k:"長野10号-3",west:497665,south:131080,east:498180,north:131420},
"上田":{b200k:"長野10号-4",west:497665,south:130780,east:498180,north:131120},
"小諸":{b200k:"長野11号-1",west:498115,south:130480,east:498630,north:130820},
"臼田":{b200k:"長野11号-2",west:498115,south:130180,east:498630,north:130520},
"丸子":{b200k:"長野11号-3",west:497665,south:130480,east:498180,north:130820},
"春日本郷":{b200k:"長野11号-4",west:497665,south:130180,east:498180,north:130520},
"高野町":{b200k:"長野12号-1",west:498115,south:129880,east:498630,north:130220},
"松原湖":{b200k:"長野12号-2",west:498120,south:129580,east:498630,north:129920},
"蓼科山":{b200k:"長野12号-3",west:497665,south:129880,east:498180,north:130220},
"蓼科":{b200k:"長野12号-4",west:497670,south:129580,east:498180,north:129920},
"長野":{b200k:"長野13号-1",west:497215,south:131680,east:497730,north:132020},
"信濃松代":{b200k:"長野13号-2",west:497215,south:131380,east:497730,north:131720},
"信濃中条":{b200k:"長野13号-3",west:496765,south:131680,east:497280,north:132020},
"稲荷山":{b200k:"長野13号-4",west:496765,south:131380,east:497280,north:131720},
"坂城":{b200k:"長野14号-1",west:497215,south:131080,east:497730,north:131420},
"別所温泉":{b200k:"長野14号-2",west:497215,south:130780,east:497730,north:131120},
"麻績":{b200k:"長野14号-3",west:496765,south:131080,east:497280,north:131420},
"信濃西条":{b200k:"長野14号-4",west:496765,south:130780,east:497280,north:131120},
"武石":{b200k:"長野15号-1",west:497215,south:130480,east:497730,north:130820},
"和田":{b200k:"長野15号-2",west:497215,south:130180,east:497730,north:130520},
"三才山":{b200k:"長野15号-3",west:496765,south:130480,east:497280,north:130820},
"山辺":{b200k:"長野15号-4",west:496765,south:130180,east:497280,north:130520},
"霧ヶ峰":{b200k:"長野16号-1",west:497215,south:129880,east:497730,north:130220},
"南大塩":{b200k:"長野16号-2",west:497220,south:129580,east:497730,north:129920},
"鉢伏山":{b200k:"長野16号-3",west:496765,south:129880,east:497280,north:130220},
"諏訪":{b200k:"長野16号-4",west:496770,south:129580,east:497280,north:129920},
"三峰":{b200k:"甲府1号-1",west:499920,south:129280,east:500430,north:129620},
"雲取山":{b200k:"甲府1号-2",west:499920,south:128980,east:500430,north:129320},
"中津峡":{b200k:"甲府1号-3",west:499470,south:129280,east:499980,north:129620},
"雁坂峠":{b200k:"甲府1号-4",west:499470,south:128980,east:499980,north:129320},
"丹波":{b200k:"甲府2号-1",west:499920,south:128680,east:500430,north:129020},
"七保":{b200k:"甲府2号-2",west:499920,south:128380,east:500430,north:128720},
"柳沢峠":{b200k:"甲府2号-3",west:499470,south:128680,east:499980,north:129020},
"大菩薩峠":{b200k:"甲府2号-4",west:499470,south:128380,east:499980,north:128720},
"大月":{b200k:"甲府3号-1",west:499920,south:128080,east:500430,north:128420},
"都留":{b200k:"甲府3号-2",west:499920,south:127780,east:500430,north:128120},
"笹子":{b200k:"甲府3号-3",west:499470,south:128080,east:499980,north:128420},
"河口湖東部":{b200k:"甲府3号-4",west:499470,south:127780,east:499980,north:128120},
"御正体山":{b200k:"甲府4号-1",west:499920,south:127480,east:500430,north:127820},
"駿河小山":{b200k:"甲府4号-2",west:499920,south:127180,east:500430,north:127520},
"富士吉田":{b200k:"甲府4号-3",west:499470,south:127480,east:499980,north:127820},
"須走":{b200k:"甲府4号-4",west:499470,south:127180,east:499980,north:127520},
"居倉":{b200k:"甲府5号-1",west:499020,south:129280,east:499530,north:129620},
"金峰山":{b200k:"甲府5号-2",west:499020,south:128980,east:499530,north:129320},
"御所平":{b200k:"甲府5号-3",west:498570,south:129280,east:499080,north:129620},
"瑞牆山":{b200k:"甲府5号-4",west:498570,south:128980,east:499080,north:129320},
"川浦":{b200k:"甲府6号-1",west:499020,south:128680,east:499530,north:129020},
"塩山":{b200k:"甲府6号-2",west:499020,south:128380,east:499530,north:128720},
"茅ヶ岳":{b200k:"甲府6号-3",west:498570,south:128680,east:499080,north:129020},
"甲府北部":{b200k:"甲府6号-4",west:498570,south:128380,east:499080,north:128720},
"石和":{b200k:"甲府7号-1",west:499020,south:128080,east:499530,north:128420},
"河口湖西部":{b200k:"甲府7号-2",west:499020,south:127780,east:499530,north:128120},
"甲府":{b200k:"甲府7号-3",west:498570,south:128080,east:499080,north:128420},
"市川大門":{b200k:"甲府7号-4",west:498570,south:127780,east:499080,north:128120},
"鳴沢":{b200k:"甲府8号-1",west:499020,south:127480,east:499530,north:127820},
"富士山":{b200k:"甲府8号-2",west:499020,south:127180,east:499530,north:127520},
"精進":{b200k:"甲府8号-3",west:498570,south:127480,east:499080,north:127820},
"人穴":{b200k:"甲府8号-4",west:498570,south:127180,east:499080,north:127520},
"八ヶ岳東部":{b200k:"甲府9号-1",west:498120,south:129280,east:498630,north:129620},
"谷戸":{b200k:"甲府9号-2",west:498120,south:128980,east:498630,north:129320},
"八ヶ岳西部":{b200k:"甲府9号-3",west:497670,south:129280,east:498180,north:129620},
"小淵沢":{b200k:"甲府9号-4",west:497670,south:128980,east:498180,north:129320},
"若神子":{b200k:"甲府10号-1",west:498120,south:128680,east:498630,north:129020},
"韮崎":{b200k:"甲府10号-2",west:498120,south:128380,east:498630,north:128720},
"長坂上条":{b200k:"甲府10号-3",west:497670,south:128680,east:498180,north:129020},
"鳳凰山":{b200k:"甲府10号-4",west:497670,south:128380,east:498180,north:128720},
"小笠原":{b200k:"甲府11号-1",west:498120,south:128080,east:498630,north:128420},
"鰍沢":{b200k:"甲府11号-2",west:498120,south:127780,east:498630,north:128120},
"夜叉神峠":{b200k:"甲府11号-3",west:497670,south:128080,east:498180,north:128420},
"奈良田":{b200k:"甲府11号-4",west:497670,south:127780,east:498180,north:128120},
"切石":{b200k:"甲府12号-1",west:498120,south:127480,east:498630,north:127820},
"身延":{b200k:"甲府12号-2",west:498120,south:127180,east:498630,north:127520},
"新倉":{b200k:"甲府12号-3",west:497670,south:127480,east:498180,north:127820},
"七面山":{b200k:"甲府12号-4",west:497670,south:127180,east:498180,north:127520},
"茅野":{b200k:"甲府13号-1",west:497220,south:129280,east:497730,north:129620},
"信濃富士見":{b200k:"甲府13号-2",west:497220,south:128980,east:497730,north:129320},
"辰野":{b200k:"甲府13号-3",west:496770,south:129280,east:497280,north:129620},
"高遠":{b200k:"甲府13号-4",west:496770,south:128980,east:497280,north:129320},
"甲斐駒ヶ岳":{b200k:"甲府14号-1",west:497220,south:128680,east:497730,north:129020},
"仙丈ヶ岳":{b200k:"甲府14号-2",west:497220,south:128380,east:497730,north:128720},
"信濃溝口":{b200k:"甲府14号-3",west:496770,south:128680,east:497280,north:129020},
"市野瀬":{b200k:"甲府14号-4",west:496770,south:128380,east:497280,north:128720},
"間ノ岳":{b200k:"甲府15号-1",west:497220,south:128080,east:497730,north:128420},
"塩見岳":{b200k:"甲府15号-2",west:497220,south:127780,east:497730,north:128120},
"鹿塩":{b200k:"甲府15号-3",west:496770,south:128080,east:497280,north:128420},
"信濃大河原":{b200k:"甲府15号-4",west:496770,south:127780,east:497280,north:128120},
"赤石岳":{b200k:"甲府16号-1",west:497220,south:127480,east:497730,north:127820},
"上河内岳":{b200k:"甲府16号-2",west:497220,south:127180,east:497730,north:127520},
"大沢岳":{b200k:"甲府16号-3",west:496770,south:127480,east:497280,north:127820},
"光岳":{b200k:"甲府16号-4",west:496770,south:127180,east:497280,north:127520},
"御殿場":{b200k:"静岡1号-1",west:499920,south:126880,east:500425,north:127220},
"裾野":{b200k:"静岡1号-2",west:499920,south:126580,east:500425,north:126920},
"印野":{b200k:"静岡1号-3",west:499470,south:126880,east:499975,north:127220},
"愛鷹山":{b200k:"静岡1号-4",west:499470,south:126580,east:499975,north:126920},
"三島":{b200k:"静岡2号-1",west:499920,south:126280,east:500425,north:126620},
"韮山":{b200k:"静岡2号-2",west:499920,south:125980,east:500425,north:126320},
"沼津":{b200k:"静岡2号-3",west:499470,south:126280,east:499975,north:126620},
"大瀬崎":{b200k:"静岡2号-4",west:499470,south:125980,east:499975,north:126320},
"修善寺":{b200k:"静岡3号-1",west:499920,south:125680,east:500425,north:126020},
"湯ヶ島":{b200k:"静岡3号-2",west:499920,south:125380,east:500425,north:125720},
"達磨山":{b200k:"静岡3号-3",west:499470,south:125680,east:499975,north:126020},
"土肥":{b200k:"静岡3号-4",west:499470,south:125380,east:499975,north:125720},
"湯ヶ野":{b200k:"静岡4号-1",west:499920,south:125080,east:500425,north:125420},
"下田":{b200k:"静岡4号-2",west:499935,south:124780,east:500440,north:125120},
"仁科":{b200k:"静岡4号-3",west:499450,south:125080,east:499955,north:125420},
"伊豆松崎":{b200k:"静岡4号-4",west:499450,south:124780,east:499955,north:125120},
"天母山":{b200k:"静岡5号-1",west:499020,south:126880,east:499525,north:127220},
"入山瀬":{b200k:"静岡5号-2",west:499020,south:126580,east:499525,north:126920},
"上井出":{b200k:"静岡5号-3",west:498570,south:126880,east:499075,north:127220},
"富士宮":{b200k:"静岡5号-4",west:498570,south:126580,east:499075,north:126920},
"吉原":{b200k:"静岡6号-1",west:499020,south:126280,east:499525,north:126620},
"蒲原":{b200k:"静岡6号-3",west:498570,south:126280,east:499075,north:126620},
"興津":{b200k:"静岡6号-4",west:498570,south:125980,east:499075,north:126320},
"南部":{b200k:"静岡9号-1",west:498120,south:126880,east:498625,north:127220},
"篠井山":{b200k:"静岡9号-2",west:498120,south:126580,east:498625,north:126920},
"梅ヶ島":{b200k:"静岡9号-3",west:497670,south:126880,east:498175,north:127220},
"湯の森":{b200k:"静岡9号-4",west:497670,south:126580,east:498175,north:126920},
"和田島":{b200k:"静岡10号-1",west:498120,south:126280,east:498625,north:126620},
"清水":{b200k:"静岡10号-2",west:498120,south:125980,east:498625,north:126320},
"駿河落合":{b200k:"静岡10号-3",west:497670,south:126280,east:498175,north:126620},
"牛妻":{b200k:"静岡10号-4",west:497670,south:125980,east:498175,north:126320},
"静岡東部":{b200k:"静岡11号-1",west:498135,south:125680,east:498640,north:126020},
"静岡西部":{b200k:"静岡11号-3",west:497670,south:125680,east:498175,north:126020},
"焼津":{b200k:"静岡11号-4",west:497670,south:125380,east:498175,north:125720},
"住吉":{b200k:"静岡12号-3",west:497670,south:125080,east:498175,north:125420},
"畑薙湖":{b200k:"静岡13号-1",west:497220,south:126880,east:497725,north:127220},
"井川":{b200k:"静岡13号-2",west:497220,south:126580,east:497725,north:126920},
"池口岳":{b200k:"静岡13号-3",west:496770,south:126880,east:497275,north:127220},
"寸又峡温泉":{b200k:"静岡13号-4",west:496770,south:126580,east:497275,north:126920},
"千頭":{b200k:"静岡14号-1",west:497220,south:126280,east:497725,north:126620},
"石上":{b200k:"静岡14号-2",west:497220,south:125980,east:497725,north:126320},
"蕎麦粒山":{b200k:"静岡14号-3",west:496770,south:126280,east:497275,north:126620},
"高郷":{b200k:"静岡14号-4",west:496770,south:125980,east:497275,north:126320},
"伊久美":{b200k:"静岡15号-1",west:497220,south:125680,east:497725,north:126020},
"向谷":{b200k:"静岡15号-2",west:497220,south:125380,east:497725,north:125720},
"家山":{b200k:"静岡15号-3",west:496770,south:125680,east:497275,north:126020},
"八高山":{b200k:"静岡15号-4",west:496770,south:125380,east:497275,north:125720},
"島田":{b200k:"静岡16号-1",west:497220,south:125080,east:497725,north:125420},
"相良":{b200k:"静岡16号-2",west:497235,south:124780,east:497740,north:125120},
"掛川":{b200k:"静岡16号-3",west:496770,south:125080,east:497275,north:125420},
"下平川":{b200k:"静岡16号-4",west:496770,south:124780,east:497275,north:125120},
"神子元島":{b200k:"御前崎1号-1",west:499920,south:124480,east:500425,north:124820},
"石廊崎":{b200k:"御前崎1号-3",west:499470,south:124480,east:499975,north:124820},
"御前崎":{b200k:"御前崎13号-1",west:497235,south:124480,east:497740,north:124820},
"千浜":{b200k:"御前崎13号-3",west:496770,south:124480,east:497275,north:124820},
"梶屋敷":{b200k:"富山2号-2",west:496315,south:133180,east:496835,north:133520},
"糸魚川":{b200k:"富山2号-4",west:495865,south:133180,east:496385,north:133520},
"越後大野":{b200k:"富山3号-1",west:496315,south:132880,east:496835,north:133220},
"雨飾山":{b200k:"富山3号-2",west:496315,south:132580,east:496835,north:132920},
"小滝":{b200k:"富山3号-3",west:495865,south:132880,east:496385,north:133220},
"越後平岩":{b200k:"富山3号-4",west:495865,south:132580,east:496385,north:132920},
"雨中":{b200k:"富山4号-1",west:496315,south:132280,east:496830,north:132620},
"塩島":{b200k:"富山4号-2",west:496315,south:131980,east:496830,north:132320},
"白馬岳":{b200k:"富山4号-3",west:495865,south:132280,east:496380,north:132620},
"白馬町":{b200k:"富山4号-4",west:495865,south:131980,east:496380,north:132320},
"親不知":{b200k:"富山7号-1",west:495415,south:132900,east:495935,north:133240},
"小川温泉":{b200k:"富山7号-2",west:495415,south:132580,east:495935,north:132920},
"泊":{b200k:"富山7号-3",west:494965,south:132880,east:495485,north:133220},
"舟見":{b200k:"富山7号-4",west:494965,south:132580,east:495485,north:132920},
"黒薙温泉":{b200k:"富山8号-1",west:495415,south:132280,east:495930,north:132620},
"欅平":{b200k:"富山8号-2",west:495415,south:131980,east:495930,north:132320},
"宇奈月":{b200k:"富山8号-3",west:494965,south:132280,east:495480,north:132620},
"毛勝山":{b200k:"富山8号-4",west:494965,south:131980,east:495480,north:132320},
"青木":{b200k:"富山11号-1",west:494515,south:132880,east:495035,north:133220},
"三日市":{b200k:"富山11号-2",west:494515,south:132580,east:495035,north:132920},
"魚津":{b200k:"富山12号-1",west:494515,south:132280,east:495030,north:132620},
"越中大浦":{b200k:"富山12号-2",west:494515,south:131980,east:495030,north:132320},
"滑川":{b200k:"富山12号-3",west:494065,south:132280,east:494580,north:132620},
"上市":{b200k:"富山12号-4",west:494065,south:131980,east:494580,north:132320},
"宇出津":{b200k:"富山13号-1",west:493620,south:134080,east:494140,north:134420},
"鵜川":{b200k:"富山13号-3",west:493165,south:134080,east:493685,north:134420},
"前波":{b200k:"富山13号-4",west:493165,south:133780,east:493685,north:134120},
"小口瀬戸":{b200k:"富山14号-3",west:493165,south:133480,east:493685,north:133820},
"庵":{b200k:"富山14号-4",west:493165,south:133180,east:493685,north:133520},
"虻ガ島":{b200k:"富山15号-3",west:493165,south:132880,east:493685,north:133220},
"宇波":{b200k:"富山15号-4",west:493165,south:132580,east:493685,north:132920},
"富山港":{b200k:"富山16号-1",west:493615,south:132280,east:494130,north:132620},
"富山":{b200k:"富山16号-2",west:493615,south:131980,east:494130,north:132320},
"伏木":{b200k:"富山16号-3",west:493165,south:132280,east:493680,north:132620},
"高岡":{b200k:"富山16号-4",west:493165,south:131980,east:493680,north:132320},
"高府":{b200k:"高山1号-1",west:496315,south:131680,east:496830,north:132020},
"日名":{b200k:"高山1号-2",west:496315,south:131380,east:496830,north:131720},
"神城":{b200k:"高山1号-3",west:495865,south:131680,east:496380,north:132020},
"大町":{b200k:"高山1号-4",west:495865,south:131380,east:496380,north:131720},
"信濃池田":{b200k:"高山2号-1",west:496315,south:131080,east:496830,north:131420},
"明科":{b200k:"高山2号-2",west:496315,south:130780,east:496830,north:131120},
"大町南部":{b200k:"高山2号-3",west:495865,south:131080,east:496380,north:131420},
"有明":{b200k:"高山2号-4",west:495865,south:130780,east:496380,north:131120},
"豊科":{b200k:"高山3号-1",west:496315,south:130480,east:496830,north:130820},
"松本":{b200k:"高山3号-2",west:496315,south:130180,east:496830,north:130520},
"信濃小倉":{b200k:"高山3号-3",west:495865,south:130480,east:496380,north:130820},
"波田":{b200k:"高山3号-4",west:495865,south:130180,east:496380,north:130520},
"塩尻":{b200k:"高山4号-1",west:496315,south:129880,east:496830,north:130220},
"北小野":{b200k:"高山4号-2",west:496320,south:129580,east:496830,north:129920},
"古見":{b200k:"高山4号-3",west:495865,south:129880,east:496380,north:130220},
"贄川":{b200k:"高山4号-4",west:495870,south:129580,east:496380,north:129920},
"十字峡":{b200k:"高山5号-1",west:495415,south:131680,east:495930,north:132020},
"黒部湖":{b200k:"高山5号-2",west:495415,south:131380,east:495930,north:131720},
"剱岳":{b200k:"高山5号-3",west:494965,south:131680,east:495480,north:132020},
"立山":{b200k:"高山5号-4",west:494965,south:131380,east:495480,north:131720},
"烏帽子岳":{b200k:"高山6号-1",west:495415,south:131080,east:495930,north:131420},
"槍ヶ岳":{b200k:"高山6号-2",west:495415,south:130780,east:495930,north:131120},
"薬師岳":{b200k:"高山6号-3",west:494965,south:131080,east:495480,north:131420},
"三俣蓮華岳":{b200k:"高山6号-4",west:494965,south:130780,east:495480,north:131120},
"穂高岳":{b200k:"高山7号-1",west:495415,south:130480,east:495930,north:130820},
"上高地":{b200k:"高山7号-2",west:495415,south:130180,east:495930,north:130520},
"笠ヶ岳":{b200k:"高山7号-3",west:494965,south:130480,east:495480,north:130820},
"焼岳":{b200k:"高山7号-4",west:494965,south:130180,east:495480,north:130520},
"梓湖":{b200k:"高山8号-1",west:495415,south:129880,east:495930,north:130220},
"寄合渡":{b200k:"高山8号-2",west:495420,south:129580,east:495930,north:129920},
"乗鞍岳":{b200k:"高山8号-3",west:494965,south:129880,east:495480,north:130220},
"野麦":{b200k:"高山8号-4",west:494970,south:129580,east:495480,north:129920},
"大岩":{b200k:"高山9号-1",west:494515,south:131680,east:495030,north:132020},
"小見":{b200k:"高山9号-2",west:494515,south:131380,east:495030,north:131720},
"五百石":{b200k:"高山9号-3",west:494065,south:131680,east:494580,north:132020},
"千垣":{b200k:"高山9号-4",west:494065,south:131380,east:494580,north:131720},
"有峰湖":{b200k:"高山10号-1",west:494515,south:131080,east:495030,north:131420},
"下之本":{b200k:"高山10号-2",west:494515,south:130780,east:495030,north:131120},
"東茂住":{b200k:"高山10号-3",west:494065,south:131080,east:494580,north:131420},
"鹿間":{b200k:"高山10号-4",west:494065,south:130780,east:494580,north:131120},
"長倉":{b200k:"高山11号-1",west:494515,south:130480,east:495030,north:130820},
"旗鉾":{b200k:"高山11号-2",west:494515,south:130180,east:495030,north:130520},
"船津":{b200k:"高山11号-3",west:494065,south:130480,east:494580,north:130820},
"町方":{b200k:"高山11号-4",west:494065,south:130180,east:494580,north:130520},
"飛騨青屋":{b200k:"高山12号-1",west:494515,south:129880,east:495030,north:130220},
"朝日貯水池":{b200k:"高山12号-2",west:494520,south:129580,east:495030,north:129920},
"高山":{b200k:"高山12号-3",west:494065,south:129880,east:494580,north:130220},
"久々野":{b200k:"高山12号-4",west:494070,south:129580,east:494580,north:129920},
"速星":{b200k:"高山13号-1",west:493615,south:131680,east:494130,north:132020},
"八尾":{b200k:"高山13号-2",west:493615,south:131380,east:494130,north:131720},
"宮森新":{b200k:"高山13号-3",west:493165,south:131680,east:493680,north:132020},
"山田温泉":{b200k:"高山13号-4",west:493165,south:131380,east:493680,north:131720},
"猪谷":{b200k:"高山14号-1",west:493615,south:131080,east:494130,north:131420},
"打保":{b200k:"高山14号-2",west:493615,south:130780,east:494130,north:131120},
"利賀":{b200k:"高山14号-3",west:493165,south:131080,east:493680,north:131420},
"白木峰":{b200k:"高山14号-4",west:493165,south:130780,east:493680,north:131120},
"林":{b200k:"高山15号-1",west:493615,south:130480,east:494130,north:130820},
"飛騨古川":{b200k:"高山15号-2",west:493615,south:130180,east:494130,north:130520},
"角川":{b200k:"高山15号-3",west:493165,south:130480,east:493680,north:130820},
"猪臥山":{b200k:"高山15号-4",west:493165,south:130180,east:493680,north:130520},
"三日町":{b200k:"高山16号-1",west:493615,south:129880,east:494130,north:130220},
"位山":{b200k:"高山16号-2",west:493620,south:129580,east:494130,north:129920},
"夏厩":{b200k:"高山16号-3",west:493165,south:129880,east:493680,north:130220},
"六厩":{b200k:"高山16号-4",west:493170,south:129580,east:493680,north:129920},
"宮木":{b200k:"飯田1号-1",west:496320,south:129280,east:496830,north:129620},
"伊那":{b200k:"飯田1号-2",west:496320,south:128980,east:496830,north:129320},
"薮原":{b200k:"飯田1号-3",west:495870,south:129280,east:496380,north:129620},
"宮ノ越":{b200k:"飯田1号-4",west:495870,south:128980,east:496380,north:129320},
"伊那宮田":{b200k:"飯田2号-1",west:496320,south:128680,east:496830,north:129020},
"赤穂":{b200k:"飯田2号-2",west:496320,south:128380,east:496830,north:128720},
"木曽駒ヶ岳":{b200k:"飯田2号-3",west:495870,south:128680,east:496380,north:129020},
"空木岳":{b200k:"飯田2号-4",west:495870,south:128380,east:496380,north:128720},
"伊那大島":{b200k:"飯田3号-1",west:496320,south:128080,east:496830,north:128420},
"下市田":{b200k:"飯田3号-2",west:496320,south:127780,east:496830,north:128120},
"安平路山":{b200k:"飯田3号-3",west:495870,south:128080,east:496380,north:128420},
"飯田":{b200k:"飯田3号-4",west:495870,south:127780,east:496380,north:128120},
"上久堅":{b200k:"飯田4号-1",west:496320,south:127480,east:496830,north:127820},
"上町":{b200k:"飯田4号-2",west:496320,south:127180,east:496830,north:127520},
"時又":{b200k:"飯田4号-3",west:495870,south:127480,east:496380,north:127820},
"山田河内":{b200k:"飯田4号-4",west:495870,south:127180,east:496380,north:127520},
"末川":{b200k:"飯田5号-1",west:495420,south:129280,east:495930,north:129620},
"木曽福島":{b200k:"飯田5号-2",west:495420,south:128980,east:495930,north:129320},
"木曽西野":{b200k:"飯田5号-3",west:494970,south:129280,east:495480,north:129620},
"御岳高原":{b200k:"飯田5号-4",west:494970,south:128980,east:495480,north:129320},
"上松":{b200k:"飯田6号-1",west:495420,south:128680,east:495930,north:129020},
"木曽須原":{b200k:"飯田6号-2",west:495420,south:128380,east:495930,north:128720},
"王滝":{b200k:"飯田6号-3",west:494970,south:128680,east:495480,north:129020},
"奥三界岳":{b200k:"飯田6号-4",west:494970,south:128380,east:495480,north:128720},
"南木曽岳":{b200k:"飯田7号-1",west:495420,south:128080,east:495930,north:128420},
"兀岳":{b200k:"飯田7号-2",west:495420,south:127780,east:495930,north:128120},
"三留野":{b200k:"飯田7号-3",west:494970,south:128080,east:495480,north:128420},
"妻籠":{b200k:"飯田7号-4",west:494970,south:127780,east:495480,north:128120},
"伊那駒場":{b200k:"飯田8号-1",west:495420,south:127480,east:495930,north:127820},
"浪合":{b200k:"飯田8号-2",west:495420,south:127180,east:495930,north:127520},
"中津川":{b200k:"飯田8号-3",west:494970,south:127480,east:495480,north:127820},
"美濃焼山":{b200k:"飯田8号-4",west:494970,south:127180,east:495480,north:127520},
"胡桃島":{b200k:"飯田9号-1",west:494520,south:129280,east:495030,north:129620},
"御嶽山":{b200k:"飯田9号-2",west:494520,south:128980,east:495030,north:129320},
"飛騨小坂":{b200k:"飯田9号-3",west:494070,south:129280,east:494580,north:129620},
"湯屋":{b200k:"飯田9号-4",west:494070,south:128980,east:494580,north:129320},
"滝越":{b200k:"飯田10号-1",west:494520,south:128680,east:495030,north:129020},
"加子母":{b200k:"飯田10号-2",west:494520,south:128380,east:495030,north:128720},
"宮地":{b200k:"飯田10号-3",west:494070,south:128680,east:494580,north:129020},
"小和知":{b200k:"飯田10号-4",west:494070,south:128380,east:494580,north:128720},
"付知":{b200k:"飯田11号-1",west:494520,south:128080,east:495030,north:128420},
"美濃福岡":{b200k:"飯田11号-2",west:494520,south:127780,east:495030,north:128120},
"神土":{b200k:"飯田11号-3",west:494070,south:128080,east:494580,north:128420},
"切井":{b200k:"飯田11号-4",west:494070,south:127780,east:494580,north:128120},
"恵那":{b200k:"飯田12号-1",west:494520,south:127480,east:495030,north:127820},
"岩村":{b200k:"飯田12号-2",west:494520,south:127180,east:495030,north:127520},
"武並":{b200k:"飯田12号-3",west:494070,south:127480,east:494580,north:127820},
"瑞浪":{b200k:"飯田12号-4",west:494070,south:127180,east:494580,north:127520},
"山之口":{b200k:"飯田13号-1",west:493620,south:129280,east:494130,north:129620},
"萩原":{b200k:"飯田13号-2",west:493620,south:128980,east:494130,north:129320},
"飛騨大原":{b200k:"飯田13号-3",west:493170,south:129280,east:493680,north:129620},
"二間手":{b200k:"飯田13号-4",west:493170,south:128980,east:493680,north:129320},
"下呂":{b200k:"飯田14号-1",west:493620,south:128680,east:494130,north:129020},
"焼石":{b200k:"飯田14号-2",west:493620,south:128380,east:494130,north:128720},
"郡上市島":{b200k:"飯田14号-3",west:493170,south:128680,east:493680,north:129020},
"沢":{b200k:"飯田14号-4",west:493170,south:128380,east:493680,north:128720},
"金山":{b200k:"飯田15号-1",west:493620,south:128080,east:494130,north:128420},
"河岐":{b200k:"飯田15号-2",west:493620,south:127780,east:494130,north:128120},
"美濃川合":{b200k:"飯田15号-3",west:493170,south:128080,east:493680,north:128420},
"上麻生":{b200k:"飯田15号-4",west:493170,south:127780,east:493680,north:128120},
"御嵩":{b200k:"飯田16号-1",west:493620,south:127480,east:494130,north:127820},
"土岐":{b200k:"飯田16号-2",west:493620,south:127180,east:494130,north:127520},
"美濃加茂":{b200k:"飯田16号-3",west:493170,south:127480,east:493680,north:127820},
"小泉":{b200k:"飯田16号-4",west:493170,south:127180,east:493680,north:127520},
"伊那和田":{b200k:"豊橋1号-1",west:496320,south:126880,east:496825,north:127220},
"水窪湖":{b200k:"豊橋1号-2",west:496320,south:126580,east:496825,north:126920},
"満島":{b200k:"豊橋1号-3",west:495870,south:126880,east:496375,north:127220},
"三河大谷":{b200k:"豊橋1号-4",west:495870,south:126580,east:496375,north:126920},
"門桁":{b200k:"豊橋2号-1",west:496320,south:126280,east:496825,north:126620},
"気田":{b200k:"豊橋2号-2",west:496320,south:125980,east:496825,north:126320},
"佐久間":{b200k:"豊橋2号-3",west:495870,south:126280,east:496375,north:126620},
"中部":{b200k:"豊橋2号-4",west:495870,south:125980,east:496375,north:126320},
"犬居":{b200k:"豊橋3号-1",west:496320,south:125680,east:496825,north:126020},
"森":{b200k:"豊橋3号-2",west:496320,south:125380,east:496825,north:125720},
"秋葉山":{b200k:"豊橋3号-3",west:495870,south:125680,east:496375,north:126020},
"二俣":{b200k:"豊橋3号-4",west:495870,south:125380,east:496375,north:125720},
"山梨":{b200k:"豊橋4号-1",west:496320,south:125080,east:496825,north:125420},
"袋井":{b200k:"豊橋4号-2",west:496320,south:124775,east:496825,north:125115},
"笠井":{b200k:"豊橋4号-3",west:495870,south:125080,east:496375,north:125420},
"磐田":{b200k:"豊橋4号-4",west:495870,south:124780,east:496375,north:125120},
"平谷":{b200k:"豊橋5号-1",west:495420,south:126880,east:495925,north:127220},
"茶臼山":{b200k:"豊橋5号-2",west:495420,south:126580,east:495925,north:126920},
"横道":{b200k:"豊橋5号-3",west:494970,south:126880,east:495475,north:127220},
"根羽":{b200k:"豊橋5号-4",west:494970,south:126580,east:495475,north:126920},
"見出":{b200k:"豊橋6号-1",west:495420,south:126280,east:495925,north:126620},
"三河本郷":{b200k:"豊橋6号-2",west:495420,south:125980,east:495925,north:126320},
"田口":{b200k:"豊橋6号-3",west:494970,south:126280,east:495475,north:126620},
"海老":{b200k:"豊橋6号-4",west:494970,south:125980,east:495475,north:126320},
"熊":{b200k:"豊橋7号-1",west:495420,south:125680,east:495925,north:126020},
"伊平":{b200k:"豊橋7号-2",west:495420,south:125380,east:495925,north:125720},
"三河大野":{b200k:"豊橋7号-3",west:494970,south:125680,east:495475,north:126020},
"三河富岡":{b200k:"豊橋7号-4",west:494970,south:125380,east:495475,north:125720},
"気賀":{b200k:"豊橋8号-1",west:495420,south:125080,east:495925,north:125420},
"浜松":{b200k:"豊橋8号-2",west:495420,south:124760,east:495925,north:125100},
"三ヶ日":{b200k:"豊橋8号-3",west:494970,south:125080,east:495475,north:125420},
"新居町":{b200k:"豊橋8号-4",west:494970,south:124780,east:495475,north:125120},
"明智":{b200k:"豊橋9号-1",west:494520,south:126880,east:495025,north:127220},
"川ヶ渡":{b200k:"豊橋9号-2",west:494520,south:126580,east:495025,north:126920},
"猿爪":{b200k:"豊橋9号-3",west:494070,south:126880,east:494575,north:127220},
"小渡":{b200k:"豊橋9号-4",west:494070,south:126580,east:494575,north:126920},
"寧比曽岳":{b200k:"豊橋10号-1",west:494520,south:126280,east:495025,north:126620},
"三河湖":{b200k:"豊橋10号-2",west:494520,south:125980,east:495025,north:126320},
"足助":{b200k:"豊橋10号-3",west:494070,south:126280,east:494575,north:126620},
"東大沼":{b200k:"豊橋10号-4",west:494070,south:125980,east:494575,north:126320},
"高里":{b200k:"豊橋11号-1",west:494520,south:125680,east:495025,north:126020},
"新城":{b200k:"豊橋11号-2",west:494520,south:125380,east:495025,north:125720},
"三河宮崎":{b200k:"豊橋11号-3",west:494070,south:125680,east:494575,north:126020},
"御油":{b200k:"豊橋11号-4",west:494070,south:125380,east:494575,north:125720},
"豊橋":{b200k:"豊橋12号-1",west:494520,south:125080,east:495025,north:125420},
"二川":{b200k:"豊橋12号-2",west:494520,south:124780,east:495025,north:125120},
"小坂井":{b200k:"豊橋12号-3",west:494070,south:125080,east:494575,north:125420},
"老津":{b200k:"豊橋12号-4",west:494070,south:124780,east:494575,north:125120},
"多治見":{b200k:"豊橋13号-1",west:493620,south:126880,east:494125,north:127220},
"猿投山":{b200k:"豊橋13号-2",west:493620,south:126580,east:494125,north:126920},
"高蔵寺":{b200k:"豊橋13号-3",west:493170,south:126880,east:493675,north:127220},
"瀬戸":{b200k:"豊橋13号-4",west:493170,south:126580,east:493675,north:126920},
"豊田北部":{b200k:"豊橋14号-1",west:493620,south:126280,east:494125,north:126620},
"豊田南部":{b200k:"豊橋14号-2",west:493620,south:125980,east:494125,north:126320},
"平針":{b200k:"豊橋14号-3",west:493170,south:126280,east:493675,north:126620},
"知立":{b200k:"豊橋14号-4",west:493170,south:125980,east:493675,north:126320},
"岡崎":{b200k:"豊橋15号-1",west:493620,south:125680,east:494125,north:126020},
"幸田":{b200k:"豊橋15号-2",west:493620,south:125380,east:494125,north:125720},
"安城":{b200k:"豊橋15号-3",west:493170,south:125680,east:493675,north:126020},
"西尾":{b200k:"豊橋15号-4",west:493170,south:125380,east:493675,north:125720},
"蒲郡":{b200k:"豊橋16号-1",west:493620,south:125080,east:494125,north:125420},
"仁崎":{b200k:"豊橋16号-2",west:493620,south:124780,east:494125,north:125120},
"吉田":{b200k:"豊橋16号-3",west:493170,south:125080,east:493675,north:125420},
"佐久島":{b200k:"豊橋16号-4",west:493110,south:124780,east:493615,north:125120},
"掛塚":{b200k:"伊良湖岬1号-3",west:495870,south:124480,east:496375,north:124820},
"田原":{b200k:"伊良湖岬9号-3",west:494085,south:124480,east:494590,north:124820},
"野田":{b200k:"伊良湖岬13号-1",west:493620,south:124480,east:494125,north:124820},
"伊良湖岬":{b200k:"伊良湖岬13号-3",west:493170,south:124460,east:493675,north:124800},
"珠洲岬":{b200k:"輪島3号-4",west:493965,south:134980,east:494485,north:135320},
"能登飯田":{b200k:"輪島4号-3",west:494065,south:134680,east:494585,north:135020},
"宝立山":{b200k:"輪島8号-1",west:493620,south:134700,east:494140,north:135040},
"松波":{b200k:"輪島8号-2",west:493620,south:134380,east:494140,north:134720},
"曽々木":{b200k:"輪島8号-3",west:493165,south:134680,east:493685,north:135020},
"柳田":{b200k:"輪島8号-4",west:493165,south:134380,east:493685,north:134720},
"舳倉島":{b200k:"輪島10号-1",west:492500,south:136000,east:493025,north:136340},
"輪島":{b200k:"輪島12号-2",west:492715,south:134395,east:493235,north:134735},
"皆月":{b200k:"輪島12号-4",west:492240,south:134380,east:492760,north:134720},
"長沢":{b200k:"七尾1号-1",west:492715,south:134080,east:493235,north:134420},
"穴水":{b200k:"七尾1号-2",west:492715,south:133780,east:493235,north:134120},
"門前":{b200k:"七尾1号-3",west:492265,south:134080,east:492785,north:134420},
"下唐川":{b200k:"七尾1号-4",west:492265,south:133780,east:492785,north:134120},
"和倉":{b200k:"七尾2号-1",west:492715,south:133480,east:493235,north:133820},
"七尾":{b200k:"七尾2号-2",west:492715,south:133180,east:493235,north:133520},
"中島":{b200k:"七尾2号-3",west:492265,south:133480,east:492785,north:133820},
"能登高浜":{b200k:"七尾2号-4",west:492265,south:133180,east:492785,north:133520},
"能登二宮":{b200k:"七尾3号-1",west:492715,south:132880,east:493235,north:133220},
"氷見":{b200k:"七尾3号-2",west:492715,south:132580,east:493235,north:132920},
"柴垣":{b200k:"七尾3号-3",west:492265,south:132880,east:492785,north:133220},
"羽咋":{b200k:"七尾3号-4",west:492265,south:132580,east:492785,north:132920},
"飯久保":{b200k:"七尾4号-1",west:492715,south:132280,east:493230,north:132620},
"戸出":{b200k:"七尾4号-2",west:492715,south:131980,east:493230,north:132320},
"宝達山":{b200k:"七尾4号-3",west:492265,south:132280,east:492780,north:132620},
"石動":{b200k:"七尾4号-4",west:492265,south:131980,east:492780,north:132320},
"能登黒島":{b200k:"七尾5号-1",west:491815,south:134080,east:492335,north:134420},
"剱地":{b200k:"七尾5号-2",west:491815,south:133780,east:492335,north:134120},
"富来":{b200k:"七尾6号-1",west:491815,south:133480,east:492335,north:133820},
"能登福浦":{b200k:"七尾6号-2",west:491815,south:133180,east:492335,north:133520},
"加賀高松":{b200k:"七尾8号-1",west:491815,south:132280,east:492330,north:132620},
"津幡":{b200k:"七尾8号-2",west:491815,south:131980,east:492330,north:132320},
"砺波":{b200k:"金沢1号-1",west:492715,south:131680,east:493230,north:132020},
"城端":{b200k:"金沢1号-2",west:492715,south:131380,east:493230,north:131720},
"倶利伽羅":{b200k:"金沢1号-3",west:492265,south:131680,east:492780,north:132020},
"福光":{b200k:"金沢1号-4",west:492265,south:131380,east:492780,north:131720},
"下梨":{b200k:"金沢2号-1",west:492715,south:131080,east:493230,north:131420},
"上梨":{b200k:"金沢2号-2",west:492715,south:130780,east:493230,north:131120},
"湯涌":{b200k:"金沢2号-3",west:492265,south:131080,east:492780,north:131420},
"西赤尾":{b200k:"金沢2号-4",west:492265,south:130780,east:492780,north:131120},
"鳩谷":{b200k:"金沢3号-1",west:492715,south:130480,east:493230,north:130820},
"平瀬":{b200k:"金沢3号-2",west:492715,south:130180,east:493230,north:130520},
"中宮温泉":{b200k:"金沢3号-3",west:492265,south:130480,east:492780,north:130820},
"新岩間温泉":{b200k:"金沢3号-4",west:492265,south:130180,east:492780,north:130520},
"御母衣":{b200k:"金沢4号-1",west:492715,south:129880,east:493230,north:130220},
"新渕":{b200k:"金沢4号-2",west:492720,south:129580,east:493230,north:129920},
"白山":{b200k:"金沢4号-3",west:492265,south:129880,east:492780,north:130220},
"二ノ峰":{b200k:"金沢4号-4",west:492270,south:129580,east:492780,north:129920},
"粟崎":{b200k:"金沢5号-1",west:491815,south:131680,east:492330,north:132020},
"金沢":{b200k:"金沢5号-2",west:491815,south:131380,east:492330,north:131720},
"金石":{b200k:"金沢5号-3",west:491365,south:131680,east:491880,north:132020},
"松任":{b200k:"金沢5号-4",west:491365,south:131380,east:491880,north:131720},
"鶴来":{b200k:"金沢6号-1",west:491815,south:131080,east:492330,north:131420},
"口直海":{b200k:"金沢6号-2",west:491815,south:130780,east:492330,north:131120},
"粟生":{b200k:"金沢6号-3",west:491365,south:131080,east:491880,north:131420},
"別宮":{b200k:"金沢6号-4",west:491365,south:130780,east:491880,north:131120},
"市原":{b200k:"金沢7号-1",west:491815,south:130480,east:492330,north:130820},
"白峰":{b200k:"金沢7号-2",west:491815,south:130180,east:492330,north:130520},
"尾小屋":{b200k:"金沢7号-3",west:491365,south:130480,east:491880,north:130820},
"加賀丸山":{b200k:"金沢7号-4",west:491365,south:130180,east:491880,north:130520},
"加賀市ノ瀬":{b200k:"金沢8号-1",west:491815,south:129880,east:492330,north:130220},
"願教寺山":{b200k:"金沢8号-2",west:491820,south:129580,east:492330,north:129920},
"北谷":{b200k:"金沢8号-3",west:491365,south:129880,east:491880,north:130220},
"越前勝山":{b200k:"金沢8号-4",west:491370,south:129580,east:491880,north:129920},
"美川":{b200k:"金沢10号-1",west:490915,south:131080,east:491430,north:131420},
"小松":{b200k:"金沢10号-2",west:490915,south:130780,east:491430,north:131120},
"片山津温泉":{b200k:"金沢10号-4",west:490465,south:130780,east:490980,north:131120},
"動橋":{b200k:"金沢11号-1",west:490915,south:130480,east:491430,north:130820},
"山中":{b200k:"金沢11号-2",west:490915,south:130180,east:491430,north:130520},
"大聖寺":{b200k:"金沢11号-3",west:490465,south:130480,east:490980,north:130820},
"越前中川":{b200k:"金沢11号-4",west:490465,south:130180,east:490980,north:130520},
"龍谷":{b200k:"金沢12号-1",west:490915,south:129880,east:491430,north:130220},
"山王":{b200k:"金沢12号-2",west:490920,south:129580,east:491430,north:129920},
"丸岡":{b200k:"金沢12号-3",west:490465,south:129880,east:490980,north:130220},
"永平寺":{b200k:"金沢12号-4",west:490470,south:129580,east:490980,north:129920},
"北潟":{b200k:"金沢15号-1",west:490015,south:130480,east:490530,north:130820},
"三国":{b200k:"金沢15号-2",west:489975,south:130180,east:490490,north:130520},
"越前森田":{b200k:"金沢16号-1",west:490015,south:129880,east:490530,north:130220},
"福井":{b200k:"金沢16号-2",west:490020,south:129580,east:490530,north:129920},
"鮎川":{b200k:"金沢16号-3",west:489565,south:129880,east:490080,north:130220},
"越前蒲生":{b200k:"金沢16号-4",west:489530,south:129580,east:490040,north:129920},
"大鷲":{b200k:"岐阜1号-1",west:492720,south:129280,east:493230,north:129620},
"那留":{b200k:"岐阜1号-2",west:492720,south:128980,east:493230,north:129320},
"石徹白":{b200k:"岐阜1号-3",west:492270,south:129280,east:492780,north:129620},
"白鳥":{b200k:"岐阜1号-4",west:492270,south:128980,east:492780,north:129320},
"徳永":{b200k:"岐阜2号-1",west:492720,south:128680,east:493230,north:129020},
"郡上八幡":{b200k:"岐阜2号-2",west:492720,south:128380,east:493230,north:128720},
"門原":{b200k:"岐阜2号-3",west:492270,south:128680,east:492780,north:129020},
"上ヶ瀬":{b200k:"岐阜2号-4",west:492270,south:128380,east:492780,north:128720},
"苅安":{b200k:"岐阜3号-1",west:492720,south:128080,east:493230,north:128420},
"美濃":{b200k:"岐阜3号-2",west:492720,south:127780,east:493230,north:128120},
"下洞戸":{b200k:"岐阜3号-3",west:492270,south:128080,east:492780,north:128420},
"岩佐":{b200k:"岐阜3号-4",west:492270,south:127780,east:492780,north:128120},
"美濃関":{b200k:"岐阜4号-1",west:492720,south:127480,east:493230,north:127820},
"犬山":{b200k:"岐阜4号-2",west:492720,south:127180,east:493230,north:127520},
"岐阜北部":{b200k:"岐阜4号-3",west:492270,south:127480,east:492780,north:127820},
"岐阜":{b200k:"岐阜4号-4",west:492270,south:127180,east:492780,north:127520},
"下山":{b200k:"岐阜5号-1",west:491820,south:129280,east:492330,north:129620},
"越前朝日":{b200k:"岐阜5号-2",west:491820,south:128980,east:492330,north:129320},
"荒島岳":{b200k:"岐阜5号-3",west:491370,south:129280,east:491880,north:129620},
"中竜鉱山":{b200k:"岐阜5号-4",west:491370,south:128980,east:491880,north:129320},
"平家岳":{b200k:"岐阜6号-1",west:491820,south:128680,east:492330,north:129020},
"下大須":{b200k:"岐阜6号-2",west:491820,south:128380,east:492330,north:128720},
"能郷白山":{b200k:"岐阜6号-3",west:491370,south:128680,east:491880,north:129020},
"能郷":{b200k:"岐阜6号-4",west:491370,south:128380,east:491880,north:128720},
"谷合":{b200k:"岐阜7号-1",west:491820,south:128080,east:492330,north:128420},
"美濃神海":{b200k:"岐阜7号-2",west:491820,south:127780,east:492330,north:128120},
"樽見":{b200k:"岐阜7号-3",west:491370,south:128080,east:491880,north:128420},
"谷汲":{b200k:"岐阜7号-4",west:491370,south:127780,east:491880,north:128120},
"北方":{b200k:"岐阜8号-1",west:491820,south:127480,east:492330,north:127820},
"岐阜西部":{b200k:"岐阜8号-2",west:491820,south:127180,east:492330,north:127520},
"池野":{b200k:"岐阜8号-3",west:491370,south:127480,east:491880,north:127820},
"大垣":{b200k:"岐阜8号-4",west:491370,south:127180,east:491880,north:127520},
"越前大野":{b200k:"岐阜9号-1",west:490920,south:129280,east:491430,north:129620},
"宝慶寺":{b200k:"岐阜9号-2",west:490920,south:128980,east:491430,north:129320},
"河和田":{b200k:"岐阜9号-3",west:490470,south:129280,east:490980,north:129620},
"稲荷":{b200k:"岐阜9号-4",west:490470,south:128980,east:490980,north:129320},
"冠山":{b200k:"岐阜10号-1",west:490920,south:128680,east:491430,north:129020},
"美濃徳山":{b200k:"岐阜10号-2",west:490920,south:128380,east:491430,north:128720},
"古木":{b200k:"岐阜10号-3",west:490470,south:128680,east:490980,north:129020},
"広野":{b200k:"岐阜10号-4",west:490470,south:128380,east:490980,north:128720},
"美濃広瀬":{b200k:"岐阜11号-1",west:490920,south:128080,east:491430,north:128420},
"横山":{b200k:"岐阜11号-2",west:490920,south:127780,east:491430,north:128120},
"美濃川上":{b200k:"岐阜11号-3",west:490470,south:128080,east:490980,north:128420},
"近江川合":{b200k:"岐阜11号-4",west:490470,south:127780,east:490980,north:128120},
"美束":{b200k:"岐阜12号-1",west:490920,south:127480,east:491430,north:127820},
"関ヶ原":{b200k:"岐阜12号-2",west:490920,south:127180,east:491430,north:127520},
"虎御前山":{b200k:"岐阜12号-3",west:490470,south:127480,east:490980,north:127820},
"長浜":{b200k:"岐阜12号-4",west:490470,south:127180,east:490980,north:127520},
"鯖江":{b200k:"岐阜13号-1",west:490020,south:129280,east:490530,north:129620},
"武生":{b200k:"岐阜13号-2",west:490020,south:128980,east:490530,north:129320},
"織田":{b200k:"岐阜13号-3",west:489570,south:129280,east:490080,north:129620},
"糠":{b200k:"岐阜13号-4",west:489560,south:128980,east:490070,north:129320},
"今庄":{b200k:"岐阜14号-1",west:490020,south:128680,east:490530,north:129020},
"板取":{b200k:"岐阜14号-2",west:490020,south:128380,east:490530,north:128720},
"河野":{b200k:"岐阜14号-3",west:489570,south:128680,east:490080,north:129020},
"杉津":{b200k:"岐阜14号-4",west:489570,south:128380,east:490080,north:128720},
"中河内":{b200k:"岐阜15号-1",west:490020,south:128080,east:490530,north:128420},
"木之本":{b200k:"岐阜15号-2",west:490020,south:127780,east:490530,north:128120},
"敦賀":{b200k:"岐阜15号-3",west:489570,south:128080,east:490080,north:128420},
"駄口":{b200k:"岐阜15号-4",west:489570,south:127780,east:490080,north:128120},
"竹生島":{b200k:"岐阜16号-1",west:490020,south:127480,east:490530,north:127820},
"南浜":{b200k:"岐阜16号-2",west:490020,south:127180,east:490530,north:127520},
"海津":{b200k:"岐阜16号-3",west:489570,south:127480,east:490080,north:127820},
"今津":{b200k:"岐阜16号-4",west:489570,south:127180,east:490080,north:127520},
"小牧":{b200k:"名古屋1号-1",west:492720,south:126880,east:493225,north:127220},
"名古屋北部":{b200k:"名古屋1号-2",west:492720,south:126580,east:493225,north:126920},
"一宮":{b200k:"名古屋1号-3",west:492270,south:126880,east:492775,north:127220},
"清洲":{b200k:"名古屋1号-4",west:492270,south:126580,east:492775,north:126920},
"名古屋南部":{b200k:"名古屋2号-1",west:492720,south:126280,east:493225,north:126620},
"鳴海":{b200k:"名古屋2号-2",west:492720,south:125980,east:493225,north:126320},
"蟹江":{b200k:"名古屋2号-3",west:492270,south:126280,east:492775,north:126620},
"飛島":{b200k:"名古屋2号-4",west:492270,south:125980,east:492775,north:126320},
"刈谷":{b200k:"名古屋3号-1",west:492720,south:125680,east:493225,north:126020},
"半田":{b200k:"名古屋3号-2",west:492720,south:125380,east:493225,north:125720},
"大野":{b200k:"名古屋3号-3",west:492270,south:125680,east:492775,north:126020},
"常滑":{b200k:"名古屋3号-4",west:492270,south:125380,east:492775,north:125720},
"河和":{b200k:"名古屋4号-1",west:492720,south:125080,east:493225,north:125420},
"師崎":{b200k:"名古屋4号-2",west:492650,south:124780,east:493155,north:125120},
"野間":{b200k:"名古屋4号-3",west:492270,south:125080,east:492775,north:125420},
"竹鼻":{b200k:"名古屋5号-1",west:491820,south:126880,east:492325,north:127220},
"津島":{b200k:"名古屋5号-2",west:491820,south:126580,east:492325,north:126920},
"養老":{b200k:"名古屋5号-3",west:491370,south:126880,east:491875,north:127220},
"駒野":{b200k:"名古屋5号-4",west:491370,south:126580,east:491875,north:126920},
"弥富":{b200k:"名古屋6号-1",west:491820,south:126280,east:492325,north:126620},
"桑名":{b200k:"名古屋6号-2",west:491820,south:125980,east:492325,north:126320},
"阿下喜":{b200k:"名古屋6号-3",west:491370,south:126280,east:491875,north:126620},
"菰野":{b200k:"名古屋6号-4",west:491370,south:125980,east:491875,north:126320},
"四日市東部":{b200k:"名古屋7号-1",west:491820,south:125680,east:492325,north:126020},
"南五味塚":{b200k:"名古屋7号-2",west:491820,south:125380,east:492325,north:125720},
"四日市西部":{b200k:"名古屋7号-3",west:491370,south:125680,east:491875,north:126020},
"鈴鹿":{b200k:"名古屋7号-4",west:491370,south:125380,east:491875,north:125720},
"白子":{b200k:"名古屋8号-3",west:491370,south:125080,east:491875,north:125420},
"津東部":{b200k:"名古屋8号-4",west:491370,south:124780,east:491875,north:125120},
"霊仙山":{b200k:"名古屋9号-1",west:490920,south:126880,east:491425,north:127220},
"篠立":{b200k:"名古屋9号-2",west:490920,south:126580,east:491425,north:126920},
"彦根東部":{b200k:"名古屋9号-3",west:490470,south:126880,east:490975,north:127220},
"高宮":{b200k:"名古屋9号-4",west:490470,south:126580,east:490975,north:126920},
"竜ヶ岳":{b200k:"名古屋10号-1",west:490920,south:126280,east:491425,north:126620},
"御在所山":{b200k:"名古屋10号-2",west:490920,south:125980,east:491425,north:126320},
"百済寺":{b200k:"名古屋10号-3",west:490470,south:126280,east:490975,north:126620},
"日野東部":{b200k:"名古屋10号-4",west:490470,south:125980,east:490975,north:126320},
"伊船":{b200k:"名古屋11号-1",west:490920,south:125680,east:491425,north:126020},
"亀山":{b200k:"名古屋11号-2",west:490920,south:125380,east:491425,north:125720},
"土山":{b200k:"名古屋11号-3",west:490470,south:125680,east:490975,north:126020},
"鈴鹿峠":{b200k:"名古屋11号-4",west:490470,south:125380,east:490975,north:125720},
"椋本":{b200k:"名古屋12号-1",west:490920,south:125080,east:491425,north:125420},
"津西部":{b200k:"名古屋12号-2",west:490920,south:124780,east:491425,north:125120},
"平松":{b200k:"名古屋12号-3",west:490470,south:125080,east:490975,north:125420},
"佐田":{b200k:"名古屋12号-4",west:490470,south:124780,east:490975,north:125120},
"彦根西部":{b200k:"名古屋13号-1",west:490020,south:126880,east:490525,north:127220},
"能登川":{b200k:"名古屋13号-2",west:490020,south:126580,east:490525,north:126920},
"勝野":{b200k:"名古屋13号-3",west:489570,south:126880,east:490075,north:127220},
"沖島":{b200k:"名古屋13号-4",west:489570,south:126580,east:490075,north:126920},
"八日市":{b200k:"名古屋14号-1",west:490020,south:126280,east:490525,north:126620},
"日野西部":{b200k:"名古屋14号-2",west:490020,south:125980,east:490525,north:126320},
"近江八幡":{b200k:"名古屋14号-3",west:489570,south:126280,east:490075,north:126620},
"野洲":{b200k:"名古屋14号-4",west:489570,south:125980,east:490075,north:126320},
"水口":{b200k:"名古屋15号-1",west:490020,south:125680,east:490525,north:126020},
"甲賀":{b200k:"名古屋15号-2",west:490020,south:125380,east:490525,north:125720},
"三雲":{b200k:"名古屋15号-3",west:489570,south:125680,east:490075,north:126020},
"信楽":{b200k:"名古屋15号-4",west:489570,south:125380,east:490075,north:125720},
"上野":{b200k:"名古屋16号-1",west:490020,south:125080,east:490525,north:125420},
"伊勢路":{b200k:"名古屋16号-2",west:490020,south:124780,east:490525,north:125120},
"島ヶ原":{b200k:"名古屋16号-3",west:489570,south:125080,east:490075,north:125420},
"月ヶ瀬":{b200k:"名古屋16号-4",west:489570,south:124780,east:490075,north:125120},
"答志":{b200k:"伊勢1号-2",west:492720,south:124180,east:493225,north:124520},
"二見":{b200k:"伊勢1号-4",west:492270,south:124180,east:492775,north:124520},
"浦村":{b200k:"伊勢2号-1",west:492725,south:123880,east:493225,north:124220},
"安乗":{b200k:"伊勢2号-2",west:492725,south:123580,east:493225,north:123920},
"鳥羽":{b200k:"伊勢2号-3",west:492275,south:123880,east:492775,north:124220},
"磯部":{b200k:"伊勢2号-4",west:492275,south:123580,east:492775,north:123920},
"波切":{b200k:"伊勢3号-1",west:492725,south:123280,east:493225,north:123620},
"浜島":{b200k:"伊勢3号-3",west:492275,south:123280,east:492775,north:123620},
"片田":{b200k:"伊勢3号-4",west:492275,south:122980,east:492775,north:123320},
"明野":{b200k:"伊勢5号-2",west:491820,south:124180,east:492325,north:124520},
"松阪港":{b200k:"伊勢5号-3",west:491385,south:124480,east:491890,north:124820},
"松阪":{b200k:"伊勢5号-4",west:491370,south:124180,east:491875,north:124520},
"伊勢":{b200k:"伊勢6号-1",west:491825,south:123880,east:492325,north:124220},
"五ヶ所浦":{b200k:"伊勢6号-2",west:491825,south:123580,east:492325,north:123920},
"国束山":{b200k:"伊勢6号-3",west:491375,south:123880,east:491875,north:124220},
"脇出":{b200k:"伊勢6号-4",west:491375,south:123580,east:491875,north:123920},
"相賀浦":{b200k:"伊勢7号-1",west:491825,south:123280,east:492325,north:123620},
//"贄浦":{b200k:"伊勢7号-3",west:491375,south:123280,east:491875,north:123620}, 140630変更
"贄浦":{b200k:"伊勢7号-3",west:491375,south:123250,east:491875,north:123590},
"大仰":{b200k:"伊勢9号-1",west:490920,south:124480,east:491425,north:124820},
"大河内":{b200k:"伊勢9号-2",west:490920,south:124180,east:491425,north:124520},
"二本木":{b200k:"伊勢9号-3",west:490470,south:124480,east:490975,north:124820},
"伊勢奥津":{b200k:"伊勢9号-4",west:490470,south:124180,east:490975,north:124520},
"横野":{b200k:"伊勢10号-1",west:490925,south:123880,east:491425,north:124220},
"伊勢佐原":{b200k:"伊勢10号-2",west:490925,south:123580,east:491425,north:123920},
"宮前":{b200k:"伊勢10号-3",west:490475,south:123880,east:490975,north:124220},
"江馬":{b200k:"伊勢10号-4",west:490475,south:123580,east:490975,north:123920},
"古和浦":{b200k:"伊勢11号-1",west:490925,south:123280,east:491425,north:123620},
//"錦":{b200k:"伊勢11号-2",west:490935,south:122980,east:491435,north:123320}, 140630変更
"錦":{b200k:"伊勢11号-2",west:490950,south:122980,east:491450,north:123320},
"間弓":{b200k:"伊勢11号-3",west:490475,south:123280,east:490975,north:123620},
"長島":{b200k:"伊勢11号-4",west:490475,south:122980,east:490975,north:123320},
"島勝浦":{b200k:"伊勢12号-3",west:490475,south:122680,east:490975,north:123020},
"九鬼":{b200k:"伊勢12号-4",west:490475,south:122380,east:490975,north:122720},
"阿保":{b200k:"伊勢13号-1",west:490020,south:124480,east:490525,north:124820},
"倶留尊山":{b200k:"伊勢13号-2",west:490020,south:124180,east:490525,north:124520},
"名張":{b200k:"伊勢13号-3",west:489570,south:124480,east:490075,north:124820},
"大和大野":{b200k:"伊勢13号-4",west:489570,south:124180,east:490075,north:124520},
"菅野":{b200k:"伊勢14号-1",west:490025,south:123880,east:490525,north:124220},
"七日市":{b200k:"伊勢14号-2",west:490025,south:123580,east:490525,north:123920},
"高見山":{b200k:"伊勢14号-3",west:489575,south:123880,east:490075,north:124220},
"大豆生":{b200k:"伊勢14号-4",west:489575,south:123580,east:490075,north:123920},
"宮川貯水池":{b200k:"伊勢15号-1",west:490025,south:123280,east:490525,north:123620},
"大杉峡谷":{b200k:"伊勢15号-2",west:490025,south:122980,east:490525,north:123320},
"大和柏木":{b200k:"伊勢15号-3",west:489575,south:123280,east:490075,north:123620},
"大台ヶ原山":{b200k:"伊勢15号-4",west:489575,south:122980,east:490075,north:123320},
"引本浦":{b200k:"伊勢16号-1",west:490025,south:122680,east:490525,north:123020},
"尾鷲":{b200k:"伊勢16号-2",west:490025,south:122380,east:490525,north:122720},
"河合":{b200k:"伊勢16号-3",west:489575,south:122680,east:490075,north:123020},
"高代山":{b200k:"伊勢16号-4",west:489575,south:122380,east:490075,north:122720},
"賀田":{b200k:"木本13号-1",west:490035,south:122080,east:490535,north:122420},
"磯崎":{b200k:"木本13号-2",west:490025,south:121780,east:490525,north:122120},
"七色貯水池":{b200k:"木本13号-3",west:489575,south:122080,east:490075,north:122420},
"木本":{b200k:"木本13号-4",west:489575,south:121780,east:490075,north:122120},
"阿田和":{b200k:"木本14号-3",west:489575,south:121480,east:490075,north:121820},
"鵜殿":{b200k:"木本14号-4",west:489575,south:121180,east:490075,north:121520},
"梅浦":{b200k:"宮津1号-1",west:489120,south:129280,east:489630,north:129620},
"竹波":{b200k:"宮津2号-2",west:489120,south:128380,east:489630,north:128720},
"早瀬":{b200k:"宮津3号-1",west:489120,south:128080,east:489630,north:128420},
"三方":{b200k:"宮津3号-2",west:489120,south:127780,east:489630,north:128120},
"常神":{b200k:"宮津3号-3",west:488670,south:128080,east:489180,north:128420},
"西津":{b200k:"宮津3号-4",west:488670,south:127780,east:489180,north:128120},
"熊川":{b200k:"宮津4号-1",west:489120,south:127480,east:489630,north:127820},
"饗庭野":{b200k:"宮津4号-2",west:489120,south:127180,east:489630,north:127520},
"遠敷":{b200k:"宮津4号-3",west:488670,south:127480,east:489180,north:127820},
"古屋":{b200k:"宮津4号-4",west:488670,south:127180,east:489180,north:127520},
"鋸崎":{b200k:"宮津7号-2",west:488220,south:127780,east:488730,north:128120},
"難波江":{b200k:"宮津7号-4",west:487770,south:127780,east:488280,north:128120},
"小浜":{b200k:"宮津8号-1",west:488220,south:127480,east:488730,north:127820},
"久坂":{b200k:"宮津8号-2",west:488220,south:127180,east:488730,north:127520},
"高浜":{b200k:"宮津8号-3",west:487770,south:127480,east:488280,north:127820},
"口坂本":{b200k:"宮津8号-4",west:487770,south:127180,east:488280,north:127520},
"丹後平田":{b200k:"宮津10号-4",west:486870,south:128380,east:487380,north:128720},
"成生岬":{b200k:"宮津11号-1",west:487320,south:128100,east:487830,north:128440},
"青葉山":{b200k:"宮津11号-2",west:487320,south:127780,east:487830,north:128120},
"丹後由良":{b200k:"宮津11号-4",west:486870,south:127780,east:487380,north:128120},
"東舞鶴":{b200k:"宮津12号-1",west:487320,south:127480,east:487830,north:127820},
"丹波大町":{b200k:"宮津12号-2",west:487320,south:127180,east:487830,north:127520},
"西舞鶴":{b200k:"宮津12号-3",west:486870,south:127480,east:487380,north:127820},
"梅迫":{b200k:"宮津12号-4",west:486870,south:127180,east:487380,north:127520},
"丹後中浜":{b200k:"宮津14号-1",west:486420,south:128680,east:486930,north:129020},
"丹後平":{b200k:"宮津14号-2",west:486420,south:128380,east:486930,north:128720},
"網野":{b200k:"宮津14号-4",west:485970,south:128380,east:486480,north:128720},
"日置":{b200k:"宮津15号-1",west:486435,south:128080,east:486945,north:128420},
"宮津":{b200k:"宮津15号-2",west:486420,south:127780,east:486930,north:128120},
"峰山":{b200k:"宮津15号-3",west:485970,south:128080,east:486480,north:128420},
"四辻":{b200k:"宮津15号-4",west:485970,south:127780,east:486480,north:128120},
"内宮":{b200k:"宮津16号-1",west:486420,south:127480,east:486930,north:127820},
"河守":{b200k:"宮津16号-2",west:486420,south:127180,east:486930,north:127520},
"大江山":{b200k:"宮津16号-3",west:485970,south:127480,east:486480,north:127820},
"三岳山":{b200k:"宮津16号-4",west:485970,south:127180,east:486480,north:127520},
"北小松":{b200k:"京都及大阪1号-1",west:489120,south:126880,east:489625,north:127220},
"比良山":{b200k:"京都及大阪1号-2",west:489120,south:126580,east:489625,north:126920},
"久多":{b200k:"京都及大阪1号-3",west:488670,south:126880,east:489175,north:127220},
"花脊":{b200k:"京都及大阪1号-4",west:488670,south:126580,east:489175,north:126920},
"堅田":{b200k:"京都及大阪2号-1",west:489120,south:126280,east:489625,north:126620},
"草津":{b200k:"京都及大阪2号-2",west:489120,south:125980,east:489625,north:126320},
"大原":{b200k:"京都及大阪2号-3",west:488670,south:126280,east:489175,north:126620},
"京都東北部":{b200k:"京都及大阪2号-4",west:488670,south:125980,east:489175,north:126320},
"瀬田":{b200k:"京都及大阪3号-1",west:489120,south:125680,east:489625,north:126020},
"朝宮":{b200k:"京都及大阪3号-2",west:489120,south:125380,east:489625,north:125720},
"京都東南部":{b200k:"京都及大阪3号-3",west:488670,south:125680,east:489175,north:126020},
"宇治":{b200k:"京都及大阪3号-4",west:488670,south:125380,east:489175,north:125720},
"笠置山":{b200k:"京都及大阪4号-1",west:489120,south:125080,east:489625,north:125420},
"柳生":{b200k:"京都及大阪4号-2",west:489120,south:124780,east:489625,north:125120},
"田辺":{b200k:"京都及大阪4号-3",west:488670,south:125080,east:489175,north:125420},
"奈良":{b200k:"京都及大阪4号-4",west:488670,south:124780,east:489175,north:125120},
"中":{b200k:"京都及大阪5号-1",west:488220,south:126880,east:488725,north:127220},
"上弓削":{b200k:"京都及大阪5号-2",west:488220,south:126580,east:488725,north:126920},
"島":{b200k:"京都及大阪5号-3",west:487770,south:126880,east:488275,north:127220},
"四ッ谷":{b200k:"京都及大阪5号-4",west:487770,south:126580,east:488275,north:126920},
"周山":{b200k:"京都及大阪6号-1",west:488220,south:126280,east:488725,north:126620},
"京都西北部":{b200k:"京都及大阪6号-2",west:488220,south:125980,east:488725,north:126320},
"殿田":{b200k:"京都及大阪6号-3",west:487770,south:126280,east:488275,north:126620},
"亀岡":{b200k:"京都及大阪6号-4",west:487770,south:125980,east:488275,north:126320},
"京都西南部":{b200k:"京都及大阪7号-1",west:488220,south:125680,east:488725,north:126020},
"淀":{b200k:"京都及大阪7号-2",west:488220,south:125380,east:488725,north:125720},
"法貴":{b200k:"京都及大阪7号-3",west:487770,south:125680,east:488275,north:126020},
"高槻":{b200k:"京都及大阪7号-4",west:487770,south:125380,east:488275,north:125720},
"枚方":{b200k:"京都及大阪8号-1",west:488220,south:125080,east:488725,north:125420},
"生駒山":{b200k:"京都及大阪8号-2",west:488220,south:124780,east:488725,north:125120},
"吹田":{b200k:"京都及大阪8号-3",west:487770,south:125080,east:488275,north:125420},
"大阪東北部":{b200k:"京都及大阪8号-4",west:487770,south:124780,east:488275,north:125120},
"和知":{b200k:"京都及大阪9号-1",west:487320,south:126880,east:487825,north:127220},
"胡麻":{b200k:"京都及大阪9号-2",west:487320,south:126580,east:487825,north:126920},
"綾部":{b200k:"京都及大阪9号-3",west:486870,south:126880,east:487375,north:127220},
"菟原":{b200k:"京都及大阪9号-4",west:486870,south:126580,east:487375,north:126920},
"園部":{b200k:"京都及大阪10号-1",west:487320,south:126280,east:487825,north:126620},
"埴生":{b200k:"京都及大阪10号-2",west:487320,south:125980,east:487825,north:126320},
"細工所":{b200k:"京都及大阪10号-3",west:486870,south:126280,east:487375,north:126620},
"福住":{b200k:"京都及大阪10号-4",west:486870,south:125980,east:487375,north:126320},
"妙見山":{b200k:"京都及大阪11号-1",west:487320,south:125680,east:487825,north:126020},
"広根":{b200k:"京都及大阪11号-2",west:487320,south:125380,east:487825,north:125720},
"木津":{b200k:"京都及大阪11号-3",west:486870,south:125680,east:487375,north:126020},
"武田尾":{b200k:"京都及大阪11号-4",west:486870,south:125380,east:487375,north:125720},
"伊丹":{b200k:"京都及大阪12号-1",west:487320,south:125080,east:487825,north:125420},
"大阪西北部":{b200k:"京都及大阪12号-2",west:487320,south:124780,east:487825,north:125120},
"宝塚":{b200k:"京都及大阪12号-3",west:486870,south:125080,east:487375,north:125420},
"西宮":{b200k:"京都及大阪12号-4",west:486870,south:124780,east:487375,north:125120},
"福知山東部":{b200k:"京都及大阪13号-1",west:486420,south:126880,east:486925,north:127220},
"市島":{b200k:"京都及大阪13号-2",west:486420,south:126580,east:486925,north:126920},
"福知山西部":{b200k:"京都及大阪13号-3",west:485970,south:126880,east:486475,north:127220},
"黒井":{b200k:"京都及大阪13号-4",west:485970,south:126580,east:486475,north:126920},
"宮田":{b200k:"京都及大阪14号-1",west:486420,south:126280,east:486925,north:126620},
"篠山":{b200k:"京都及大阪14号-2",west:486420,south:125980,east:486925,north:126320},
"柏原":{b200k:"京都及大阪14号-3",west:485970,south:126280,east:486475,north:126620},
"谷川":{b200k:"京都及大阪14号-4",west:485970,south:125980,east:486475,north:126320},
"藍本":{b200k:"京都及大阪15号-1",west:486420,south:125680,east:486925,north:126020},
"三田":{b200k:"京都及大阪15号-2",west:486420,south:125380,east:486925,north:125720},
"比延":{b200k:"京都及大阪15号-3",west:485970,south:125680,east:486475,north:126020},
"天神":{b200k:"京都及大阪15号-4",west:485970,south:125380,east:486475,north:125720},
"有馬":{b200k:"京都及大阪16号-1",west:486420,south:125080,east:486925,north:125420},
"神戸首部":{b200k:"京都及大阪16号-2",west:486420,south:124780,east:486925,north:125120},
"淡河":{b200k:"京都及大阪16号-3",west:485970,south:125080,east:486475,north:125420},
"前開":{b200k:"京都及大阪16号-4",west:485970,south:124780,east:486475,north:125120},
"大和白石":{b200k:"和歌山1号-1",west:489120,south:124480,east:489625,north:124820},
"初瀬":{b200k:"和歌山1号-2",west:489120,south:124180,east:489625,north:124520},
"大和郡山":{b200k:"和歌山1号-3",west:488670,south:124480,east:489175,north:124820},
"桜井":{b200k:"和歌山1号-4",west:488670,south:124180,east:489175,north:124520},
"古市場":{b200k:"和歌山2号-1",west:489125,south:123880,east:489625,north:124220},
"新子":{b200k:"和歌山2号-2",west:489125,south:123580,east:489625,north:123920},
"畝傍山":{b200k:"和歌山2号-3",west:488675,south:123880,east:489175,north:124220},
"吉野山":{b200k:"和歌山2号-4",west:488675,south:123580,east:489175,north:123920},
"洞川":{b200k:"和歌山3号-1",west:489125,south:123280,east:489625,north:123620},
"弥山":{b200k:"和歌山3号-2",west:489125,south:122980,east:489625,north:123320},
"中戸":{b200k:"和歌山3号-3",west:488675,south:123280,east:489175,north:123620},
"南日裏":{b200k:"和歌山3号-4",west:488675,south:122980,east:489175,north:123320},
"釈迦ヶ岳":{b200k:"和歌山4号-1",west:489125,south:122680,east:489625,north:123020},
"池原":{b200k:"和歌山4号-2",west:489125,south:122380,east:489625,north:122720},
"辻堂":{b200k:"和歌山4号-3",west:488675,south:122680,east:489175,north:123020},
"風屋":{b200k:"和歌山4号-4",west:488675,south:122380,east:489175,north:122720},
"信貴山":{b200k:"和歌山5号-1",west:488220,south:124480,east:488725,north:124820},
"大和高田":{b200k:"和歌山5号-2",west:488220,south:124180,east:488725,north:124520},
"大阪東南部":{b200k:"和歌山5号-3",west:487770,south:124480,east:488275,north:124820},
"古市":{b200k:"和歌山5号-4",west:487770,south:124180,east:488275,north:124520},
"御所":{b200k:"和歌山6号-1",west:488225,south:123880,east:488725,north:124220},
"五條":{b200k:"和歌山6号-2",west:488225,south:123580,east:488725,north:123920},
"富田林":{b200k:"和歌山6号-3",west:487775,south:123880,east:488275,north:124220},
"岩湧山":{b200k:"和歌山6号-4",west:487775,south:123580,east:488275,north:123920},
"富貴":{b200k:"和歌山7号-1",west:488225,south:123280,east:488725,north:123620},
"猿谷貯水池":{b200k:"和歌山7号-2",west:488225,south:122980,east:488725,north:123320},
"橋本":{b200k:"和歌山7号-3",west:487775,south:123280,east:488275,north:123620},
"高野山":{b200k:"和歌山7号-4",west:487775,south:122980,east:488275,north:123320},
"上垣内":{b200k:"和歌山8号-1",west:488225,south:122680,east:488725,north:123020},
"伯母子岳":{b200k:"和歌山8号-2",west:488225,south:122380,east:488725,north:122720},
"梁瀬":{b200k:"和歌山8号-3",west:487775,south:122680,east:488275,north:123020},
"護摩壇山":{b200k:"和歌山8号-4",west:487775,south:122380,east:488275,north:122720},
"大阪西南部":{b200k:"和歌山9号-1",west:487320,south:124480,east:487825,north:124820},
"堺":{b200k:"和歌山9号-2",west:487315,south:124180,east:487820,north:124520},
"阪神港":{b200k:"和歌山9号-3",west:486870,south:124480,east:487375,north:124820}, //140630追加
"岸和田東部":{b200k:"和歌山10号-1",west:487325,south:123880,east:487825,north:124220},
"内畑":{b200k:"和歌山10号-2",west:487325,south:123580,east:487825,north:123920},
"岸和田西部":{b200k:"和歌山10号-3",west:486875,south:123880,east:487375,north:124220},
"樽井":{b200k:"和歌山10号-4",west:486875,south:123580,east:487375,north:123920},
"粉河":{b200k:"和歌山11号-1",west:487325,south:123280,east:487825,north:123620},
"龍門山":{b200k:"和歌山11号-2",west:487325,south:122980,east:487825,north:123320},
"岩出":{b200k:"和歌山11号-3",west:486875,south:123280,east:487375,north:123620},
"丸栖":{b200k:"和歌山11号-4",west:486875,south:122980,east:487375,north:123320},
"田":{b200k:"和歌山12号-1",west:487325,south:122680,east:487825,north:123020},
"紀伊清水":{b200k:"和歌山12号-2",west:487325,south:122380,east:487825,north:122720},
"動木":{b200k:"和歌山12号-3",west:486875,south:122680,east:487375,north:123020},
"金屋":{b200k:"和歌山12号-4",west:486875,south:122380,east:487375,north:122720},
"神戸南部":{b200k:"和歌山13号-1",west:486420,south:124480,east:486925,north:124820},
"須磨":{b200k:"和歌山13号-3",west:485970,south:124480,east:486475,north:124820},
"田之代":{b200k:"和歌山13号-4",west:485970,south:124180,east:486475,north:124520},
"尾崎":{b200k:"和歌山14号-2",west:486425,south:123580,east:486925,north:123920},
"淡輪":{b200k:"和歌山15号-1",west:486425,south:123280,east:486925,north:123620},
"和歌山":{b200k:"和歌山15号-2",west:486425,south:122980,east:486925,north:123320},
"加太":{b200k:"和歌山15号-3",west:485975,south:123230,east:486475,north:123570},
"海南":{b200k:"和歌山16号-1",west:486425,south:122680,east:486925,north:123020},
"湯浅":{b200k:"和歌山16号-2",west:486425,south:122380,east:486925,north:122720},
"初島町":{b200k:"和歌山16号-3",west:485975,south:122680,east:486475,north:123020},
"箕島":{b200k:"和歌山16号-4",west:485975,south:122380,east:486475,north:122720},
"大沼":{b200k:"田辺1号-1",west:489125,south:122080,east:489625,north:122420},
"瀞八丁":{b200k:"田辺1号-2",west:489125,south:121780,east:489625,north:122120},
"十津川温泉":{b200k:"田辺1号-3",west:488675,south:122080,east:489175,north:122420},
"伏拝":{b200k:"田辺1号-4",west:488675,south:121780,east:489175,north:122120},
"大里":{b200k:"田辺2号-1",west:489125,south:121480,east:489625,north:121820},
"新宮":{b200k:"田辺2号-2",west:489125,south:121180,east:489625,north:121520},
"本宮":{b200k:"田辺2号-3",west:488675,south:121480,east:489175,north:121820},
"紀伊大野":{b200k:"田辺2号-4",west:488675,south:121180,east:489175,north:121520},
"紀伊勝浦":{b200k:"田辺3号-1",west:489125,south:120880,east:489620,north:121220},
"下里":{b200k:"田辺3号-2",west:489125,south:120580,east:489620,north:120920},
"滝の拝":{b200k:"田辺3号-3",west:488675,south:120880,east:489170,north:121220},
"古座":{b200k:"田辺3号-4",west:488675,south:120580,east:489170,north:120920},
"串本":{b200k:"田辺4号-3",west:488675,south:120280,east:489170,north:120620},
"重里":{b200k:"田辺5号-1",west:488225,south:122080,east:488725,north:122420},
"発心門":{b200k:"田辺5号-2",west:488225,south:121780,east:488725,north:122120},
"龍神":{b200k:"田辺5号-3",west:487775,south:122080,east:488275,north:122420},
"恩行司":{b200k:"田辺5号-4",west:487775,south:121780,east:488275,north:122120},
"皆地":{b200k:"田辺6号-1",west:488225,south:121480,east:488725,north:121820},
"木守":{b200k:"田辺6号-2",west:488225,south:121180,east:488725,north:121520},
"栗栖川":{b200k:"田辺6号-3",west:487775,south:121480,east:488275,north:121820},
"合川":{b200k:"田辺6号-4",west:487775,south:121180,east:488275,north:121520},
"下露":{b200k:"田辺7号-1",west:488225,south:120880,east:488720,north:121220},
"三尾川":{b200k:"田辺7号-2",west:488225,south:120580,east:488720,north:120920},
"市鹿野":{b200k:"田辺7号-3",west:487775,south:120880,east:488270,north:121220},
"江住":{b200k:"田辺7号-4",west:487775,south:120580,east:488270,north:120920},
"田並":{b200k:"田辺8号-1",west:488225,south:120280,east:488720,north:120620},
"寒川":{b200k:"田辺9号-1",west:487325,south:122080,east:487825,north:122420},
"西":{b200k:"田辺9号-2",west:487325,south:121780,east:487825,north:122120},
"川原河":{b200k:"田辺9号-3",west:486875,south:122080,east:487375,north:122420},
"古井":{b200k:"田辺9号-4",west:486875,south:121780,east:487375,north:122120},
"秋津川":{b200k:"田辺10号-1",west:487325,south:121480,east:487825,north:121820},
"紀伊田辺":{b200k:"田辺10号-2",west:487325,south:121180,east:487825,north:121520},
"紀伊南部":{b200k:"田辺10号-3",west:486875,south:121480,east:487375,north:121820},
"紀伊白浜":{b200k:"田辺10号-4",west:486875,south:121180,east:487375,north:121520},
"富田":{b200k:"田辺11号-1",west:487310,south:120880,east:487805,north:121220},
"紀伊日置":{b200k:"田辺11号-2",west:487325,south:120580,east:487820,north:120920},
"高家":{b200k:"田辺13号-1",west:486425,south:122080,east:486925,north:122420},
"御坊":{b200k:"田辺13号-2",west:486425,south:121780,east:486925,north:122120},
"紀伊由良":{b200k:"田辺13号-3",west:485975,south:122080,east:486475,north:122420},
"三尾":{b200k:"田辺13号-4",west:485975,south:121780,east:486475,north:122120},
"印南":{b200k:"田辺14号-1",west:486425,south:121480,east:486925,north:121820},
"塩江":{b200k:"鳥取2号-2",west:485520,south:128380,east:486030,north:128720},
"久美浜":{b200k:"鳥取3号-1",west:485520,south:128080,east:486030,north:128420},
"須田":{b200k:"鳥取3号-2",west:485520,south:127780,east:486030,north:128120},
"城崎":{b200k:"鳥取3号-3",west:485070,south:128100,east:485580,north:128440},
"豊岡":{b200k:"鳥取3号-4",west:485070,south:127780,east:485580,north:128120},
"出石":{b200k:"鳥取4号-1",west:485520,south:127480,east:486030,north:127820},
"直見":{b200k:"鳥取4号-2",west:485520,south:127180,east:486030,north:127520},
"江原":{b200k:"鳥取4号-3",west:485070,south:127480,east:485580,north:127820},
"八鹿":{b200k:"鳥取4号-4",west:485070,south:127180,east:485580,north:127520},
"香住":{b200k:"鳥取7号-1",west:484620,south:128080,east:485130,north:128420},
"神鍋山":{b200k:"鳥取7号-2",west:484620,south:127780,east:485130,north:128120},
"余部":{b200k:"鳥取7号-3",west:484170,south:128080,east:484680,north:128420},
"味取":{b200k:"鳥取7号-4",west:484170,south:127780,east:484680,north:128120},
"栃本":{b200k:"鳥取8号-1",west:484620,south:127480,east:485130,north:127820},
"関宮":{b200k:"鳥取8号-2",west:484620,south:127180,east:485130,north:127520},
"村岡":{b200k:"鳥取8号-3",west:484170,south:127480,east:484680,north:127820},
"氷ノ山":{b200k:"鳥取8号-4",west:484170,south:127180,east:484680,north:127520},
"浜坂":{b200k:"鳥取11号-1",west:483720,south:128080,east:484230,north:128420},
"湯":{b200k:"鳥取11号-2",west:483720,south:127780,east:484230,north:128120},
"田後":{b200k:"鳥取11号-3",west:483270,south:128080,east:483780,north:128420},
"浦富":{b200k:"鳥取11号-4",west:483270,south:127780,east:483780,north:128120},
"扇ノ山":{b200k:"鳥取12号-1",west:483720,south:127480,east:484230,north:127820},
"若桜":{b200k:"鳥取12号-2",west:483720,south:127180,east:484230,north:127520},
"稲葉山":{b200k:"鳥取12号-3",west:483270,south:127480,east:483780,north:127820},
"因幡郡家":{b200k:"鳥取12号-4",west:483270,south:127180,east:483780,north:127520},
"鳥取北部":{b200k:"鳥取15号-2",west:482820,south:127780,east:483330,north:128120},
"浜村":{b200k:"鳥取15号-4",west:482370,south:127780,east:482880,north:128120},
"鳥取南部":{b200k:"鳥取16号-1",west:482820,south:127480,east:483330,north:127820},
"用瀬":{b200k:"鳥取16号-2",west:482820,south:127180,east:483330,north:127520},
"鹿野":{b200k:"鳥取16号-3",west:482370,south:127480,east:482880,north:127820},
"岩坪":{b200k:"鳥取16号-4",west:482370,south:127180,east:482880,north:127520},
"矢名瀬":{b200k:"姫路1号-1",west:485520,south:126880,east:486025,north:127220},
"大名草":{b200k:"姫路1号-2",west:485520,south:126580,east:486025,north:126920},
"但馬竹田":{b200k:"姫路1号-3",west:485070,south:126880,east:485575,north:127220},
"但馬新井":{b200k:"姫路1号-4",west:485070,south:126580,east:485575,north:126920},
"丹波和田":{b200k:"姫路2号-1",west:485520,south:126280,east:486025,north:126620},
"中村町":{b200k:"姫路2号-2",west:485520,south:125980,east:486025,north:126320},
"生野":{b200k:"姫路2号-3",west:485070,south:126280,east:485575,north:126620},
"粟賀町":{b200k:"姫路2号-4",west:485070,south:125980,east:485575,north:126320},
"西脇":{b200k:"姫路3号-1",west:485520,south:125680,east:486025,north:126020},
"社":{b200k:"姫路3号-2",west:485520,south:125380,east:486025,north:125720},
"北条":{b200k:"姫路3号-3",west:485070,south:125680,east:485575,north:126020},
"笠原":{b200k:"姫路3号-4",west:485070,south:125380,east:485575,north:125720},
"三木":{b200k:"姫路4号-1",west:485520,south:125080,east:486025,north:125420},
"東二見":{b200k:"姫路4号-2",west:485520,south:124780,east:486025,north:125120},
"加古川":{b200k:"姫路4号-3",west:485070,south:125080,east:485575,north:125420},
"高砂":{b200k:"姫路4号-4",west:485070,south:124780,east:485575,north:125120},
"大屋市場":{b200k:"姫路5号-1",west:484620,south:126880,east:485125,north:127220},
"神子畑":{b200k:"姫路5号-2",west:484620,south:126580,east:485125,north:126920},
"戸倉峠":{b200k:"姫路5号-3",west:484170,south:126880,east:484675,north:127220},
"音水湖":{b200k:"姫路5号-4",west:484170,south:126580,east:484675,north:126920},
"長谷":{b200k:"姫路6号-1",west:484620,south:126280,east:485125,north:126620},
"寺前":{b200k:"姫路6号-2",west:484620,south:125980,east:485125,north:126320},
"安積":{b200k:"姫路6号-3",west:484170,south:126280,east:484675,north:126620},
"山崎":{b200k:"姫路6号-4",west:484170,south:125980,east:484675,north:126320},
"前之庄":{b200k:"姫路7号-1",west:484620,south:125680,east:485125,north:126020},
"姫路北部":{b200k:"姫路7号-2",west:484620,south:125380,east:485125,north:125720},
"安志":{b200k:"姫路7号-3",west:484170,south:125680,east:484675,north:126020},
"龍野":{b200k:"姫路7号-4",west:484170,south:125380,east:484675,north:125720},
"姫路南部":{b200k:"姫路8号-1",west:484620,south:125080,east:485125,north:125420},
"網干":{b200k:"姫路8号-3",west:484170,south:125080,east:484675,north:125420},
"真浦":{b200k:"姫路8号-4",west:484170,south:124630,east:484675,north:124970},
"岩屋堂":{b200k:"姫路9号-1",west:483720,south:126880,east:484225,north:127220},
"西河内":{b200k:"姫路9号-2",west:483720,south:126580,east:484225,north:126920},
"郷原":{b200k:"姫路9号-3",west:483270,south:126880,east:483775,north:127220},
"坂根":{b200k:"姫路9号-4",west:483270,south:126580,east:483775,north:126920},
"千草":{b200k:"姫路10号-1",west:483720,south:126280,east:484225,north:126620},
"土万":{b200k:"姫路10号-2",west:483720,south:125980,east:484225,north:126320},
"古町":{b200k:"姫路10号-3",west:483270,south:126280,east:483775,north:126620},
"佐用":{b200k:"姫路10号-4",west:483270,south:125980,east:483775,north:126320},
"三日月":{b200k:"姫路11号-1",west:483720,south:125680,east:484225,north:126020},
"二木":{b200k:"姫路11号-2",west:483720,south:125380,east:484225,north:125720},
"上月":{b200k:"姫路11号-3",west:483270,south:125680,east:483775,north:126020},
"上郡":{b200k:"姫路11号-4",west:483270,south:125380,east:483775,north:125720},
"相生":{b200k:"姫路12号-1",west:483720,south:125080,east:484225,north:125420},
"播州赤穂":{b200k:"姫路12号-2",west:483720,south:124780,east:484225,north:125120},
"備前三石":{b200k:"姫路12号-3",west:483270,south:125080,east:483775,north:125420},
"日生":{b200k:"姫路12号-4",west:483270,south:124780,east:483775,north:125120},
"智頭":{b200k:"姫路13号-1",west:482820,south:126880,east:483325,north:127220},
"大背":{b200k:"姫路13号-2",west:482820,south:126580,east:483325,north:126920},
"加瀬木":{b200k:"姫路13号-3",west:482370,south:126880,east:482875,north:127220},
"美作加茂":{b200k:"姫路13号-4",west:482370,south:126580,east:482875,north:126920},
"日本原":{b200k:"姫路14号-1",west:482820,south:126280,east:483325,north:126620},
"真加部":{b200k:"姫路14号-2",west:482820,south:125980,east:483325,north:126320},
"楢":{b200k:"姫路14号-3",west:482370,south:126280,east:482875,north:126620},
"津山東部":{b200k:"姫路14号-4",west:482370,south:125980,east:482875,north:126320},
"林野":{b200k:"姫路15号-1",west:482820,south:125680,east:483325,north:126020},
"日笠":{b200k:"姫路15号-2",west:482820,south:125380,east:483325,north:125720},
"柵原":{b200k:"姫路15号-3",west:482370,south:125680,east:482875,north:126020},
"周匝":{b200k:"姫路15号-4",west:482370,south:125380,east:482875,north:125720},
"和気":{b200k:"姫路16号-1",west:482820,south:125080,east:483325,north:125420},
"片上":{b200k:"姫路16号-2",west:482820,south:124780,east:483325,north:125120},
"万富":{b200k:"姫路16号-3",west:482370,south:125080,east:482875,north:125420},
"備前瀬戸":{b200k:"姫路16号-4",west:482370,south:124780,east:482875,north:125120},
"明石":{b200k:"徳島1号-1",west:485520,south:124480,east:486025,north:124820},
"仮屋":{b200k:"徳島1号-2",west:485500,south:124180,east:486005,north:124520},
"志筑":{b200k:"徳島2号-1",west:485525,south:123880,east:486025,north:124220},
"洲本":{b200k:"徳島2号-2",west:485400,south:123580,east:485900,north:123920},
"郡家":{b200k:"徳島2号-3",west:485075,south:123880,east:485575,north:124220},
"都志":{b200k:"徳島2号-4",west:484990,south:123580,east:485490,north:123920},
"由良":{b200k:"徳島3号-1",west:485525,south:123280,east:486025,north:123620},
"広田":{b200k:"徳島3号-3",west:485075,south:123280,east:485575,north:123620},
"諭鶴羽山":{b200k:"徳島3号-4",west:485090,south:122980,east:485590,north:123320},
"福良":{b200k:"徳島7号-1",west:484625,south:123280,east:485125,north:123620},
"鳴門海峡":{b200k:"徳島7号-2",west:484625,south:122980,east:485125,north:123320},
"撫養":{b200k:"徳島7号-4",west:484175,south:122980,east:484675,north:123320},
"板東":{b200k:"徳島8号-3",west:484185,south:122680,east:484685,north:123020},
"徳島":{b200k:"徳島8号-4",west:484185,south:122380,east:484685,north:122720},
"西島":{b200k:"徳島9号-1",west:483720,south:124480,east:484225,north:124820},
"寒霞溪":{b200k:"徳島9号-4",west:483290,south:124180,east:483795,north:124520},
"草壁":{b200k:"徳島10号-3",west:483275,south:123880,east:483775,north:124220},
"引田":{b200k:"徳島11号-2",west:483725,south:123005,east:484225,north:123345},
"讃岐津田":{b200k:"徳島11号-3",west:483290,south:123280,east:483790,north:123620},
"三本松":{b200k:"徳島11号-4",west:483275,south:122980,east:483775,north:123320},
"大寺":{b200k:"徳島12号-1",west:483725,south:122680,east:484225,north:123020},
"石井":{b200k:"徳島12号-2",west:483725,south:122380,east:484225,north:122720},
"市場":{b200k:"徳島12号-3",west:483275,south:122680,east:483775,north:123020},
"川島":{b200k:"徳島12号-4",west:483275,south:122380,east:483775,north:122720},
"牛窓":{b200k:"徳島13号-1",west:482820,south:124480,east:483325,north:124820},
"小江":{b200k:"徳島13号-2",west:482820,south:124180,east:483325,north:124520},
"西大寺":{b200k:"徳島13号-3",west:482370,south:124480,east:482875,north:124820},
"犬島":{b200k:"徳島13号-4",west:482370,south:124180,east:482875,north:124520},
"土庄":{b200k:"徳島14号-1",west:482825,south:123880,east:483325,north:124220},
"五剣山":{b200k:"徳島14号-2",west:482835,south:123580,east:483335,north:123920},
"豊島":{b200k:"徳島14号-3",west:482375,south:123880,east:482875,north:124220},
"高松北部":{b200k:"徳島14号-4",west:482375,south:123580,east:482875,north:123920},
"志度":{b200k:"徳島15号-1",west:482825,south:123280,east:483325,north:123620},
"鹿庭":{b200k:"徳島15号-2",west:482825,south:122980,east:483325,north:123320},
"高松南部":{b200k:"徳島15号-3",west:482375,south:123280,east:482875,north:123620},
"川東":{b200k:"徳島15号-4",west:482375,south:122980,east:482875,north:123320},
"西赤谷":{b200k:"徳島16号-1",west:482825,south:122680,east:483325,north:123020},
"脇町":{b200k:"徳島16号-2",west:482825,south:122380,east:483325,north:122720},
"讃岐塩江":{b200k:"徳島16号-3",west:482375,south:122680,east:482875,north:123020},
"貞光":{b200k:"徳島16号-4",west:482375,south:122380,east:482875,north:122720},
"阿波富岡":{b200k:"剣山5号-1",west:484625,south:122105,east:485125,north:122445},
"橘":{b200k:"剣山5号-2",west:484625,south:121780,east:485125,north:122120},
"立江":{b200k:"剣山5号-3",west:484175,south:122080,east:484675,north:122420},
"馬場":{b200k:"剣山5号-4",west:484175,south:121780,east:484675,north:122120},
"阿部":{b200k:"剣山6号-1",west:484625,south:121480,east:485125,north:121820},
"阿波由岐":{b200k:"剣山6号-3",west:484175,south:121480,east:484675,north:121820},
"日和佐":{b200k:"剣山6号-4",west:484175,south:121180,east:484675,north:121520},
"阿波三溪":{b200k:"剣山9号-1",west:483725,south:122080,east:484225,north:122420},
"阿井":{b200k:"剣山9号-2",west:483725,south:121780,east:484225,north:122120},
"阿波寄井":{b200k:"剣山9号-3",west:483275,south:122080,east:483775,north:122420},
"雲早山":{b200k:"剣山9号-4",west:483275,south:121780,east:483775,north:122120},
"桜谷":{b200k:"剣山10号-1",west:483725,south:121480,east:484225,north:121820},
"山河内":{b200k:"剣山10号-2",west:483725,south:121180,east:484225,north:121520},
"長安口貯水池":{b200k:"剣山10号-3",west:483275,south:121480,east:483775,north:121820},
"小川口":{b200k:"剣山10号-4",west:483275,south:121180,east:483775,north:121520},
"牟岐":{b200k:"剣山11号-1",west:483735,south:120880,east:484230,north:121220},
"奥浦":{b200k:"剣山11号-3",west:483275,south:120880,east:483770,north:121220},
"甲浦":{b200k:"剣山11号-4",west:483275,south:120580,east:483770,north:120920},
"伏越ノ鼻":{b200k:"剣山12号-3",west:483275,south:120280,east:483770,north:120620},
"阿波川井":{b200k:"剣山13号-1",west:482825,south:122080,east:483325,north:122420},
"谷口":{b200k:"剣山13号-2",west:482825,south:121780,east:483325,north:122120},
"阿波古見":{b200k:"剣山13号-3",west:482375,south:122080,east:482875,north:122420},
"剣山":{b200k:"剣山13号-4",west:482375,south:121780,east:482875,north:122120},
"阿波出原":{b200k:"剣山14号-1",west:482825,south:121480,east:483325,north:121820},
"湯桶丸":{b200k:"剣山14号-2",west:482825,south:121180,east:483325,north:121520},
"北川":{b200k:"剣山14号-3",west:482375,south:121480,east:482875,north:121820},
"赤城尾山":{b200k:"剣山14号-4",west:482375,south:121180,east:482875,north:121520},
"久尾":{b200k:"剣山15号-1",west:482825,south:120880,east:483320,north:121220},
"名留川":{b200k:"剣山15号-2",west:482825,south:120580,east:483320,north:120920},
"土佐魚梁瀬":{b200k:"剣山15号-3",west:482375,south:120880,east:482870,north:121220},
"馬路":{b200k:"剣山15号-4",west:482375,south:120580,east:482870,north:120920},
"入木":{b200k:"剣山16号-1",west:482825,south:120280,east:483320,north:120620},
"佐喜浜":{b200k:"剣山16号-2",west:482825,south:119980,east:483320,north:120320},
"奈半利":{b200k:"剣山16号-3",west:482375,south:120280,east:482870,north:120620},
"羽根":{b200k:"剣山16号-4",west:482375,south:119980,east:482870,north:120320},
"室戸岬":{b200k:"剣山南13号-1",west:482675,south:119680,east:483170,north:120020},
"西村":{b200k:"西郷10号-4",west:479545,south:130720,east:480060,north:131060},
"布施":{b200k:"西郷11号-3",west:479845,south:130420,east:480360,north:130760},
"西郷":{b200k:"西郷11号-4",west:479845,south:130120,east:480360,north:130460},
"隠岐北方":{b200k:"西郷15号-1",west:479395,south:130420,east:479910,north:130760},
"都万":{b200k:"西郷15号-2",west:479395,south:130120,east:479910,north:130460},
"菱浦":{b200k:"西郷16号-3",west:478955,south:129825,east:479470,north:130165},
"崎":{b200k:"西郷16号-4",west:478950,south:129520,east:479460,north:129860},
"浦郷":{b200k:"西郷西4号-1",west:478495,south:129820,east:479010,north:130160},
"知夫":{b200k:"西郷西4号-2",west:478500,south:129520,east:479010,north:129860},
"青谷":{b200k:"松江3号-2",west:481920,south:127780,east:482430,north:128120},
"松崎":{b200k:"松江4号-1",west:481920,south:127480,east:482430,north:127820},
"三朝":{b200k:"松江4号-2",west:481920,south:127180,east:482430,north:127520},
"倉吉":{b200k:"松江4号-3",west:481470,south:127490,east:481980,north:127830},
"関金宿":{b200k:"松江4号-4",west:481470,south:127180,east:481980,north:127520},
"赤碕":{b200k:"松江7号-2",west:480960,south:127780,east:481470,north:128120},
"御来屋":{b200k:"松江7号-4",west:480510,south:127780,east:481020,north:128120},
"伯耆浦安":{b200k:"松江8号-1",west:481020,south:127480,east:481530,north:127820},
"泰久寺":{b200k:"松江8号-2",west:481020,south:127180,east:481530,north:127520},
"船上山":{b200k:"松江8号-3",west:480570,south:127480,east:481080,north:127820},
"伯耆大山":{b200k:"松江8号-4",west:480570,south:127180,east:481080,north:127520},
"美保関":{b200k:"松江11号-4",west:479670,south:127790,east:480180,north:128130},
"淀江":{b200k:"松江12号-1",west:480120,south:127480,east:480630,north:127820},
"伯耆溝口":{b200k:"松江12号-2",west:480120,south:127180,east:480630,north:127520},
"米子":{b200k:"松江12号-3",west:479670,south:127480,east:480180,north:127820},
"母里":{b200k:"松江12号-4",west:479670,south:127180,east:480180,north:127520},
"境港":{b200k:"松江15号-2",west:479220,south:127780,east:479730,north:128120},
"瀬崎":{b200k:"松江15号-3",west:478770,south:128080,east:479280,north:128420},
"加賀":{b200k:"松江15号-4",west:478770,south:127780,east:479280,north:128120},
"揖屋":{b200k:"松江16号-1",west:479220,south:127480,east:479730,north:127820},
"広瀬":{b200k:"松江16号-2",west:479220,south:127180,east:479730,north:127520},
"松江":{b200k:"松江16号-3",west:478770,south:127480,east:479280,north:127820},
"玉造":{b200k:"松江16号-4",west:478770,south:127180,east:479280,north:127520},
"上斎原":{b200k:"高梁1号-1",west:481920,south:126880,east:482425,north:127220},
"奥津":{b200k:"高梁1号-2",west:481920,south:126580,east:482425,north:126920},
"下鍛冶屋":{b200k:"高梁1号-3",west:481470,south:126880,east:481975,north:127220},
"富西谷":{b200k:"高梁1号-4",west:481470,south:126580,east:481975,north:126920},
"香々美":{b200k:"高梁2号-1",west:481920,south:126280,east:482425,north:126620},
"津山西部":{b200k:"高梁2号-2",west:481920,south:125980,east:482425,north:126320},
"美作宮原":{b200k:"高梁2号-3",west:481470,south:126280,east:481975,north:126620},
"久世":{b200k:"高梁2号-4",west:481470,south:125980,east:481975,north:126320},
"下弓削":{b200k:"高梁3号-1",west:481920,south:125680,east:482425,north:126020},
"福渡":{b200k:"高梁3号-2",west:481920,south:125380,east:482425,north:125720},
"西川":{b200k:"高梁3号-3",west:481470,south:125680,east:481975,north:126020},
"下加茂":{b200k:"高梁3号-4",west:481470,south:125380,east:481975,north:125720},
"金川":{b200k:"高梁4号-1",west:481920,south:125080,east:482425,north:125420},
"岡山北部":{b200k:"高梁4号-2",west:481920,south:124780,east:482425,north:125120},
"東山内":{b200k:"高梁4号-3",west:481470,south:125080,east:481975,north:125420},
"総社東部":{b200k:"高梁4号-4",west:481470,south:124780,east:481975,north:125120},
"蒜山":{b200k:"高梁5号-1",west:481020,south:126880,east:481525,north:127220},
"湯原湖":{b200k:"高梁5号-2",west:481020,south:126580,east:481525,north:126920},
"延助":{b200k:"高梁5号-3",west:480570,south:126880,east:481075,north:127220},
"美作新庄":{b200k:"高梁5号-4",west:480570,south:126580,east:481075,north:126920},
"横部":{b200k:"高梁6号-1",west:481020,south:126280,east:481525,north:126620},
"勝山":{b200k:"高梁6号-2",west:481020,south:125980,east:481525,north:126320},
"上刑部":{b200k:"高梁6号-3",west:480570,south:126280,east:481075,north:126620},
"刑部":{b200k:"高梁6号-4",west:480570,south:125980,east:481075,north:126320},
"呰部":{b200k:"高梁7号-1",west:481020,south:125680,east:481525,north:126020},
"有漢市場":{b200k:"高梁7号-2",west:481020,south:125380,east:481525,north:125720},
"井倉":{b200k:"高梁7号-3",west:480570,south:125680,east:481075,north:126020},
"川面市場":{b200k:"高梁7号-4",west:480570,south:125380,east:481075,north:125720},
"豪溪":{b200k:"高梁8号-1",west:481020,south:125080,east:481525,north:125420},
"総社西部":{b200k:"高梁8号-2",west:481020,south:124780,east:481525,north:125120},
"高梁":{b200k:"高梁8号-3",west:480570,south:125080,east:481075,north:125420},
"三山":{b200k:"高梁8号-4",west:480570,south:124780,east:481075,north:125120},
"江尾":{b200k:"高梁9号-1",west:480120,south:126880,east:480625,north:127220},
"根雨":{b200k:"高梁9号-2",west:480120,south:126580,east:480625,north:126920},
"井尻":{b200k:"高梁9号-3",west:479670,south:126880,east:480175,north:127220},
"印賀":{b200k:"高梁9号-4",west:479670,south:126580,east:480175,north:126920},
"千屋実":{b200k:"高梁10号-1",west:480120,south:126280,east:480625,north:126620},
"足立":{b200k:"高梁10号-2",west:480120,south:125980,east:480625,north:126320},
"上石見":{b200k:"高梁10号-3",west:479670,south:126280,east:480175,north:126620},
"油野":{b200k:"高梁10号-4",west:479670,south:125980,east:480175,north:126320},
"新見":{b200k:"高梁11号-1",west:480120,south:125680,east:480625,north:126020},
"吹屋":{b200k:"高梁11号-2",west:480120,south:125380,east:480625,north:125720},
"備中矢田":{b200k:"高梁11号-3",west:479670,south:125680,east:480175,north:126020},
"東城":{b200k:"高梁11号-4",west:479670,south:125380,east:480175,north:125720},
"備中市場":{b200k:"高梁12号-1",west:480120,south:125080,east:480625,north:125420},
"地頭":{b200k:"高梁12号-2",west:480120,south:124780,east:480625,north:125120},
"油木":{b200k:"高梁12号-3",west:479670,south:125080,east:480175,north:125420},
"小畠":{b200k:"高梁12号-4",west:479670,south:124780,east:480175,north:125120},
"出雲布部":{b200k:"高梁13号-1",west:479220,south:126880,east:479725,north:127220},
"阿毘縁":{b200k:"高梁13号-2",west:479220,south:126580,east:479725,north:126920},
"上山佐":{b200k:"高梁13号-3",west:478770,south:126880,east:479275,north:127220},
"横田":{b200k:"高梁13号-4",west:478770,south:126580,east:479275,north:126920},
"多里":{b200k:"高梁14号-1",west:479220,south:126280,east:479725,north:126620},
"道後山":{b200k:"高梁14号-2",west:479220,south:125980,east:479725,north:126320},
"下横田":{b200k:"高梁14号-3",west:478770,south:126280,east:479275,north:126620},
"比婆山":{b200k:"高梁14号-4",west:478770,south:125980,east:479275,north:126320},
"小奴可":{b200k:"高梁15号-1",west:479220,south:125680,east:479725,north:126020},
"帝釈峡":{b200k:"高梁15号-2",west:479220,south:125380,east:479725,north:125720},
"西城":{b200k:"高梁15号-3",west:478770,south:125680,east:479275,north:126020},
"庄原":{b200k:"高梁15号-4",west:478770,south:125380,east:479275,north:125720},
"福永":{b200k:"高梁16号-1",west:479220,south:125080,east:479725,north:125420},
"高蓋":{b200k:"高梁16号-2",west:479220,south:124780,east:479725,north:125120},
"稲草":{b200k:"高梁16号-3",west:478770,south:125080,east:479275,north:125420},
"上下":{b200k:"高梁16号-4",west:478770,south:124780,east:479275,north:125120},
"岡山南部":{b200k:"岡山及丸亀1号-1",west:481920,south:124480,east:482425,north:124820},
"八浜":{b200k:"岡山及丸亀1号-2",west:481920,south:124180,east:482425,north:124520},
"倉敷":{b200k:"岡山及丸亀1号-3",west:481470,south:124480,east:481975,north:124820},
"茶屋町":{b200k:"岡山及丸亀1号-4",west:481470,south:124180,east:481975,north:124520},
"宇野":{b200k:"岡山及丸亀2号-1",west:481925,south:123880,east:482425,north:124220},
"五色台":{b200k:"岡山及丸亀2号-2",west:481925,south:123580,east:482425,north:123920},
"下津井":{b200k:"岡山及丸亀2号-3",west:481475,south:123880,east:481975,north:124220},
"本島":{b200k:"岡山及丸亀2号-4",west:481475,south:123580,east:481975,north:123920},
"白峰山":{b200k:"岡山及丸亀3号-1",west:481925,south:123280,east:482425,north:123620},
"滝宮":{b200k:"岡山及丸亀3号-2",west:481925,south:122980,east:482425,north:123320},
"丸亀":{b200k:"岡山及丸亀3号-3",west:481475,south:123280,east:481975,north:123620},
"善通寺":{b200k:"岡山及丸亀3号-4",west:481475,south:122980,east:481975,north:123320},
"内田":{b200k:"岡山及丸亀4号-1",west:481925,south:122680,east:482425,north:123020},
"辻":{b200k:"岡山及丸亀4号-2",west:481925,south:122380,east:482425,north:122720},
"福良見":{b200k:"岡山及丸亀4号-3",west:481475,south:122680,east:481975,north:123020},
"阿波池田":{b200k:"岡山及丸亀4号-4",west:481475,south:122380,east:481975,north:122720},
"箭田":{b200k:"岡山及丸亀5号-1",west:481020,south:124480,east:481525,north:124820},
"玉島":{b200k:"岡山及丸亀5号-2",west:481020,south:124180,east:481525,north:124520},
"矢掛":{b200k:"岡山及丸亀5号-3",west:480570,south:124480,east:481075,north:124820},
"笠岡":{b200k:"岡山及丸亀5号-4",west:480570,south:124180,east:481075,north:124520},
"水島港":{b200k:"岡山及丸亀6号-1",west:481025,south:123880,east:481525,north:124220},
"讃岐広島":{b200k:"岡山及丸亀6号-2",west:481025,south:123580,east:481525,north:123920},
"寄島":{b200k:"岡山及丸亀6号-3",west:480575,south:123880,east:481075,north:124220},
"白石島":{b200k:"岡山及丸亀6号-4",west:480575,south:123580,east:481075,north:123920},
"讃岐粟島":{b200k:"岡山及丸亀7号-1",west:481025,south:123280,east:481525,north:123620},
"仁尾":{b200k:"岡山及丸亀7号-2",west:481025,south:122980,east:481525,north:123320},
"六島":{b200k:"岡山及丸亀7号-3",west:480575,south:123280,east:481075,north:123620},
"紫雲出山":{b200k:"岡山及丸亀7号-4",west:480575,south:122980,east:481075,north:123320},
"観音寺":{b200k:"岡山及丸亀8号-1",west:481025,south:122680,east:481525,north:123020},
"讃岐豊浜":{b200k:"岡山及丸亀8号-2",west:481025,south:122380,east:481525,north:122720},
"伊吹島":{b200k:"岡山及丸亀12号-1",west:480335,south:122680,east:480835,north:123020},
"川之江":{b200k:"岡山及丸亀8号-4",west:480575,south:122380,east:481075,north:122720},
"井原":{b200k:"岡山及丸亀9号-1",west:480120,south:124480,east:480625,north:124820},
"神辺":{b200k:"岡山及丸亀9号-2",west:480120,south:124180,east:480625,north:124520},
"金丸":{b200k:"岡山及丸亀9号-3",west:479670,south:124480,east:480175,north:124820},
"新市":{b200k:"岡山及丸亀9号-4",west:479670,south:124180,east:480175,north:124520},
"福山東部":{b200k:"岡山及丸亀10号-1",west:480125,south:123880,east:480625,north:124220},
"鞆":{b200k:"岡山及丸亀10号-2",west:480125,south:123580,east:480625,north:123920},
"福山西部":{b200k:"岡山及丸亀10号-3",west:479675,south:123880,east:480175,north:124220},
"常石":{b200k:"岡山及丸亀10号-4",west:479675,south:123580,east:480175,north:123920},
"百貫島":{b200k:"岡山及丸亀11号-3",west:479675,south:123280,east:480175,north:123620},
"魚島":{b200k:"岡山及丸亀11号-4",west:479675,south:122920,east:480175,north:123260},
"木野山":{b200k:"岡山及丸亀13号-1",west:479220,south:124480,east:479725,north:124820},
"府中":{b200k:"岡山及丸亀13号-2",west:479220,south:124180,east:479725,north:124520},
"本郷":{b200k:"岡山及丸亀13号-3",west:478770,south:124480,east:479275,north:124820},
"甲山":{b200k:"岡山及丸亀13号-4",west:478770,south:124180,east:479275,north:124520},
"三成":{b200k:"岡山及丸亀14号-1",west:479225,south:123880,east:479725,north:124220},
"尾道":{b200k:"岡山及丸亀14号-2",west:479225,south:123580,east:479725,north:123920},
"垣内":{b200k:"岡山及丸亀14号-3",west:478775,south:123880,east:479275,north:124220},
"三原":{b200k:"岡山及丸亀14号-4",west:478775,south:123580,east:479275,north:123920},
"備後土生":{b200k:"岡山及丸亀15号-1",west:479225,south:123280,east:479725,north:123620},
"岩城":{b200k:"岡山及丸亀15号-2",west:479225,south:122980,east:479725,north:123320},
"瀬戸田":{b200k:"岡山及丸亀15号-3",west:478775,south:123280,east:479275,north:123620},
"木浦":{b200k:"岡山及丸亀15号-4",west:478775,south:122980,east:479275,north:123320},
"幸新田":{b200k:"岡山及丸亀16号-3",west:478775,south:122680,east:479275,north:123020},
"今治東部":{b200k:"岡山及丸亀16号-4",west:478775,south:122380,east:479275,north:122720},
"阿波中津":{b200k:"高知1号-1",west:481925,south:122080,east:482425,north:122420},
"京上":{b200k:"高知1号-2",west:481925,south:121780,east:482425,north:122120},
"阿波川口":{b200k:"高知1号-3",west:481475,south:122080,east:481975,north:122420},
"大歩危":{b200k:"高知1号-4",west:481475,south:121780,east:481975,north:122120},
"久保沼井":{b200k:"高知2号-1",west:481925,south:121480,east:482425,north:121820},
"大栃":{b200k:"高知2号-2",west:481925,south:121180,east:482425,north:121520},
"東土居":{b200k:"高知2号-3",west:481475,south:121480,east:481975,north:121820},
"奈呂":{b200k:"高知2号-4",west:481475,south:121180,east:481975,north:121520},
"畑山":{b200k:"高知3号-1",west:481925,south:120880,east:482420,north:121220},
"土佐土居":{b200k:"高知3号-2",west:481925,south:120580,east:482420,north:120920},
"美良布":{b200k:"高知3号-3",west:481475,south:120880,east:481970,north:121220},
"手結":{b200k:"高知3号-4",west:481475,south:120580,east:481970,north:120920},
"安芸":{b200k:"高知4号-1",west:481925,south:120280,east:482420,north:120620},
"伊予新宮":{b200k:"高知5号-1",west:481025,south:122080,east:481525,north:122420},
"野鹿池山":{b200k:"高知5号-2",west:481025,south:121780,east:481525,north:122120},
"伊予三島":{b200k:"高知5号-3",west:480575,south:122080,east:481075,north:122420},
"佐々連尾山":{b200k:"高知5号-4",west:480575,south:121780,east:481075,north:122120},
"杉":{b200k:"高知6号-1",west:481025,south:121480,east:481525,north:121820},
"繁藤":{b200k:"高知6号-2",west:481025,south:121180,east:481525,north:121520},
"本山":{b200k:"高知6号-3",west:480575,south:121480,east:481075,north:121820},
"田井":{b200k:"高知6号-4",west:480575,south:121180,east:481075,north:121520},
"土佐山田":{b200k:"高知7号-1",west:481025,south:120880,east:481520,north:121220},
"後免":{b200k:"高知7号-2",west:481025,south:120580,east:481520,north:120920},
"土佐山":{b200k:"高知7号-3",west:480575,south:120880,east:481070,north:121220},
"高知":{b200k:"高知7号-4",west:480575,south:120580,east:481070,north:120920},
"土佐長浜":{b200k:"高知8号-3",west:480575,south:120280,east:481070,north:120620},
"東予土居":{b200k:"高知9号-1",west:480125,south:122080,east:480625,north:122420},
"弟地":{b200k:"高知9号-2",west:480125,south:121780,east:480625,north:122120},
"新居浜":{b200k:"高知9号-3",west:479675,south:122090,east:480175,north:122430},
"別子銅山":{b200k:"高知9号-4",west:479675,south:121780,east:480175,north:122120},
"土佐小松":{b200k:"高知10号-1",west:480125,south:121480,east:480625,north:121820},
"西石原":{b200k:"高知10号-2",west:480125,south:121180,east:480625,north:121520},
"日ノ浦":{b200k:"高知10号-3",west:479675,south:121480,east:480175,north:121820},
"日比原":{b200k:"高知10号-4",west:479675,south:121180,east:480175,north:121520},
"川口":{b200k:"高知11号-1",west:480125,south:120880,east:480620,north:121220},
"いの":{b200k:"高知11号-2",west:480125,south:120580,east:480620,north:120920},
"思地":{b200k:"高知11号-3",west:479675,south:120880,east:480170,north:121220},
"越知":{b200k:"高知11号-4",west:479675,south:120580,east:480170,north:120920},
"土佐高岡":{b200k:"高知12号-1",west:480125,south:120280,east:480620,north:120620},
"甲崎":{b200k:"高知12号-2",west:480125,south:119980,east:480620,north:120320},
"佐川":{b200k:"高知12号-3",west:479675,south:120280,east:480170,north:120620},
"須崎":{b200k:"高知12号-4",west:479675,south:119980,east:480170,north:120320},
"西条北部":{b200k:"高知13号-1",west:479225,south:122080,east:479725,north:122420},
"西条":{b200k:"高知13号-2",west:479225,south:121780,east:479725,north:122120},
"壬生川":{b200k:"高知13号-3",west:478775,south:122080,east:479275,north:122420},
"伊予小松":{b200k:"高知13号-4",west:478775,south:121780,east:479275,north:122120},
"瓶ヶ森":{b200k:"高知14号-1",west:479225,south:121480,east:479725,north:121820},
"筒上山":{b200k:"高知14号-2",west:479225,south:121180,east:479725,north:121520},
"石鎚山":{b200k:"高知14号-3",west:478775,south:121480,east:479275,north:121820},
"面河溪":{b200k:"高知14号-4",west:478775,south:121180,east:479275,north:121520},
"上土居":{b200k:"高知15号-1",west:479225,south:120880,east:479720,north:121220},
"大崎":{b200k:"高知15号-2",west:479225,south:120580,east:479720,north:120920},
"東川":{b200k:"高知15号-3",west:478775,south:120880,east:479270,north:121220},
"柳井川":{b200k:"高知15号-4",west:478775,south:120580,east:479270,north:120920},
"長者":{b200k:"高知16号-1",west:479225,south:120280,east:479720,north:120620},
"萩中":{b200k:"高知16号-2",west:479225,south:119980,east:479720,north:120320},
"王在家":{b200k:"高知16号-3",west:478775,south:120280,east:479270,north:120620},
"新田":{b200k:"高知16号-4",west:478775,south:119980,east:479270,north:120320},
"一子碆":{b200k:"窪川9号-3",west:479675,south:119680,east:480170,north:120020},
"大名鹿":{b200k:"窪川15号-4",west:478775,south:118180,east:479270,north:118520},
"久礼":{b200k:"窪川13号-1",west:479225,south:119680,east:479720,north:120020},
"窪川":{b200k:"窪川13号-2",west:479240,south:119380,east:479735,north:119720},
"米の川":{b200k:"窪川13号-3",west:478775,south:119680,east:479270,north:120020},
"土佐川口":{b200k:"窪川13号-4",west:478775,south:119380,east:479270,north:119720},
"興津浦":{b200k:"窪川14号-1",west:479225,south:119080,east:479720,north:119420},
"伊与喜":{b200k:"窪川14号-3",west:478775,south:119080,east:479270,north:119420},
"土佐佐賀":{b200k:"窪川14号-4",west:478775,south:118780,east:479270,north:119120},
"恵曇":{b200k:"大社3号-2",west:478320,south:127780,east:478830,north:128120},
"秋鹿":{b200k:"大社4号-1",west:478320,south:127480,east:478830,north:127820},
"宍道":{b200k:"大社4号-2",west:478320,south:127180,east:478830,north:127520},
"平田":{b200k:"大社4号-3",west:477870,south:127505,east:478380,north:127845},
"出雲今市":{b200k:"大社4号-4",west:477870,south:127180,east:478380,north:127520},
"日御碕":{b200k:"大社8号-1",west:477390,south:127480,east:477900,north:127820},
"大社":{b200k:"大社8号-2",west:477420,south:127180,east:477930,north:127520},
"木次":{b200k:"浜田1号-1",west:478320,south:126880,east:478825,north:127220},
"湯村":{b200k:"浜田1号-2",west:478320,south:126580,east:478825,north:126920},
"稗原":{b200k:"浜田1号-3",west:477870,south:126880,east:478375,north:127220},
"掛合":{b200k:"浜田1号-4",west:477870,south:126580,east:478375,north:126920},
"阿井町":{b200k:"浜田2号-1",west:478320,south:126280,east:478825,north:126620},
"比婆新市":{b200k:"浜田2号-2",west:478320,south:125980,east:478825,north:126320},
"出雲吉田":{b200k:"浜田2号-3",west:477870,south:126280,east:478375,north:126620},
"頓原":{b200k:"浜田2号-4",west:477870,south:125980,east:478375,north:126320},
"比和":{b200k:"浜田3号-1",west:478320,south:125680,east:478825,north:126020},
"永田":{b200k:"浜田3号-2",west:478320,south:125380,east:478825,north:125720},
"櫃田":{b200k:"浜田3号-3",west:477870,south:125680,east:478375,north:126020},
"上布野":{b200k:"浜田3号-4",west:477870,south:125380,east:478375,north:125720},
"三良坂":{b200k:"浜田4号-1",west:478320,south:125080,east:478825,north:125420},
"吉舎":{b200k:"浜田4号-2",west:478320,south:124780,east:478825,north:125120},
"三次":{b200k:"浜田4号-3",west:477870,south:125080,east:478375,north:125420},
"甲立":{b200k:"浜田4号-4",west:477870,south:124780,east:478375,north:125120},
"神西湖":{b200k:"浜田5号-1",west:477420,south:126880,east:477925,north:127220},
"反辺":{b200k:"浜田5号-2",west:477420,south:126580,east:477925,north:126920},
"田儀":{b200k:"浜田5号-3",west:476970,south:126880,east:477475,north:127220},
"石見大田":{b200k:"浜田5号-4",west:476970,south:126580,east:477475,north:126920},
"三瓶山東部":{b200k:"浜田6号-1",west:477420,south:126280,east:477925,north:126620},
"野萱":{b200k:"浜田6号-2",west:477420,south:125980,east:477925,north:126320},
"三瓶山西部":{b200k:"浜田6号-3",west:476970,south:126280,east:477475,north:126620},
"石見小原":{b200k:"浜田6号-4",west:476970,south:125980,east:477475,north:126320},
"赤名":{b200k:"浜田7号-1",west:477420,south:125680,east:477925,north:126020},
"口羽町":{b200k:"浜田7号-2",west:477420,south:125380,east:477925,north:125720},
"木路原":{b200k:"浜田7号-3",west:476970,south:125680,east:477475,north:126020},
"出羽":{b200k:"浜田7号-4",west:476970,south:125380,east:477475,north:125720},
"前川":{b200k:"浜田8号-1",west:477420,south:125080,east:477925,north:125420},
"安芸横田":{b200k:"浜田8号-2",west:477420,south:124780,east:477925,north:125120},
"生田":{b200k:"浜田8号-3",west:476970,south:125080,east:477475,north:125420},
"八重":{b200k:"浜田8号-4",west:476970,south:124780,east:477475,north:125120},
"大浦":{b200k:"浜田9号-2",west:476520,south:126580,east:477025,north:126920},
"仁万":{b200k:"浜田10号-1",west:476520,south:126280,east:477025,north:126620},
"大家":{b200k:"浜田10号-2",west:476520,south:125980,east:477025,north:126320},
"温泉津":{b200k:"浜田10号-3",west:476070,south:126280,east:476575,north:126620},
"浅利":{b200k:"浜田10号-4",west:476070,south:125980,east:476575,north:126320},
"川本":{b200k:"浜田11号-1",west:476520,south:125680,east:477025,north:126020},
"矢上":{b200k:"浜田11号-2",west:476520,south:125380,east:477025,north:125720},
"川戸":{b200k:"浜田11号-3",west:476070,south:125680,east:476575,north:126020},
"石見今市":{b200k:"浜田11号-4",west:476070,south:125380,east:476575,north:125720},
"大朝":{b200k:"浜田12号-1",west:476520,south:125080,east:477025,north:125420},
"志路原":{b200k:"浜田12号-2",west:476520,south:124780,east:477025,north:125120},
"石見坂本":{b200k:"浜田12号-3",west:476070,south:125080,east:476575,north:125420},
"大仙原":{b200k:"浜田12号-4",west:476070,south:124780,east:476575,north:125120},
"江津":{b200k:"浜田14号-2",west:475620,south:125980,east:476125,north:126320},
"都野津":{b200k:"浜田15号-1",west:475620,south:125680,east:476125,north:126020},
"石見今福":{b200k:"浜田15号-2",west:475620,south:125380,east:476125,north:125720},
"下府":{b200k:"浜田15号-3",west:475170,south:125680,east:475675,north:126020},
"浜田":{b200k:"浜田15号-4",west:475165,south:125380,east:475670,north:125720},
"波佐":{b200k:"浜田16号-1",west:475620,south:125080,east:476125,north:125420},
"臥龍山":{b200k:"浜田16号-2",west:475620,south:124780,east:476125,north:125120},
"木都賀":{b200k:"浜田16号-3",west:475170,south:125080,east:475675,north:125420},
"宇津川":{b200k:"浜田16号-4",west:475170,south:124780,east:475675,north:125120},
"備後小国":{b200k:"広島1号-1",west:478320,south:124480,east:478825,north:124820},
"下徳良":{b200k:"広島1号-2",west:478320,south:124180,east:478825,north:124520},
"敷名":{b200k:"広島1号-3",west:477870,south:124480,east:478375,north:124820},
"乃美":{b200k:"広島1号-4",west:477870,south:124180,east:478375,north:124520},
"河内":{b200k:"広島2号-1",west:478325,south:123880,east:478825,north:124220},
"竹原":{b200k:"広島2号-2",west:478325,south:123580,east:478825,north:123920},
"白市":{b200k:"広島2号-3",west:477875,south:123880,east:478375,north:124220},
"田万里市":{b200k:"広島2号-4",west:477875,south:123580,east:478375,north:123920},
"白水":{b200k:"広島3号-1",west:478325,south:123280,east:478825,north:123620},
"木江":{b200k:"広島3号-2",west:478325,south:122980,east:478825,north:123320},
"三津":{b200k:"広島3号-3",west:477875,south:123280,east:478375,north:123620},
"大長":{b200k:"広島3号-4",west:477875,south:122980,east:478375,north:123320},
"波止浜":{b200k:"広島4号-1",west:478325,south:122680,east:478825,north:123020},
"今治西部":{b200k:"広島4号-2",west:478325,south:122380,east:478825,north:122720},
"大浜":{b200k:"広島4号-3",west:477875,south:122680,east:478375,north:123020},
"菊間":{b200k:"広島4号-4",west:477875,south:122380,east:478375,north:122720},
"安芸吉田":{b200k:"広島5号-1",west:477420,south:124480,east:477925,north:124820},
"井原市":{b200k:"広島5号-2",west:477420,south:124180,east:477925,north:124520},
"佐々井":{b200k:"広島5号-3",west:476970,south:124480,east:477475,north:124820},
"可部":{b200k:"広島5号-4",west:476970,south:124180,east:477475,north:124520},
"安芸西条":{b200k:"広島6号-1",west:477425,south:123880,east:477925,north:124220},
"清水原":{b200k:"広島6号-2",west:477425,south:123580,east:477925,north:123920},
"中深川":{b200k:"広島6号-3",west:476975,south:123880,east:477475,north:124220},
"海田市":{b200k:"広島6号-4",west:476975,south:123580,east:477475,north:123920},
"安芸内海":{b200k:"広島7号-1",west:477425,south:123280,east:477925,north:123620},
"仁方":{b200k:"広島7号-2",west:477425,south:122980,east:477925,north:123320},
"吉浦":{b200k:"広島7号-3",west:476975,south:123280,east:477475,north:123620},
"呉":{b200k:"広島7号-4",west:476975,south:122980,east:477475,north:123320},
"上黒島":{b200k:"広島8号-1",west:477425,south:122680,east:477925,north:123020},
"安居島":{b200k:"広島8号-2",west:477425,south:122380,east:477925,north:122720},
"倉橋島":{b200k:"広島8号-3",west:476975,south:122680,east:477475,north:123020},
"鹿老渡":{b200k:"広島8号-4",west:476975,south:122380,east:477475,north:122720},
"琴谷":{b200k:"広島9号-1",west:476520,south:124480,east:477025,north:124820},
"飯室":{b200k:"広島9号-2",west:476520,south:124180,east:477025,north:124520},
"加計":{b200k:"広島9号-3",west:476070,south:124480,east:476575,north:124820},
"坪野":{b200k:"広島9号-4",west:476070,south:124180,east:476575,north:124520},
"祇園":{b200k:"広島10号-1",west:476525,south:123880,east:477025,north:124220},
"広島":{b200k:"広島10号-2",west:476525,south:123580,east:477025,north:123920},
"川角":{b200k:"広島10号-3",west:476075,south:123880,east:476575,north:124220},
"廿日市":{b200k:"広島10号-4",west:476075,south:123580,east:476575,north:123920},
"似島":{b200k:"広島11号-1",west:476525,south:123280,east:477025,north:123620},
"江田島":{b200k:"広島11号-2",west:476525,south:122980,east:477025,north:123320},
"厳島":{b200k:"広島11号-3",west:476075,south:123280,east:476575,north:123620},
"阿多田島":{b200k:"広島11号-4",west:476075,south:122980,east:476575,north:123320},
"大君":{b200k:"広島12号-1",west:476525,south:122680,east:477025,north:123020},
"柱島":{b200k:"広島12号-2",west:476525,south:122380,east:477025,north:122720},
"甲島":{b200k:"広島12号-3",west:476075,south:122680,east:476575,north:123020},
"三段峡":{b200k:"広島13号-1",west:475620,south:124480,east:476125,north:124820},
"戸河内":{b200k:"広島13号-2",west:475620,south:124180,east:476125,north:124520},
"出合原":{b200k:"広島13号-3",west:475170,south:124480,east:475675,north:124820},
"野入":{b200k:"広島13号-4",west:475170,south:124180,east:475675,north:124520},
"湯来":{b200k:"広島14号-1",west:475625,south:123880,east:476125,north:124220},
"津田":{b200k:"広島14号-2",west:475625,south:123580,east:476125,north:123920},
"安芸冠山":{b200k:"広島14号-3",west:475175,south:123880,east:475675,north:124220},
"宇佐郷":{b200k:"広島14号-4",west:475175,south:123580,east:475675,north:123920},
"玖波":{b200k:"広島15号-1",west:475625,south:123280,east:476125,north:123620},
"大竹":{b200k:"広島15号-2",west:475625,south:122980,east:476125,north:123320},
"周防本郷":{b200k:"広島15号-3",west:475175,south:123280,east:475675,north:123620},
"渋前":{b200k:"広島15号-4",west:475175,south:122980,east:475675,north:123320},
"岩国":{b200k:"広島16号-1",west:475625,south:122680,east:476125,north:123020},
"由宇":{b200k:"広島16号-2",west:475625,south:122380,east:476125,north:122720},
"玖珂":{b200k:"広島16号-3",west:475175,south:122680,east:475675,north:123020},
"上久原":{b200k:"広島16号-4",west:475175,south:122380,east:475675,north:122720},
"鈍川":{b200k:"松山1号-1",west:478325,south:122080,east:478825,north:122420},
"東三方ヶ森":{b200k:"松山1号-2",west:478325,south:121780,east:478825,north:122120},
"伊予北条":{b200k:"松山1号-3",west:477875,south:122080,east:478375,north:122420},
"松山北部":{b200k:"松山1号-4",west:477875,south:121780,east:478375,north:122120},
"伊予川内":{b200k:"松山2号-1",west:478325,south:121480,east:478825,north:121820},
"石墨山":{b200k:"松山2号-2",west:478325,south:121180,east:478825,north:121520},
"松山南部":{b200k:"松山2号-3",west:477875,south:121480,east:478375,north:121820},
"砥部":{b200k:"松山2号-4",west:477875,south:121180,east:478375,north:121520},
"久万":{b200k:"松山3号-1",west:478325,south:120880,east:478820,north:121220},
"笠取山":{b200k:"松山3号-2",west:478325,south:120580,east:478820,north:120920},
"総津":{b200k:"松山3号-3",west:477875,south:120880,east:478370,north:121220},
"伊予小田":{b200k:"松山3号-4",west:477875,south:120580,east:478370,north:120920},
"越知面":{b200k:"松山4号-1",west:478325,south:120280,east:478820,north:120620},
"梼原":{b200k:"松山4号-2",west:478325,south:119980,east:478820,north:120320},
"惣川":{b200k:"松山4号-3",west:477875,south:120280,east:478370,north:120620},
"土居":{b200k:"松山4号-4",west:477875,south:119980,east:478370,north:120320},
"伊予小浜":{b200k:"松山5号-1",west:477425,south:122080,east:477925,north:122420},
"三津浜":{b200k:"松山5号-2",west:477425,south:121780,east:477925,north:122120},
"津和地":{b200k:"松山5号-3",west:476975,south:122080,east:477475,north:122420},
"由利島":{b200k:"松山5号-4",west:476975,south:121780,east:477475,north:122120},
"郡中":{b200k:"松山6号-1",west:477425,south:121480,east:477925,north:121820},
"上灘":{b200k:"松山6号-2",west:477395,south:121180,east:477895,north:121520},
"中山":{b200k:"松山7号-1",west:477425,south:120880,east:477920,north:121220},
"内子":{b200k:"松山7号-2",west:477425,south:120580,east:477920,north:120920},
"串":{b200k:"松山7号-3",west:476975,south:120880,east:477470,north:121220},
"大洲":{b200k:"松山7号-4",west:476975,south:120580,east:477470,north:120920},
"鹿野川":{b200k:"松山8号-1",west:477425,south:120280,east:477920,north:120620},
"野村":{b200k:"松山8号-2",west:477425,south:119980,east:477920,north:120320},
"東多田":{b200k:"松山8号-3",west:476975,south:120280,east:477470,north:120620},
"卯之町":{b200k:"松山8号-4",west:476975,south:119980,east:477470,north:120320},
"伊保田":{b200k:"松山9号-1",west:476525,south:122073,east:477025,north:122413},
"久賀":{b200k:"松山9号-3",west:476075,south:122105,east:476575,north:122445},
"安下庄":{b200k:"松山9号-4",west:476090,south:121780,east:476590,north:122120},
"平郡島東部":{b200k:"松山10号-3",west:476075,south:121480,east:476575,north:121820},
"伊予長浜":{b200k:"松山11号-1",west:476525,south:120880,east:477020,north:121220},
"出海":{b200k:"松山11号-2",west:476525,south:120580,east:477020,north:120920},
"八幡浜":{b200k:"松山12号-1",west:476525,south:120280,east:477020,north:120620},
"三瓶":{b200k:"松山12号-2",west:476525,south:119980,east:477020,north:120320},
"湊浦":{b200k:"松山12号-3",west:476075,south:120340,east:476570,north:120680},
"伊予大島":{b200k:"松山12号-4",west:476075,south:119980,east:476570,north:120320},
"大畠":{b200k:"松山13号-1",west:475625,south:122080,east:476125,north:122420},
"阿月":{b200k:"松山13号-2",west:475625,south:121780,east:476125,north:122120},
"柳井":{b200k:"松山13号-3",west:475175,south:122080,east:475675,north:122420},
"水場":{b200k:"松山13号-4",west:475145,south:121780,east:475645,north:122120},
"平郡島":{b200k:"松山14号-1",west:475625,south:121480,east:476125,north:121820},
"周防八島":{b200k:"松山14号-2",west:475625,south:121180,east:476125,north:121520},
"室津":{b200k:"松山14号-3",west:475175,south:121480,east:475675,north:121820},
"三机":{b200k:"松山16号-1",west:475625,south:120280,east:476120,north:120620},
"二名津":{b200k:"松山16号-2",west:475625,south:119980,east:476120,north:120320},
"三崎":{b200k:"松山16号-4",west:475175,south:119980,east:475670,north:120320},
"土佐松原":{b200k:"宇和島1号-1",west:478325,south:119680,east:478820,north:120020},
"田野々":{b200k:"宇和島1号-2",west:478325,south:119380,east:478820,north:119720},
"下鍵山":{b200k:"宇和島1号-3",west:477875,south:119680,east:478370,north:120020},
"江川崎":{b200k:"宇和島1号-4",west:477875,south:119380,east:478370,north:119720},
"大用":{b200k:"宇和島2号-1",west:478325,south:119080,east:478820,north:119420},
"蕨岡":{b200k:"宇和島2号-2",west:478325,south:118780,east:478820,north:119120},
"口屋内":{b200k:"宇和島2号-3",west:477875,south:119080,east:478370,north:119420},
"川登":{b200k:"宇和島2号-4",west:477875,south:118780,east:478370,north:119120},
"土佐中村":{b200k:"宇和島3号-1",west:478345,south:118480,east:478840,north:118820},
"下ノ加江":{b200k:"宇和島3号-2",west:478325,south:118180,east:478820,north:118520},
"有岡":{b200k:"宇和島3号-3",west:477875,south:118480,east:478370,north:118820},
"来栖野":{b200k:"宇和島3号-4",west:477875,south:118180,east:478370,north:118520},
"土佐清水":{b200k:"宇和島4号-1",west:478330,south:117880,east:478825,north:118220},
"足摺岬":{b200k:"宇和島4号-2",west:478530,south:117730,east:479020,north:118070},
"下川口":{b200k:"宇和島4号-3",west:477880,south:117880,east:478375,north:118220},
"近永":{b200k:"宇和島5号-1",west:477425,south:119680,east:477920,north:120020},
"松丸":{b200k:"宇和島5号-2",west:477425,south:119380,east:477920,north:119720},
"伊予吉田":{b200k:"宇和島5号-3",west:476975,south:119680,east:477470,north:120020},
"宇和島":{b200k:"宇和島5号-4",west:476975,south:119380,east:477470,north:119720},
"御内":{b200k:"宇和島6号-1",west:477425,south:119080,east:477920,north:119420},
"楠山":{b200k:"宇和島6号-2",west:477425,south:118780,east:477920,north:119120},
"伊予岩松":{b200k:"宇和島6号-3",west:476975,south:119080,east:477470,north:119420},
"柏":{b200k:"宇和島6号-4",west:476975,south:118780,east:477470,north:119120},
"宿毛":{b200k:"宇和島7号-1",west:477425,south:118480,east:477920,north:118820},
"小筑紫":{b200k:"宇和島7号-2",west:477425,south:118180,east:477920,north:118520},
"城辺":{b200k:"宇和島7号-3",west:476975,south:118480,east:477470,north:118820},
"福浦":{b200k:"宇和島7号-4",west:476975,south:118180,east:477470,north:118520},
"柏島":{b200k:"宇和島8号-1",west:477430,south:117880,east:477925,north:118220},
"母島":{b200k:"宇和島8号-4",west:476980,south:117670,east:477470,north:118010},
"伊予高山":{b200k:"宇和島9号-1",west:476505,south:119680,east:477000,north:120020},
"遊子":{b200k:"宇和島9号-2",west:476525,south:119380,east:477020,north:119720},
"戸島":{b200k:"宇和島9号-4",west:476075,south:119380,east:476570,north:119720},
"結出":{b200k:"宇和島10号-1",west:476525,south:119080,east:477020,north:119420},
"魚神山":{b200k:"宇和島10号-2",west:476525,south:118780,east:477020,north:119120},
"日振島":{b200k:"宇和島10号-3",west:476075,south:119080,east:476570,north:119420},
"伊予鹿島":{b200k:"宇和島11号-1",west:476525,south:118480,east:477020,north:118820},
"高茂岬":{b200k:"宇和島11号-2",west:476525,south:118180,east:477020,north:118520},
"鵜来島":{b200k:"宇和島12号-1",west:476530,south:117790,east:477020,north:118130},
"保戸島":{b200k:"宇和島14号-3",west:475175,south:118930,east:475670,north:119270},
"鶴御崎":{b200k:"宇和島15号-3",west:475175,south:118480,east:475670,north:118820},
"沖黒島":{b200k:"宇和島15号-4",west:475175,south:118180,east:475670,north:118520},
"三隅":{b200k:"見島4号-1",west:474705,south:125080,east:475210,north:125420},
"仙道郷":{b200k:"見島4号-2",west:474720,south:124780,east:475225,north:125120},
"益田":{b200k:"見島4号-4",west:474270,south:124780,east:474775,north:125120},
"飯浦":{b200k:"見島8号-2",west:473820,south:124780,east:474325,north:125120},
"見島":{b200k:"見島16号-1",west:472020,south:125080,east:472525,north:125420},
"都茂郷":{b200k:"山口1号-1",west:474720,south:124480,east:475225,north:124820},
"石谷":{b200k:"山口1号-2",west:474720,south:124180,east:475225,north:124520},
"石見横田":{b200k:"山口1号-3",west:474270,south:124480,east:474775,north:124820},
"日原":{b200k:"山口1号-4",west:474270,south:124180,east:474775,north:124520},
"安蔵寺山":{b200k:"山口2号-1",west:474725,south:123880,east:475225,north:124220},
"六日市":{b200k:"山口2号-2",west:474725,south:123580,east:475225,north:123920},
"津和野":{b200k:"山口2号-3",west:474275,south:123880,east:474775,north:124220},
"椛谷":{b200k:"山口2号-4",west:474275,south:123580,east:474775,north:123920},
"周防広瀬":{b200k:"山口3号-1",west:474725,south:123280,east:475225,north:123620},
"周防須万":{b200k:"山口3号-2",west:474725,south:122980,east:475225,north:123320},
"莇ヶ岳":{b200k:"山口3号-3",west:474275,south:123280,east:474775,north:123620},
"周防鹿野":{b200k:"山口3号-4",west:474275,south:122980,east:474775,north:123320},
"菅野湖":{b200k:"山口4号-1",west:474725,south:122680,east:475225,north:123020},
"呼坂":{b200k:"山口4号-2",west:474725,south:122380,east:475225,north:122720},
"須々万本郷":{b200k:"山口4号-3",west:474275,south:122680,east:474775,north:123020},
"徳山":{b200k:"山口4号-4",west:474275,south:122380,east:474775,north:122720},
"江崎":{b200k:"山口5号-1",west:473820,south:124480,east:474325,north:124820},
"長門新市":{b200k:"山口5号-2",west:473820,south:124180,east:474325,north:124520},
"須佐":{b200k:"山口5号-3",west:473370,south:124480,east:473875,north:124820},
"宇田":{b200k:"山口5号-4",west:473370,south:124180,east:473875,north:124520},
"十種ヶ峰":{b200k:"山口6号-1",west:473825,south:123880,east:474325,north:124220},
"徳佐中":{b200k:"山口6号-2",west:473825,south:123580,east:474325,north:123920},
"長門広瀬":{b200k:"山口6号-3",west:473375,south:123880,east:473875,north:124220},
"生雲中":{b200k:"山口6号-4",west:473375,south:123580,east:473875,north:123920},
"大原湖":{b200k:"山口7号-1",west:473825,south:123280,east:474325,north:123620},
"堀":{b200k:"山口7号-2",west:473825,south:122980,east:474325,north:123320},
"長門峡":{b200k:"山口7号-3",west:473375,south:123280,east:473875,north:123620},
"仁保":{b200k:"山口7号-4",west:473375,south:122980,east:473875,north:123320},
"島地":{b200k:"山口8号-1",west:473825,south:122680,east:474325,north:123020},
"福川":{b200k:"山口8号-2",west:473825,south:122380,east:474325,north:122720},
"矢田":{b200k:"山口8号-3",west:473375,south:122680,east:473875,north:123020},
"防府":{b200k:"山口8号-4",west:473375,south:122380,east:473875,north:122720},
"櫃島":{b200k:"山口9号-2",west:472920,south:124180,east:473425,north:124520},
"越ヶ浜":{b200k:"山口10号-1",west:472925,south:123880,east:473425,north:124220},
"萩":{b200k:"山口10号-2",west:472925,south:123580,east:473425,north:123920},
"通":{b200k:"山口10号-3",west:472475,south:123880,east:472975,north:124220},
"三隅中":{b200k:"山口10号-4",west:472475,south:123580,east:472975,north:123920},
"佐々並":{b200k:"山口11号-1",west:472925,south:123280,east:473425,north:123620},
"山口":{b200k:"山口11号-2",west:472925,south:122980,east:473425,north:123320},
"秋吉台北部":{b200k:"山口11号-3",west:472475,south:123280,east:472975,north:123620},
"秋吉台":{b200k:"山口11号-4",west:472475,south:122980,east:472975,north:123320},
"小郡":{b200k:"山口12号-1",west:472925,south:122680,east:473425,north:123020},
"台道":{b200k:"山口12号-2",west:472925,south:122380,east:473425,north:122720},
"湯ノ口":{b200k:"山口12号-3",west:472475,south:122680,east:472975,north:123020},
"阿知須":{b200k:"山口12号-4",west:472475,south:122380,east:472975,north:122720},
"青海島北部":{b200k:"山口14号-1",west:472025,south:123880,east:472525,north:124220},
"仙崎":{b200k:"山口14号-2",west:472025,south:123580,east:472525,north:123920},
"長門古市":{b200k:"山口14号-4",west:471575,south:123590,east:472075,north:123930},
"長門湯本":{b200k:"山口15号-1",west:472025,south:123280,east:472525,north:123620},
"於福":{b200k:"山口15号-2",west:472025,south:122980,east:472525,north:123320},
"俵山":{b200k:"山口15号-3",west:471575,south:123280,east:472075,north:123620},
"西市":{b200k:"山口15号-4",west:471575,south:122980,east:472075,north:123320},
"伊佐":{b200k:"山口16号-1",west:472025,south:122680,east:472525,north:123020},
"厚狭":{b200k:"山口16号-2",west:472025,south:122380,east:472525,north:122720},
"田部":{b200k:"山口16号-3",west:471575,south:122680,east:472075,north:123020},
"小月":{b200k:"山口16号-4",west:471575,south:122380,east:472075,north:122720},
"光":{b200k:"中津1号-1",west:474725,south:122080,east:475225,north:122420},
"笠戸島":{b200k:"中津1号-3",west:474275,south:122080,east:474775,north:122420},
"祝島":{b200k:"中津2号-1",west:474725,south:121480,east:475225,north:121820},
"野島":{b200k:"中津5号-1",west:473825,south:122080,east:474325,north:122420},
"佐波島":{b200k:"中津5号-3",west:473375,south:122080,east:473875,north:122420},
"姫島":{b200k:"中津6号-2",west:473825,south:121180,east:474325,north:121520},
"竹田津":{b200k:"中津6号-4",west:473375,south:121180,east:473875,north:121520},
"富来浦":{b200k:"中津7号-1",west:473825,south:120880,east:474320,north:121220},
"鶴川":{b200k:"中津7号-2",west:473825,south:120580,east:474320,north:120920},
"香々地":{b200k:"中津7号-3",west:473375,south:120880,east:473870,north:121220},
"両子山":{b200k:"中津7号-4",west:473375,south:120580,east:473870,north:120920},
"下原":{b200k:"中津8号-1",west:473825,south:120280,east:474320,north:120620},
"住吉浜":{b200k:"中津8号-2",west:473825,south:119980,east:474320,north:120320},
"若宮":{b200k:"中津8号-3",west:473375,south:120280,east:473870,north:120620},
"杵築":{b200k:"中津8号-4",west:473375,south:119980,east:473870,north:120320},
"竹島":{b200k:"中津9号-1",west:472925,south:122080,east:473425,north:122420},
"宇部東部":{b200k:"中津9号-3",west:472475,south:122080,east:472975,north:122420},
"浜":{b200k:"中津11号-1",west:472925,south:120880,east:473420,north:121220},
"豊後高田":{b200k:"中津11号-2",west:472925,south:120580,east:473420,north:120920},
"定留":{b200k:"中津11号-3",west:472475,south:120880,east:472970,north:121220},
"宇佐":{b200k:"中津11号-4",west:472475,south:120580,east:472970,north:120920},
"立石":{b200k:"中津12号-1",west:472925,south:120280,east:473420,north:120620},
"豊後豊岡":{b200k:"中津12号-2",west:472925,south:119980,east:473420,north:120320},
"下市":{b200k:"中津12号-3",west:472475,south:120280,east:472970,north:120620},
"斉藤":{b200k:"中津12号-4",west:472475,south:119980,east:472970,north:120320},
"宇部":{b200k:"中津13号-1",west:472025,south:122080,east:472525,north:122420},
"白野江":{b200k:"中津13号-3",west:471575,south:122080,east:472075,north:122420},
"喜多久":{b200k:"中津13号-4",west:471560,south:121780,east:472060,north:122120},
"神ノ島":{b200k:"中津14号-3",west:471560,south:121480,east:472060,north:121820},
"蓑島":{b200k:"中津14号-4",west:471575,south:121180,east:472075,north:121520},
"中津":{b200k:"中津15号-1",west:472025,south:120880,east:472520,north:121220},
"土佐井":{b200k:"中津15号-2",west:472025,south:120580,east:472520,north:120920},
"椎田":{b200k:"中津15号-3",west:471575,south:120880,east:472070,north:121220},
"下河内":{b200k:"中津15号-4",west:471575,south:120580,east:472070,north:120920},
"耶馬溪東部":{b200k:"中津16号-1",west:472025,south:120280,east:472520,north:120620},
"深耶馬溪":{b200k:"中津16号-2",west:472025,south:119980,east:472520,north:120320},
"耶馬溪西部":{b200k:"中津16号-3",west:471575,south:120280,east:472070,north:120620},
"裏耶馬溪":{b200k:"中津16号-4",west:471575,south:119980,east:472070,north:120320},
"佐賀関":{b200k:"大分1号-1",west:474705,south:119530,east:475200,north:119870},
"坂ノ市":{b200k:"大分1号-4",west:474275,south:119400,east:474770,north:119740},
"無垢島":{b200k:"大分2号-1",west:474725,south:119080,east:475220,north:119420},
"浅海井":{b200k:"大分2号-2",west:474725,south:118780,east:475220,north:119120},
"臼杵":{b200k:"大分2号-3",west:474275,south:119080,east:474770,north:119420},
"津久見":{b200k:"大分2号-4",west:474275,south:118780,east:474770,north:119120},
"佐伯":{b200k:"大分3号-1",west:474725,south:118480,east:475220,north:118820},
"畑野浦":{b200k:"大分3号-2",west:474725,south:118180,east:475220,north:118520},
"植松":{b200k:"大分3号-3",west:474275,south:118480,east:474770,north:118820},
"上直見":{b200k:"大分3号-4",west:474275,south:118180,east:474770,north:118520},
"蒲江":{b200k:"大分4号-1",west:474730,south:117880,east:475225,north:118220},
"深島":{b200k:"大分4号-2",west:474730,south:117580,east:475220,north:117920},
"三川内":{b200k:"大分4号-3",west:474280,south:117880,east:474775,north:118220},
"古江":{b200k:"大分4号-4",west:474280,south:117580,east:474770,north:117920},
"家島":{b200k:"大分5号-1",west:473825,south:119680,east:474320,north:120020},
"鶴崎":{b200k:"大分5号-2",west:473825,south:119380,east:474320,north:119720},
"別府東部":{b200k:"大分5号-3",west:473375,south:119680,east:473870,north:120020},
"大分":{b200k:"大分5号-4",west:473375,south:119380,east:473870,north:119720},
"戸次本町":{b200k:"大分6号-1",west:473825,south:119080,east:474320,north:119420},
"犬飼":{b200k:"大分6号-2",west:473825,south:118780,east:474320,north:119120},
"野津原":{b200k:"大分6号-3",west:473375,south:119080,east:473870,north:119420},
"田中":{b200k:"大分6号-4",west:473375,south:118780,east:473870,north:119120},
"佩楯山":{b200k:"大分7号-1",west:473825,south:118480,east:474320,north:118820},
"千束":{b200k:"大分7号-2",west:473825,south:118180,east:474320,north:118520},
"三重町":{b200k:"大分7号-3",west:473375,south:118480,east:473870,north:118820},
"中津留":{b200k:"大分7号-4",west:473375,south:118180,east:473870,north:118520},
"重岡":{b200k:"大分8号-1",west:473830,south:117880,east:474325,north:118220},
"熊田":{b200k:"大分8号-2",west:473830,south:117580,east:474320,north:117920},
"木浦鉱山":{b200k:"大分8号-3",west:473380,south:117880,east:473875,north:118220},
"祝子川":{b200k:"大分8号-4",west:473380,south:117580,east:473870,north:117920},
"別府西部":{b200k:"大分9号-1",west:472925,south:119680,east:473420,north:120020},
"小野屋":{b200k:"大分9号-2",west:472925,south:119380,east:473420,north:119720},
"日出生台":{b200k:"大分9号-3",west:472475,south:119680,east:472970,north:120020},
"湯平":{b200k:"大分9号-4",west:472475,south:119380,east:472970,north:119720},
"豊後今市":{b200k:"大分10号-1",west:472925,south:119080,east:473420,north:119420},
"朝地":{b200k:"大分10号-2",west:472925,south:118780,east:473420,north:119120},
"大船山":{b200k:"大分10号-3",west:472475,south:119080,east:472970,north:119420},
"久住":{b200k:"大分10号-4",west:472475,south:118780,east:472970,north:119120},
"竹田":{b200k:"大分11号-1",west:472925,south:118480,east:473420,north:118820},
"小原":{b200k:"大分11号-2",west:472925,south:118180,east:473420,north:118520},
"桜町":{b200k:"大分11号-3",west:472475,south:118480,east:472970,north:118820},
"豊後柏原":{b200k:"大分11号-4",west:472475,south:118180,east:472970,north:118520},
"見立":{b200k:"大分12号-1",west:472930,south:117880,east:473425,north:118220},
"大菅":{b200k:"大分12号-2",west:472930,south:117580,east:473420,north:117920},
"祖母山":{b200k:"大分12号-3",west:472480,south:117880,east:472975,north:118220},
"三田井":{b200k:"大分12号-4",west:472480,south:117580,east:472970,north:117920},
"豊後森":{b200k:"大分13号-1",west:472025,south:119680,east:472520,north:120020},
"豊後中村":{b200k:"大分13号-2",west:472025,south:119380,east:472520,north:119720},
"天ヶ瀬":{b200k:"大分13号-3",west:471575,south:119680,east:472070,north:120020},
"杖立":{b200k:"大分13号-4",west:471575,south:119380,east:472070,north:119720},
"湯坪":{b200k:"大分14号-1",west:472025,south:119080,east:472520,north:119420},
"久住山":{b200k:"大分14号-2",west:472025,south:118780,east:472520,north:119120},
"宮原":{b200k:"大分14号-3",west:471575,south:119080,east:472070,north:119420},
"満願寺":{b200k:"大分14号-4",west:471575,south:118780,east:472070,north:119120},
"坂梨":{b200k:"大分15号-1",west:472025,south:118480,east:472520,north:118820},
"根子岳":{b200k:"大分15号-2",west:472025,south:118180,east:472520,north:118520},
"坊中":{b200k:"大分15号-3",west:471575,south:118480,east:472070,north:118820},
"阿蘇山":{b200k:"大分15号-4",west:471575,south:118180,east:472070,north:118520},
"高森":{b200k:"大分16号-1",west:472030,south:117880,east:472525,north:118220},
"馬見原":{b200k:"大分16号-2",west:472030,south:117580,east:472520,north:117920},
"肥後吉田":{b200k:"大分16号-3",west:471580,south:117880,east:472075,north:118220},
"大平":{b200k:"大分16号-4",west:471580,south:117580,east:472070,north:117920},
"島浦":{b200k:"延岡1号-3",west:474280,south:117280,east:474770,north:117620},
"延岡北部":{b200k:"延岡5号-1",west:473830,south:117280,east:474320,north:117620},
"延岡":{b200k:"延岡5号-2",west:473830,south:116980,east:474320,north:117320},
"行縢山":{b200k:"延岡5号-3",west:473380,south:117280,east:473870,north:117620},
"川水流":{b200k:"延岡5号-4",west:473380,south:116980,east:473870,north:117320},
"日向":{b200k:"延岡6号-1",west:473830,south:116680,east:474320,north:117020},
"平岩":{b200k:"延岡6号-2",west:473830,south:116380,east:474320,north:116720},
"上井野":{b200k:"延岡6号-3",west:473380,south:116680,east:473870,north:117020},
"山陰":{b200k:"延岡6号-4",west:473380,south:116380,east:473870,north:116720},
"都農":{b200k:"延岡7号-3",west:473380,south:116080,east:473870,north:116420},
"川南":{b200k:"延岡7号-4",west:473380,south:115780,east:473870,north:116120},
"高鍋":{b200k:"延岡8号-3",west:473380,south:115480,east:473870,north:115820},
"日向日置":{b200k:"延岡8号-4",west:473380,south:115180,east:473870,north:115520},
"日之影":{b200k:"延岡9号-1",west:472930,south:117280,east:473420,north:117620},
"宇納間":{b200k:"延岡9号-2",west:472930,south:116980,east:473420,north:117320},
"諸塚山":{b200k:"延岡9号-3",west:472480,south:117280,east:472970,north:117620},
"諸塚":{b200k:"延岡9号-4",west:472480,south:116980,east:472970,north:117320},
"田代":{b200k:"延岡10号-1",west:472930,south:116680,east:473420,north:117020},
"坪谷":{b200k:"延岡10号-2",west:472930,south:116380,east:473420,north:116720},
"清水岳":{b200k:"延岡10号-3",west:472480,south:116680,east:472970,north:117020},
"神門":{b200k:"延岡10号-4",west:472480,south:116380,east:472970,north:116720},
"尾鈴山":{b200k:"延岡11号-1",west:472930,south:116080,east:473420,north:116420},
"石河内":{b200k:"延岡11号-2",west:472930,south:115780,east:473420,north:116120},
"尾八重":{b200k:"延岡11号-3",west:472480,south:116080,east:472970,north:116420},
"瓢丹淵":{b200k:"延岡11号-4",west:472480,south:115780,east:472970,north:116120},
"妻":{b200k:"延岡12号-1",west:472930,south:115480,east:473420,north:115820},
"佐土原":{b200k:"延岡12号-2",west:472930,south:115180,east:473420,north:115520},
"三納":{b200k:"延岡12号-3",west:472480,south:115480,east:472970,north:115820},
"岩崎":{b200k:"延岡12号-4",west:472480,south:115180,east:472970,north:115520},
"鞍岡":{b200k:"延岡13号-1",west:472030,south:117280,east:472520,north:117620},
"胡摩山":{b200k:"延岡13号-2",west:472030,south:116980,east:472520,north:117320},
"緑川":{b200k:"延岡13号-3",west:471580,south:117280,east:472070,north:117620},
"国見岳":{b200k:"延岡13号-4",west:471580,south:116980,east:472070,north:117320},
"上椎葉":{b200k:"延岡14号-1",west:472030,south:116680,east:472520,north:117020},
"日向大河内":{b200k:"延岡14号-2",west:472030,south:116380,east:472520,north:116720},
"不土野":{b200k:"延岡14号-3",west:471580,south:116680,east:472070,north:117020},
"古屋敷":{b200k:"延岡14号-4",west:471580,south:116380,east:472070,north:116720},
"石堂山":{b200k:"延岡15号-1",west:472030,south:116080,east:472520,north:116420},
"村所":{b200k:"延岡15号-2",west:472030,south:115780,east:472520,north:116120},
"市房山":{b200k:"延岡15号-3",west:471580,south:116080,east:472070,north:116420},
"槻木":{b200k:"延岡15号-4",west:471580,south:115780,east:472070,north:116120},
"掃部岳":{b200k:"延岡16号-1",west:472030,south:115480,east:472520,north:115820},
"大森岳":{b200k:"延岡16号-2",west:472030,south:115180,east:472520,north:115520},
"田代ヶ八重":{b200k:"延岡16号-3",west:471580,south:115480,east:472070,north:115820},
"須木":{b200k:"延岡16号-4",west:471580,south:115180,east:472070,north:115520},
"宮崎北部":{b200k:"宮崎9号-1",west:472930,south:114880,east:473420,north:115220},
"宮崎":{b200k:"宮崎9号-2",west:472930,south:114580,east:473420,north:114920},
"日向本庄":{b200k:"宮崎9号-3",west:472480,south:114880,east:472970,north:115220},
"田野":{b200k:"宮崎9号-4",west:472480,south:114580,east:472970,north:114920},
"日向青島":{b200k:"宮崎10号-1",west:472930,south:114280,east:473415,north:114620},
"郷之原":{b200k:"宮崎10号-2",west:472930,south:113980,east:473415,north:114320},
"築地原":{b200k:"宮崎10号-3",west:472480,south:114280,east:472965,north:114620},
"坂元":{b200k:"宮崎10号-4",west:472480,south:113980,east:472965,north:114320},
"鵜戸":{b200k:"宮崎11号-1",west:472930,south:113680,east:473415,north:114020},
"油津":{b200k:"宮崎11号-2",west:472930,south:113380,east:473415,north:113720},
"飫肥":{b200k:"宮崎11号-3",west:472480,south:113680,east:472965,north:114020},
"榎原":{b200k:"宮崎11号-4",west:472480,south:113380,east:472965,north:113720},
"幸島":{b200k:"宮崎12号-1",west:472930,south:113080,east:473415,north:113420},
"本城":{b200k:"宮崎12号-3",west:472480,south:113080,east:472965,north:113420},
"都井岬":{b200k:"宮崎12号-4",west:472430,south:112780,east:472915,north:113120},
"紙屋":{b200k:"宮崎13号-1",west:472030,south:114880,east:472520,north:115220},
"有水":{b200k:"宮崎13号-2",west:472030,south:114580,east:472520,north:114920},
"高原":{b200k:"宮崎13号-3",west:471580,south:114880,east:472070,north:115220},
"高崎新田":{b200k:"宮崎13号-4",west:471580,south:114580,east:472070,north:114920},
"高城":{b200k:"宮崎14号-1",west:472030,south:114280,east:472515,north:114620},
"山王原":{b200k:"宮崎14号-2",west:472030,south:113980,east:472515,north:114320},
"庄内":{b200k:"宮崎14号-3",west:471580,south:114280,east:472065,north:114620},
"都城":{b200k:"宮崎14号-4",west:471580,south:113980,east:472065,north:114320},
"尾平野":{b200k:"宮崎15号-1",west:472030,south:113680,east:472515,north:114020},
"園田":{b200k:"宮崎15号-2",west:472030,south:113380,east:472515,north:113720},
"末吉":{b200k:"宮崎15号-3",west:471580,south:113680,east:472065,north:114020},
"大隅松山":{b200k:"宮崎15号-4",west:471580,south:113380,east:472065,north:113720},
"串間":{b200k:"宮崎16号-1",west:472030,south:113080,east:472515,north:113420},
"志布志":{b200k:"宮崎16号-3",west:471580,south:113080,east:472065,north:113420},
"大隅柏原":{b200k:"宮崎16号-4",west:471580,south:112780,east:472065,north:113120},
"長門川尻":{b200k:"小串2号-1",west:471125,south:123880,east:471625,north:124220},
"阿川":{b200k:"小串2号-2",west:471125,south:123580,east:471625,north:123920},
"角島":{b200k:"小串2号-4",west:470675,south:123580,east:471175,north:123920},
"滝部":{b200k:"小串3号-1",west:471110,south:123280,east:471610,north:123620},
"小串":{b200k:"小串3号-2",west:471125,south:122980,east:471625,north:123320},
"川棚温泉":{b200k:"小串4号-1",west:471125,south:122680,east:471625,north:123020},
"安岡":{b200k:"小串4号-2",west:471125,south:122380,east:471625,north:122720},
"蓋井島":{b200k:"小串4号-3",west:470675,south:122680,east:471175,north:123020},
"下関":{b200k:"福岡1号-1",west:471125,south:122080,east:471625,north:122420},
"小倉":{b200k:"福岡1号-2",west:471125,south:121780,east:471625,north:122120},
"六連島":{b200k:"福岡1号-3",west:470675,south:122100,east:471175,north:122440},
"八幡":{b200k:"福岡1号-4",west:470675,south:121780,east:471175,north:122120},
"苅田":{b200k:"福岡2号-1",west:471125,south:121480,east:471625,north:121820},
"行橋":{b200k:"福岡2号-2",west:471125,south:121180,east:471625,north:121520},
"徳力":{b200k:"福岡2号-3",west:470675,south:121480,east:471175,north:121820},
"金田":{b200k:"福岡2号-4",west:470675,south:121180,east:471175,north:121520},
"豊前本庄":{b200k:"福岡3号-1",west:471125,south:120880,east:471620,north:121220},
"伊良原":{b200k:"福岡3号-2",west:471125,south:120580,east:471620,north:120920},
"田川":{b200k:"福岡3号-3",west:470675,south:120880,east:471170,north:121220},
"筑前山田":{b200k:"福岡3号-4",west:470675,south:120580,east:471170,north:120920},
"英彦山":{b200k:"福岡4号-1",west:471125,south:120280,east:471620,north:120620},
"大行司":{b200k:"福岡4号-2",west:471125,south:119980,east:471620,north:120320},
"小石原":{b200k:"福岡4号-3",west:470675,south:120280,east:471170,north:120620},
"吉井":{b200k:"福岡4号-4",west:470675,south:119980,east:471170,north:120320},
"岩屋":{b200k:"福岡5号-1",west:470225,south:122080,east:470725,north:122420},
"折尾":{b200k:"福岡5号-2",west:470225,south:121780,east:470725,north:122120},
"吉木":{b200k:"福岡5号-4",west:469775,south:121780,east:470275,north:122120},
"中間":{b200k:"福岡6号-1",west:470225,south:121480,east:470725,north:121820},
"直方":{b200k:"福岡6号-2",west:470225,south:121180,east:470725,north:121520},
"筑前東郷":{b200k:"福岡6号-3",west:469775,south:121480,east:470275,north:121820},
"脇田":{b200k:"福岡6号-4",west:469775,south:121180,east:470275,north:121520},
"飯塚":{b200k:"福岡7号-1",west:470225,south:120880,east:470720,north:121220},
"大隈":{b200k:"福岡7号-2",west:470225,south:120580,east:470720,north:120920},
"篠栗":{b200k:"福岡7号-3",west:469775,south:120880,east:470270,north:121220},
"太宰府":{b200k:"福岡7号-4",west:469775,south:120580,east:470270,north:120920},
"甘木":{b200k:"福岡8号-1",west:470225,south:120280,east:470720,north:120620},
"田主丸":{b200k:"福岡8号-2",west:470225,south:119980,east:470720,north:120320},
"二日市":{b200k:"福岡8号-3",west:469775,south:120280,east:470270,north:120620},
"鳥栖":{b200k:"福岡8号-4",west:469775,south:119980,east:470270,north:120320},
"神湊":{b200k:"福岡9号-2",west:469325,south:121780,east:469825,north:122120},
"津屋崎":{b200k:"福岡10号-1",west:469325,south:121480,east:469825,north:121820},
"古賀":{b200k:"福岡10号-2",west:469325,south:121180,east:469825,north:121520},
"志賀島":{b200k:"福岡10号-4",west:468875,south:121180,east:469375,north:121520},
"福岡":{b200k:"福岡11号-1",west:469325,south:120880,east:469820,north:121220},
"福岡南部":{b200k:"福岡11号-2",west:469325,south:120580,east:469820,north:120920},
"福岡西部":{b200k:"福岡11号-3",west:468875,south:120880,east:469370,north:121220},
"福岡西南部":{b200k:"福岡11号-4",west:468875,south:120580,east:469370,north:120920},
"不入道":{b200k:"福岡12号-1",west:469325,south:120280,east:469820,north:120620},
"中原":{b200k:"福岡12号-2",west:469325,south:119980,east:469820,north:120320},
"脊振山":{b200k:"福岡12号-3",west:468875,south:120280,east:469370,north:120620},
"広滝":{b200k:"福岡12号-4",west:468875,south:119980,east:469370,north:120320},
"玄界島":{b200k:"福岡14号-2",west:468425,south:121180,east:468925,north:121520},
"宮浦":{b200k:"福岡15号-1",west:468425,south:120880,east:468920,north:121220},
"前原":{b200k:"福岡15号-2",west:468425,south:120580,east:468920,north:120920},
"芥屋":{b200k:"福岡15号-4",west:467975,south:120615,east:468470,north:120955},
"雷山":{b200k:"福岡16号-1",west:468425,south:120280,east:468920,north:120620},
"古湯":{b200k:"福岡16号-2",west:468425,south:119980,east:468920,north:120320},
"浜崎":{b200k:"福岡16号-3",west:467975,south:120280,east:468470,north:120620},
"相知":{b200k:"福岡16号-4",west:467975,south:119980,east:468470,north:120320},
"日田":{b200k:"熊本1号-1",west:471125,south:119680,east:471620,north:120020},
"豊後大野":{b200k:"熊本1号-2",west:471125,south:119380,east:471620,north:119720},
"千足":{b200k:"熊本1号-3",west:470675,south:119680,east:471170,north:120020},
"十籠":{b200k:"熊本1号-4",west:470675,south:119380,east:471170,north:119720},
"鯛生":{b200k:"熊本2号-1",west:471125,south:119080,east:471620,north:119420},
"立門":{b200k:"熊本2号-2",west:471125,south:118780,east:471620,north:119120},
"宮ノ尾":{b200k:"熊本2号-3",west:470675,south:119080,east:471170,north:119420},
"八方ヶ岳":{b200k:"熊本2号-4",west:470675,south:118780,east:471170,north:119120},
"鞍岳":{b200k:"熊本3号-1",west:471125,south:118480,east:471620,north:118820},
"立野":{b200k:"熊本3号-2",west:471125,south:118180,east:471620,north:118520},
"菊池":{b200k:"熊本3号-3",west:470675,south:118480,east:471170,north:118820},
"肥後大津":{b200k:"熊本3号-4",west:470675,south:118180,east:471170,north:118520},
"大矢野原":{b200k:"熊本4号-1",west:471130,south:117880,east:471625,north:118220},
"浜町":{b200k:"熊本4号-2",west:471130,south:117580,east:471620,north:117920},
"健軍":{b200k:"熊本4号-3",west:470680,south:117880,east:471175,north:118220},
"御船":{b200k:"熊本4号-4",west:470680,south:117580,east:471170,north:117920},
"草野":{b200k:"熊本5号-1",west:470225,south:119680,east:470720,north:120020},
"黒木":{b200k:"熊本5号-2",west:470225,south:119380,east:470720,north:119720},
"久留米":{b200k:"熊本5号-3",west:469775,south:119680,east:470270,north:120020},
"八女":{b200k:"熊本5号-4",west:469775,south:119380,east:470270,north:119720},
"高井川":{b200k:"熊本6号-1",west:470225,south:119080,east:470720,north:119420},
"山鹿":{b200k:"熊本6号-2",west:470225,south:118780,east:470720,north:119120},
"野町":{b200k:"熊本6号-3",west:469775,south:119080,east:470270,north:119420},
"関町":{b200k:"熊本6号-4",west:469775,south:118780,east:470270,north:119120},
"来民":{b200k:"熊本7号-1",west:470225,south:118480,east:470720,north:118820},
"植木":{b200k:"熊本7号-2",west:470225,south:118180,east:470720,north:118520},
"玉名":{b200k:"熊本7号-3",west:469775,south:118480,east:470270,north:118820},
"伊倉":{b200k:"熊本7号-4",west:469775,south:118180,east:470270,north:118520},
"熊本":{b200k:"熊本8号-1",west:470230,south:117880,east:470725,north:118220},
"宇土":{b200k:"熊本8号-2",west:470230,south:117580,east:470720,north:117920},
"肥後船津":{b200k:"熊本8号-3",west:469780,south:117880,east:470275,north:118220},
"網津":{b200k:"熊本8号-4",west:469780,south:117580,east:470270,north:117920},
"久留米西部":{b200k:"熊本9号-1",west:469325,south:119680,east:469820,north:120020},
"羽犬塚":{b200k:"熊本9号-2",west:469325,south:119380,east:469820,north:119720},
"佐賀北部":{b200k:"熊本9号-3",west:468875,south:119680,east:469370,north:120020},
"佐賀南部":{b200k:"熊本9号-4",west:468875,south:119380,east:469370,north:119720},
"柳川":{b200k:"熊本10号-1",west:469325,south:119080,east:469820,north:119420},
"大牟田":{b200k:"熊本10号-2",west:469325,south:118780,east:469820,north:119120},
"佐賀空港":{b200k:"熊本10号-3",west:468875,south:119080,east:469370,north:119420},
"荒尾":{b200k:"熊本11号-1",west:469325,south:118480,east:469820,north:118820},
"下沖洲":{b200k:"熊本11号-2",west:469325,south:118180,east:469820,north:118520},
"多比良":{b200k:"熊本11号-4",west:468875,south:118180,east:469370,north:118520},
"島原":{b200k:"熊本12号-3",west:468915,south:117880,east:469410,north:118220},
"雲仙":{b200k:"熊本12号-4",west:468880,south:117580,east:469370,north:117920},
"小城":{b200k:"熊本13号-1",west:468425,south:119680,east:468920,north:120020},
"牛津":{b200k:"熊本13号-2",west:468425,south:119380,east:468920,north:119720},
"多久":{b200k:"熊本13号-3",west:467975,south:119680,east:468470,north:120020},
"武雄":{b200k:"熊本13号-4",west:467975,south:119380,east:468470,north:119720},
"牛屋":{b200k:"熊本14号-1",west:468425,south:119080,east:468920,north:119420},
"多良":{b200k:"熊本14号-2",west:468425,south:118780,east:468920,north:119120},
"鹿島":{b200k:"熊本14号-3",west:467975,south:119080,east:468470,north:119420},
"古枝":{b200k:"熊本14号-4",west:467975,south:118780,east:468470,north:119120},
"肥前大浦":{b200k:"熊本15号-1",west:468425,south:118480,east:468920,north:118820},
"湯江":{b200k:"熊本15号-2",west:468425,south:118180,east:468920,north:118520},
"多良岳":{b200k:"熊本15号-3",west:467975,south:118480,east:468470,north:118820},
"諫早":{b200k:"熊本15号-4",west:467975,south:118180,east:468470,north:118520},
"愛野":{b200k:"熊本16号-1",west:468440,south:117880,east:468935,north:118220},
"肥前小浜":{b200k:"熊本16号-2",west:468430,south:117580,east:468920,north:117920},
"諫早南部":{b200k:"熊本16号-3",west:467980,south:117880,east:468475,north:118220},
"畝野":{b200k:"八代1号-1",west:471130,south:117280,east:471620,north:117620},
"葉木":{b200k:"八代1号-2",west:471130,south:116980,east:471620,north:117320},
"甲佐":{b200k:"八代1号-3",west:470680,south:117280,east:471170,north:117620},
"柿迫":{b200k:"八代1号-4",west:470680,south:116980,east:471170,north:117320},
"椎原":{b200k:"八代2号-1",west:471130,south:116680,east:471620,north:117020},
"梶原":{b200k:"八代2号-2",west:471130,south:116380,east:471620,north:116720},
"宮園":{b200k:"八代2号-3",west:470680,south:116680,east:471170,north:117020},
"頭地":{b200k:"八代2号-4",west:470680,south:116380,east:471170,north:116720},
"多良木":{b200k:"八代3号-1",west:471130,south:116080,east:471620,north:116420},
"免田":{b200k:"八代3号-2",west:471130,south:115780,east:471620,north:116120},
"肥後田代":{b200k:"八代3号-3",west:470680,south:116080,east:471170,north:116420},
"人吉":{b200k:"八代3号-4",west:470680,south:115780,east:471170,north:116120},
"白髪岳":{b200k:"八代4号-1",west:471130,south:115480,east:471620,north:115820},
"日向大久保":{b200k:"八代4号-2",west:471130,south:115180,east:471620,north:115520},
"肥後大畑":{b200k:"八代4号-3",west:470680,south:115480,east:471170,north:115820},
"えびの":{b200k:"八代4号-4",west:470680,south:115180,east:471170,north:115520},
"松橋":{b200k:"八代5号-1",west:470230,south:117280,east:470720,north:117620},
"鏡":{b200k:"八代5号-2",west:470230,south:116980,east:470720,north:117320},
"松合":{b200k:"八代5号-3",west:469780,south:117280,east:470270,north:117620},
"八代":{b200k:"八代5号-4",west:469780,south:116980,east:470270,north:117320},
"坂本":{b200k:"八代6号-1",west:470230,south:116680,east:470720,north:117020},
"中津道":{b200k:"八代6号-2",west:470230,south:116380,east:470720,north:116720},
"日奈久":{b200k:"八代6号-3",west:469780,south:116680,east:470270,north:117020},
"田浦":{b200k:"八代6号-4",west:469780,south:116380,east:470270,north:116720},
"高沢":{b200k:"八代7号-1",west:470230,south:116080,east:470720,north:116420},
"一勝地":{b200k:"八代7号-2",west:470230,south:115780,east:470720,north:116120},
"佐敷":{b200k:"八代7号-3",west:469780,south:116080,east:470270,north:116420},
"大関山":{b200k:"八代7号-4",west:469760,south:115780,east:470250,north:116120},
"大塚":{b200k:"八代8号-1",west:470230,south:115480,east:470720,north:115820},
"吉松":{b200k:"八代8号-2",west:470230,south:115180,east:470720,north:115520},
"山野":{b200k:"八代8号-3",west:469780,south:115480,east:470270,north:115820},
"大口":{b200k:"八代8号-4",west:469780,south:115180,east:470270,north:115520},
"三角":{b200k:"八代9号-1",west:469330,south:117280,east:469820,north:117620},
"天草松島":{b200k:"八代9号-2",west:469330,south:116980,east:469820,north:117320},
"須川":{b200k:"八代9号-3",west:468880,south:117280,east:469370,north:117620},
"天草赤崎":{b200k:"八代9号-4",west:468880,south:116980,east:469370,north:117320},
"姫浦":{b200k:"八代10号-1",west:469330,south:116680,east:469820,north:117020},
"高戸":{b200k:"八代10号-2",west:469330,south:116380,east:469820,north:116720},
"大島子":{b200k:"八代10号-3",west:468880,south:116680,east:469370,north:117020},
"棚底":{b200k:"八代10号-4",west:468880,south:116380,east:469370,north:116720},
"計石":{b200k:"八代11号-1",west:469330,south:116080,east:469820,north:116420},
"水俣":{b200k:"八代11号-2",west:469290,south:115780,east:469780,north:116120},
"唐木崎":{b200k:"八代11号-3",west:468880,south:116080,east:469370,north:116420},
"湯出":{b200k:"八代12号-1",west:469330,south:115480,east:469820,north:115820},
"宮之元":{b200k:"八代12号-2",west:469330,south:115180,east:469820,north:115520},
"米ノ津":{b200k:"八代12号-3",west:468880,south:115480,east:469370,north:115820},
"出水":{b200k:"八代12号-4",west:468880,south:115180,east:469370,north:115520},
"口之津":{b200k:"八代13号-1",west:468430,south:117280,east:468920,north:117620},
"御領":{b200k:"八代13号-2",west:468430,south:116980,east:468920,north:117320},
"天草富岡":{b200k:"八代13号-4",west:467980,south:116980,east:468470,north:117320},
"本渡":{b200k:"八代14号-1",west:468430,south:116680,east:468920,north:117020},
"小宮地":{b200k:"八代14号-2",west:468430,south:116380,east:468920,north:116720},
"天草下田":{b200k:"八代14号-3",west:467980,south:116680,east:468470,north:117020},
"鬼海ヶ浦":{b200k:"八代14号-4",west:467980,south:116380,east:468470,north:116720},
"宮野河内":{b200k:"八代15号-1",west:468430,south:116080,east:468920,north:116420},
"薩摩鷹巣":{b200k:"八代15号-2",west:468430,south:115780,east:468920,north:116120},
"河浦":{b200k:"八代15号-3",west:467980,south:116080,east:468470,north:116420},
"牛深":{b200k:"八代15号-4",west:467980,south:115780,east:468470,north:116120},
"黒之瀬戸":{b200k:"八代16号-1",west:468430,south:115480,east:468920,north:115820},
"阿久根":{b200k:"八代16号-2",west:468430,south:115180,east:468920,north:115520},
"指江":{b200k:"八代16号-3",west:467980,south:115480,east:468470,north:115820},
"日向小林":{b200k:"鹿児島1号-1",west:471130,south:114880,east:471620,north:115220},
"高千穂峰":{b200k:"鹿児島1号-2",west:471130,south:114580,east:471620,north:114920},
"韓国岳":{b200k:"鹿児島1号-3",west:470680,south:114880,east:471170,north:115220},
"霧島温泉":{b200k:"鹿児島1号-4",west:470680,south:114580,east:471170,north:114920},
"高野":{b200k:"鹿児島2号-1",west:471130,south:114280,east:471615,north:114620},
"財部":{b200k:"鹿児島2号-2",west:471130,south:113980,east:471615,north:114320},
"日当山":{b200k:"鹿児島2号-3",west:470680,south:114280,east:471165,north:114620},
"国分":{b200k:"鹿児島2号-4",west:470680,south:113980,east:471165,north:114320},
"岩川":{b200k:"鹿児島3号-1",west:471130,south:113680,east:471615,north:114020},
"野方":{b200k:"鹿児島3号-2",west:471130,south:113380,east:471615,north:113720},
"牛根境":{b200k:"鹿児島3号-3",west:470680,south:113680,east:471165,north:114020},
"百引":{b200k:"鹿児島3号-4",west:470680,south:113380,east:471165,north:113720},
"持留":{b200k:"鹿児島4号-1",west:471130,south:113080,east:471615,north:113420},
"大隅高山":{b200k:"鹿児島4号-2",west:471130,south:112780,east:471615,north:113120},
"上祓川":{b200k:"鹿児島4号-3",west:470680,south:113080,east:471165,north:113420},
"鹿屋":{b200k:"鹿児島4号-4",west:470680,south:112780,east:471165,north:113120},
"栗野":{b200k:"鹿児島5号-1",west:470230,south:114880,east:470720,north:115220},
"横川":{b200k:"鹿児島5号-2",west:470230,south:114580,east:470720,north:114920},
"永野":{b200k:"鹿児島5号-3",west:469780,south:114880,east:470270,north:115220},
"薩摩黒木":{b200k:"鹿児島5号-4",west:469780,south:114580,east:470270,north:114920},
"石原":{b200k:"鹿児島6号-1",west:470230,south:114280,east:470715,north:114620},
"加治木":{b200k:"鹿児島6号-2",west:470230,south:113980,east:470715,north:114320},
"蒲生":{b200k:"鹿児島6号-3",west:469780,south:114280,east:470265,north:114620},
"脇元":{b200k:"鹿児島6号-4",west:469780,south:113980,east:470265,north:114320},
"桜島北部":{b200k:"鹿児島7号-1",west:470230,south:113680,east:470715,north:114020},
"桜島南部":{b200k:"鹿児島7号-2",west:470230,south:113380,east:470715,north:113720},
"鹿児島北部":{b200k:"鹿児島7号-3",west:469780,south:113680,east:470265,north:114020},
"鹿児島南部":{b200k:"鹿児島7号-4",west:469780,south:113380,east:470265,north:113720},
"垂水":{b200k:"鹿児島8号-1",west:470230,south:113080,east:470715,north:113420},
"瀬々串":{b200k:"鹿児島8号-3",west:469780,south:113080,east:470265,north:113420},
"喜入":{b200k:"鹿児島8号-4",west:469780,south:112780,east:470265,north:113120},
"湯田":{b200k:"鹿児島9号-1",west:469330,south:114880,east:469820,north:115220},
"宮之城":{b200k:"鹿児島9号-2",west:469330,south:114580,east:469820,north:114920},
"紫尾山":{b200k:"鹿児島9号-3",west:468880,south:114880,east:469370,north:115220},
"東郷":{b200k:"鹿児島9号-4",west:468880,south:114580,east:469370,north:114920},
"塔之原":{b200k:"鹿児島10号-1",west:469330,south:114280,east:469815,north:114620},
"薩摩郡山":{b200k:"鹿児島10号-2",west:469330,south:113980,east:469815,north:114320},
"川内":{b200k:"鹿児島10号-3",west:468880,south:114280,east:469365,north:114620},
"串木野":{b200k:"鹿児島10号-4",west:468880,south:113980,east:469365,north:114320},
"伊集院":{b200k:"鹿児島11号-1",west:469330,south:113680,east:469815,north:114020},
"春山":{b200k:"鹿児島11号-2",west:469330,south:113380,east:469815,north:113720},
"長里":{b200k:"鹿児島11号-3",west:468880,south:113680,east:469365,north:114020},
"伊作":{b200k:"鹿児島11号-4",west:468880,south:113380,east:469365,north:113720},
"神殿":{b200k:"鹿児島12号-1",west:469330,south:113080,east:469815,north:113420},
"知覧":{b200k:"鹿児島12号-2",west:469330,south:112780,east:469815,north:113120},
"唐仁原":{b200k:"鹿児島12号-3",west:468880,south:113080,east:469365,north:113420},
"加世田":{b200k:"鹿児島12号-4",west:468880,south:112780,east:469365,north:113120},
"大川":{b200k:"鹿児島13号-1",west:468430,south:114880,east:468920,north:115220},
"西方":{b200k:"鹿児島13号-2",west:468430,south:114580,east:468920,north:114920},
"羽島":{b200k:"鹿児島14号-1",west:468430,south:114280,east:468915,north:114620},
"荒川浜":{b200k:"鹿児島14号-2",west:468430,south:113980,east:468915,north:114320},
"片浦":{b200k:"鹿児島16号-1",west:468330,south:113020,east:468815,north:113360},
"野間岳":{b200k:"鹿児島16号-2",west:468430,south:112780,east:468915,north:113120},
"上名":{b200k:"開聞岳1号-1",west:471130,south:112480,east:471615,north:112820},
"半ヶ石":{b200k:"開聞岳1号-2",west:471130,south:112180,east:471615,north:112520},
"神川":{b200k:"開聞岳1号-3",west:470680,south:112480,east:471165,north:112820},
"大根占":{b200k:"開聞岳1号-4",west:470680,south:112180,east:471165,north:112520},
"稲尾岳":{b200k:"開聞岳2号-1",west:471130,south:111880,east:471615,north:112220},
"辺塚":{b200k:"開聞岳2号-3",west:470680,south:111880,east:471165,north:112220},
"浜尻":{b200k:"開聞岳2号-4",west:470680,south:111580,east:471165,north:111920},
"西之表":{b200k:"開聞岳4号-2",west:471150,south:110380,east:471630,north:110720},
"二月田":{b200k:"開聞岳5号-1",west:470230,south:112480,east:470715,north:112820},
"指宿":{b200k:"開聞岳5号-2",west:470230,south:112180,east:470715,north:112520},
"今和泉":{b200k:"開聞岳5号-3",west:469780,south:112480,east:470265,north:112820},
"開聞岳":{b200k:"開聞岳5号-4",west:469780,south:112180,east:470265,north:112520},
"伊座敷":{b200k:"開聞岳6号-1",west:470230,south:111820,east:470715,north:112160},
"佐多岬":{b200k:"開聞岳6号-2",west:470230,south:111520,east:470715,north:111860},
"長崎鼻":{b200k:"開聞岳6号-3",west:469780,south:111880,east:470265,north:112220},
"薩摩石垣":{b200k:"開聞岳9号-1",west:469330,south:112480,east:469815,north:112820},
"三俣":{b200k:"開聞岳9号-2",west:469330,south:112180,east:469815,north:112520},
"枕崎":{b200k:"開聞岳9号-3",west:468880,south:112473,east:469365,north:112813},
"薩摩竹島":{b200k:"開聞岳12号-1",west:469335,south:110680,east:469815,north:111020},
"薩摩硫黄島":{b200k:"開聞岳12号-3",west:468885,south:110620,east:469365,north:110960},
"坊":{b200k:"開聞岳13号-1",west:468430,south:112480,east:468915,north:112820},
"内之浦":{b200k:"開聞岳東13号-3",west:471580,south:112480,east:472065,north:112820},
"岸良":{b200k:"開聞岳東13号-4",west:471580,south:112180,east:472065,north:112520},
"国上":{b200k:"開聞岳東16号-3",west:471585,south:110695,east:472065,north:111035},
"安納":{b200k:"開聞岳東16号-4",west:471585,south:110380,east:472065,north:110720},
"浜津脇":{b200k:"屋久島東13号-3",west:471375,south:110080,east:471855,north:110420},
"大隅野間":{b200k:"屋久島1号-2",west:471285,south:109780,east:471765,north:110120},
"島間":{b200k:"屋久島2号-1",west:471065,south:109480,east:471545,north:109820},
"上中":{b200k:"屋久島2号-2",west:471075,south:109180,east:471555,north:109520},
"安房":{b200k:"屋久島6号-2",west:470190,south:109090,east:470670,north:109430},
"屋久宮之浦":{b200k:"屋久島6号-3",west:469910,south:109390,east:470390,north:109730},
"宮之浦岳":{b200k:"屋久島6号-4",west:469770,south:109090,east:470250,north:109430},
"尾之間":{b200k:"屋久島7号-3",west:469910,south:108790,east:470390,north:109130},
"一湊":{b200k:"屋久島10号-1",west:469485,south:109390,east:469965,north:109730},
"永田岳":{b200k:"屋久島10号-2",west:469340,south:109100,east:469820,north:109440},
"栗生":{b200k:"屋久島11号-1",west:469455,south:108790,east:469935,north:109130},
"口永良部島":{b200k:"屋久島14号-1",west:468495,south:109480,east:468975,north:109820},
"佐須奈":{b200k:"厳原9号-1",west:465720,south:124480,east:466225,north:124820},
"琴":{b200k:"厳原9号-2",west:465720,south:124180,east:466225,north:124520},
"佐護":{b200k:"厳原9号-3",west:465270,south:124480,east:465775,north:124820},
"鹿見":{b200k:"厳原9号-4",west:465270,south:124180,east:465775,north:124520},
"志多賀":{b200k:"厳原10号-1",west:465725,south:123880,east:466225,north:124220},
"仁位":{b200k:"厳原10号-4",west:465425,south:123580,east:465925,north:123920},
"三根":{b200k:"厳原10号-3",west:465275,south:123880,east:465775,north:124220},
"廻":{b200k:"厳原14号-2",west:464975,south:123580,east:465475,north:123920},
"鶏知":{b200k:"厳原11号-3",west:465425,south:123280,east:465925,north:123620},
"阿連":{b200k:"厳原15号-1",west:464975,south:123280,east:465475,north:123620},
"厳原":{b200k:"厳原11号-4",west:465275,south:122980,east:465775,north:123320},
"小茂田":{b200k:"厳原15号-2",west:464825,south:122980,east:465325,north:123320},
"豆酘":{b200k:"厳原16号-1",west:464975,south:122680,east:465475,north:123020},
"泉":{b200k:"厳原北12号-2",west:465720,south:124780,east:466225,north:125120},
"芦辺":{b200k:"唐津2号-3",west:467075,south:121480,east:467575,north:121820},
"印通寺":{b200k:"唐津2号-4",west:467075,south:121180,east:467575,north:121520},
"呼子":{b200k:"唐津3号-2",west:467525,south:120580,east:468020,north:120920},
"加唐島":{b200k:"唐津3号-3",west:467280,south:120880,east:467775,north:121220},
"波戸岬":{b200k:"唐津3号-4",west:467050,south:120580,east:467545,north:120920},
"唐津":{b200k:"唐津4号-1",west:467525,south:120280,east:468020,north:120620},
"徳須恵":{b200k:"唐津4号-2",west:467525,south:119980,east:468020,north:120320},
"高串":{b200k:"唐津4号-3",west:467075,south:120280,east:467570,north:120620},
"今福":{b200k:"唐津4号-4",west:467075,south:119980,east:467570,north:120320},
"勝本":{b200k:"唐津5号-2",west:466745,south:121780,east:467245,north:122120},
"湯本":{b200k:"唐津6号-1",west:466625,south:121480,east:467125,north:121820},
"郷ノ浦":{b200k:"唐津6号-2",west:466625,south:121180,east:467125,north:121520},
"鷹島":{b200k:"唐津8号-1",west:466625,south:120280,east:467120,north:120620},
"志佐":{b200k:"唐津8号-2",west:466625,south:119980,east:467120,north:120320},
"的山大島":{b200k:"唐津8号-3",west:466175,south:120305,east:466670,north:120645},
"平戸":{b200k:"唐津8号-4",west:466175,south:119980,east:466670,north:120320},
"生月島北部":{b200k:"唐津12号-1",west:465725,south:120280,east:466220,north:120620},
"生月":{b200k:"唐津12号-2",west:465725,south:119980,east:466220,north:120320},
"伊万里":{b200k:"長崎1号-1",west:467525,south:119680,east:468020,north:120020},
"有田":{b200k:"長崎1号-2",west:467525,south:119380,east:468020,north:119720},
"楠久":{b200k:"長崎1号-3",west:467075,south:119680,east:467570,north:120020},
"蔵宿":{b200k:"長崎1号-4",west:467075,south:119380,east:467570,north:119720},
"嬉野":{b200k:"長崎2号-1",west:467525,south:119080,east:468020,north:119420},
"彼杵":{b200k:"長崎2号-2",west:467525,south:118780,east:468020,north:119120},
"早岐":{b200k:"長崎2号-3",west:467075,south:119080,east:467570,north:119420},
"川棚":{b200k:"長崎2号-4",west:467075,south:118780,east:467570,north:119120},
"武留路山":{b200k:"長崎3号-1",west:467525,south:118480,east:468020,north:118820},
"大村":{b200k:"長崎3号-2",west:467525,south:118180,east:468020,north:118520},
"喰場":{b200k:"長崎3号-3",west:467075,south:118480,east:467570,north:118820},
"長浦":{b200k:"長崎3号-4",west:467075,south:118180,east:467570,north:118520},
"長崎東北部":{b200k:"長崎4号-1",west:467530,south:117880,east:468025,north:118220},
"長崎東南部":{b200k:"長崎4号-2",west:467530,south:117580,east:468020,north:117920},
"長崎西北部":{b200k:"長崎4号-3",west:467080,south:117880,east:467575,north:118220},
"長崎西南部":{b200k:"長崎4号-4",west:467080,south:117580,east:467570,north:117920},
"江迎":{b200k:"長崎5号-1",west:466625,south:119680,east:467120,north:120020},
"佐世保北部":{b200k:"長崎5号-2",west:466625,south:119380,east:467120,north:119720},
"肥前川内":{b200k:"長崎5号-3",west:466175,south:119680,east:466670,north:120020},
"楠泊":{b200k:"長崎5号-4",west:466175,south:119380,east:466670,north:119720},
"佐世保南部":{b200k:"長崎6号-1",west:466625,south:119080,east:467120,north:119420},
"面高":{b200k:"長崎6号-2",west:466625,south:118780,east:467120,north:119120},
"肥前黒島":{b200k:"長崎6号-3",west:466175,south:119080,east:466670,north:119420},
"蛎浦":{b200k:"長崎6号-4",west:466175,south:118780,east:466670,north:119120},
"板浦":{b200k:"長崎7号-1",west:466625,south:118480,east:467120,north:118820},
"神浦":{b200k:"長崎7号-2",west:466625,south:118180,east:467120,north:118520},
"釜ノ浦":{b200k:"長崎7号-3",west:466175,south:118480,east:466670,north:118820},
"池島":{b200k:"長崎7号-4",west:466175,south:118180,east:466670,north:118520},
"三重":{b200k:"長崎8号-1",west:466630,south:117880,east:467125,north:118220},
"紐差":{b200k:"長崎9号-1",west:465725,south:119680,east:466220,north:120020},
"志々伎":{b200k:"長崎9号-2",west:465725,south:119380,east:466220,north:119720},
"野子":{b200k:"長崎9号-4",west:465275,south:119380,east:465770,north:119720},
"大立島":{b200k:"長崎10号-2",west:465725,south:118780,east:466220,north:119120},
"肥前江島":{b200k:"長崎10号-4",west:465275,south:118630,east:465770,north:118970},
"宇久島":{b200k:"長崎13号-3",west:464585,south:119620,east:465080,north:119960},
"小値賀島":{b200k:"長崎13号-4",west:464435,south:119380,east:464930,north:119720},
"頭ヶ島":{b200k:"長崎14号-2",west:464825,south:118780,east:465320,north:119120},
"津和崎":{b200k:"長崎14号-3",west:464435,south:119080,east:464930,north:119420},
"立串":{b200k:"長崎14号-4",west:464375,south:118780,east:464870,north:119120},
"友住":{b200k:"長崎15号-1",west:464825,south:118480,east:465320,north:118820},
"有川":{b200k:"長崎15号-3",west:464375,south:118480,east:464870,north:118820},
"奈良尾":{b200k:"長崎15号-4",west:464315,south:118180,east:464810,north:118520},
"佐尾":{b200k:"長崎16号-3",west:464380,south:117880,east:464875,north:118220},
"千々":{b200k:"野母崎1号-1",west:467350,south:117280,east:467840,north:117620},
"肥前高島":{b200k:"野母崎1号-3",west:466900,south:117280,east:467390,north:117620},
"天草高浜":{b200k:"野母崎2号-2",west:467530,south:116380,east:468020,north:116720},
"大江":{b200k:"野母崎3号-1",west:467530,south:116080,east:468020,north:116420},
"魚貫崎":{b200k:"野母崎3号-2",west:467530,south:115780,east:468020,north:116120},
"野母崎":{b200k:"野母崎1号-4",west:466900,south:116980,east:467390,north:117320},
"里":{b200k:"甑島1号-2",west:467540,south:114430,east:468030,north:114770},
"海鼠池":{b200k:"甑島1号-4",west:467080,south:114580,east:467570,north:114920},
"中甑":{b200k:"甑島2号-3",west:467080,south:114280,east:467565,north:114620},
"青瀬":{b200k:"甑島6号-2",west:466810,south:113980,east:467295,north:114320},
"手打":{b200k:"甑島7号-1",west:466630,south:113680,east:467115,north:114020},
"薩摩黒島":{b200k:"黒島3号-2",west:467535,south:110830,east:468015,north:111170},
"宇治群島":{b200k:"黒島9号-2",west:465820,south:112060,east:466305,north:112400},
"草垣群島":{b200k:"黒島11号-2",west:465735,south:110920,east:466215,north:111260},
"口之島":{b200k:"中之島1号-1",west:467595,south:107740,east:468075,north:108080},
"中之島":{b200k:"中之島1号-2",west:467355,south:107260,east:467830,north:107600},
"臥蛇島":{b200k:"中之島5号-4",west:466185,south:107380,east:466660,north:107720},
"諏訪之瀬島":{b200k:"中之島7号-1",west:466625,south:106540,east:467100,north:106880},
"宝島":{b200k:"宝島14号-1",west:465060,south:104720,east:465535,north:105060},
"横当島":{b200k:"宝島16号-3",west:464175,south:103540,east:464645,north:103880},
"喜界島北部":{b200k:"奄美大島2号-2",west:467690,south:101920,east:468160,north:102260},
"喜界島南部":{b200k:"奄美大島3号-1",west:467570,south:101620,east:468040,north:101960},
"笠利崎":{b200k:"奄美大島5号-2",west:466640,south:102580,east:467110,north:102920},
"奄美空港":{b200k:"奄美大島6号-1",west:466640,south:102280,east:467110,north:102620},
"赤尾木":{b200k:"奄美大島6号-2",west:466640,south:101980,east:467110,north:102320},
"龍郷":{b200k:"奄美大島6号-3",west:466190,south:102280,east:466660,north:102620},
"名瀬東部":{b200k:"奄美大島6号-4",west:466190,south:101980,east:466660,north:102320},
"奄美小湊":{b200k:"奄美大島7号-3",west:466190,south:101680,east:466660,north:102020},
"名瀬西部":{b200k:"奄美大島10号-2",west:465740,south:101980,east:466210,north:102320},
"大棚":{b200k:"奄美大島10号-4",west:465290,south:101980,east:465760,north:102320},
"住用":{b200k:"奄美大島11号-1",west:465740,south:101680,east:466210,north:102020},
"山間":{b200k:"奄美大島11号-2",west:465740,south:101380,east:466210,north:101720},
"湯湾":{b200k:"奄美大島11号-3",west:465290,south:101680,east:465760,north:102020},
"奄美久慈":{b200k:"奄美大島11号-4",west:465290,south:101380,east:465760,north:101720},
"節子":{b200k:"奄美大島12号-1",west:465740,south:101080,east:466210,north:101420},
"古仁屋":{b200k:"奄美大島12号-3",west:465290,south:101080,east:465760,north:101420},
"秋徳":{b200k:"奄美大島12号-4",west:465290,south:100780,east:465760,north:101120},
"宇検":{b200k:"奄美大島15号-1",west:464840,south:101680,east:465310,north:102020},
"西古見":{b200k:"奄美大島15号-2",west:464840,south:101380,east:465310,north:101720},
"瀬武":{b200k:"奄美大島16号-1",west:464840,south:101080,east:465310,north:101420},
"与路":{b200k:"奄美大島16号-2",west:464840,south:100780,east:465310,north:101120},
"肥前赤島":{b200k:"福江1号-2",west:463985,south:119260,east:464480,north:119600},
"串島":{b200k:"福江3号-1",west:463925,south:118480,east:464420,north:118820},
"漁生浦":{b200k:"福江3号-2",west:463865,south:118180,east:464360,north:118520},
"浦":{b200k:"福江4号-1",west:463930,south:117880,east:464425,north:118220},
"蠑螺島":{b200k:"福江4号-2",west:463930,south:117580,east:464420,north:117920},
"岐宿":{b200k:"福江4号-3",west:463480,south:117910,east:463975,north:118250},
"五島福江":{b200k:"福江4号-4",west:463480,south:117580,east:463970,north:117920},
"肥前柏":{b200k:"福江8号-1",west:463030,south:117880,east:463525,north:118220},
"三井楽":{b200k:"福江8号-2",west:463030,south:117580,east:463520,north:117920},
"嵯峨ノ島":{b200k:"福江8号-4",west:462580,south:117580,east:463070,north:117920},
"崎山":{b200k:"富江1号-1",west:463750,south:117280,east:464240,north:117620},
"黄島":{b200k:"富江1号-2",west:463750,south:116980,east:464240,north:117320},
"富江":{b200k:"富江1号-3",west:463300,south:117280,east:463790,north:117620},
"坪":{b200k:"富江1号-4",west:463300,south:116980,east:463790,north:117320},
"玉之浦":{b200k:"富江5号-1",west:462850,south:117280,east:463340,north:117620},
"男島及女島":{b200k:"富江12号-4",west:461890,south:115090,east:462380,north:115430},
"山":{b200k:"徳之島1号-2",west:463940,south:100195,east:464410,north:100535},
"平土野":{b200k:"徳之島2号-1",west:463940,south:99880,east:464410,north:100220},
"伊仙":{b200k:"徳之島2号-2",west:463940,south:99580,east:464410,north:99920},
"沖永良部島東部":{b200k:"徳之島8号-2",west:463020,south:98470,east:463485,north:98810},
"沖永良部島西部":{b200k:"徳之島8号-4",west:462600,south:98350,east:463065,north:98690},
"井之川":{b200k:"徳之島東14号-3",west:464360,south:99880,east:464830,north:100220},
"亀津":{b200k:"徳之島東14号-4",west:464360,south:99580,east:464830,north:99920},
"与論島":{b200k:"与論島2号-2",west:462140,south:97180,east:462605,north:97520},
"奥":{b200k:"与論島3号-4",west:461480,south:96580,east:461945,north:96920},
"楚洲":{b200k:"与論島4号-3",west:461640,south:96280,east:462105,north:96620},
"安波":{b200k:"与論島4号-4",west:461640,south:95980,east:462105,north:96320},
"伊平屋島北部":{b200k:"与論島10号-1",west:460550,south:97330,east:461015,north:97670},
"与那":{b200k:"与論島8号-1",west:461230,south:96280,east:461695,north:96620},
"辺土名":{b200k:"与論島8号-2",west:461230,south:95980,east:461695,north:96320},
"大宜味":{b200k:"与論島8号-4",west:460780,south:95980,east:461245,north:96320},
"伊平屋島南部":{b200k:"与論島10号-2",west:460340,south:97030,east:460805,north:97370},
"伊是名島":{b200k:"与論島11号-1",west:460340,south:96730,east:460805,north:97070},
"仲宗根":{b200k:"与論島12号-2",west:460335,south:95980,east:460800,north:96320},
"伊江島":{b200k:"与論島12号-4",west:459870,south:95980,east:460335,north:96320},
"国頭平良":{b200k:"那覇5号-1",west:461210,south:95680,east:461675,north:96020},
"天仁屋":{b200k:"那覇5号-2",west:461210,south:95380,east:461675,north:95720},
"仲尾次":{b200k:"那覇5号-3",west:460780,south:95680,east:461245,north:96020},
"瀬嵩":{b200k:"那覇5号-4",west:460780,south:95380,east:461245,north:95720},
"宜野座":{b200k:"那覇6号-3",west:460680,south:95080,east:461140,north:95420},
"伊計島":{b200k:"那覇6号-4",west:460680,south:94780,east:461140,north:95120},
"名護":{b200k:"那覇9号-1",west:460340,south:95680,east:460805,north:96020},
"名護南部":{b200k:"那覇9号-2",west:460340,south:95380,east:460805,north:95720},
"瀬底島":{b200k:"那覇9号-3",west:459920,south:95680,east:460385,north:96020},
"金武":{b200k:"那覇10号-1",west:460315,south:95080,east:460775,north:95420},
"宮城島":{b200k:"那覇10号-2",west:460315,south:94780,east:460775,north:95120},
"石川":{b200k:"那覇10号-3",west:459885,south:95080,east:460345,north:95420},
"沖縄市北部":{b200k:"那覇10号-4",west:459885,south:94780,east:460345,north:95120},
"屋慶名":{b200k:"那覇11号-1",west:460335,south:94480,east:460795,north:94820},
"津堅":{b200k:"那覇11号-2",west:460315,south:94180,east:460775,north:94520},
"沖縄市南部":{b200k:"那覇11号-3",west:459890,south:94480,east:460350,north:94820},
"与那原":{b200k:"那覇11号-4",west:459885,south:94180,east:460345,north:94520},
"久高島":{b200k:"那覇12号-1",west:460315,south:93880,east:460775,north:94220},
"知念":{b200k:"那覇12号-3",west:459885,south:93880,east:460345,north:94220},
"北大東島":{b200k:"号-",west:472380,south:93160,east:472840,north:93500},
"南大東島":{b200k:"号-",west:472225,south:92860,east:472685,north:93200},
"高志保":{b200k:"那覇14号-2",west:459460,south:94780,east:459920,north:95120},
"大謝名":{b200k:"那覇15号-1",west:459460,south:94480,east:459920,north:94820},
"那覇":{b200k:"那覇15号-2",west:459440,south:94180,east:459900,north:94520},
"糸満":{b200k:"那覇16号-1",west:459440,south:93880,east:459900,north:94220},
"喜屋武岬":{b200k:"那覇16号-2",west:459440,south:93580,east:459900,north:93920},
"粟国島":{b200k:"久米島5号-1",west:457860,south:95530,east:458325,north:95870},
"渡嘉敷":{b200k:"久米島3号-2",west:458420,south:94210,east:458880,north:94550},
"座間味":{b200k:"久米島3号-4",west:457990,south:94170,east:458450,north:94510},
"阿波連岬":{b200k:"久米島4号-3",west:458100,south:93910,east:458560,north:94250},
"渡名喜島":{b200k:"久米島6号-2",west:457440,south:94780,east:457900,north:95120},
"久米島東部":{b200k:"久米島10号-2",west:456520,south:94720,east:456980,north:95060},
"久米島":{b200k:"久米島10号-4",west:456120,south:94720,east:456580,north:95060},
"久米島南部":{b200k:"久米島11号-3",west:456230,south:94420,east:456690,north:94760},
"フデ岩":{b200k:"宮古島1号-4",west:450799,south:89880,east:451302,north:90220},
"西平安名岬":{b200k:"宮古島2号-4",west:450895,south:89380,east:451350,north:89720},
"福北":{b200k:"宮古島3号-1",west:451310,south:89100,east:451765,north:89440},
"東平安名岬":{b200k:"宮古島3号-2",west:451310,south:88800,east:451765,north:89140},
"平良":{b200k:"宮古島3号-3",west:450895,south:89080,east:451350,north:89420},
"上地":{b200k:"宮古島3号-4",west:450855,south:88780,east:451310,north:89120},
"池間島":{b200k:"宮古島2号-3",west:450780,south:89540,east:451235,north:89880},
"伊良部島":{b200k:"宮古島7号-1",west:450460,south:89200,east:450915,north:89540},
"水納島":{b200k:"宮古島15号-2",west:448645,south:88900,east:449100,north:89240},
"多良間島":{b200k:"宮古島8号-1",west:448645,south:88600,east:449100,north:88940},
"魚釣島":{b200k:"魚釣島6号-4",west:444415,south:92500,east:444875,north:92840},
"平久保崎":{b200k:"石垣島1号-3",west:447240,south:88480,east:447695,north:88820},
"伊原間":{b200k:"石垣島1号-4",west:447240,south:88180,east:447695,north:88520},
"伊野田":{b200k:"石垣島2号-3",west:447065,south:87880,east:447520,north:88220},
"白保":{b200k:"石垣島2号-4",west:447065,south:87580,east:447520,north:87920},
"川平":{b200k:"石垣島6号-1",west:446640,south:87880,east:447095,north:88220},
"石垣":{b200k:"石垣島6号-2",west:446640,south:87580,east:447095,north:87920},
"小浜島":{b200k:"石垣島6号-4",west:446185,south:87460,east:446640,north:87800},
"竹富島":{b200k:"石垣島7号-1",west:446640,south:87320,east:447095,north:87660},
"黒島":{b200k:"石垣島11号-2",west:446065,south:87040,east:446520,north:87380},
"美原":{b200k:"石垣島10号-2",west:445735,south:87580,east:446190,north:87920},
"鳩間島":{b200k:"石垣島10号-3",west:445495,south:87880,east:445950,north:88220},
"船浦":{b200k:"石垣島10号-4",west:445300,south:87580,east:445755,north:87920},
"西表大原":{b200k:"石垣島11号-1",west:445735,south:87270,east:446190,north:87610},
"舟浮":{b200k:"石垣島11号-3",west:445300,south:87280,east:445755,north:87620},
"波照間島":{b200k:"石垣島12号-4",west:445495,south:86380,east:445950,north:86720},
"ウビラ石":{b200k:"石垣島15号-1",west:444900,south:87340,east:445355,north:87680},
"与那国島":{b200k:"号-",west:442525,south:87880,east:442980,north:88220},
"歯舞海馬島":{b200k:"色丹島11号-2",west:526800,south:156630,east:527370,north:156980},
"多楽島":{b200k:"色丹島11号-3",west:526500,south:156980,east:527070,north:157330},
"志発島":{b200k:"色丹島15号-2",west:525790,south:156435,east:526420,north:156785},
"ハルカリモシリ島":{b200k:"色丹島16号-2",west:526050,south:156085,east:526620,north:156435},
"勇留島":{b200k:"色丹島16号-3",west:525480,south:156210,east:526050,north:156560},
"秋勇留島":{b200k:"色丹島16号-4",west:525480,south:155860,east:526050,north:156210},
"水晶島":{b200k:"標津4号-1",west:524850,south:156130,east:525480,north:156480},
"作万別":{b200k:"標津5号-2",west:524370,south:157825,east:524940,north:158175},
"東沸":{b200k:"標津5号-4",west:523800,south:157825,east:524370,north:158175},
"シロマンベツ川":{b200k:"標津6号-3",west:523800,south:157475,east:524370,north:157825},
"シャリカリベツ":{b200k:"標津9号-2",west:523230,south:157825,east:523800,north:158175},
"米戸賀":{b200k:"標津10号-1",west:523230,south:157475,east:523800,north:157825},
"国後泊":{b200k:"標津10号-2",west:523470,south:157125,east:524100,north:157475},
"古釜布":{b200k:"標津1号-3",west:524580,south:158175,east:525210,north:158525},
"秩苅別":{b200k:"標津5号-1",west:523950,south:158175,east:524580,north:158525},
"オンネ湖":{b200k:"知床岬3号-1",west:525120,south:159225,east:525750,north:159575},
"摺鉢山":{b200k:"知床岬3号-2",west:525300,south:158875,east:525870,north:159225},
"エビカラウス山":{b200k:"知床岬3号-4",west:524730,south:158875,east:525300,north:159225},
"近布内":{b200k:"知床岬4号-1",west:524970,south:158525,east:525540,north:158875},
"ニキショロ湖":{b200k:"知床岬8号-1",west:524400,south:158525,east:524970,north:158875},
"安渡移矢岬":{b200k:"安渡移矢岬6号-3",west:527250,south:159925,east:527820,north:160275},
"ポンアトイヤ":{b200k:"安渡移矢岬6号-4",west:527250,south:159575,east:527820,north:159925},
"東ビロク湖":{b200k:"安渡移矢岬10号-2",west:526680,south:159575,east:527250,north:159925},
"ソコボイ":{b200k:"安渡移矢岬10号-3",west:526290,south:159925,east:526860,north:160275},
"礼文磯":{b200k:"安渡移矢岬11号-3",west:526320,south:159225,east:526950,north:159575},
"爺爺岳":{b200k:"安渡移矢岬14号-2",west:526110,south:159575,east:526680,north:159925},
"ルルイ岳":{b200k:"安渡移矢岬14号-3",west:525720,south:159925,east:526290,north:160275},
"円山":{b200k:"安渡移矢岬14号-4",west:525540,south:159575,east:526110,north:159925},
"乳呑路":{b200k:"安渡移矢岬15号-3",west:525750,south:159225,east:526320,north:159575},
//ここから140630追加
"斜古丹":{b200k:"色丹島1号-4",west:528315,south:157730,east:528945,north:158080},
"イネモシリ":{b200k:"色丹島2号-3",west:528315,south:157380,east:528945,north:157730},
"穴澗湾":{b200k:"色丹島6号-1",west:527685,south:157610,east:528315,north:157960},
"松ヶ浜湾":{b200k:"色丹島6号-2",west:527685,south:157260,east:528315,north:157610},
"ラッキベツ岬":{b200k:"蘂取3号-4",west:535470,south:163750,east:536100,north:164100},
"弁財崎":{b200k:"蘂取4号-3",west:535530,south:163400,east:536100,north:163750},
"硫黄岳":{b200k:"蘂取4号-4",west:535530,south:163050,east:536100,north:163400},
"蘂取岬":{b200k:"蘂取7号-2",west:534840,south:163750,east:535470,north:164100},
"長根山":{b200k:"蘂取8号-1",west:534960,south:163400,east:535530,north:163750},
"蘂取沼":{b200k:"蘂取8号-2",west:534960,south:163050,east:535530,north:163400},
"蘂取岳":{b200k:"蘂取8号-3",west:534390,south:163400,east:534960,north:163750},
"乙今牛山":{b200k:"蘂取8号-4",west:534390,south:163050,east:534960,north:163400},
"トウロ沼":{b200k:"蘂取12号-4",west:533820,south:163050,east:534390,north:163400},
"大岬":{b200k:"蘂取16西号-1",west:532230,south:163400,east:532800,north:163750},
"散布山":{b200k:"蘂取16西号-2",west:532230,south:163050,east:532860,north:163400},
"トシルリ":{b200k:"別飛9号-2",west:534210,south:162700,east:534840,north:163050},
"留茶留原":{b200k:"別飛9号-4",west:533640,south:162700,east:534210,north:163050},
"アンコロ川":{b200k:"別飛13号-2",west:533010,south:162700,east:533640,north:163050},
"乙知志岬":{b200k:"別飛14号-1",west:533250,south:162350,east:533880,north:162700},
"指臼山":{b200k:"別飛14号-3",west:532680,south:162350,east:533250,north:162700},
"指臼鼻":{b200k:"別飛14号-4",west:532680,south:162000,east:533250,north:162350},
"別飛":{b200k:"紗那1号-2",west:532440,south:162700,east:533010,north:163050},
"ナヨカ湾":{b200k:"紗那1号-4",west:531810,south:162700,east:532440,north:163050},
"三角山":{b200k:"紗那2号-1",west:532110,south:162350,east:532680,north:162700},
"小田萌山":{b200k:"紗那2号-2",west:532110,south:162000,east:532680,north:162350},
"程越":{b200k:"紗那3号-1",west:532200,south:161650,east:532770,north:162000},
"レブン沼":{b200k:"紗那3号-3",west:531630,south:161650,east:532200,north:162000},
"内保":{b200k:"紗那6号-1",west:531540,south:162350,east:532110,north:162700},
"年萌湖":{b200k:"紗那6号-2",west:531540,south:162000,east:532110,north:162350},
"珊湖崎":{b200k:"紗那6号-3",west:530910,south:162350,east:531480,north:162700},
"振別":{b200k:"紗那6号-4",west:530970,south:162000,east:531540,north:162350},
"天寧":{b200k:"紗那7号-3",west:531060,south:161650,east:531630,north:162000},
"チカッポロ":{b200k:"紗那7号-4",west:531150,south:161300,east:531720,north:161650},
"オワタリ川":{b200k:"紗那11号-1",west:530490,south:161650,east:531060,north:162000},
"単冠山":{b200k:"紗那11号-2",west:530580,south:161300,east:531150,north:161650},
"西単冠山":{b200k:"紗那11号-4",west:530010,south:161300,east:530580,north:161650},
"野塚崎":{b200k:"紗那12号-1",west:530580,south:160950,east:531150,north:161300},
"入里節":{b200k:"紗那12号-3",west:530010,south:160950,east:530580,north:161300},
"阿登佐岳":{b200k:"紗那15号-2",west:529440,south:161300,east:530010,north:161650},
"神居古丹":{b200k:"紗那16号-1",west:529440,south:160950,east:530010,north:161300},
"メナトイ崎":{b200k:"得茂別湖9号-3",west:530010,south:160600,east:530580,north:160950},
"得茂別湖":{b200k:"得茂別湖13号-1",west:529440,south:160600,east:530010,north:160950},
"得茂別":{b200k:"得茂別湖13号-2",west:529815,south:160250,east:530385,north:160600},
"六甲":{b200k:"得茂別湖13号-4",west:529245,south:160250,east:529815,north:160600},
"萌消崎":{b200k:"安渡移矢岬1号-1",west:528870,south:160600,east:529440,north:160950},
"丹根萌":{b200k:"安渡移矢岬1号-2",west:528675,south:160250,east:529245,north:160600},
"ベルタルベ山":{b200k:"安渡移矢岬2号-1",west:528675,south:159900,east:529305,north:160250},
//ここまで140630追加
"琵琶瀬(延伸分図)":{b200k:"",west:521970,south:154760,east:522120,north:154800},
"登栄床(延伸分図)":{b200k:"",west:517585,south:158980,east:517645,north:159080},
"晩成(延伸分図)":{b200k:"",west:516665,south:153220,east:516750,north:153320},
"荻伏(延伸分図)":{b200k:"",west:513145,south:152035,east:513360,north:152115},
"知来別(延伸分図)":{b200k:"",west:511745,south:163180,east:511890,north:163300},
"登別温泉(延伸分図)":{b200k:"",west:508565,south:152960,east:508625,north:153020},
"尻屋(延伸分図)":{b200k:"",west:509200,south:149100,east:509340,north:149190},
"洞爺湖温泉(延伸分図)":{b200k:"",west:506520,south:153250,east:506610,north:153320},
"佐井(延伸分図)":{b200k:"",west:507000,south:149080,east:507060,north:149140},
"白神岬(延伸分図)":{b200k:"",west:505120,south:148680,east:505320,north:148860},
"松前小島(分図)":{b200k:"",west:503190,south:148830,east:503370,north:148950},
"陸中中野(延伸分図)":{b200k:"",west:510255,south:145180,east:510440,north:145380},
"茂浦(延伸分図)":{b200k:"",west:507120,south:147580,east:507300,north:147690},
"龍飛崎(延伸分図)":{b200k:"",west:505140,south:148500,east:505320,north:148680},
"能代(延伸分図)":{b200k:"",west:503880,south:144690,east:503930,north:144750},
"小名浜(延伸分図)":{b200k:"",west:507120,south:132840,east:507210,north:132960},
"神栖(延伸分図)":{b200k:"",west:506720,south:128980,east:506760,north:129080},
"久六島(分図)":{b200k:"",west:502170,south:145890,east:502230,north:145950},
"戸賀(延伸分図)":{b200k:"",west:502860,south:143955,east:502980,north:144080},
"飛島(分図)":{b200k:"",west:502260,south:141030,east:502470,north:141190},
//"湯野浜(延伸分図)":{b200k:"",west:502980,south:139480,east:503040,north:139580}, 140630変更
"湯野浜(延伸分図)":{b200k:"",west:502960,south:139480,east:503040,north:139580},
"粟島(分図)":{b200k:"",west:501150,south:138330,east:501390,north:138600},
"稲荷岡(延伸分図)":{b200k:"",west:501180,south:136780,east:501240,north:136920},
"真鶴岬(延伸分図)":{b200k:"",west:500940,south:126100,east:501060,north:126280},
"川奈(延伸分図)":{b200k:"",west:500820,south:125830,east:500910,north:125920},
"大野原島(分図)":{b200k:"",west:501750,south:122540,east:501810,north:122590},
"銭洲(分図)":{b200k:"",west:499710,south:122160,east:499830,north:122280},
"藺灘波島(分図)":{b200k:"",west:501450,south:121110,east:501540,north:121170},
"青ヶ島(分図)":{b200k:"",west:503070,south:116760,east:503250,north:116920},
"ベヨネース列岩(分図)":{b200k:"",west:503670,south:114750,east:503730,north:114810},
"須美寿島(分図)":{b200k:"",west:504150,south:113130,east:504210,north:113220},
"孀婦岩(分図)":{b200k:"",west:505200,south:107220,east:505260,north:107280},
"母島北部(延伸分図)":{b200k:"",west:511600,south:96130,east:511700,north:96210},
"南鳥島(分図)":{b200k:"",west:554280,south:87390,east:554370,north:87490},
"沖ノ鳥島(分図)":{b200k:"",west:489830,south:73470,east:490000,north:73560},
"嫁島(分図)":{b200k:"",west:511920,south:98910,east:512040,north:99030},
"西之島(分図)":{b200k:"",west:507115,south:98065,east:507205,north:98125},
"柏崎(延伸分図)":{b200k:"",west:498470,south:134380,east:498550,north:134460},
"小木(延伸分図)":{b200k:"",west:497520,south:136080,east:497700,north:136240},
"名立大町(延伸分図)":{b200k:"",west:496640,south:133500,east:496750,north:133590},
"静岡東部(延伸分図)":{b200k:"",west:498610,south:125910,east:498700,north:126010},
"神子元島(延伸分図)":{b200k:"",west:500160,south:124440,east:500220,north:124480},
"宇出津(延伸分図)":{b200k:"",west:494040,south:134360,east:494190,north:134500},
"田原(延伸分図)":{b200k:"",west:494550,south:124740,east:494700,north:124820},
"珠洲岬(延伸分図)":{b200k:"",west:494420,south:134980,east:494540,north:135060},
// "七ッ島(分図)":{b200k:"",west:492650,south:135270,east:492900,north:135440}, 140630変更
"七ツ島(分図)":{b200k:"",west:492650,south:135270,east:492900,north:135440},
"三国(延伸分図)":{b200k:"",west:489950,south:130200,east:489990,north:130250},
"越前蒲生(延伸分図)":{b200k:"",west:489480,south:129580,east:489560,north:129650},
"松阪港(延伸分図)":{b200k:"",west:491850,south:124480,east:491940,north:124560},
"錦(延伸分図)":{b200k:"",west:491400,south:123210,east:491580,north:123320},
"九鬼(延伸分図)":{b200k:"",west:490500,south:122250,east:490600,north:122420},
"丹後平田(延伸分図)":{b200k:"",west:486870,south:128310,east:487140,north:128400},
"成生岬(延伸分図)":{b200k:"",west:487470,south:128400,east:487620,north:128580},
// "岸和田西部(延伸分図)":{b200k:"",west:486715,south:123880,east:486975,north:124045}, 140630変更
"岸和田西部(延伸分図)":{b200k:"",west:486705,south:123880,east:486970,north:124045},
"神戸南部(延伸分図)":{b200k:"",west:486870,south:124720,east:487050,north:124820},
"加太(延伸分図)":{b200k:"",west:486350,south:123180,east:486475,north:123270},
"紀伊白浜(延伸分図)":{b200k:"",west:487170,south:121110,east:487350,north:121220},
"真浦(延伸分図)":{b200k:"",west:484675,south:124855,east:485040,north:124920},
"諭鶴羽山(延伸分図)":{b200k:"",west:485310,south:122940,east:485420,north:123060},
"水ノ子礁(分図)":{b200k:"",west:483840,south:124160,east:483900,north:124200},
"阿部(延伸分図)":{b200k:"",west:485080,south:121760,east:485370,north:121910},
"室戸岬(延伸分図)":{b200k:"",west:482980,south:119640,east:483120,north:119720},
"竹島(分図)":{b200k:"",west:474660,south:134010,east:474780,north:134130},
"鞆(延伸分図)":{b200k:"",west:480390,south:123500,east:480510,north:123600},
"四阪島(分図)":{b200k:"",west:479340,south:122760,east:479500,north:122880},
"平田(延伸分図)":{b200k:"",west:478290,south:127800,east:478380,north:127860},
"久賀(延伸分図)":{b200k:"",west:476360,south:122390,east:476420,north:122495},
"安下庄(延伸分図)":{b200k:"",west:476555,south:122035,east:476640,north:122120},
"平郡島東部(延伸分図)":{b200k:"",west:476510,south:121580,east:476670,north:121770},
"伊予青島(分図)":{b200k:"",west:476900,south:121425,east:476980,north:121470},
"水場(延伸分図)":{b200k:"",west:475110,south:121920,east:475150,north:121960},
"宇和島(分図)":{b200k:"",west:475230,south:121420,east:475335,north:121480},
"水ノ子島(分図)":{b200k:"",west:475810,south:118930,east:475870,north:118990},
"三隅(延伸分図)":{b200k:"",west:474570,south:125370,east:474705,north:125490},
"須佐(延伸分図)":{b200k:"",west:473700,south:124770,east:473850,north:124860},
"通(延伸分図)":{b200k:"",west:472560,south:124180,east:472680,north:124280},
"蒲江(延伸分図)":{b200k:"",west:475180,south:118140,east:475260,north:118220},
"岩屋(延伸分図)":{b200k:"",west:470520,south:122380,east:470700,north:122500},
"筑前沖ノ島(分図)":{b200k:"",west:468330,south:123210,east:468450,north:123330},
"小呂島(分図)":{b200k:"",west:468060,south:121860,east:468180,north:121980},
"三池島(分図)":{b200k:"",west:469260,south:118920,east:469290,north:118950},
"指江(延伸分図)":{b200k:"",west:467820,south:115680,east:467980,north:115820},
"伊作(延伸分図)":{b200k:"",west:468780,south:113520,east:468880,north:113640},
"西之表(延伸分図)":{b200k:"",west:471000,south:110580,east:471150,north:110820},
"デン島(分図)":{b200k:"",west:468330,south:110670,east:468420,north:110730},
"ヤクロ瀬(分図)":{b200k:"",west:469110,south:110560,east:469200,north:110620},
"内之浦(延伸分図)":{b200k:"",west:472050,south:112575,east:472085,north:112635},
"大隅野間(延伸分図)":{b200k:"",west:471240,south:109790,east:471310,north:109870},
"島間(延伸分図)":{b200k:"",west:471045,south:109595,east:471090,north:109695},
"印通寺(延伸分図)":{b200k:"",west:467430,south:121410,east:467730,north:121500},
"加唐島(延伸分図)":{b200k:"",west:467700,south:121220,east:468000,north:121320},
"帆上ノ瀬(分図)":{b200k:"",west:465870,south:119225,east:465930,north:119265},
"中の瀬(分図)":{b200k:"",west:468135,south:114645,east:468210,north:114705},
"鷹島(分図)":{b200k:"",west:467010,south:113175,east:467085,north:113235},
"津倉瀬(分図)":{b200k:"",west:467040,south:112680,east:467100,north:112740},
"口之島(延伸分図)":{b200k:"",west:468060,south:108080,east:468300,north:108210},
"平島(分図)":{b200k:"",west:466260,south:106800,east:466380,north:106920},
"悪石島(分図)":{b200k:"",west:466470,south:105990,east:466650,north:106140},
"宝島(延伸分図)":{b200k:"",west:465480,south:105060,east:465750,north:105240},
"サンドン岩(分図)":{b200k:"",west:467160,south:103470,east:467250,north:103560},
"白瀬(分図)":{b200k:"",west:463665,south:119445,east:463725,north:119505},
"肥前鳥島(分図)":{b200k:"",west:461160,south:116060,east:461220,north:116120},
"鮫瀬(分図)":{b200k:"",west:462030,south:115050,east:462090,north:115110},
"安波(延伸分図)":{b200k:"",west:461640,south:95850,east:461790,north:96010},
"石川(延伸分図)":{b200k:"",west:460230,south:95380,east:460380,north:95460},
"沖大東島(分図)":{b200k:"",west:472200,south:88020,east:472320,north:88140},
"高志保(延伸分図)":{b200k:"",west:459720,south:95080,east:459920,north:95220},
"慶伊瀬島(分図)":{b200k:"",west:459085,south:94470,east:459330,north:94605},
"ルカン礁(分図)":{b200k:"",west:459060,south:93935,east:459180,north:94020},
"硫黄鳥島(分図)":{b200k:"",west:461550,south:100280,east:461680,north:100400},
"久米鳥島(分図)":{b200k:"",west:456540,south:95700,east:456630,north:95790},
"上地(延伸分図)":{b200k:"",west:450840,south:88930,east:450940,north:89040},
"大正島(分図)":{b200k:"",west:448380,south:93270,east:448440,north:93360},
"久場島(分図)":{b200k:"",west:445200,south:93270,east:445320,north:93360},
"中御神島(分図)":{b200k:"",west:444780,south:87060,east:444900,north:87150},
"津屋崎(延伸分図)":{b200k:"",west:469290,south:121510,east:469390,north:121580},
"二神島(分図)":{b200k:"",west:466255,south:120970,east:466420,north:121035},
"神ノ島(延伸分図)":{b200k:"",west:471600,south:121680,east:471780,north:121920}
};

function check_zuyou_list(cx,cy)	{
	cx = cx * 3600;		//経度を秒単位に
	cy = cy * 3600;		//緯度を秒単位に
	var zumei = new Array();	//図葉名を配列で入れる
//	var zumei = "";		//図葉名をここに入れる。初めは空文字で宣言する
//	var zumei200k ="";	//20万の図葉名をここに入れる。初めは空文字で宣言する
	for(var key in zuyou_list)	{	//図葉の数だけループさせる
		var zobj =  zuyou_list[key];		//図葉ごとのオブジェクトを作成
		if((cx>=zobj.west)&&(cy>=zobj.south)&&(cx<zobj.east)&&(cy<zobj.north))	{
			zumei.push([key,zobj.b200k]);
			
		}
	}
	if(zumei){		//図葉名が入っている場合は、末尾の「,」を削除
	//	alert("naka");
//		zumei = zumei.substring(0,zumei.length-1);
	}else{				//図葉名がまだ空の場合は「内挿図又は図葉外」という文字列を格納する
//		alert("soto");
		zumei = "内挿図又は図葉外";
	}
	return zumei;		//戻り値として、「zumei」を返す
}//
// @source = hokkaido.js
//
var hokkaidoArray = new Array();
hokkaidoArray[0]='1,北海道,9901,-- 空知総合振興局 --,そらちそうごうしんこうきょく,141.766037,43.197556';
hokkaidoArray[1]='1,北海道,1209,夕張市,ゆうばりし,141.9740889,43.0568559';
hokkaidoArray[2]='1,北海道,1210,岩見沢市,いわみざわし,141.7758333,43.19611111';
hokkaidoArray[3]='1,北海道,1215,美唄市,びばいし,141.8540435,43.3330171';
hokkaidoArray[4]='1,北海道,1216,芦別市,あしべつし,142.1894862,43.51821332';
hokkaidoArray[5]='1,北海道,1218,赤平市,あかびらし,142.0441993,43.55798822';
hokkaidoArray[6]='1,北海道,1222,三笠市,みかさし,141.8753755,43.24565996';
hokkaidoArray[7]='1,北海道,1225,滝川市,たきかわし,141.9103899,43.55772933';
hokkaidoArray[8]='1,北海道,1226,砂川市,すながわし,141.9034778,43.49478639';
hokkaidoArray[9]='1,北海道,1227,歌志内市,うたしないし,142.0352778,43.52166667';
hokkaidoArray[10]='1,北海道,1228,深川市,ふかがわし,142.0535134,43.72319472';
hokkaidoArray[11]='1,北海道,1423,南幌町,なんぽろちょう,141.6502959,43.06371295';
hokkaidoArray[12]='1,北海道,1424,奈井江町,ないえちょう,141.8827778,43.42527778';
hokkaidoArray[13]='1,北海道,1425,上砂川町,かみすながわちょう,141.9835294,43.482118';
hokkaidoArray[14]='1,北海道,1427,由仁町,ゆにちょう,141.79028,42.99960678';
hokkaidoArray[15]='1,北海道,1428,長沼町,ながぬまちょう,141.6954173,43.01036818';
hokkaidoArray[16]='1,北海道,1429,栗山町,くりやまちょう,141.7840938,43.05630081';
hokkaidoArray[17]='1,北海道,1430,月形町,つきがたちょう,141.6695448,43.33839288';
hokkaidoArray[18]='1,北海道,1431,浦臼町,うらうすちょう,141.8187355,43.43036951';
hokkaidoArray[19]='1,北海道,1432,新十津川町,しんとつかわちょう,141.8770965,43.54847601';
hokkaidoArray[20]='1,北海道,1433,妹背牛町,もせうしちょう,141.9615052,43.70017033';
hokkaidoArray[21]='1,北海道,1434,秩父別町,ちっぷべつちょう,141.9578543,43.76701307';
hokkaidoArray[22]='1,北海道,1436,雨竜町,うりゅうちょう,141.8890417,43.64396502';
hokkaidoArray[23]='1,北海道,1437,北竜町,ほくりゅうちょう,141.8791667,43.73138889';
hokkaidoArray[24]='1,北海道,1438,沼田町,ぬまたちょう,141.9336905,43.80670325';

hokkaidoArray[25]='1,北海道,9902,-- 石狩振興局 --,いしかりしんこうきょく,141.34549,43.064304';
hokkaidoArray[26]='1,北海道,1100,札幌市,さっぽろし,141.3543886,43.06208877';
hokkaidoArray[27]='1,北海道,1101,札幌市　中央区,さっぽろし　ちゅうおうく,141.3409671,43.0553865';
hokkaidoArray[28]='1,北海道,1102,札幌市　北区,さっぽろし　きたく,141.3408807,43.09079296';
hokkaidoArray[29]='1,北海道,1103,札幌市　東区,さっぽろし　ひがしく,141.3636111,43.07611111';
hokkaidoArray[30]='1,北海道,1104,札幌市　白石区,さっぽろし　しろいしく,141.40522,43.04756872';
hokkaidoArray[31]='1,北海道,1105,札幌市　豊平区,さっぽろし　とよひらく,141.3800612,43.03134414';
hokkaidoArray[32]='1,北海道,1106,札幌市　南区,さっぽろし　みなみく,141.3533998,42.99000828';
hokkaidoArray[33]='1,北海道,1107,札幌市　西区,さっぽろし　にしく,141.3008974,43.0744547';
hokkaidoArray[34]='1,北海道,1108,札幌市　厚別区,さっぽろし　あつべつく,141.4747615,43.03639318';
hokkaidoArray[35]='1,北海道,1109,札幌市　手稲区,さっぽろし　ていねく,141.2457843,43.12187423';
hokkaidoArray[36]='1,北海道,1110,札幌市　清田区,さっぽろし　きよたく,141.4437927,42.99951523';
hokkaidoArray[37]='1,北海道,1217,江別市,えべつし,141.5360696,43.10365105';
hokkaidoArray[38]='1,北海道,1224,千歳市,ちとせし,141.6510058,42.82100926';
hokkaidoArray[39]='1,北海道,1231,恵庭市,えにわし,141.5777691,42.88258231';
hokkaidoArray[40]='1,北海道,1234,北広島市,きたひろしまし,141.5635545,42.98566933';
hokkaidoArray[41]='1,北海道,1235,石狩市,いしかりし,141.3155556,43.17138889';
hokkaidoArray[42]='1,北海道,1303,当別町,とうべつちょう,141.5171281,43.22381951';
hokkaidoArray[43]='1,北海道,1304,新篠津村,しんしのつむら,141.6492815,43.22541251';

hokkaidoArray[44]='1,北海道,9903,-- 後志総合振興局 --,しりべしそうごうしんこうきょく,140.757507,42.90221';
hokkaidoArray[45]='1,北海道,1203,小樽市,おたるし,140.9944857,43.19070647';
hokkaidoArray[46]='1,北海道,1391,島牧村,しままきむら,140.0615316,42.70049649';
hokkaidoArray[47]='1,北海道,1392,寿都町,すっつちょう,140.2288275,42.7910538';
hokkaidoArray[48]='1,北海道,1393,黒松内町,くろまつないちょう,140.3077778,42.66777778';
hokkaidoArray[49]='1,北海道,1394,蘭越町,らんこしちょう,140.5283803,42.80923992';
hokkaidoArray[50]='1,北海道,1395,ニセコ町,にせこちょう,140.6875294,42.80480026';
hokkaidoArray[51]='1,北海道,1396,真狩村,まっかりむら,140.8036719,42.7630045';
hokkaidoArray[52]='1,北海道,1397,留寿都村,るすつむら,140.8756242,42.73730784';
hokkaidoArray[53]='1,北海道,1398,喜茂別町,きもべつちょう,140.9345372,42.79543379';
hokkaidoArray[54]='1,北海道,1399,京極町,きょうごくちょう,140.8841146,42.8582269';
hokkaidoArray[55]='1,北海道,1400,倶知安町,くっちゃんちょう,140.7590211,42.90171229';
hokkaidoArray[56]='1,北海道,1401,共和町,きょうわちょう,140.6114265,42.98040776';
hokkaidoArray[57]='1,北海道,1402,岩内町,いわないちょう,140.5091811,42.97878475';
hokkaidoArray[58]='1,北海道,1403,泊村,とまりむら,140.4989034,43.06300163';
hokkaidoArray[59]='1,北海道,1404,神恵内村,かもえないむら,140.4309293,43.14380532';
hokkaidoArray[60]='1,北海道,1405,積丹町,しゃこたんちょう,140.5979824,43.29874919';
hokkaidoArray[61]='1,北海道,1406,古平町,ふるびらちょう,140.6389515,43.26533414';
hokkaidoArray[62]='1,北海道,1407,仁木町,にきちょう,140.7661111,43.15166667';
hokkaidoArray[63]='1,北海道,1408,余市町,よいちちょう,140.7835239,43.19531756';
hokkaidoArray[64]='1,北海道,1409,赤井川村,あかいがわむら,140.8136322,43.08349202';

hokkaidoArray[65]='1,北海道,9904,-- 胆振総合振興局 --,いぶりそうごうしんこうきょく,140.969803,42.315323';
hokkaidoArray[66]='1,北海道,1205,室蘭市,むろらんし,140.9736731,42.31520812';
hokkaidoArray[67]='1,北海道,1213,苫小牧市,とまこまいし,141.6055556,42.63416667';
hokkaidoArray[68]='1,北海道,1230,登別市,のぼりべつし,141.1066667,42.41277778';
hokkaidoArray[69]='1,北海道,1233,伊達市,だてし,140.8647222,42.47194444';
hokkaidoArray[70]='1,北海道,1571,豊浦町,とようらちょう,140.711966,42.583409';
hokkaidoArray[71]='1,北海道,1575,壮瞥町,そうべつちょう,140.885836,42.55210949';
hokkaidoArray[72]='1,北海道,1578,白老町,しらおいちょう,141.3558661,42.55131326';
hokkaidoArray[73]='1,北海道,1581,厚真町,あつまちょう,141.8778914,42.72363661';
hokkaidoArray[74]='1,北海道,1584,洞爺湖町,とうやこちょう,140.7642741,42.55111704';
hokkaidoArray[75]='1,北海道,1585,安平町,あびらちょう,141.8180556,42.76277778';
hokkaidoArray[76]='1,北海道,1586,むかわ町,むかわちょう,141.9267449,42.57474771';

hokkaidoArray[77]='1,北海道,9905,-- 日高振興局 --,ひだかしんこうきょく,142.769547,42.171761';
hokkaidoArray[78]='1,北海道,1601,日高町,ひだかちょう,142.0742968,42.48033565';
hokkaidoArray[79]='1,北海道,1602,平取町,びらとりちょう,142.1286988,42.58514013';
hokkaidoArray[80]='1,北海道,1604,新冠町,にいかっぷちょう,142.3184391,42.36244309';
hokkaidoArray[81]='1,北海道,1607,浦河町,うらかわちょう,142.7682026,42.16834176';
hokkaidoArray[82]='1,北海道,1608,様似町,さまにちょう,142.9338889,42.12777778';
hokkaidoArray[83]='1,北海道,1609,えりも町,えりもちょう,143.1483333,42.01638889';
hokkaidoArray[84]='1,北海道,1610,新ひだか町,しんひだかちょう,142.3686044,42.34125547'

hokkaidoArray[85]='1,北海道,9906,-- 渡島総合振興局 --,おしましんこうきょく,140.752731,41.819405';
hokkaidoArray[86]='1,北海道,1202,函館市,はこだてし,140.7290679,41.76864057';
hokkaidoArray[87]='1,北海道,1236,北斗市,ほくとし,140.6530556,41.82416667';
hokkaidoArray[88]='1,北海道,1331,松前町,まつまえちょう,140.1103613,41.42996802';
hokkaidoArray[89]='1,北海道,1332,福島町,ふくしまちょう,140.2512881,41.48374263';
hokkaidoArray[90]='1,北海道,1333,知内町,しりうちちょう,140.4188889,41.59833333';
hokkaidoArray[91]='1,北海道,1334,木古内町,きこないちょう,140.4376294,41.6783268';
hokkaidoArray[92]='1,北海道,1337,七飯町,ななえちょう,140.6944054,41.89571953';
hokkaidoArray[93]='1,北海道,1343,鹿部町,しかべちょう,140.8158333,42.03861111';
hokkaidoArray[94]='1,北海道,1345,森町,もりまち,140.5764167,42.10496108';
hokkaidoArray[95]='1,北海道,1346,八雲町,やくもちょう,140.2651921,42.25589383';
hokkaidoArray[96]='1,北海道,1347,長万部町,おしゃまんべちょう,140.3801967,42.51340337';

hokkaidoArray[97]='1,北海道,9907,-- 檜山振興局 --,ひやましんこうきょく,140.127869,41.85894';
hokkaidoArray[98]='1,北海道,1361,江差町,えさしちょう,140.1275909,41.86928745';
hokkaidoArray[99]='1,北海道,1362,上ノ国町,かみのくにちょう,140.1213889,41.80111111';
hokkaidoArray[100]='1,北海道,1363,厚沢部町,あっさぶちょう,140.2253619,41.92094925';
hokkaidoArray[101]='1,北海道,1364,乙部町,おとべちょう,140.1353881,41.96854529';
hokkaidoArray[102]='1,北海道,1367,奥尻町,おくしりちょう,139.5141374,42.17228824';
hokkaidoArray[103]='1,北海道,1370,今金町,いまかねちょう,140.0086423,42.42937171';
hokkaidoArray[104]='1,北海道,1371,せたな町,せたなちょう,139.8833333,42.41694444';

hokkaidoArray[105]='1,北海道,9908,-- 上川総合振興局 --,かみかわそうごうしんこうきょく,142.366074,43.770004';
hokkaidoArray[106]='1,北海道,1204,旭川市,あさひかわし,142.365,43.77083333';
hokkaidoArray[107]='1,北海道,1220,士別市,しべつし,142.4001608,44.17857528';
hokkaidoArray[108]='1,北海道,1221,名寄市,なよろし,142.4631835,44.3559089';
hokkaidoArray[109]='1,北海道,1229,富良野市,ふらのし,142.3831468,43.34200922';
hokkaidoArray[110]='1,北海道,1452,鷹栖町,たかすちょう,142.3544444,43.84333333';
hokkaidoArray[111]='1,北海道,1453,東神楽町,ひがしかぐらちょう,142.4515003,43.69638494';
hokkaidoArray[112]='1,北海道,1454,当麻町,とうまちょう,142.5083928,43.82813767';
hokkaidoArray[113]='1,北海道,1455,比布町,ぴっぷちょう,142.4776752,43.87500414';
hokkaidoArray[114]='1,北海道,1456,愛別町,あいべつちょう,142.5778203,43.90667341';
hokkaidoArray[115]='1,北海道,1457,上川町,かみかわちょう,142.7704637,43.84712409';
hokkaidoArray[116]='1,北海道,1458,東川町,ひがしかわちょう,142.5101593,43.6988984';
hokkaidoArray[117]='1,北海道,1459,美瑛町,びえいちょう,142.4670597,43.5883298';
hokkaidoArray[118]='1,北海道,1460,上富良野町,かみふらのちょう,142.4671231,43.45561409';
hokkaidoArray[119]='1,北海道,1461,中富良野町,なかふらのちょう,142.4252778,43.40583333';
hokkaidoArray[120]='1,北海道,1462,南富良野町,みなみふらのちょう,142.5683333,43.16416667';
hokkaidoArray[121]='1,北海道,1463,占冠村,しむかっぷむら,142.3985363,42.97987952';
hokkaidoArray[122]='1,北海道,1464,和寒町,わっさむちょう,142.4134008,44.02312874';
hokkaidoArray[123]='1,北海道,1465,剣淵町,けんぶちちょう,142.3613267,44.09576224';
hokkaidoArray[124]='1,北海道,1468,下川町,しもかわちょう,142.6352023,44.3025664';
hokkaidoArray[125]='1,北海道,1469,美深町,びふかちょう,142.3430577,44.48102079';
hokkaidoArray[126]='1,北海道,1470,音威子府村,おといねっぷむら,142.2622139,44.72504179';
hokkaidoArray[127]='1,北海道,1471,中川町,なかがわちょう,142.0713889,44.81138889';
hokkaidoArray[128]='1,北海道,1472,幌加内町,ほろかないちょう,142.1538298,44.00979823';


hokkaidoArray[129]='1,北海道,9909,-- 留萌振興局 --,るもいしんこうきょく,141.63768,43.937813';
hokkaidoArray[130]='1,北海道,1212,留萌市,るもいし,141.6369314,43.94100709';
hokkaidoArray[131]='1,北海道,1481,増毛町,ましけちょう,141.5249105,43.85605933';
hokkaidoArray[132]='1,北海道,1482,小平町,おびらちょう,141.6627616,44.01546152';
hokkaidoArray[133]='1,北海道,1483,苫前町,とままえちょう,141.6529088,44.30614209';
hokkaidoArray[134]='1,北海道,1484,羽幌町,はぼろちょう,141.6973205,44.36054972';
hokkaidoArray[135]='1,北海道,1485,初山別村,しょさんべつむら,141.7663169,44.53214682';
hokkaidoArray[136]='1,北海道,1486,遠別町,えんべつちょう,141.7923268,44.7225084';
hokkaidoArray[137]='1,北海道,1487,天塩町,てしおちょう,141.7453521,44.88817257';


hokkaidoArray[138]='1,北海道,9910,-- 宗谷総合振興局 --,そうやそうごうしんこうきょく,141.700745,45.396946';
hokkaidoArray[139]='1,北海道,1214,稚内市,わっかないし,141.6730675,45.41563748';
hokkaidoArray[140]='1,北海道,1511,猿払村,さるふつむら,142.1089722,45.3306092';
hokkaidoArray[141]='1,北海道,1512,浜頓別町,はまとんべつちょう,142.3597348,45.1237794';
hokkaidoArray[142]='1,北海道,1513,中頓別町,なかとんべつちょう,142.2867365,44.96976136';
hokkaidoArray[143]='1,北海道,1514,枝幸町,えさしちょう,142.5814043,44.93873333';
hokkaidoArray[144]='1,北海道,1516,豊富町,とよとみちょう,141.7775026,45.10285676';
hokkaidoArray[145]='1,北海道,1517,礼文町,れぶんちょう,141.0477509,45.30308199';
hokkaidoArray[146]='1,北海道,1518,利尻町,りしりちょう,141.1395796,45.18701663';
hokkaidoArray[147]='1,北海道,1519,利尻富士町,りしりふじちょう,141.2147222,45.2475';
hokkaidoArray[148]='1,北海道,1520,幌延町,ほろのべちょう,141.8494444,45.01777778';


hokkaidoArray[149]='1,北海道,9911,-- オホーツク総合振興局 --,おほーつくそうごうしんこうきょく,144.260284,44.026691';
hokkaidoArray[150]='1,北海道,1208,北見市,きたみし,143.8957877,43.80392712';
hokkaidoArray[151]='1,北海道,1211,網走市,あばしりし,144.2734742,44.02063505';
hokkaidoArray[152]='1,北海道,1219,紋別市,もんべつし,143.3541667,44.35638889';
hokkaidoArray[153]='1,北海道,1543,美幌町,びほろちょう,144.1071991,43.82371383';
hokkaidoArray[154]='1,北海道,1544,津別町,つべつちょう,144.0248025,43.70633069';
hokkaidoArray[155]='1,北海道,1545,斜里町,しゃりちょう,144.6708333,43.91138889';
hokkaidoArray[156]='1,北海道,1546,清里町,きよさとちょう,144.5946817,43.83523767';
hokkaidoArray[157]='1,北海道,1547,小清水町,こしみずちょう,144.4620985,43.85674521';
hokkaidoArray[158]='1,北海道,1549,訓子府町,くんねっぷちょう,143.7416617,43.72536829';
hokkaidoArray[159]='1,北海道,1550,置戸町,おけとちょう,143.5863889,43.67638889';
hokkaidoArray[160]='1,北海道,1552,佐呂間町,さろまちょう,143.7747668,44.01785206';
hokkaidoArray[161]='1,北海道,1555,遠軽町,えんがるちょう,143.5280486,44.06196432';
hokkaidoArray[162]='1,北海道,1559,湧別町,ゆうべつちょう,143.573035,44.15160274';
hokkaidoArray[163]='1,北海道,1560,滝上町,たきのうえちょう,143.0777778,44.19222222';
hokkaidoArray[164]='1,北海道,1561,興部町,おこっぺちょう,143.1239513,44.46985058';
hokkaidoArray[165]='1,北海道,1562,西興部村,にしおこっぺむら,142.9444613,44.32880793';
hokkaidoArray[166]='1,北海道,1563,雄武町,おうむちょう,142.9618577,44.58248425';
hokkaidoArray[167]='1,北海道,1564,大空町,おおぞらちょう,144.1725,43.91194444';


hokkaidoArray[168]='1,北海道,9912,-- 十勝総合振興局 --,とかちそうごうしんこうきょく,140.969803,42.315323';
hokkaidoArray[169]='1,北海道,1207,帯広市,おびひろし,143.1962056,42.92405501';
hokkaidoArray[170]='1,北海道,1631,音更町,おとふけちょう,143.1978925,42.99413757';
hokkaidoArray[171]='1,北海道,1632,士幌町,しほろちょう,143.2414601,43.16805004';
hokkaidoArray[172]='1,北海道,1633,上士幌町,かみしほろちょう,143.2961787,43.23263469';
hokkaidoArray[173]='1,北海道,1634,鹿追町,しかおいちょう,142.9889704,43.09887653';
hokkaidoArray[174]='1,北海道,1635,新得町,しんとくちょう,142.8389096,43.07975642';
hokkaidoArray[175]='1,北海道,1636,清水町,しみずちょう,142.8845411,43.01143823';
hokkaidoArray[176]='1,北海道,1637,芽室町,めむろちょう,143.0508333,42.91194444';
hokkaidoArray[177]='1,北海道,1638,中札内村,なかさつないむら,143.1323696,42.69757305';
hokkaidoArray[178]='1,北海道,1639,更別村,さらべつむら,143.1878416,42.65038621';
hokkaidoArray[179]='1,北海道,1641,大樹町,たいきちょう,143.2788889,42.4975';
hokkaidoArray[180]='1,北海道,1642,広尾町,ひろおちょう,143.3116286,42.28593132';
hokkaidoArray[181]='1,北海道,1643,幕別町,まくべつちょう,143.3561006,42.9082019';
hokkaidoArray[182]='1,北海道,1644,池田町,いけだちょう,143.4485303,42.92900742';
hokkaidoArray[183]='1,北海道,1645,豊頃町,とよころちょう,143.5058896,42.80102049';
hokkaidoArray[184]='1,北海道,1646,本別町,ほんべつちょう,143.6105661,43.12467344';
hokkaidoArray[185]='1,北海道,1647,足寄町,あしょろちょう,143.5540526,43.24480211';
hokkaidoArray[186]='1,北海道,1648,陸別町,りくべつちょう,143.7472222,43.46888889';
hokkaidoArray[187]='1,北海道,1649,浦幌町,うらほろちょう,143.6585781,42.80895698';


hokkaidoArray[188]='1,北海道,9913,-- 釧路総合振興局 --,くしろそうごうしんこうきょく,144.384705,42.977009';
hokkaidoArray[189]='1,北海道,1206,釧路市,くしろし,144.3817102,42.98492315';
hokkaidoArray[190]='1,北海道,1661,釧路町,くしろちょう,144.4660793,42.99617231';
hokkaidoArray[191]='1,北海道,1662,厚岸町,あっけしちょう,144.8475,43.05194444';
hokkaidoArray[192]='1,北海道,1663,浜中町,はまなかちょう,145.1295118,43.07711177';
hokkaidoArray[193]='1,北海道,1664,標茶町,しべちゃちょう,144.6006586,43.30334699';
hokkaidoArray[194]='1,北海道,1665,弟子屈町,てしかがちょう,144.4593251,43.48521336';
hokkaidoArray[195]='1,北海道,1667,鶴居村,つるいむら,144.3211866,43.23007174';
hokkaidoArray[196]='1,北海道,1668,白糠町,しらぬかちょう,144.0717316,42.95616451';


hokkaidoArray[197]='1,北海道,9914,-- 根室振興局 --,ねむろしんこうきょく,145.582703,43.330379';
hokkaidoArray[198]='1,北海道,1223,根室市,ねむろし,145.5828718,43.33007352';
hokkaidoArray[199]='1,北海道,1691,別海町,べつかいちょう,145.1173283,43.3940015';
hokkaidoArray[200]='1,北海道,1692,中標津町,なかしべつちょう,144.971387,43.55520483';
hokkaidoArray[201]='1,北海道,1693,標津町,しべつちょう,145.1313251,43.66126914';
hokkaidoArray[202]='1,北海道,1694,羅臼町,らうすちょう,145.1894444,44.02194444';

hokkaidoArray[203]='1,北海道,1695,色丹村,しこたんむら,146.8127778,43.8680556';
hokkaidoArray[204]='1,北海道,1696,泊村,とまりむら,145.5097222,43.7358333';
hokkaidoArray[205]='1,北海道,1697,留夜別村,るよべつむら,146.172777,44.2725000';
hokkaidoArray[206]='1,北海道,1698,留別村,るべつむら,147.6975,45.0961111';
hokkaidoArray[207]='1,北海道,1699,紗那村,しゃなむら,147.8777778,45.2286111';
hokkaidoArray[208]='1,北海道,1700,蘂取村,しべとろむら,148.6075,45.4886111';
//
// @source = configmenu.js
//
/* 電子国土右上のプルダウンメニューの設定 */
var ConfigMenu = {};

(function($){
jQuery.fn.ConfigMenu = function(config) {

	// メニュー表示用のパネル
	ConfigMenu.popup = config.panel;

	// ボタン
	var menuButton = $("<div class='legendattr panelbutton' border='1' id='linkButtonBody'><a href='#'>他のWeb地図で見る</a></div>\
						<div class='legendattr panelbutton' border='1' id='shareButtonBody'><a href='#'>地図を共有</a></div>\
						<div class='legendattr panelbutton' border='1' id='configButtonBody'><a href='#'>表示</a></div>\
						<div class='legendattr panelbutton' border='1' id='getButtonBody'><a href='#'>入手</a></div>");
	this.append(menuButton);

	// メニューの定義
	var linkMenuDiv = 
		"<div class='configMenu' style='position:absolute; right:214px; top:50px;'>\
			<div style='float:right'>\
				<table border=1 cellspacing=0 cellpadding=3 valign='center'>\
					<tr>\
						<td class='configMenuTitle' style='width:127px;'>他のサイトに移動</td>\
					</tr>\
					<tr>\
						<td id='item_mapion' class='configMenuItem'><img src='http://www.mapion.co.jp/img/logo/L120_40.gif'></td>\
					</tr>\
					<tr>\
						<td id='item_itsumonavi' class='configMenuItem'><img src='http://portal.cyberjapan.jp/sys/v4/map_link/banner/itsumo_navi.gif'></td>\
					</tr>\
				</table>\
			</div>\
		</div>";

	var shareMenuDiv = 
		"<div class='configMenu' style='position:absolute; right:120px; top:50px;'>\
			<div style='float:right'>\
				<table border=1 cellspacing=0 cellpadding=3 valign='center'>\
					<tr>\
						<td class='configMenuTitle' style='width:195px;'>共有方法を選択</td>\
					</tr>\
					<tr>\
						<td id='item_url' class='configMenuItem'>メールやチャット用リンクを取得</td>\
					</tr>\
					<tr>\
						<td id='item_iframe' class='configMenuItem'>ウェブサイトに埋め込み</td>\
					</tr>\
					<tr>\
						<td id='item_html' class='configMenuItem'>名前をつけて保存</td>\
					</tr>\
				</table>\
			</div>\
		</div>";

	var configMenuDiv = 
		"<div class='configMenu' style='position:absolute; right:66px; top:50px;'>\
			<div style='float:right'>\
				<table border=1 cellspacing=0 cellpadding=3 valign='center'>\
					<tr>\
						<td class='configMenuTitle' style='width:140px;'>表示を切替</td>\
					</tr>\
					<tr>\
						<td id='item_center' class='configMenuItem'>中心位置の十字線<span id='marker_center' class='configMenuMarker'>off</span></td>\
					</tr>\
					<tr>\
						<td id='item_iconlabel' class='configMenuItem'>アイコンのラベル<span id='marker_iconlabel' class='configMenuMarker'>on</span></td>\
					</tr>\
					<tr>\
						<td id='item_flash' class='configMenuItem'>フラッシュ版</td>\
					</tr>\
				</table>\
			</div>\
		</div>";

	var getMenuDiv =
		"<div class='configMenu' style='position:absolute; right:12px; top:50px;'>\
			<div style='float:right'>\
				<table border=1 cellspacing=0 cellpadding=3 valign='center'>\
					<tr>\
						<td class='configMenuTitle' style='width:140px;'>地図やデータを入手</td>\
					</tr>\
					<tr>\
						<td id='item_getbasemap' class='configMenuItem'>基盤地図情報</td>\
					</tr>\
					<tr>\
						<td id='item_getmaponline' class='configMenuItem'>数値地図（オンライン）</td>\
					</tr>\
					<tr>\
						<td id='item_getmapcddvd' class='configMenuItem'>数値地図（CD/DVD）</td>\
					</tr>\
					<tr>\
						<td id='item_getmappaper' class='configMenuItem'>紙地図</td>\
					</tr>\
					<tr>\
						<td id='item_getphoto' class='configMenuItem'>空中写真</td>\
					</tr>\
					<tr>\
						<td id='item_getinfo' class='configMenuItem'>国土地理院技術資料</td>\
					</tr>\
				</table>\
			</div>\
		</div>";

	// ボタン押下時のイベント
	$(".panelbutton").mousedown(function(){
		// メニューが表示されていれば閉じ、閉じられていれば表示する
		if (ConfigMenu.popup.css("visibility") == "visible"){
			ConfigMenu.close();
		}
		else{
			ConfigMenu.popup.empty();
			
			switch($(this)[0].id){
			// 「他のWeb地図で見る」メニューを作成
			case 'linkButtonBody':
				ConfigMenu.popup.append(linkMenuDiv);
				$("#item_mapion").mousedown(onMapion);
				$("#item_itsumonavi").mousedown(onItsumoNavi);

				break;
			
			// 「地図を共有」メニューを作成
			case 'shareButtonBody':
				ConfigMenu.popup.append(shareMenuDiv);
				
				$("#item_url").mousedown(onUrl);
				$("#item_iframe").mousedown(onIframe);
				$("#item_html").mousedown(onHtml);
				break;

			// 「表示」メニューを作成
			case 'configButtonBody':
				ConfigMenu.popup.append(configMenuDiv);
				updateMarker();
				
				$("#item_center").mousedown(onCenter);
				$("#item_iconlabel").mousedown(onIconLabel);
				$("#item_flash").mousedown(onFlash);
				break;

			// 「入手」メニューを作成
			case 'getButtonBody':
				ConfigMenu.popup.append(getMenuDiv);

				$("#item_getbasemap").mousedown(onLink);
				$("#item_getmaponline").mousedown(onLink);
				$("#item_getmapcddvd").mousedown(onLink);
				$("#item_getmappaper").mousedown(onLink);
				$("#item_getphoto").mousedown(onLink);
				$("#item_getinfo").mousedown(onLink);

				break;
			}

			ConfigMenu.open();
		}
	});

	
	// 「他のWeb地図で見る」メニュー --------
	// マピオンのメニューを選択時
	var onMapion = $.proxy(function() {
		openMapLink(LinkKey.Mapion);
		ConfigMenu.close()
	}, this);
	
	// いつもNAVIのメニューを選択時
	var onItsumoNavi = $.proxy(function() {
		openMapLink(LinkKey.ItsumoNavi);
		ConfigMenu.close()
	}, this);
	
	// 「地図を共有」メニュー --------------------
	// 「メールやチャット用リンクを取得」選択時
	var onUrl = $.proxy(function() {
		sakuzuModule.urlSave(true);
		ConfigMenu.close();
	}, this);

	// 「ウェブサイトに埋め込み」選択時
	var onIframe = $.proxy(function() {
		sakuzuModule.urlSave(false);
		ConfigMenu.close();
	}, this);

	// 「名前をつけて保存」選択時
	var onHtml = $.proxy(function() {
		sakuzuModule.htmlIfrSave();
		ConfigMenu.close();
	}, this);
	
	// 「表示」メニュー --------------------
	// 「中心位置マーカー」メニュー選択時
	var onCenter = $.proxy(function() {
		// メニューのon/offを反転
		centercross = !centercross;
		updateMarkerCenterCross();

		// 十字マーカーを表示/非表示
		if (centercross){
			createScaleCross();
		}
		else{
			removeScaleCross();
		}
	}, this);

	// 「アイコンラベル」メニュー選択時
	var onIconLabel = $.proxy(function() {
		// メニューのon/offを反転
		sakuzuModule.changeIconlabel(!iconlabel);
		updateMarkerIconLabel();
	}, this);

	// 「フラッシュ」メニュー選択時
	var onFlash = $.proxy(function() {
		var mapinfo = sakuzuModule.createParameter();
		var lat = String(Math.floor(mapinfo.lat * 1000000) / 1000000);
		var lon = String(Math.floor(mapinfo.lon * 1000000) / 1000000);
		var url = "http://portal.cyberjapan.jp/site/mapusef/?lat=" + lat + "&lon=" + lon + "&z=" + mapinfo.zoomLevel;
		window.open(url);
		ConfigMenu.close();
	}, this);

	var onLink = $.proxy(function(e) {
		var link = {
			"item_getbasemap":	"http://fgd.gsi.go.jp/download/",
			"item_getmaponline":"http://net.jmc.or.jp/digital_data_gsiol.html",
			"item_getmapcddvd":	"http://www.jmc.or.jp/data/index.html",
			"item_getmappaper":	"http://www.jmc.or.jp/map/index.html",
			"item_getphoto":	"http://www.jmc.or.jp/photo/index.html",
			"item_getinfo":		"http://www.gsi.go.jp/REPORT/TECHNICAL/technical.html"
		};
		if (link[e.currentTarget.id]) {
			setTimeout('window.open("' + link[e.currentTarget.id] + '");', 200);
			// window.open(link[e.currentTarget.id]);
		}
		ConfigMenu.close();
	}, this);

	// 表示メニューのマーカーを更新
	var updateMarker = $.proxy(function() {
		updateMarkerCenterCross();
		updateMarkerIconLabel();
	}, this);

	// 「中心位置マーカー」メニューのマーカーを更新
	var updateMarkerCenterCross = $.proxy(function() {
		$("#marker_center").text(centercross ? "on" : "off");
		$("#marker_center").css("color", centercross ? "#F06222" : "#22AAAA");
	}, this);
	
	// 「アイコンラベル」メニューのマーカーを更新
	var updateMarkerIconLabel = $.proxy(function() {
		$("#marker_iconlabel").text(iconlabel ? "on" : "off");
		$("#marker_iconlabel").css("color", iconlabel ? "#F06222" : "#22AAAA");
	}, this);

	return this;
};
})(jQuery);

// メニューを閉じる
ConfigMenu.close = function() {
	ConfigMenu.popup.css("visibility", "hidden");
	
	if (dispFlg){
		sakuzuModule.enablePopupLayer();
	}
	
	changeDisable("img_measure", false);
	changeDisable("img_allow_open", false);
	changeDisable("img_printer", false);
	changeDisable("img_sakuzu", false);
	
	// 背景地図選択制御再開
	mousecontrol();
};

// メニューを開く
ConfigMenu.open = function() {
	ConfigMenu.popup.css("visibility", "visible");
	
	sakuzuModule.disablePopupLayer();

	/* 各画面非表示設定 */
	printsizeselectclose();
	clickmapclosefloating();
	closePopup();

	/* 各ボタン非活性設定 */
	changeDisable("img_measure", true);
	changeDisable("img_allow_open", true);
	changeDisable("img_printer", true);
	changeDisable("img_sakuzu", true);

	/* 背景地図選択制御解除 */
	document.onmousemove=null;
};
//
// @source = maplink.js
//
/* 他の地図へのリンク */
var LinkKey = {};
LinkKey.Mapion = 1;
LinkKey.ItsumoNavi = 2;

function openMapLinkCenter(linkKey, center)
{
    var cy = center.lat;
    var cx = center.lon;
	var z = map.getZoom();

	var url;

	switch (linkKey) {
	case LinkKey.Mapion:
		url = getMapionLink(cx, cy, z);
		break;
		
	case LinkKey.ItsumoNavi:
		url = getItsumoNaviLink(cx, cy, z);
		break;
		
	default:
		return false;
	}

	window.open(url, 'new');

	return true;
}

function openMapLink(linkKey) {

	//中心経緯度・ズームレベルを取得
	var center=map.getCenter();
    var center2=center.transform(projection900913,projection4326);

	return openMapLinkCenter(linkKey, center2);
}


function openMapLinkPos(linkKey, lon, lat) {

	//中心経緯度・ズームレベルを取得
	var center = new OpenLayers.LonLat(lon, lat);
    var center2=center.transform(projection900913,projection4326);

	return openMapLinkCenter(linkKey, center2);
}

// いつもNAVIへのリンクを取得
function getItsumoNaviLink(cx, cy, z) {

	var japanP = world2japan(cx, cy);
	var y = Math.round(japanP.y * 3600 * 1000);
	var x = Math.round(japanP.x * 3600 * 1000);
	
	if(z <= 5)			{zoomLevel = 1;}
	else if(z <= 6)		{zoomLevel = 2;}
	else if(z <= 7)		{zoomLevel = 3;}
	else if(z <= 8)		{zoomLevel = 4;}
	else if(z <= 9)		{zoomLevel = 6;}
	else if(z <= 10)	{zoomLevel = 7;}
	else if(z <= 11)	{zoomLevel = 8;}
	else if(z <= 12)	{zoomLevel = 9;}
	else if(z <= 13)	{zoomLevel = 10;}
	else if(z <= 14)	{zoomLevel = 11;}
	else if(z <= 15)	{zoomLevel = 13;}
	else if(z <= 16)	{zoomLevel = 14;}
	else if(z <= 17)	{zoomLevel = 16;}
	else				{zoomLevel = 18;}

	var linkURL = "http://www.its-mo.com/z-" + y +"-" + x + "-" + zoomLevel + ".htm";
	return linkURL;
}

// マピオンへのリンクを取得
function getMapionLink(cx, cy, z) {

	if(z <= 6)			{zoomLevel = 1;}
	else if(z <= 8)		{zoomLevel = 2;}
	else if(z <= 9)		{zoomLevel = 3;}
	else if(z <= 10)	{zoomLevel = 4;}
	else if(z <= 11)	{zoomLevel = 5;}
	else if(z <= 13)	{zoomLevel = 6;}
	else if(z <= 14)	{zoomLevel = 7;}
	else if(z <= 16)	{zoomLevel = 8;}
	else if(z <= 17)	{zoomLevel = 9;}
	else				{zoomLevel = 10;}

	var linkURL = "http://www.mapion.co.jp/m/" + cy + "_" + cx + "_" + zoomLevel + "/?wgs=1";
	return linkURL;
}

// 世界測地系経緯度から日本測地系経緯度への変換
function world2japan(cx,cy)	{
	var worldLonLat = new Proj4js.Proj('EPSG:4326');		//世界測地系
	var japanLonLat = new Proj4js.Proj('EPSG:4301');		//日本測地系
	var worldP = new Proj4js.Point(cx,cy);					//ポイントオブジェクトを作成（世界測地系経緯度）
	var japanP = Proj4js.transform(worldLonLat,japanLonLat,worldP);		//日本測地系の経緯度に変換
	return {x:japanP.x, y:japanP.y}
}//
// @source = receivejson.js
//
// 保存したHTMLファイルに含まれる作図情報のレイヤー
var jsonLayers = [];

// 作図情報をHTMLファイルから受け取る
function jsonReceiver(e) {
	$(window).unbind('message', jsonReceiver);

	var iframejson = html_entity_decode(e.data, "ENT_NOQUOTES");
	
	if (!iframejson) return;
	
	var jsondata = JSON.parse(iframejson);
	for (var i = 0; i < jsondata.layer.length; i++) {
		readgeojson(jsondata.layer[i]);
	}
	
	// 作図ポップアップ
	sakuzuModule.disablePopupLayer();
	if (dispFlg && sakuzuModule.CurrentMode == "none"){
		sakuzuModule.enablePopupLayer();
	}
}

// 作図情報/緯度経度ズームレベルを地理院地図から受け取る（高画質印刷プレビュー用）
function jsonPrintDataReceiver(e) {
	$(window).unbind('message', jsonPrintDataReceiver);

	var iframejson = e.data
	if (!iframejson) return;
	
	var jsondata = JSON.parse(iframejson);
	
	if (jsondata.mode == "lonlat_fromParent"){	
		
		$("#map")[0].style.display = "none";
		
		var cx = parseFloat(jsondata.lon);
		var cy = parseFloat(jsondata.lat);
		var zoom = parseInt(jsondata.z, 10);
		
		map.setCenter(new OpenLayers.LonLat(cx, cy).transform(projection4326,projection900913), zoom);
		
		$("#map")[0].style.display = "block";
	}
	else if (jsondata.mode == "lonlat_toParent"){
		receivedLonLat = jsondata;
	}
	else if (jsondata.mode == "map_resize"){
		var width = parseInt(jsondata.width);
		var height = parseInt(jsondata.height);

		$("#map")[0].style.height = height + "px";
		$("#map")[0].style.width = width + "px";
		map.updateSize();
	}
	else {	
		for (var i = 0; i < jsondata.layer.length; i++) {
			readgeojson(jsondata.layer[i], true);
		}
	}
}

// 作図情報(geojsonデータ)の読込み
function readgeojson(jsondata, hidePopup) {

	var defaultStyle = new OpenLayers.Style(OpenLayers.Util.applyDefaults(jsondata["style"]));
	var styleType = "";
	var cnt = jsonLayers.length;
	
	if (defaultStyle.defaultStyle.fillColor) {
		styleType = "polygon";
	} else if (defaultStyle.defaultStyle.strokeColor) {
		styleType = "string";
	}

	if (defaultStyle.defaultStyle.label){
		styleType = "symbol";
		defaultStyle.defaultStyle.labelAlign = 'lm';
		defaultStyle.defaultStyle.fontOpacity = 0.00001;
		if (defaultStyle.defaultStyle.externalGraphic){
			defaultStyle.defaultStyle.labelSelect = false;
			var iconSize = defaultStyle.defaultStyle.graphicWidth;
			defaultStyle.defaultStyle.labelXOffset = iconSize / 2;
		} else {
			defaultStyle.defaultStyle.labelSelect = true;
		}
	} else if (defaultStyle.defaultStyle.externalGraphic){
		styleType = "symbol";
	}

	var selectStyle = defaultStyle.clone();
	if (selectStyle.defaultStyle.fontColor) {
		selectStyle.defaultStyle.fontColor = "#0000FF";
	}
	if (selectStyle.defaultStyle.strokeColor) {
		selectStyle.defaultStyle.strokeColor = "#0000FF";
	}
	if (selectStyle.defaultStyle.fillColor) {
		selectStyle.defaultStyle.fillColor = "#0000FF";
		selectStyle.defaultStyle.fillOpacity = 0.5;
	}

	var myStyles = new OpenLayers.StyleMap({
		"default": defaultStyle,
		"select": selectStyle
	});
	
//	var geojsonLayer = new OpenLayers.Layer.Vector(jsondata["name"], {styleMap:myStyles});
	var geojsonLayer = new webtis.Layer.Vector(jsondata["name"], {styleMap:myStyles});
	geojsonLayer.styleType = styleType;

	geojsonParser = new OpenLayers.Format.GeoJSON({
		'internalProjection': projection900913,
		'externalProjection': projection4326
	});

	for (i=0; i<jsondata["data"].length;i++){
		geojsonLayer.addFeatures(geojsonParser.read(jsondata["data"][i]));

		geojsonLayer.features[i].data = jsondata["data"][i];
		geojsonLayer.features[i].attributes = jsondata["data"][i];

		// ポップアップ情報設定
		var attr_title = geojsonLayer.features[i].attributes.name;
		var description = geojsonLayer.features[i].attributes.properties;
		
		if (description && description != ""){
			geojsonLayer.features[i].attributes.description = description;
		}
	}
	jsonLayers[cnt] = geojsonLayer;
	map.addLayer(geojsonLayer);
	if (!hidePopup){
		geojsonLayer.JSGISelection = true;
	}
	geojsonLayer.setZIndex(700);
}

// html_entity_decodeのjavascript版
function html_entity_decode(string, quote_style) {
    var hash_map = {},
        symbol = '',
        tmp_str = '',
        entity = '';
    tmp_str = string.toString();

    if (false === (hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style))) {
        return false;
    }

    delete(hash_map['&']);
    hash_map['&'] = '&amp;';

    for (symbol in hash_map) {
        entity = hash_map[symbol];
        tmp_str = tmp_str.split(entity)
        .join(symbol);
    }
    tmp_str = tmp_str.split('&#039;')
    .join("'");

    return tmp_str;
}

// get_html_translation_tableのjavascript版
function get_html_translation_table (table, quote_style) {
    var entities = {}, hash_map = {}, decimal;
    var constMappingTable = {}, constMappingQuoteStyle = {};
    var useTable = {}, useQuoteStyle = {};
    
    // Translate arguments
    constMappingTable[0] = 'HTML_SPECIALCHARS';
    constMappingTable[1] = 'HTML_ENTITIES';
    constMappingQuoteStyle[0] = 'ENT_NOQUOTES';
    constMappingQuoteStyle[2] = 'ENT_COMPAT';
    constMappingQuoteStyle[3] = 'ENT_QUOTES';

    useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';
    useQuoteStyle = !isNaN(quote_style) ? constMappingQuoteStyle[quote_style] : quote_style ? quote_style.toUpperCase() : 'ENT_COMPAT';

    if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {
        throw new Error("Table: " + useTable + ' not supported');
        // return false;
    }

    entities['38'] = '&amp;';
    if (useTable === 'HTML_ENTITIES') {
		entities['160'] = '&nbsp;';
		entities['161'] = '&iexcl;';
		entities['162'] = '&cent;';
		entities['163'] = '&pound;';
		entities['164'] = '&curren;';
		entities['165'] = '&yen;';
		entities['166'] = '&brvbar;';
		entities['167'] = '&sect;';
		entities['168'] = '&uml;';
		entities['169'] = '&copy;';
		entities['170'] = '&ordf;';
		entities['171'] = '&laquo;';
		entities['172'] = '&not;';
		entities['173'] = '&shy;';
		entities['174'] = '&reg;';
		entities['175'] = '&macr;';
		entities['176'] = '&deg;';
		entities['177'] = '&plusmn;';
		entities['178'] = '&sup2;';
		entities['179'] = '&sup3;';
		entities['180'] = '&acute;';
		entities['181'] = '&micro;';
		entities['182'] = '&para;';
		entities['183'] = '&middot;';
		entities['184'] = '&cedil;';
		entities['185'] = '&sup1;';
		entities['186'] = '&ordm;';
		entities['187'] = '&raquo;';
		entities['188'] = '&frac ;';
		entities['189'] = '&frac ;';
		entities['190'] = '&frac34;';
		entities['191'] = '&iquest;';
		entities['192'] = '&Agrave;';
		entities['193'] = '&Aacute;';
		entities['194'] = '&Acirc;';
		entities['195'] = '&Atilde;';
		entities['196'] = '&Auml;';
		entities['197'] = '&Aring;';
		entities['198'] = '&AElig;';
		entities['199'] = '&Ccedil;';
		entities['200'] = '&Egrave;';
		entities['201'] = '&Eacute;';
		entities['202'] = '&Ecirc;';
		entities['203'] = '&Euml;';
		entities['204'] = '&Igrave;';
		entities['205'] = '&Iacute;';
		entities['206'] = '&Icirc;';
		entities['207'] = '&Iuml;';
		entities['208'] = '&ETH;';
		entities['209'] = '&Ntilde;';
		entities['210'] = '&Ograve;';
		entities['211'] = '&Oacute;';
		entities['212'] = '&Ocirc;';
		entities['213'] = '&Otilde;';
		entities['214'] = '&Ouml;';
		entities['215'] = '&times;';
		entities['216'] = '&Oslash;';
		entities['217'] = '&Ugrave;';
		entities['218'] = '&Uacute;';
		entities['219'] = '&Ucirc;';
		entities['220'] = '&Uuml;';
		entities['221'] = '&Yacute;';
		entities['222'] = '&THORN;';
		entities['223'] = '&szlig;';
		entities['224'] = '&agrave;';
		entities['225'] = '&aacute;';
		entities['226'] = '&acirc;';
		entities['227'] = '&atilde;';
		entities['228'] = '&auml;';
		entities['229'] = '&aring;';
		entities['230'] = '&aelig;';
		entities['231'] = '&ccedil;';
		entities['232'] = '&egrave;';
		entities['233'] = '&eacute;';
		entities['234'] = '&ecirc;';
		entities['235'] = '&euml;';
		entities['236'] = '&igrave;';
		entities['237'] = '&iacute;';
		entities['238'] = '&icirc;';
		entities['239'] = '&iuml;';
		entities['240'] = '&eth;';
		entities['241'] = '&ntilde;';
		entities['242'] = '&ograve;';
		entities['243'] = '&oacute;';
		entities['244'] = '&ocirc;';
		entities['245'] = '&otilde;';
		entities['246'] = '&ouml;';
		entities['247'] = '&divide;';
		entities['248'] = '&oslash;';
		entities['249'] = '&ugrave;';
		entities['250'] = '&uacute;';
		entities['251'] = '&ucirc;';
		entities['252'] = '&uuml;';
		entities['253'] = '&yacute;';
		entities['254'] = '&thorn;';
		entities['255'] = '&yuml;';
    }

    if (useQuoteStyle !== 'ENT_NOQUOTES') {
        entities['34'] = '&quot;';
    }
    if (useQuoteStyle === 'ENT_QUOTES') {
        entities['39'] = '&#39;';
    }
    entities['60'] = '&lt;';
    entities['62'] = '&gt;';

    // ascii decimals to real symbols
    for (decimal in entities) {
        if (entities.hasOwnProperty(decimal)) {
            hash_map[String.fromCharCode(decimal)] = entities[decimal];
        }
    }

    return hash_map;
}

/** ここから旧HTMLのロジック
function onFeatureSelect(event){
	var feature = event.feature;
	if (feature.popup) return;
	
	// タイトルを取得
	var attr_title = feature.attributes.name;
	// 属性情報(<description>要素)を取得
	var description = feature.attributes.properties;
	
	if (description && (description != "")) {
		var attrs = '<table><tr><td colspan="2" style="color:#FF0000;">' + webtis.Format.JSGIJSON.escapeHTML(attr_title) + '</td></tr></table>' + description;
	}
	else if (attr_title != "") {
		var attrs = '<table><tr><td colspan="2" style="color:#FF0000;">' + webtis.Format.JSGIJSON.escapeHTML(attr_title) + '</td></tr></table>';
	}
	else {
		return;
	}

	var popup = new OpenLayers.Popup.FramedCloud("popup",
		feature.geometry.getBounds().getCenterLonLat(),
		null,
		attrs,
		null,
		true, onPopupClose
	);
	popup.panMapIfOutOfView = false;
	
	feature.popup = popup;
	map.addPopup(popup);
}

function createTableTag(feature)
{
	var tag = "";
	var properties = feature.attributes.properties;

	var title = feature.attributes.name;

	if (properties) {
		// TABLEタグを<TR>で分割
		list = properties.match(/m|<TR>.+?<\/TR>|/ig);
		line = spliceList(list);
		
		var tableTag = "";
		
		for (i = 0; i < line.length; i++)
		{
			if (line[i].length == 0) continue;
			tableTag += line[i];
		}
		
		if (tableTag != "" || title != "") {
			tableTag = properties.replace(/<TR>.+<\/TR>/ig, tableTag);
			tag = title + "<BR>" + tableTag;
		}
	} else {
		tag = title;
	}

	return tag;
}

function spliceList(list)
{
	for (j = list.length - 1; j >= 0; j--)
	{
		if (list[j].length == 0)
		{
			list.splice(j, 1);
		}
	}
	
	return list;
}

function onFeatureUnselect(event){
	var feature = event.feature;
	if (feature.popup) {
		map.removePopup(feature.popup);
		feature.popup.destroy();
		feature.popup = null;
	}
}

// ポップアップを閉じたとき
function onPopupClose(evt) {
	clickCtrl.unselectAll();
}
	
// オブジェクト選択の初期化
function initClickSelection(layers){

	// コントロールを再作成
	clickCtrl = new webtis.Control.SelectFeature(layers, { hover : false });
//	clickCtrl = new OpenLayers.Control.SelectFeature(layers, { hover : false });
	map.addControl(clickCtrl);
	clickCtrl.activate();

	for (var i = 0; i < layers.length; i++)
	{
		layers[i].events.on({
			'featureselected': onFeatureSelect,
			'featureunselected': onFeatureUnselect
		});
	}
}
**/
//
// @source = GsiKeyboard.js
//
webtis.Control.GsiKeyboard = OpenLayers.Class(OpenLayers.Control.KeyboardDefaults, {

    defaultKeyPress: function (evt) {
        var size, handled = true;

        var target = OpenLayers.Event.element(evt);
        if (target  &&
            (target.tagName == 'INPUT' ||
             target.tagName == 'TEXTAREA' ||
             target.tagName == 'SELECT')) {
            return;
        }

        switch (evt.keyCode) {
            case OpenLayers.Event.KEY_LEFT:
                this.map.pan(-this.slideFactor, 0);
                break;
            case OpenLayers.Event.KEY_RIGHT: 
                this.map.pan(this.slideFactor, 0);
                break;
            case OpenLayers.Event.KEY_UP:
                this.map.pan(0, -this.slideFactor);
                break;
            case OpenLayers.Event.KEY_DOWN:
                this.map.pan(0, this.slideFactor);
                break;
            
            case 33: // Page Up. Same in all browsers.
                size = this.map.getSize();
                this.map.pan(0, -0.75*size.h);
                break;
            case 34: // Page Down. Same in all browsers.
                size = this.map.getSize();
                this.map.pan(0, 0.75*size.h);
                break; 
            case 35: // End. Same in all browsers.
                size = this.map.getSize();
                this.map.pan(0.75*size.w, 0);
                break; 
            case 36: // Home. Same in all browsers.
                size = this.map.getSize();
                this.map.pan(-0.75*size.w, 0);
                break; 

            case 43:  // +/= (ASCII), keypad + (ASCII, Opera)
            case 61:  // +/= (Mozilla, Opera, some ASCII)
            case 187: // +/= (IE)
            case 107: // keypad + (IE, Mozilla)
                if (!evt.ctrlKey) {
	                this.map.zoomIn();
	            }
                else {
                    handled = false;
                }
                break; 
            case 45:  // -/_ (ASCII, Opera), keypad - (ASCII, Opera)
            case 109: // -/_ (Mozilla), keypad - (Mozilla, IE)
            case 189: // -/_ (IE)
            case 95:  // -/_ (some ASCII)
                if (!evt.ctrlKey) {
                    this.map.zoomOut();
                }
                else {
                    handled = false;
                }
                break; 

            default:
                handled = false;
        }
        if (handled) {
            // prevent browser default not to move the page
            // when moving the page with the keyboard
            OpenLayers.Event.stop(evt);
        }
    },

    CLASS_NAME: "webtis.Control.GsiKeyboard"
});
//
// @source = selectmappanel.js
//
(function($){
jQuery.fn.SelectMapPanel = function() {

	this.append("\
		<div id=\"selectmap\" style=\"position:absolute;width:460px;right:100px;top:100px;display:none;\">\
			<table border=\"0\" width=\"460\" cellspacing=\"0\" cellpadding=\"2\" style=\"background-color:#CCCCCC\">\
			<tr><td style=\"width:100%\">\
				<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"width:100%; height:200px;\">\
					<tr><td style=\"cursor:pointer; width:100%;border: 1px #000000 solid;padding:5px;\">\
						<span style=\"color:#000000; font-weight:bold;\">地図・写真の種類</span>\
					</td></tr>\
					<tr>\
					<td style=\"padding:4px; width:100%;padding-left:10px; background-color:White;border: 1px #000000 solid;\">\
						<div>\
							<div class='selmaptitle'>地図\
							</div>\
						</div>\
						<div style=\"clear:both;\">\
							<table width=\"440\"><tbody>\
								<tr align=\"center\">\
								<td width=\"110\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('25000_n').click()\" ondblclick=\"document.getElementById('25000_n').click();\"><img src=\"http://portal.cyberjapan.jp/site/mapuse4/image/tmb_bas_n.png\" width=\"50\" height=\"50\" border=\"0\"></a></td>\
								<td width=\"110\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('pale').click()\" ondblclick=\"document.getElementById('pale').click();\"><img src=\"http://portal.cyberjapan.jp/site/mapuse4/image/tmb_pal_n.png\" width=\"50\" height=\"50\" border=\"0\"></a></td>\
								<td width=\"110\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('blank').click()\" ondblclick=\"document.getElementById('blank').click();\"><img src=\"http://portal.cyberjapan.jp/site/mapuse4/image/icon_white.png\" border=\"0\" height=\"50\" width=\"50\"></a></td>\
								<td width=\"110\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('jaise').click()\" ondblclick=\"document.getElementById('jaise').click();\"><img src=\"http://portal.cyberjapan.jp/site/mapuse4/image/jaise.jpg\" width=\"50\" height=\"50\" border=\"0\"></a></td>\
								</tr>\
								<tr align=\"center\">\
								<td nowrap><input type=\"radio\" name=\"mapkind\" id=\"25000_n\" onclick=\"changeMap('STD');\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('25000_n').click()\" ondblclick=\"document.getElementById('25000_n').click();\">標準地図</a></td>\
								<td nowrap=\"nowrap\"><input type=\"radio\" name=\"mapkind\" id=\"pale\" onclick=\"changeMap('pale');\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('pale').click()\" ondblclick=\"document.getElementById('pale').click();\">淡色地図</a></td>\
								<td nowrap=\"nowrap\"><input name=\"mapkind\" id=\"blank\" onclick=\"changeMap('Blank');\" type=\"radio\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('blank').click()\" ondblclick=\"document.getElementById('blank').click();\">白地図</a></td>\
								<td nowrap=\"nowrap\"><input type=\"radio\" name=\"mapkind\" id=\"jaise\" onclick=\"changeMap('Jaise');\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('jaise').click()\" ondblclick=\"document.getElementById('jaise').click();\">Romanized</a></td>\
								</tr>\
							</tbody></table>\
						</div>\
						<div>　</div>\
						<div style=\"clear:both;padding-top:10px;\">\
							<div class='selmaptitle' style=\"float:left;\">写真\
							</div>\
						</div>\
						<div style=\"clear:both;\">\
							<table width=\"360\"><tbody>\
								<tr align=\"center\">\
								<td><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('djbmo').click()\" ondblclick=\"document.getElementById('djbmo').click();\"><img src=\"http://portal.cyberjapan.jp/site/mapuse4/image/djbmo.jpg\" border=\"0\" height=\"50\" width=\"50\"></a></td>\
								<td width=240>　</td>\
								</tr>\
								<tr align=\"center\">\
								<td nowrap><input type=\"radio\" name=\"mapkind\" id=\"djbmo\" onclick=\"changeMap('DJBMO');\"><a href=\"javascript:void(0);\" class=\"sel\" onclick=\"document.getElementById('djbmo').click()\" ondblclick=\"document.getElementById('djbmo').click();\">最新（2007年～）</a></td>\
								<td width=240>　</td>\
								</tr>\
							</table>\
						</div>\
						<div style=\"height:10px;\"> </div>\
					</td></tr>\
				</table>\
			</td></tr>\
			</table>\
		</div>"
	);
	
	return this;
};
})(jQuery);//
// @source = maphandler_openlayers.js
//
/**
 * OpenLayers用のレイヤー操作クラス
 */
var mapHandler = {
	initialize : function() {
		handlerType = "OpenLayers";
	},
	layerExists : function(layers, layername) {
		var layer = layers[layername];
		return layer != null;
	},
	addKMLLayer : function(data, layers) {
		var msg = "";
		var style = "";
		var userAgent = window.navigator.userAgent.toLowerCase();
		var appVersion = window.navigator.appVersion.toLowerCase();
		if (userAgent.indexOf('msie') != -1 && appVersion.indexOf("msie 8.") != -1) {
			msg = "読み込み中・・・";
			style = {
				padding: '25px',
				bottom: '30px',
				left: '10px',
				top: map.size.h - 35 + 'px'
			};
		}
		else {
			msg = "<h1>ファイルを読み込んでいます・・・・・</h1>";
			style = { padding: '25px' };
		}

		$.blockUI({message: msg, css: style});

		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);

		layers[data.key] = newLayer;

		this.updatePopupLayer();

		$.unblockUI();
	},
	addInternalKMLLayer : function(data, layers) {
		var msg = "";
		var style = "";
		var userAgent = window.navigator.userAgent.toLowerCase();
		var appVersion = window.navigator.appVersion.toLowerCase();
		if (userAgent.indexOf('msie') != -1 && appVersion.indexOf("msie 8.") != -1) {
			msg = "読み込み中・・・";
			style = {
				padding: '25px',
				bottom: '30px',
				left: '10px',
				top: map.size.h - 35 + 'px'
			};
		}
		else {
			msg = "<h1>ファイルを読み込んでいます・・・・・</h1>";
			style = { padding: '25px' };
		}

		$.blockUI({message: msg, css: style});

		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);

		layers[data.key] = newLayer;

		$.ajax({
//			dataType: "jsonp",
			dataType: "xml",
			url: data.path,
//			jsonpCallback: "internal_kml_loaded",
			jsonpCallback: "internal_kml_loaded_" + data.key,
			success: function(xml) {
				var format = new OpenLayers.Format.KML({
						extractStyles: true,
						extractAttributes: true,
						maxDepth: 2,
						externalProjection: projection4326,
						internalProjection: projection900913
				});
//				newLayer.addFeatures(format.read(json.data));
				newLayer.addFeatures(format.read(xml));
				newLayer.redraw();
				$.unblockUI();
//				that.updatePopupLayer();
				sakuzuModule.disablePopupLayer();
				if (dispFlg && sakuzuModule.CurrentMode == "none"){
					sakuzuModule.enablePopupLayer();
				}
			},
			error: function() {
				alert('error');
				$.unblockUI();
			}
		}); 


	},
	addTileLayer : function(data, layers) {
		this.addMapLayer(data, layers);
	},
	addMapLayer : function(data, layers) {
		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);
		newLayer.setZIndex(data.zindex);

		layers[data.key] = newLayer;

// Todo:
//		var command = 'treeModule.getLayer(\"' + data.key + '\").redraw(true);'
//		setTimeout(command, 3000);
	},
	setLayerVisibility : function(layers, layername, visible) {
		var layer = layers[layername];
		if (layer == null) return;
		layer.setVisibility(visible);

		if (layer.subLayer != null)
		{
			layer.subLayer.setVisibility(visible);

			if (!visible){
				// 表示中のポップアップを閉じる
				this.updatePopupLayer();
			}
		}

		// webkit系の場合、レイヤーが再描画されないので画面を更新する
		if (visible)
		{
			this.redrawLayer(layer);

			if (layer.subLayer != null)
			{
				this.redrawLayer(layer.subLayer);
			}
		}
	},
	isLayerVisible : function(layers, layername) {
		var layer = layers[layername];
		if (layer != null && layer.visibility) {
			return true;
		} else {
			return false;
		}
	},
	getLayerOpacity : function(layers, layername, opacity) {
		var layer = layers[layername];
		if (layer == null) {
			return null;
		} else {
			return layer.opacity;
		}
	},
	setLayerOpacity : function(layers, layername, opacity) {
		var layer = layers[layername];

		if (layer != null)
		{
			this.setOpacity(layer, opacity);
				
			if (layer.subLayer != null)
			{
				this.setOpacity(layer.subLayer, opacity);
			}
		}
	},
	createLayer : function(data) {
		var layer = null;
		var layer_style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
		var zindex;

		if (data.type == "map") {
			layer = new webtis.Layer.BaseMap(data.key, {
				isBaseLayer: false,
				dataSet: dataSetObj[data.dataset],
				visibility: false
			});
		}
		else if (data.type == "tile") {
			layer = new webtis.Layer.TileLayer(data.key, data.path, data.maxzoom, data.minzoom);
			layer.visibility = true;
		}
		else if (data.type == "kml") {
			layer = new OpenLayers.Layer.Vector(data.title,
				{
					projection: projection4326,
					strategies: [new OpenLayers.Strategy.Fixed()],
					visibility: true, //false,
					unactivatable: true,
					protocol: new OpenLayers.Protocol.HTTP({
						url: data.path,
						format: new OpenLayers.Format.KML({
							extractStyles: true,
							extractAttributes: true,
							maxDepth: 2
						})
					}),
					style: layer_style
				}
			);
			layer.JSGISelection = true;
		}
		else if (data.type == "kml-internal") {
			layer = new OpenLayers.Layer.Vector(data.title,
				{
					projection: projection4326,
					visibility: true, //false,
					unactivatable: true,
					style: layer_style
				}
			);
			layer.JSGISelection = true;
		}
		else if (data.type == "tms") {
			layer = new OpenLayers.Layer.TMS(data.title, data.path,
			{
				type: 'png',
				getURL: tmsUrlObj[data.getURL],
				alpha: false,
				isBaseLayer: false,
				visibility: false
			});
		}
		else if (data.type == "img") {
			layer = new OpenLayers.Layer.Image(
				data.title,
				data.path,
				data.bounds,
				data.size,
				{
					visibility: false,
					isBaseLayer: false,
					projection: projection900913
				}
			);
		}
		
		return layer;
	},
	// レイヤーに透過度をセットする
	setOpacity : function(layer, opa)
	{
		if (layer != null)
		{
			if ((layer.CLASS_NAME == "webtis.Layer.BaseMap")||(layer.CLASS_NAME == "OpenLayers.Layer.TMS")|| (layer.CLASS_NAME == "OpenLayers.Layer.Image"))
			{
				layer.setOpacity(opa);
			}
			else
			{
				for (var i = 0; i < layer.features.length; i++)
				{
					var feature = layer.features[i];
					if (feature.orgStyle == null) feature.orgStyle = {};

					// 画像の透過度
					if (feature.style.graphicOpacity != null) {
						// 透過度の初期値を記録する
						if (feature.orgStyle.graphicOpacity == null && feature.orgStyle.graphicOpacity != 0) {
							feature.orgStyle.graphicOpacity = feature.style.graphicOpacity;
						}
						feature.style.graphicOpacity = feature.orgStyle.graphicOpacity * (opa == 0 ? 0.01 : opa);
					}

					// 線の透過度
					if (feature.style.strokeOpacity != null) {
						if (feature.orgStyle.strokeOpacity == null && feature.orgStyle.strokeOpacity != 0) {
							feature.orgStyle.strokeOpacity = feature.style.strokeOpacity;
						}
						feature.style.strokeOpacity = feature.orgStyle.strokeOpacity * (opa == 0 ? 0.01 : opa);
					}

					// 背景色の透過度
					if (feature.style.fillOpacity != null) {
						if (feature.orgStyle.fillOpacity == null && feature.orgStyle.fillOpacity != 0) {
							feature.orgStyle.fillOpacity = feature.style.fillOpacity;
						}
						feature.style.fillOpacity = feature.orgStyle.fillOpacity * (opa == 0 ? 0.01 : opa);
					}
				}
				layer.opacity = opa;
				layer.redraw();
			}
		}
	},
	// 地図レイヤーの再描画（chrome/safari）
	redrawLayer : function(layer)
	{
		if ((layer.CLASS_NAME == "webtis.Layer.BaseMap")||(layer.CLASS_NAME == "OpenLayers.Layer.TMS"))
		{
			layer.redraw();
		}
	},
	// ポップアップを表示されるようにする
	updatePopupLayer : function()
	{
		sakuzuModule.disablePopupLayer();
		if (dispFlg && sakuzuModule.CurrentMode == "none"){
			sakuzuModule.enablePopupLayer();
		}
	}
};

//
// @source = pluginctrl.js
//

var ShowPlugin = {};
var pluginCounter = 0;

(function($){
jQuery.fn.ShowPlugin = function(treeData, handler, imagePath) {
//	handler = handler;

	this.init_ctrl = $.proxy(init_ctrl, this);
	this.getTree = $.proxy(getTree, this);
//	this.createLayer = $.proxy(createLayer, this);

	var layerList = [];
	var libraryTitle = "レイヤー名: ";
	var pluginID = pluginCounter;
	this.pluginID = pluginID;
	pluginCounter++;

	function init_ctrl() {
		$("#plugintree" + this.pluginID).dynatree({
			checkbox: true,
			selectMode: 3,
			children: treeData,
			imagePath: imagePath,

			onSelect: function(select, dtnode) {
				var exist = handler.layerExists(layerList, dtnode.data.key);
				if (!exist)
				{
					// 未読込ならばレイヤーを作成
					if (dtnode.data.type == 'kml')
					{
						if (dtnode.data.proxy == 'false') {
							handler.addInternalKMLLayer(dtnode.data, layerList);
						} else {
							handler.addKMLLayer(dtnode.data, layerList);
						}
					}
					else if (dtnode.data.type == 'map')
					{
						handler.addMapLayer(dtnode.data, layerList);
						var command = 'pluginModule[' + pluginID + '].getLayer("' + dtnode.data.key + '").redraw(true);';
						setTimeout(command, 3000);
					}
					else if (dtnode.data.type == 'tile')
					{
						handler.addTileLayer(dtnode.data, layerList);
					}
					else if (dtnode.data.type == 'tms')
					{
						handler.addTmsLayer(dtnode.data, layerList);
					}
					else if (dtnode.data.type == 'kmlurl')
					{
						handler.addKmlUrlLayer(dtnode.data, layerList);
					}
				}
				else
				{
					if (select) {
						handler.setLayerVisibility(layerList, dtnode.data.key, true);
					} else {
						handler.setLayerVisibility(layerList, dtnode.data.key, false);
					}
					// TODO: サブレイヤーの扱い
				}
					
				dtnode.activate(true);

			},

			onActivate: function(dtnode) {
				// var layer = layerList[dtnode.data.key];
				if (handler.layerExists(layerList, dtnode.data.key)) {
					pluginSliderModule[pluginID].setOpacity(handler.getLayerOpacity(layerList, dtnode.data.key));
				} else {
					pluginSliderModule[pluginID].setOpacity(1);
				}
				
				$("#plugin_library_slider" + pluginID)[0].hidden = dtnode.data.isFolder;

//				var legendFunc = legendFuncObj[dtnode.data.legendFunc] ?
//				           legendFuncObj[dtnode.data.legendFunc] :
//					       (dtnode.parent && legendFuncObj[dtnode.parent.data.legendFunc] ? legendFuncObj[dtnode.parent.data.legendFunc] : null);

				var legendFunc = legendFuncObj[dtnode.data.legendFunc] ?
					legendFuncObj[dtnode.data.legendFunc] :
					(dtnode.parent && legendFuncObj[dtnode.parent.data.legendFunc] ? legendFuncObj[dtnode.parent.data.legendFunc] :
					(dtnode.parent && dtnode.parent.parent && legendFuncObj[dtnode.parent.parent.data.legendFunc] ? legendFuncObj[dtnode.parent.parent.data.legendFunc] :
					(dtnode.parent && dtnode.parent.parent && dtnode.parent.parent.parent && legendFuncObj[dtnode.parent.parent.parent.data.legendFunc] ? legendFuncObj[dtnode.parent.parent.parent.data.legendFunc] : null)));

				if (!dtnode.data.isFolder && legendFunc){
					legendFunc(dtnode, pluginID);
				}
				else {
					$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
					$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
					$("#plugin_library_legend" + pluginID)[0].innerHTML = "";
				}
			},

			onDblClick: function(dtnode, event) {
				dtnode.toggleSelect();
			},

			onKeydown: function(dtnode, event) {
				if (event.which == 32) {
					dtnode.toggleSelect();
					return false;
				}
			},

			initId: "treeData",

			cookieId: "ui-dynatree-Cb3",
			idPrefix: "ui-dynatree-Cb3-"
		});
		
		$("#plugin_library_name" + pluginID)[0].innerHTML = libraryTitle;
	};
	
	function getTree() {
		return $("#plugintree" + pluginID).dynatree("getTree");
	};

	
	if (typeof isMapCase != "undefined" && isMapCase == true) {
	var panelString = "\
		<div id=\"lib_main\" class=\"ui-widget-content ui-corner-all uiTabPanel\" style=\"padding: 2px 3px 10px 4px;\">\
			<div class=\"cs_block\">\
				<div style=\"clear:both\"></div>\
				<div id=\"plugintree\" style=\"width:275px; height:360px; margin-bottom: 12px;\"></div>\
				<div id=\"pluginStatus\" style=\"width:256px; clear:both; border: 1px solid gray; padding: 2px 0px 2px 4px; margin: 2px\">\
					<div id=\"plugin_library_name\" style=\"font-size:13px; font-weight: bolder; margin: 3px\"></div>\
					<div id=\"plugin_library_subname\" style=\"font-size:12px; margin: 2px\"></div>\
					<div id=\"plugin_library_slider\">\
						<div style=\"float:left; width:110px\">\
							<div id=\"plugin-opa-value\" style=\"font-size:13px\" ></div>\
						</div>\
						<div style=\"float:right; spacing:1px 0px 0px 0px;\">\
							<div id=\"plugin-opa-slider\"></div>\
						</div>\
						<div style=\"clear:both; height: 3px\"></div>\
					</div>\
					<div id=\"plugin_library_legend\" style=\"font-size:13px; margin: 8px\"></div>\
				</div>\
			</div>\
		</div>\
	";
	} else {
	var panelString = "\
		<div id=\"lib_main\" class=\"ui-widget-content ui-corner-all uiTabPanel\" style=\"padding: 2px 3px 10px 4px;\">\
			<div class=\"cs_block\">\
				<div id=\"othrelib\" style=\"float:right;height=10px; margin-bottom: 3px;\">\
					<font size=2><a href=\"http://geolib.gsi.go.jp/\" target=\"_blank\">地理空間情報ライブラリー入口</a></font>\
				</div>\
				<div style=\"clear:both\"></div>\
				<div id=\"plugintree\" style=\"width:275px; height:360px; margin-bottom: 12px;\"></div>\
				<div id=\"pluginStatus\" style=\"width:256px; clear:both; border: 1px solid gray; padding: 2px 0px 2px 4px; margin: 2px\">\
					<div id=\"plugin_library_name\" style=\"font-size:13px; font-weight: bolder; margin: 3px\"></div>\
					<div id=\"plugin_library_subname\" style=\"font-size:12px; margin: 2px\"></div>\
					<div id=\"plugin_library_slider\">\
						<div style=\"float:left; width:110px\">\
							<div id=\"plugin-opa-value\" style=\"font-size:13px\" ></div>\
						</div>\
						<div style=\"float:right; spacing:1px 0px 0px 0px;\">\
							<div id=\"plugin-opa-slider\"></div>\
						</div>\
						<div style=\"clear:both; height: 3px\"></div>\
					</div>\
					<div id=\"plugin_library_legend\" style=\"font-size:13px; margin: 8px\"></div>\
				</div>\
			</div>\
		</div>\
	";
	}
	panelString = panelString.replace("plugintree", "plugintree" + pluginID);
	panelString = panelString.replace("pluginStatus", "pluginStatus" + pluginID);
	panelString = panelString.replace("plugin_library_name", "plugin_library_name" + pluginID);
	panelString = panelString.replace("plugin_library_subname", "plugin_library_subname" + pluginID);
	panelString = panelString.replace("plugin_library_slider", "plugin_library_slider" + pluginID);
	panelString = panelString.replace("plugin_library_legend", "plugin_library_legend" + pluginID);
	panelString = panelString.replace("plugin-opa-value", "plugin-opa-value" + pluginID);
	panelString = panelString.replace("plugin-opa-slider", "plugin-opa-slider" + pluginID);
	var libPanel = $(panelString);

	this.append(libPanel);
	
	// ポップアップを表示されるようにする
	function updatePopupLayer()
	{
		sakuzuModule.disablePopupLayer();
		if (dispFlg && sakuzuModule.CurrentMode == "none"){
			sakuzuModule.enablePopupLayer();
		}
	};

	// ベクターレイヤのリストを返す
	this.getVectorLayers = function()
	{
		var layers = [];
		for (var key in layerList)
		{
			var layer = layerList[key];

			if (layer != null)
			{
				if (layer.CLASS_NAME == "OpenLayers.Layer.Vector") {
					layers.push(layer);
				}
				if (layer.subLayer != null && layer.subLayer.CLASS_NAME == "OpenLayers.Layer.Vector") {
					layers.push(layer.subLayer);
				}
			}
		}
		
		return layers;
	};

	// アクティブなレイヤーに透過度をセット
	this.changeOpacity = function(opa)
	{
		var dtnode = $("#plugintree" + pluginID).dynatree("getActiveNode");
		if (dtnode != null)
		{
			//webtis.setLayerOpacity(dtnode.data.key, opa);
			handler.setLayerOpacity(layerList, dtnode.data.key, opa);
		}
	};
	
	this.getRoot = function()
	{
		return $("#plugintree" + pluginID).dynatree("getRoot");
	};

	// 初期設定
	this.initTree = function()
	{
	};

	// レイヤーの初期表示
	this.initShowLayers = function(initLibLayers) {
		var root = this.getRoot();

		if (initLibLayers != null) {
			for (var i in initLibLayers) {
				// レイヤーの選択
				var info = initLibLayers[i];
				if (info) {
					var ret = root.tree.selectKey(info['key'], true);

					if (ret) {
						// 透過度の設定
						pluginSliderModule[pluginID].setOpacity(info['opacity']);
						this.changeOpacity(info['opacity']);
					}
				}
			}
		}
	};

	// 選択中のレイヤーからURLの文字列を作成
	this.getSelectedLayerString = function(nextIndex)
	{
		var ret = "";
		var root = this.getRoot();
		var idx = nextIndex;

		root.visit(function(node) {
			/*
			var layer = layerList[node.data.key];

			if (!node.data.isFolder && layer != null && layer.visibility) {
				ret += "&lkey" + idx + "=" + node.data.key
				     + "&lopa" + idx + "=" + (layer.opacity == null ? 1 : layer.opacity);

				idx++;
			}
			*/
			if (!node.data.isFolder) {
				var isVisible = handler.isLayerVisible(layerList, node.data.key);
				if (isVisible) {
					var opacity = handler.getLayerOpacity(layerList, node.data.key);
					ret += "&lkey" + idx + "=" + node.data.key
						+ "&lopa" + idx + "=" + (opacity == null ? 1 : opacity);
					idx++;
				}
			}
		});

		if (nextIndex < idx){
			return { 
				layerString: ret,
				nextIndex: idx
			};
		}
	};

	this.getLayer = function(key)
	{
		return layerList[key];
	};

	return this;
};
})(jQuery);

/** OpenLayersのクラスの簡易版 **/
ShowPlugin.Class = function() {
    var Class = function() {
        if (arguments) {
            this.initialize.apply(this, arguments);
        }
    };
    var extended = {};
    var parent, initialize, Type;
    for (var i=0, len=arguments.length; i<len; ++i) {
        Type = arguments[i];
        if(typeof Type == "function") {
            if(i == 0 && len > 1) {
                initialize = Type.prototype.initialize;
                Type.prototype.initialize = function() {};
                extended = new Type();
                if(initialize === undefined) {
                    delete Type.prototype.initialize;
                } else {
                    Type.prototype.initialize = initialize;
                }
            }
            parent = Type.prototype;
        } else {
            parent = Type;
        }
        ShowLayer.extend(extended, parent);
    }
    Class.prototype = extended;
    return Class;
};

ShowPlugin.extend = function(destination, source) {
    destination = destination || {};
    if (source) {
        for (var property in source) {
            var value = source[property];
            if(value !== undefined) {
                destination[property] = value;
            }
        }
        var sourceIsEvt = typeof window.Event == "function" && source instanceof window.Event;

        if(!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty('toString')) {
            destination.toString = source.toString;
        }
    }
    return destination;
};

//
// @source = pluginsliderctrl.js
//

var PluginSlider = function(id) {
	var moduleID = id;

	var output = document.getElementById('plugin-opa-value' + moduleID);
	var opalabel="透過率調節: ";
	var method = {
		// 表示用の透過率から、実際の透過率を求める
		value2opacity: function(value) {
			return (100 - value) / 100;
		},

		// 実際の透過率から、表示用の透過率を求める
		opacity2value: function (opacity){
			return Math.floor(100 - (opacity * 100));
		},

		// スライダーの値を設定する(0 ～100)
		setValue: function(value){
			output.innerHTML = opalabel + value;
//			jQuery('#plugin-opa-slider').slider('value', value);
			jQuery('#plugin-opa-slider' + moduleID).slider('value', value);
		}
	};
		
	jQuery(function(){
	    jQuery('#plugin-opa-slider' + moduleID).slider({
	    	value: 0,

	    	// スライダーの値を変更
	        slide: function(event, ui) {
	        	var value = ui.value;
				output.innerHTML = opalabel + value;
				
				var opa = method.value2opacity(value);
				pluginModule[moduleID].changeOpacity(opa);
			}
	    });
	});
	
	// 透過率を設定する(0～1)
	this.setOpacity = function(opa){
		var opacity = (opa == null) ? 1.0 : opa;
		var value = method.opacity2value(opacity);

		method.setValue(value);
	};

	method.setValue(0);
};
//
// @source = maphandler_openlayers_plugin.js
//
/**
 * OpenLayers用のレイヤー操作クラス
 */
var mapHandler = {
	RESOLUTIONS : [
		156543.03390625,
		78271.516953125,
		39135.7584765625,
		19567.87923828125,
		9783.939619140625,
		4891.9698095703125,
		2445.9849047851562,
		1222.9924523925781,
		611.4962261962891,
		305.74811309814453,
		152.87405654907226,
		76.43702827453613,
		38.218514137268066,
		19.109257068634033,
		9.554628534317017,
		4.777314267158508,
		2.388657133579254,
		1.194328566789627,
		0.5971642833948135,
		0.29858214169740677
	],
	initialize : function() {
		handlerType = "OpenLayers";
	},
	layerExists : function(layers, layername) {
		var layer = layers[layername];
		return layer != null;
	},
	addKMLLayer : function(data, layers) {
		var msg = "";
		var style = "";
		var userAgent = window.navigator.userAgent.toLowerCase();
		var appVersion = window.navigator.appVersion.toLowerCase();
		if (userAgent.indexOf('msie') != -1 && appVersion.indexOf("msie 8.") != -1) {
			msg = "読み込み中・・・";
			style = {
				padding: '25px',
				bottom: '30px',
				left: '10px',
				top: map.size.h - 35 + 'px'
			};
		}
		else {
			msg = "<h1>ファイルを読み込んでいます・・・・・</h1>";
			style = { padding: '25px' };
		}

		$.blockUI({message: msg, css: style});

		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);

		layers[data.key] = newLayer;

		var resolutions = this.RESOLUTIONS;

		$.ajax({
			dataType: "jsonp",
//			url: "./kml2jsonp.php?lf=0&url=" + encodeURIComponent(data.path),
			url: "http://portal.cyberjapan.jp/site/mapuse4/kml2jsonp.php?lf=0&url=" + encodeURIComponent(data.path),
			jsonpCallback: "kml_loaded_" + data.key.replace(/-/g, "_"),
			success: function(json) {
				var format = new OpenLayers.Format.KML({
						extractStyles: true,
						extractAttributes: true,
						maxDepth: 2,
						externalProjection: projection4326,
						internalProjection: projection900913
				});
				var features = format.read(json.data);
				if (data.drawLabel) {
					setSymbolLabelStyle(features);
					newLayer.styleType = 'librarykml';
				}
				newLayer.addFeatures(features);
				newLayer.redraw();
				$.unblockUI();
				sakuzuModule.disablePopupLayer();
				if (dispFlg && sakuzuModule.CurrentMode == "none"){
					sakuzuModule.enablePopupLayer();
				}
			},
			error: function(xhr, status, error) {
				alert('KMLファイルの読み込みに失敗しました。');
				$.unblockUI();
			}
		}); 
	},
	addInternalKMLLayer : function(data, layers) {
		var msg = "";
		var style = "";
		var userAgent = window.navigator.userAgent.toLowerCase();
		var appVersion = window.navigator.appVersion.toLowerCase();
		if (userAgent.indexOf('msie') != -1 && appVersion.indexOf("msie 8.") != -1) {
			msg = "読み込み中・・・";
			style = {
				padding: '25px',
				bottom: '30px',
				left: '10px',
				top: map.size.h - 35 + 'px'
			};
		}
		else {
			msg = "<h1>ファイルを読み込んでいます・・・・・</h1>";
			style = { padding: '25px' };
		}

		$.blockUI({message: msg, css: style});

		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);

		layers[data.key] = newLayer;

		var resolutions = this.RESOLUTIONS;

		$.ajax({
			dataType: "xml",
			url: data.path,
			jsonpCallback: "kml_loaded",
			success: function(xml) {
				var baseURI = this.url.split("?")[0];
				if (baseURI.lastIndexOf("/") != baseURI.length - 1) {
					baseURI = baseURI.substr(0, baseURI.lastIndexOf("/") + 1);
				}
				var format = new OpenLayers.Format.KML({
					parseStyle: function(node) {
						var style = 
							OpenLayers.Format.KML.prototype.parseStyle.call(this, node);
						if (typeof style.externalGraphic != "undefined" && style.externalGraphic.match(new RegExp("(^/)|(://)")) == null) {
							style.externalGraphic = baseURI + style.externalGraphic;
          					}
						return style;
        				},
					extractStyles: true,
					extractAttributes: true,
					maxDepth: 2,
					externalProjection: projection4326,
					internalProjection: projection900913
				});
				var features = format.read(xml);
				if (data.drawLabel) {
					setSymbolLabelStyle(features);
					newLayer.styleType = 'librarykml';
				}
				newLayer.addFeatures(features);
				newLayer.redraw();
				$.unblockUI();
				sakuzuModule.disablePopupLayer();
				if (dispFlg && sakuzuModule.CurrentMode == "none"){
					sakuzuModule.enablePopupLayer();
				}
			},
			error: function() {
				alert('error');
				$.unblockUI();
			}
		}); 


	},
	addTileLayer : function(data, layers) {
		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);
		if (data.zindex) {
			newLayer.setZIndex(data.zindex);
		}
		if (data.maxzoom) {
			newLayer.minResolution = newLayer.BASE_RESOLUTIONS[data.maxzoom];
		}
		if (data.minzoom) {
			newLayer.maxResolution = newLayer.BASE_RESOLUTIONS[data.minzoom];
		}

		layers[data.key] = newLayer;
	},
	addMapLayer : function(data, layers) {
		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);
		if (data.zindex) {
			newLayer.setZIndex(data.zindex);
		}

		layers[data.key] = newLayer;

//		var command = 'treeModule.getLayer(\"' + data.key + '\").redraw(true);'
//		setTimeout(command, 3000);
	},
	addTmsLayer : function(data, layers) {
		var newLayer = this.createLayer(data);
		newLayer.setVisibility(true);
		map.addLayer(newLayer);
		newLayer.setZIndex(data.zindex);

		layers[data.key] = newLayer;
	},
	addKmlUrlLayer : function(data, layers) {
		
		if (dataSetObj[data.getURL]){
			data.path = dataSetObj[data.getURL](data);
			this.addKMLLayer(data, layers);
		}
	},
	setLayerVisibility : function(layers, layername, visible) {
		var layer = layers[layername];
		if (layer == null) return;
		layer.setVisibility(visible);

		if (layer.subLayer != null)
		{
			layer.subLayer.setVisibility(visible);

			if (!visible){
				// 表示中のポップアップを閉じる
				this.updatePopupLayer();
			}
		}

		// webkit系の場合、レイヤーが再描画されないので画面を更新する
		if (visible)
		{
			this.redrawLayer(layer);

			if (layer.subLayer != null)
			{
				this.redrawLayer(layer.subLayer);
			}
		}
	},
	isLayerVisible : function(layers, layername) {
		var layer = layers[layername];
		if (layer != null && layer.visibility) {
			return true;
		} else {
			return false;
		}
	},
	getLayerOpacity : function(layers, layername, opacity) {
		var layer = layers[layername];
		if (layer == null) {
			return null;
		} else {
			return layer.opacity;
		}
	},
	setLayerOpacity : function(layers, layername, opacity) {
		var layer = layers[layername];

		if (layer != null)
		{
			this.setOpacity(layer, opacity);
				
			if (layer.subLayer != null)
			{
				this.setOpacity(layer.subLayer, opacity);
			}
		}
	},
	createLayer : function(data) {
		var layer = null;
		var layer_style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
		var zindex;

		if (data.type == "map") {
			var options = {
				isBaseLayer: false,
				dataSet: dataSetObj[data.dataset],
				visibility: false
			};
			if (typeof isReceivePrintData != "undefined" && isReceivePrintData == true) {
				options.tileSide = 128;
			}
			layer = new webtis.Layer.BaseMap(data.key, options);
/*
			layer = new webtis.Layer.BaseMap(data.key, {
				isBaseLayer: false,
				dataSet: dataSetObj[data.dataset],
				visibility: false
			});
*/
		}
		else if (data.type == "tile") {
			var tileside;

			if (typeof isReceivePrintData != "undefined" && isReceivePrintData == true) {
				tileside = 128;
			}

			layer = new webtis.Layer.TileLayer(data.key, data.path, data.maxzoom, data.minzoom, tileside);
			layer.visibility = true;
			layer.events.register('tileerror', layer, function(){
				$("div#" + this.div.id + " .olImageLoadError").css("display", "none");
			});
		}
		else if (data.type == "kml") {

			var options = {
				projection: projection4326,
				visibility: true, //false,
				unactivatable: true,
				style: layer_style
			}
			
			if (data.maxzoom && data.minzoom){
				var maxzoom = parseInt(data.maxzoom, 10);
				var minzoom = parseInt(data.minzoom, 10);
				
				options = jQuery.extend(options, {
					maxResolution: this.RESOLUTIONS[minzoom],
					minResolution: this.RESOLUTIONS[maxzoom],
					numZoomLevels: maxzoom - minzoom + 1
				});
			}
			layer = new OpenLayers.Layer.Vector(data.title, options);
			layer.JSGISelection = true;
/*
			layer = new OpenLayers.Layer.Vector(data.title,
				{
					projection: projection4326,
					strategies: [new OpenLayers.Strategy.Fixed()],
					visibility: true, //false,
					unactivatable: true,
					protocol: new OpenLayers.Protocol.HTTP({
						url: data.path,
						format: new OpenLayers.Format.KML({
							extractStyles: true,
							extractAttributes: true,
							maxDepth: 2
						})
					}),
					style: layer_style
				}
			);
			layer.JSGISelection = true;
*/
		}
		else if (data.type == "kml-internal") {
			var options = {
				projection: projection4326,
				visibility: true, //false,
				unactivatable: true,
				style: layer_style
			}
			if (data.maxzoom && data.minzoom){
				var maxzoom = parseInt(data.maxzoom, 10);
				var minzoom = parseInt(data.minzoom, 10);
				
				options = jQuery.extend(options, {
					maxResolution: this.RESOLUTIONS[minzoom],
					minResolution: this.RESOLUTIONS[maxzoom],
					numZoomLevels: maxzoom - minzoom + 1
				});
			}
  			layer = new OpenLayers.Layer.Vector(data.title, options);
			layer.JSGISelection = true;
		}
		else if (data.type == "tms") {
			layer = new OpenLayers.Layer.TMS(data.title, data.path,
			{
				type: 'png',
				getURL: tmsUrlObj[data.getURL],
				alpha: false,
				isBaseLayer: false,
				visibility: false
			});
			layer.events.register('tileerror', layer, function(){
				$("div#" + this.div.id + " .olImageLoadError").css("display", "none");
			});
		}
		else if (data.type == "img") {
			layer = new OpenLayers.Layer.Image(
				data.title,
				data.path,
				data.bounds,
				data.size,
				{
					visibility: false,
					isBaseLayer: false,
					projection: projection900913
				}
			);
		}
		else if (data.type == "kmlurl") {
			layer = new OpenLayers.Layer.Vector(data.title,
				{
					projection: projection4326,
					visibility: true,
					unactivatable: true,
					style: layer_style
				}
			);
			layer.JSGISelection = true;
		}

		return layer;
	},
	// レイヤーに透過度をセットする
	setOpacity : function(layer, opa)
	{
		if (layer != null)
		{
			if ((layer.CLASS_NAME == "webtis.Layer.BaseMap")||(layer.CLASS_NAME == "OpenLayers.Layer.TMS")|| (layer.CLASS_NAME == "OpenLayers.Layer.Image") || (layer.CLASS_NAME == "webtis.Layer.TileLayer"))
			{
				layer.setOpacity(opa);
			}
			else
			{
				for (var i = 0; i < layer.features.length; i++)
				{
					var feature = layer.features[i];
					if (feature.orgStyle == null) feature.orgStyle = {};

					// 画像の透過度
					if (feature.style.graphicOpacity != null) {
						// 透過度の初期値を記録する
						if (feature.orgStyle.graphicOpacity == null && feature.orgStyle.graphicOpacity != 0) {
							feature.orgStyle.graphicOpacity = feature.style.graphicOpacity;
						}
						feature.style.graphicOpacity = feature.orgStyle.graphicOpacity * (opa == 0 ? 0.01 : opa);
					}

					// 線の透過度
					if (feature.style.strokeOpacity != null) {
						if (feature.orgStyle.strokeOpacity == null && feature.orgStyle.strokeOpacity != 0) {
							feature.orgStyle.strokeOpacity = feature.style.strokeOpacity;
						}
						feature.style.strokeOpacity = feature.orgStyle.strokeOpacity * (opa == 0 ? 0.01 : opa);
					}

					// 背景色の透過度
					if (feature.style.fillOpacity != null) {
						if (feature.orgStyle.fillOpacity == null && feature.orgStyle.fillOpacity != 0) {
							feature.orgStyle.fillOpacity = feature.style.fillOpacity;
						}
						feature.style.fillOpacity = feature.orgStyle.fillOpacity * (opa == 0 ? 0.01 : opa);
					}
				}
				layer.opacity = opa;
				layer.redraw();
			}
		}
	},
	// 地図レイヤーの再描画（chrome/safari）
	redrawLayer : function(layer)
	{
		if ((layer.CLASS_NAME == "webtis.Layer.BaseMap")||(layer.CLASS_NAME == "OpenLayers.Layer.TMS"))
		{
			layer.redraw();
		}
	},
	// ポップアップを表示されるようにする
	updatePopupLayer : function()
	{
		sakuzuModule.disablePopupLayer();
		if (dispFlg && sakuzuModule.CurrentMode == "none"){
			sakuzuModule.enablePopupLayer();
		}
	}
};

function setSymbolLabelStyle(features) {
	for (var i = 0; i < features.length; i++) {
		var feature = features[i];
		feature.style.fontSize = '12px';
		feature.style.labelAlign = 'lm';
		feature.style.fontFamily = 'ＭＳ ゴシック';
		feature.style.fontOpacity = iconlabel ? 1 : 0.0001;
		feature.style.label = feature.data.name;
		feature.style.labelXOffset = feature.style.graphicWidth ? feature.style.graphicWidth/2 : 20/2;
	}
}

function kml_loaded(data) {
	// dummy function
}

//
// @source = libraryMapLegend.js
//
// 写真
legendFuncObj.getLibraryLegend_photo =  function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = "写真";
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	var link = "";
	switch(dtnode.data.key){
	case 'y2k7':
		link = "http://www.gsi.go.jp/gazochosa/gazochosa40001.html";
		break;
	case 'yk88':
	case 'yk84':
	case 'yk79':
	case 'yk74':
		link = "http://www.gsi.go.jp/johofukyu/kani_ortho_1.html";
		break;
	}

	if (link) link = createPopupLink(link, '関連情報') + "<br/><br/>(c)国土地理院";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = link;
}

// 色別標高図
legendFuncObj.getLibraryLegend_relief = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://portal.cyberjapan.jp/site/mapuse4/attension_relief.html', '凡例') + "<br/><br/>(c)国土地理院";
}

// 都市圏活断層図
legendFuncObj.getLibraryLegend_FM = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://www.gsi.go.jp/common/000084060.pdf', '凡例') + "<br/>" +
		createPopupLink('http://www.gsi.go.jp/bousaichiri/guidebook.html', '解説') + "<br/><br/>" +
		"(c)国土地理院";
}

// 明治前期の低湿地
legendFuncObj.getLibraryLegend_meijiswale = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://cyberjapan.jp/legend/SWALE_hanrei.pdf', '凡例') + "<br/>" +
		createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_meiji.html', '解説') + "<br/><br/>(c)国土地理院";
}

// 20万分1土地利用図
legendFuncObj.getLibraryLegend_LUM200K = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://cyberjapan.jp/legend/lum200k_legend.jpg', '凡例') + "<br/>" +
		createPopupLink('http://www1.gsi.go.jp/geowww/LandUse/lum-200k.html', '解説') + "<br/><br/>(c)国土地理院";
}

// 土地条件図
legendFuncObj.getLibraryLegend_lcm25k = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	switch (dtnode.data.key) {
	case "lcm25k":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/LCM_hanrei.png', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_index.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "lcm25k_2011":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/LCM_2011_hanrei.jpg', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_index.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "lcm25k_2012":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/lcm25k_2012/lc_legend.html', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_cd25000.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "LCM25K_2012_2":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/lcm25k_2012/lc_legend.html', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_cd25000.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	}
}


// 沿岸海域土地条件図
legendFuncObj.getLibraryLegend_CCM = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	switch (dtnode.data.key) {
	case "ccm1":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/CCM1_hanrei.pdf', '凡例') + "<br/>" +
			createPopupLink('http://www1.gsi.go.jp/geowww/coastmap/index2.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "ccm2":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/CCM2_hanrei.pdf', '凡例') + "<br/>" +
			createPopupLink('http://www1.gsi.go.jp/geowww/coastmap/index2.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	}
}

legendFuncObj.getLibraryLegend_vbmc = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var legend = "";
	switch(dtnode.data.key){
		case 'vbm01meakan' : legend = "http://cyberjapan.jp/legend/l_vbm_meakan.jpg"; break;
		case 'vbm02tokachi' : legend = "http://cyberjapan.jp/legend/l_vbm_tokachi.jpg"; break;
		case 'vbm03tarumae' : legend = "http://cyberjapan.jp/legend/l_vbm_tarumae.jpg"; break;
		case 'vbm04usu' : legend = "http://cyberjapan.jp/legend/l_vbm_usu.jpg"; break;
		case 'vbm05hokkaidokoma' : legend = "http://cyberjapan.jp/legend/l_vbm_hokkaidokoma.jpg"; break;
		case 'vbm06iwaki' : legend = "http://cyberjapan.jp/legend/l_vbm_iwaki.jpg"; break;
		case 'vbm07akitayake' : legend = "http://cyberjapan.jp/legend/l_vbm_akitayake.jpg"; break;
		case 'vbm08iwate' : legend = "http://cyberjapan.jp/legend/l_vbm_iwate.jpg"; break;
		case 'vbm09kurikoma' : legend = "http://cyberjapan.jp/legend/l_vbm_kurikoma.jpg"; break;
		case 'vbm10akitakoma' : legend = "http://cyberjapan.jp/legend/l_vbm_akitakoma.jpg"; break;
		case 'vbm11chokai' : legend = "http://cyberjapan.jp/legend/l_vbm_chokai.jpg"; break;
		case 'vbm12zao' : legend = "http://cyberjapan.jp/legend/l_vbm_zao.jpg"; break;
		case 'vbm13azuma' : legend = "http://cyberjapan.jp/legend/l_vbm_azuma.jpg"; break;
		case 'vbm14adatara' : legend = "http://cyberjapan.jp/legend/l_vbm_adatara.jpg"; break;
		case 'vbm15bandai' : legend = "http://cyberjapan.jp/legend/l_vbm_bandai.jpg"; break;
		case 'vbm16nasu' : legend = "http://cyberjapan.jp/legend/l_vbm_nasu.jpg"; break;
		case 'vbm17kusatsushirane' : legend = "http://cyberjapan.jp/legend/l_vbm_kusatsushirane.jpg"; break;
		case 'vbm18asama' : legend = "http://cyberjapan.jp/legend/l_vbm_asama.jpg"; break;
		case 'vbm19hakone' : legend = "http://cyberjapan.jp/legend/l_vbm_hakone.jpg"; break;
		case 'vbm20fuji' : legend = "http://cyberjapan.jp/legend/l_vbm_fuji.jpg"; break;
		case 'vbm21eastizu' : legend = "http://cyberjapan.jp/legend/l_vbm_higashiizu.jpg"; break;
		case 'vbm22izuoshima' : legend = "http://cyberjapan.jp/legend/l_vbm_izuoshima.jpg"; break;
		case 'vbm23miyake' : legend = "http://cyberjapan.jp/legend/l_vbm_miyake.jpg"; break;
		case 'vbm24yakedake' : legend = "http://cyberjapan.jp/legend/l_vbm_yakedake.jpg"; break;
		case 'vbm25ontake' : legend = "http://cyberjapan.jp/legend/l_vbm_ontake.jpg"; break;
		case 'vbm26tsurumi' : legend = "http://cyberjapan.jp/legend/l_vbm_tsurumi.jpg"; break;
		case 'vbm27kujyu' : legend = "http://cyberjapan.jp/legend/l_vbm_kujyu.jpg"; break;
		case 'vbm28aso' : legend = "http://cyberjapan.jp/legend/l_vbm_aso.jpg"; break;
		case 'vbm29unzen' : legend = "http://cyberjapan.jp/legend/l_vbm_unzen.jpg"; break;
		case 'vbm30kirishima' : legend = "http://cyberjapan.jp/legend/l_vbm_kirishima.jpg"; break;
		case 'vbm31sakurajima' : legend = "http://cyberjapan.jp/legend/l_vbm_sakurajima.jpg"; break;
		case 'vbm32satsumatakesima' : legend = "http://cyberjapan.jp/legend/l_vbm_satsumatakesima.jpg"; break;
		case 'vbm33satsumaiojima' : legend = "http://cyberjapan.jp/legend/l_vbm_satsumaiojima.jpg"; break;
		case 'vbm34suwanosejima' : legend = "http://cyberjapan.jp/legend/l_vbm_suwanosejima.jpg"; break;
		case 'vbm35esan' : legend = "http://cyberjapan.jp/legend/l_vbm_esan.jpg"; break;
	}

	if (legend) legend = createPopupLink(legend, '凡例') + "<br/>";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = legend +
		createPopupLink('http://www1.gsi.go.jp/geowww/Volcano/volcano.html', '解説') + "<br/><br/>(c)国土地理院";
}

// 火山土地条件図
legendFuncObj.getLibraryLegend_volcano = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var legend = "";
	switch(dtnode.data.key){
	case 'akandake':
		legend = "http://cyberjapan.jp/legend/l_vlcd_meakan.jpg";
		break;
	case 'tokachidake':
		legend = "http://cyberjapan.jp/legend/l_vlcd_2tkch.jpg";
		break;
	case 'tarumaesan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_10tarm.jpg";
		break;
	case 'usuzan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_9usu.jpg";
		break;
	case 'komagatake':
		legend = "http://cyberjapan.jp/legend/l_vlcd_5hkkm.jpg";
		break;
	case 'iwatesan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_00iwatesan.jpg";
		break;
	case 'kurikomayama':
		legend = "http://cyberjapan.jp/legend/kurikoma_D2_58_legend.jpg";
		break;
	case 'adatarayama':
		legend = "http://cyberjapan.jp/legend/l_vlcd_adatara.jpg";
		break;
	case 'bandaisan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_11band.jpg";
		break;
	case 'izuoshima':
		legend = "http://cyberjapan.jp/legend/l_vlcd_13izuo.jpg";
		break;
	case 'miyakezima':
		legend = "http://cyberjapan.jp/legend/l_vlcd_6mykj.jpg";
		break;
	case 'kusatsushiranesan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_3ksrn.jpg";
		break;
	case 'fujisan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_12fuji.jpg";
		break;
	case 'ontakesan':
		legend = "http://cyberjapan.jp/legend/ontake_legend.jpg";
		break;
	case 'kujirenzan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_kuju.jpg";
		break;
	case 'asosan':
		legend = "http://cyberjapan.jp/legend/l_vlcd_4aso.jpg";
		break;
	case 'unzendake':
		legend = "http://cyberjapan.jp/legend/l_vlcd_7unzn.jpg";
		break;
	case 'kirishimayama':
		legend = "http://cyberjapan.jp/legend/l_vlcd_8krsm.jpg";
		break;
	case 'sakurazima':
		legend = "http://cyberjapan.jp/legend/l_vlcd_1skrj.jpg";
		break;
	case 'satsumaiojima':
		legend = "http://cyberjapan.jp/legend/l_vlcd_satsumaiou.jpg";
		break;
	}

	if (legend) legend = createPopupLink(legend, '凡例') + "<br/>";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = legend +
		createPopupLink('http://www1.gsi.go.jp/geowww/Volcano/volcano.html', '解説') + "<br/><br/>(c)国土地理院";
}

// 土地被覆
legendFuncObj.getLibraryLegend_GLCNMO2 = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://cyberjapan.jp/legend/Legend_GLCNMO.pdf', '凡例') + "<br/><br/>" +
		"(c)国土地理院、千葉大学、地球地図国際運営委員会、協働機関";
}

// 植生
legendFuncObj.getLibraryLegend_PTC2 = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://cyberjapan.jp/legend/Legend_PTC.pdf', '凡例') + "<br/><br/>" +
		"(c)国土地理院、千葉大学、地球地図国際運営委員会、協働機関";
}

// 宅地利用動向調査
legendFuncObj.getLibraryLegend_takudo = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.parent.data.title + "," + dtnode.data.title + ")";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://cyberjapan.jp/legend/takuchi_hanrei.png', '凡例') + "<br/>" +
		createPopupLink('http://www1.gsi.go.jp/geowww/LandUse/lum-takudo.html', '解説') + "<br/><br/>(c)国土地理院";
}

// 湖沼図
legendFuncObj.getLibraryLegend_LAKE = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title ;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	switch (dtnode.data.key) {
	case "lake1":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/LAKE_beforeH2.png', '凡例') + "<br/>" +
			createPopupLink('http://www1.gsi.go.jp/geowww/lake/index.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "lake2":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/LAKE_afterH3.png', '凡例') + "<br/>" +
			createPopupLink('http://www1.gsi.go.jp/geowww/lake/index.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	}
}

// 基盤地図情報
legendFuncObj.getLibraryLegend_kiban = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"ズームレベル18でのみ表示されます。";
}

// 基盤地図情報の提供地域
legendFuncObj.getLibraryLegend_fgd = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title ;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	var info = "";
	switch (dtnode.data.key) {
	case "fgd1":
		info = "縮尺レベル2500で整備した基盤地図情報の提供範囲";
		break;

	case "fgd2":
		info = "航空レーザ測量により整備した5mメッシュDEMの提供範囲";
		break;

	case "fgd3":
		info = "写真測量により整備した5mメッシュDEMの提供範囲";
		break;

	case "fgd4":
		info = "公共測量成果（航空レーザ測量）を基に作成した5mメッシュDEMの提供範囲";
		break;

	case "fgd5":
		info = "火山基本図の等高線データを基に作成した10mメッシュDEMの提供範囲";
		break;
	}

	$("#plugin_library_legend" + pluginID)[0].innerHTML = info +
		"<br/><br/>　<a href='http://www.gsi.go.jp/kiban/index.html' target='kibanchizu'>基盤地図情報サイト</a>";

}


legendFuncObj.getLibraryLegend_photoPoint = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	var div = '<div>' +
	          '写真は地図の中心に近いものから最大100点まで表示されます。<br/><br/>' +
	          '<input type="button" value="写真の再検索" onclick="onPhotoPoint_reload(\'' + dtnode.data.key + '\',\'' + pluginID + '\');"/>' +
	          '</div>';

	$("#plugin_library_legend" + pluginID)[0].innerHTML = div;
}

legendFuncObj.getLibraryLegend_Y2K4air = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var div = '<div>' +
	          'この画像は測量用写真として撮影したものではないため、測量に用いることはできません。<br/><br/>' +
	          createPopupLink('http://cyberjapan.jp/legend/kannikuchu-description.pdf', '解説') + "<br/><br/>(c)国土地理院";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = div;
}

legendFuncObj.getLibraryLegend_NDVI250m = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.parent.data.title + dtnode.data.title + ")";

	var div = "国土地理院と東海大学との共同研究による。<br/><br/>" +
			  createPopupLink("http://geolib.gsi.go.jp/tiles/thematicmap/NDVI_250m/legend_ndvi250m.pdf", "凡例") + "<br/>" +
			  createPopupLink("http://www1.gsi.go.jp/geowww/EODAS/ndvi.html", "解説") + "<br/>" +
			  createPopupLink("http://www1.gsi.go.jp/geowww/EODAS/ndvi-download.html", "データダウンロード") + "<br/><br/>(c)国土地理院";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = div;
}

legendFuncObj.getLibraryLegend_fukkokizu = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var div = createPopupLink("http://cyberjapan.jp/legend/fukkokizu.pdf", "凡例") + "<br/>" +
			  createPopupLink("http://cyberjapan.jp/legend/fukkokizu_description.pdf", "解説") + "<br/><br/>(c)国土地理院";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = div;

}

legendFuncObj.getLibraryLegend_toho = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	var div = createPopupLink("http://cyberjapan.jp/info/geje-ort.pdf", "解説") + "<br/><br/>(c)国土地理院";
	$("#plugin_library_legend" + pluginID)[0].innerHTML = div;
}

// 「再読込」ボタン押下時のイベント
function onPhotoPoint_reload(key, pluginID)
{
	// pluginIDとkeyでツリーのnodeを特定し、そこからレイヤーとKMLファイルのパスを取得
	var module = pluginModule[pluginID];
	var node = module.getTree().getNodeByKey(key);

	var layer = module.getLayer(key);

	if (!layer || !layer.getVisibility()) {
		return;
	}

	var url = dataSetObj[node.data.getURL](node.data);

	var msg = "";
	var style = "";
	var userAgent = window.navigator.userAgent.toLowerCase();
	var appVersion = window.navigator.appVersion.toLowerCase();
	if (userAgent.indexOf('msie') != -1 && appVersion.indexOf("msie 8.") != -1) {
		msg = "読み込み中・・・";
		style = {
			padding: '25px',
			bottom: '30px',
			left: '10px',
			top: map.size.h - 35 + 'px'
		};
	}
	else {
		msg = "<h1>ファイルを読み込んでいます・・・・・</h1>";
		style = { padding: '25px' };
	}

	$.blockUI({message: msg, css: style});

	$.ajax({
		dataType: "jsonp",
		url: "http://portal.cyberjapan.jp/site/mapuse4/kml2jsonp.php",
		data: {
			"lf": 0,
			"url": url
		},
		jsonpCallback: "kml_loaded_" + key,
		success: function(json) {
			var format = new OpenLayers.Format.KML({
					extractStyles: true,
					extractAttributes: true,
					maxDepth: 2,
					externalProjection: projection4326,
					internalProjection: projection900913
			});
			layer.removeAllFeatures();
			layer.addFeatures(format.read(json.data));
			layer.redraw();
			$.unblockUI();
			sakuzuModule.disablePopupLayer();
			if (dispFlg && sakuzuModule.CurrentMode == "none"){
				sakuzuModule.enablePopupLayer();
			}
		},
		error: function(xhr, status, error) {
			alert('KMLファイルの読み込みに失敗しました。');
			$.unblockUI();
		}
	});

}



//	治水地形分類図（初版）
legendFuncObj.getLibraryLegend_LCMFC = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title +	"-" + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://www1.gsi.go.jp/geowww/lcmfc/hanrei.gif', '凡例') + "<br/>" +
		createPopupLink('http://www1.gsi.go.jp/geowww/lcmfc/lcmfc.html', '解説') + "<br/><br/>(c)国土地理院";
}


//	治水地形分類図（更新版(2007～2012年)）
legendFuncObj.getLibraryLegend_LCMFC2 = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title +	"-" + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";		//	"-" + dtnode.data.title;
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://cyberjapandata.gsi.go.jp/xyz/LCMFC02/fc_legend02.jpg', '凡例') + "<br/>" +
		createPopupLink('http://www1.gsi.go.jp/geowww/lcmfc/lcmfc.html', '解説') + "<br/><br/>(c)国土地理院";
}



/////////////////////////////////		20140714

//  地球地図日本
legendFuncObj.getLibraryLegend_TikyuTizuNippon = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title +	"-" + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink('http://cyberjapan.jp/legend/Legend_GMJ.pdf', '凡例') + "<br/>" +
		 "	<br/>(c)国土地理院";
}

/////////////////////////////////		20140714

//
// @source = libraryGeodeticLegend.js
//
// 電子基準点
legendFuncObj.getLibraryLegend_denshi = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML = "(c)国土地理院";
};

// 験潮場（海岸昇降検知センター）
legendFuncObj.getLibraryLegend_kenchou = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =//createPopupLink('./legend_kenchou.html', '凡例') +
		"＜海岸昇降検知センター登録験潮場＞<br/>国土地理院、気象庁、海上保安庁、国交省等の験潮場<br/>験潮記録から地殻変動を検知しています<br/><br/>" +
		"<img src='http://portal.cyberjapan.jp/sys/v4/symbols/mark1_s.png' alt='国土地理院'>　国土地理院<br/><img src='http://portal.cyberjapan.jp/sys/v4/symbols/mark2_s.png' alt='気象庁'>　気象庁<br/><img src='http://portal.cyberjapan.jp/sys/v4/symbols/mark3_s.png' alt='海上保安庁'>　海上保安庁<br/><img src='http://portal.cyberjapan.jp/sys/v4/symbols/mark4_s.png' alt='その他'>　その他";
};

//観測を強化している地域の地殻変動
legendFuncObj.getLibraryLegend_kansokukyouka = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		 "<b>測量方法</b><br/><img src='http://portal.cyberjapan.jp/sys/v4/symbols/097.png' alt='測距' width='15' height='15'>　測距<span style='vertical-align:super;font-size:0.8em;'>※1</span><br/><img src='http://www.gsi.go.jp/common/000079136.bmp' alt='水準' width='15' height='15'>　水準<span style='vertical-align:super;font-size:0.8em;'>※2</span><br/><img src='http://portal.cyberjapan.jp/sys/v4/symbols/099.png' alt='重力' width='15' height='15'>　重力<span style='vertical-align:super;font-size:0.8em;'>※3</span><br/><p style='text-indent:-2em;padding-left:2em;'><img src='http://portal.cyberjapan.jp/sys/v4/symbols/105.png' alt='火山' width='15' height='15'>　火山（水準、GNSS<span style='vertical-align:super;font-size:0.8em;'>※4</span>、重力、地磁気<span style='vertical-align:super;font-size:0.8em;'>※5</span>、干渉SAR<span style='vertical-align:super;font-size:0.8em;'>※6</span>）</p>"
		+"<br/>地震・火山噴火の調査研究のために地殻変動等の監視を強化している地区。<br/>その地域の特徴を考慮した測量手法で観測。"
		+"<br/><br/>(c)国土地理院";
};

// 磁気図2010.0年値
legendFuncObj.getLibraryLegend_chijiki = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var blackLine ="";
	var whiteLine ="";
	var title = dtnode.data.title.replace(/図/g, "");
	if(dtnode.data.key=='chijikiD'){
		title = "偏角";
	}

	switch(dtnode.data.key){
		case 'chijikiD':
		case 'chijikiI':
			blackLine = "1度";
			whiteLine = "12分";
			break;
		case 'chijikiF':
		case 'chijikiH':
		case 'chijikiZ':
			blackLine = "1000nT";
			whiteLine = "100nT";
			break;
	}
	var legend_str = "2010年1月1日における、"+title+"の分布を図に表したものです。";
	if(dtnode.data.key=='chijikiD')	{
		legend_str += "<br/>拡大すると2次メッシュに対応した偏角値（偏角一覧図）が確認できます。";
	}
	legend_str += "<br/><br/>＜凡例＞<br/>黒線 ： "+blackLine+"ごと<br/>白線 ： "+whiteLine+"ごと";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = legend_str;
};

//干渉SAR
legendFuncObj.getLibraryLegend_SAR = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.parent.data.title + " - " +dtnode.parent.parent.data.title ;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.parent.data.title + "," + dtnode.data.title + ")";

	switch(dtnode.data.key) {
		case 'eq20070621':
			$("#plugin_library_legend" + pluginID)[0].innerHTML =
				"軌道方向:" +
				"観測モード:FBD-FBD<br/>" +
				"オフナディア角:34.3°<br/>" +
				"偏波:HH<br/>" +
				"パス番号:402<br/>" +
				"フレーム番号:760<br/>" +
				"垂直基線長:+181m<br/>" +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +
				"解析:国土地理院<br/>" +
				"原初データ所有:JAXA/METI";
			break;
		case 'eq20070806':
			$("#plugin_library_legend" + pluginID)[0].innerHTML =
				"軌道方向:" +
				"観測モード:FBD-FBS<br/>" +
				"オフナディア角:34.3°<br/>" +
				"偏波:HH<br/>" +
				"パス番号:402<br/>" +
				"フレーム番号:760<br/>" +
				"垂直基線長:-605m<br/>" +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +
				"解析:国土地理院<br/>" +
				"原初データ所有:JAXA/METI";
			break;
		case 'eq20090603':
			$("#plugin_library_legend" + pluginID)[0].innerHTML =
				"軌道方向:南行(D)<br/>" +
				"観測モード:FBS-FBS<br/>" +
				"オフナディア角:34.3°<br/>" +
				"偏波:HH<br/>" +
				"パス番号:57<br/>" +
				"フレーム番号:2840<br/>" +
				"垂直基線長:-238m<br/>" +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +
				"解析:国土地理院<br/>" +
				"原初データ所有:JAXA/METI";
			break;
		case 'eq20100514':
			$("#plugin_library_legend" + pluginID)[0].innerHTML =
				"軌道方向:北行(A)<br/>" +
				"観測モード:FBS-FBD<br/>" +
				"オフナディア角:34.3°<br/>" +
				"偏波:HH<br/>" +
				"パス番号:402<br/>" +
				"フレーム番号:760<br/>" +
				"垂直基線長:+869m<br/>" +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +
				"解析:国土地理院<br/>" +
				"原初データ所有:JAXA/METI";
			break;
		default:
			$("#plugin_library_legend" + pluginID)[0].innerHTML =
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + "<br/>" +
				createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/><br/>(c)国土地理院";
	};
};





//干渉SAR 地震
legendFuncObj.getLibraryLegend_SAR_EQ = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.parent.data.title + " - " +dtnode.parent.parent.data.title ;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.parent.data.title + "," + dtnode.data.title + ")";


	if( dtnode.data.key == 'sar_earthquake_dam' )
	{
		$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.data.title;
		$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
		$("#plugin_library_legend" + pluginID)[0].innerHTML = "";
	}
	else if( dtnode.data.key == 'BUILD_IMI__http2010.07.22-2010.10.22' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "南行（D）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "57"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "2840"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "+660m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2010.06.29-2010.09.29' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBD-FBD"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "+710m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2010.05.14-2010.09.29' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBD"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "+869m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2010.07.22-2010.09.06' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "南行（D）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "57"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "2840"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "+350m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2010.06.06-2010.07.22' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "南行（D）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "57"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "2840"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "+11m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2010.05.14-2010.06.29' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBD"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "+158m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2008.06.23-2009.09.26' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBD"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "-268m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2009.06.03-2009.09.03' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "南行（D）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "57"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "2840"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "-238m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2008.07.16-2009.09.03' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "南行（D）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "57"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "2840"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "-172m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2008.06.23-2009.06.26' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "-626m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2007.08.29-2008.07.16' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "南行（D）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBS-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "57"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "2840"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "-765m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2007.08.06-2008.06.23' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBD-FBS"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "-605m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2007.08.06-2007.09.21' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBD-FBD"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "-108m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }
	else if( dtnode.data.key == 'BUILD_IMI__http2007.06.21-2007.09.21' )  {$("#plugin_library_legend" + pluginID)[0].innerHTML ="<TABLE><TR><TD>軌道方向</TD><TD>:　</TD><TD>" + "北行（A）"+"</TD></TR><TR><TD>観測モード:　</TD><TD>:　</TD><TD>" + "FBD-FBD"+"</TD></TR><TR><TD>オフナディア角</TD><TD>:　</TD><TD>" + "34.3°"+"</TD></TR><TR><TD>偏波</TD><TD>:　</TD><TD>" + "HH"+"</TD></TR><TR><TD>パス番号</TD><TD>:　</TD><TD>" + "402"+"</TD></TR><TR><TD>フレーム番号:　</TD><TD>:　</TD><TD>" + "760"+"</TD></TR><TR><TD>垂直基線長:　</TD><TD>:　</TD><TD>" + "+181m" + "</TD></TR></TABLE><BR/>" +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + " " +createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/result/data_routine.html', '解説') + "<br/>" +"解析:　国土地理院<br/>" +"原初データ所有:　JAXA/METI"; }

};
//
// @source = librarySaigaiLegend.js
//
// 災害用
legendFuncObj.getLibraryLegend_saigaiTemp = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var volvano_legend = "";
	switch(dtnode.data.key){
	case 'izuoshima_kihon2':
		volvano_legend = "http://cyberjapan.jp/legend/legend_vbm22izuoshima.png";
		break;
	case 'izuoshima_kihon3':
		volvano_legend = "http://cyberjapan.jp/legend/legend_vbm22izuoshima.png";
		break;
	case 'izuoshima2':
		volvano_legend = "http://cyberjapan.jp/legend/l_vlcd_13izuo.jpg";
		break;
	}

	if (volvano_legend){
		volvano_legend = createPopupLink(volvano_legend, '凡例') + "<br/>";
		$("#plugin_library_legend" + pluginID)[0].innerHTML = volvano_legend +
		createPopupLink('http://www1.gsi.go.jp/geowww/Volcano/volcano.html', '解説') + "<br/><br/>(c)国土地理院";
	} else {
		$("#plugin_library_legend" + pluginID)[0].innerHTML = "(c)国土地理院";
	}
};

// 火山基本図(伊豆大島)
legendFuncObj.getLibraryLegend_volcano_kihon = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var legend = "";
	switch(dtnode.data.key){
	case 'izuoshima_kihon':
		legend = "http://cyberjapan.jp/legend/legend_vbm22izuoshima.png";
		break;
	}

	if (legend) legend = createPopupLink(legend, '凡例') + "<br/>";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = legend +
		createPopupLink('http://www1.gsi.go.jp/geowww/Volcano/volcano.html', '解説') + "<br/><br/>(c)国土地理院";
};

// 平成23年台風12号による大雨
legendFuncObj.getLibraryLegend_1109typhoon12 = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<a href='http://saigai.gsi.go.jp/2011typhoon12/pdf/info.xls' target='_blank'>一覧表をダウンロード（Excel形式）</a>" + "<br/><br/>(c)国土地理院";
};

// 平成23年台風12号による大雨_情報収集
legendFuncObj.getLibraryLegend_1109typhoon12_shushu = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"一部不明瞭な情報を含みます。また、記号はおおよその位置を示しています。<br/><br/>" +
		"<a href='http://saigai.gsi.go.jp/2011typhoon12/pdf/info.xls' target='_blank'>一覧表をダウンロード（Excel形式）</a>" + "<br/><br/>(c)国土地理院";
};

// 東北地方太平洋沖地震_斜め写真
legendFuncObj.getLibraryLegend_1103tohoku_naname = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<img src='http://saigai.gsi.go.jp/20110311eqObliquePhoto/icon/mobile002.bmp' width='15' height='15'>は、平成24年4月1日に追加した南相馬市～いわき市沿岸の撮影画像です。<br/><br/>" +
		"<img src='http://saigai.gsi.go.jp/20110311eqObliquePhoto/icon/mobile001.bmp' width='15' height='15'>は、平成24年3月31日以前の撮影画像です。" + "<br/><br/>(c)国土地理院";
};

// 東北地方太平洋沖地震_空中写真
legendFuncObj.getLibraryLegend_1103tohoku_airphoto = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"photoURLのリンクをクリックすると、空中写真が見られます。" + "<br/><br/>(c)国土地理院";
};

// 東北地方太平洋沖地震_新旧写真比較
legendFuncObj.getLibraryLegend_beforeafter = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"photoURLのリンクをクリックすると、別画面で、新旧画像を比較することができます。" + "<br/><br/>" +
		"別画面において、画像中央の縦棒をドラッグすると、被災前後の画像をずらして見ることが出来ます。" + "<br/><br/>" +
		"別画面の上方が写真と写真の比較で、下方が地図と写真の比較です。" + "<br/><br/>(c)国土地理院";
};

// 東北地方太平洋沖地震_地殻変動量
legendFuncObj.getLibraryLegend_geje = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink("http://cyberjapan.jp/legend/geje-chikaku_legend.html", '凡例') + "<br/><br/>" +
		"水準測量作業を実施した結果、2011年3月11日の東日本大震災（東北地方太平洋沖地震）に伴う詳細な地殻変動量（上下方向）が確認されました。<br/><br/>" +
		"※ただし、地殻変動量には、地震前までに蓄積していた地殻変動、及び地震後の余効変動等を含みます。" + "<br/><br/>(c)国土地理院";
};

// 東北地方太平洋沖地震_震央
legendFuncObj.getLibraryLegend_epicenter = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"＊電子基準点で検出した地殻変動情報は<a href='http://www.gsi.go.jp/chibankansi/chikakukansi_tohoku.html' target='_blank'>こちら</a><br/>" +
		"＊電子基準点データ解析による震源断層モデル(暫定)は<a href='http://www.gsi.go.jp/cais/topic110313-index.html' target='_blank'>こちら</a><br/>" +
		"＊電子基準点データ解析による滑り分布モデル(地震時，暫定)は<a href='http://www.gsi.go.jp/cais/topic110314.2-index.html' target='_blank'>こちら</a><br/>" +
		"＊電子基準点データ解析による滑り分布モデル(地震後，暫定)は<a href='http://www.gsi.go.jp/cais/topic110314-index.html' target='_blank'>こちら</a>" + "<br/><br/>(c)国土地理院";
};

// 東北地方太平洋沖地震_東北地方道路規制情報
legendFuncObj.getLibraryLegend_roadRegulation = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	var now = new Date();
	var nYear = now.getFullYear();
	var nMonth = now.getMonth() + 1;
	var nDate = now.getDate();

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		createPopupLink("http://cyberjapan.jp/legend/1103tohoku_roadRegulation_legend.png", '凡例') + "<br/><br/>" +
		"【2014/3/20　9:00時点情報】<br/>" +
		nYear + "/" + nMonth + "/" + nDate +  "現在情報の変更はありません<br/><br/>" +
		"道路規制情報は、各道路管理者の公表資料を基に作成しています。<br/><br/>" +
		"東北地方整備局　<a href='http://road.thr.mlit.go.jp/index.html' target='_blank'>道路情報提供システム</a><br/>" +
		"岩手県　　<a href='http://www.douro.com/' target='_blank'>道路情報提供サービス</a><br/>" +
		"宮城県　　<a href='http://www.pref.miyagi.jp/road/kiseinow.htm' target='_blank'>道路規制情報</a><br/>" +
		"福島県　　<a href='http://www.pref.fukushima.jp/douro/kisei/kisei-list.htm' target='_blank'>道路総室</a><br/>" +
		"NEXCO東日本　　<a href='http://www.e-nexco.co.jp/pressroom/press_release/tohoku/' target='_blank'>東北支社プレスリリース</a>" + "<br/><br/>(c)国土地理院";
};

// 西之島付近噴火活動
legendFuncObj.getLibraryLegend_nishinoshima = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title + " - " + dtnode.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	switch(dtnode.data.key){
	case 'lsi1311nishinoshima':
	case 'lsi1311nishinoshima2':
	case 'lsi1311nishinoshima3':
	case 'lsi1311nishinoshima4':
	case 'lsi1311nishinoshima5':
	case 'lsi1311nishinoshima6':
	case 'lsi1311nishinoshima7':
	case '20140821lsi':
	case '20140906lsi':
	case '20141008lsi':

	case 'nishinoshima_2014_10_24':

		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"Landsat8画像（GSI, TSIC, GEO Grid/AIST)";
		break;
	default:
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"海上保安庁撮影の空中写真を使用。<br/><br/>" +
		"背景地図は平成3年時点のもの。";
	}
};

// 西之島付近噴火活動_海岸線（地理院特定_2009ALOS画像より）
legendFuncObj.getLibraryLegend_nishinoshima_2009alos = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"2009年2月24日にJAXAの衛星「だいち」で撮影された三方向視の画像を使用し、その位置については現在の地図をもとにして作成したものです。";
};

// 西之島付近噴火活動_新島海岸線
legendFuncObj.getLibraryLegend_nishinoshima_shintou = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title + " - " + dtnode.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	switch(dtnode.data.key){
	case 'coastline1311nishinoshima_1121':
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"海上保安庁撮影の空中写真と、東大地震研究所金子隆之助教撮影の空中写真を使用。";
		break;
	case 'handoku1311nishinoshima':
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<font color='red'>正射画像2013.12.4 と合わせてご覧下さい。</font>";
		break;
	case 'handoku1311nishinoshima2':
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<font color='red'>正射画像2013.12.17 と合わせてご覧下さい。</font>";
		break;
	case 'handoku1311nishinoshima3':
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<font color='red'>正射画像2014.2.16 と合わせてご覧下さい。</font>";
		break;
	case 'handoku1311nishinoshima4':
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<font color='red'>正射画像2014.3.22 と合わせてご覧下さい。</font>";
		break;
	case 'handoku1311nishinoshima_20140704dol2':
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<font color='red'>正射画像2014.7.4 と合わせてご覧下さい。</font>";
		break;

	default:
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"海上保安庁撮影の空中写真を使用。";
	}
};

// 西之島汎用
legendFuncObj.getLibraryLegend_nishinoshimaTemp = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title + " - " + dtnode.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	var legend = dtnode.data.noLegend ? "" : "(c)国土地理院";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = legend;
};

// 西之島その他
legendFuncObj.getLibraryLegend_nishinoshimaElse = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML = "(c)国土地理院";
};

//	西之島付近噴火活動_斜め写真（海上保安庁）
legendFuncObj.getLibraryLegend_nishinoshima_shintou_naname = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.parent.data.title + " - " + dtnode.parent.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "(" + dtnode.data.title + ")";

	switch(dtnode.data.key){
	case 'naname1311nishinoshima3':
		$("#plugin_library_legend" + pluginID)[0].innerHTML =		"協力：（株）エアフォートサービス";
		break;
	default:
		$("#plugin_library_legend" + pluginID)[0].innerHTML =	"";
		break;
	}
};

//	8月16日からの大雨
legendFuncObj.getLibraryLegend_suichoku1408ooame_tanba = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<br/>一部、雲の障害があります" + "<br/><br/>(c)国土地理院";
};

//8月16日からの大雨 「土砂流出箇所」丹波
legendFuncObj.getLibraryLegend_suichoku1408ooame_tanba_2 = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<br/>8月19日撮影垂直写真及び斜め写真の範囲から土砂流出範囲を判読したものです。" + "<br/><br/>(c)国土地理院";
};

//8月16日からの大雨 「写真判読図(8/20)」
legendFuncObj.getLibraryLegend_genchi1408ooame_hiroshima = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<br/>8月20日・21日撮影斜め写真の範囲から土砂流出範囲を判読したものです。" + "<br/><br/>(c)国土地理院";
};

//土地条件図
legendFuncObj.getLibraryLegend_lcm25k = function (dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";
	switch (dtnode.data.key) {
	case "lcm25k":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/LCM_hanrei.png', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_index.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "lcm25k_2011":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/LCM_2011_hanrei.jpg', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_index.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "lcm25k_2012":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/lcm25k_2012/lc_legend.html', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_cd25000.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	case "LCM25K_2012_2":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			createPopupLink('http://cyberjapan.jp/legend/lcm25k_2012/lc_legend.html', '凡例') + "<br/>" +
			createPopupLink('http://www.gsi.go.jp/bousaichiri/lc_cd25000.html', '解説') + "<br/><br/>(c)国土地理院";
		break;
	}
};
//土地条件図

//8月16日からの大雨 「写真判読図(8/28垂直写真)」
legendFuncObj.getLibraryLegend_genchi1408ooame_hiroshima2 = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<br/>8月28日撮影垂直写真のうち雲の影響のない部分を対象として、土砂の流出が確認できる範囲を判読したものです。" + "<br/><br/>(c)国土地理院";
};

//8月16日からの大雨 「写真判読図(8/30・31垂直写真)」
legendFuncObj.getLibraryLegend_genchi1408ooame_hiroshima3 = function(dtnode, pluginID)
{
	$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
	$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

	$("#plugin_library_legend" + pluginID)[0].innerHTML =
		"<br/>8月28・30・31日撮影垂直写真のうち雲の影響のない部分を対象として、土砂の流出が確認できる範囲を判読したものです。" + "<br/><br/>(c)国土地理院";
};

//8月16日からの大雨  垂直写真（8/30）
legendFuncObj.getLibraryLegend_suichoku1408ooame_hiroshima2 = function(dtnode, pluginID)
{
$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

$("#plugin_library_legend" + pluginID)[0].innerHTML =
	"";
};

//御嶽山噴火活動
legendFuncObj.getLibraryLegend_1409ontake = function(dtnode, pluginID)
{
$("#plugin_library_name" + pluginID)[0].innerHTML = dtnode.parent.data.title + " - " + dtnode.data.title;
$("#plugin_library_subname" + pluginID)[0].innerHTML = "";

switch (dtnode.data.key) {
	case "20140929dol2":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			"航空機SAR画像(9/29)のレーダー照射方向は南から北方向";
		break;
	case "20140930dol":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			"航空機SAR画像(9/30)のレーダー照射方向は南西から北東方向";
		break;
	case "sar1409ontake":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			"凡例　赤：火口　黄色：推定される火口";
		break;
	case "201408180929sar1409ontake":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			"衛星:ALOS-2<br/>" +
			"軌道方向:北行(A)<br/>" +
			"観測モード:高分解能(3m)<br/>" +
			"入射角:53°<br/>" +
			"偏波:HH<br/>" +
			"垂直基線長:+97m<br/>" +
			createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + "<br/>" +
			"解析:国土地理院<br/>" +
			"原初データ所有:JAXA<br/>" +
			"本成果は、火山噴火予知連絡会衛星解析グループの活動による";
		break;
	case "20140818d_mag_ontake":
	case "20140929d_mag_ontake":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			"衛星:ALOS-2<br/>" +
			"軌道方向:北行(A)<br/>" +
			"観測モード:高分解能(3m)<br/>" +
			"入射角:53°<br/>" +
			"偏波:HH<br/>" +
			"原初データ所有:JAXA<br/>" +
			"本成果は、火山噴火予知連絡会衛星解析グループの活動による";
		break;
	case "201408221003sar1409ontake":
		$("#plugin_library_legend" + pluginID)[0].innerHTML =
			"衛星:ALOS-2<br/>" +
			"軌道方向:北行(A)<br/>" +
			"観測モード:高分解能(3m)<br/>" +
			"入射角:36°<br/>" +
			"偏波:HH<br/>" +
			"垂直基線長:-6m<br/>" +
			createPopupLink('http://vldb.gsi.go.jp/sokuchi/sar/mechanism/interpretation.html', '凡例') + "<br/>" +
			"解析:国土地理院<br/>" +
			"原初データ所有:JAXA<br/>" +
			"本成果は、火山噴火予知連絡会衛星解析グループの活動による";
}
};
//
// @source = libraryMapData.js
//
var libraryMapData =
[
	{
		"title": "写真", "isFolder": true, "key": "photo", "hideCheckbox": true, "expand": true, "legendFunc": "getLibraryLegend_photo",
		"children": [
			{ "title": "最新（2007年～）", "type": "map", "key": "y2k7", "icon": "photo.png", "dataset": "dataSetOverlay_Y2K7", "zindex": 250 },
			{ "title": "1988年～1990年", "type": "map", "key": "yk88", "icon": "photo.png", "dataset": "dataSetOverlay_YK88", "zindex": 255 },
			{ "title": "1984年～1987年", "type": "map", "key": "yk84", "icon": "photo.png", "dataset": "dataSetOverlay_YK84", "zindex": 260 },
			{ "title": "1979年～1983年", "type": "map", "key": "yk79", "icon": "photo.png", "dataset": "dataSetOverlay_YK79", "zindex": 265 },
			{ "title": "1974年～1978年", "type": "map", "key": "yk74", "icon": "photo.png", "dataset": "dataSetOverlay_YK74", "zindex": 270 }
		]
	},
	{ "title": "簡易空中写真（2004年～）", "type": "map", "key": "airphoto", "icon": "photo.png", "dataset": "dataSetOverlay_Y2K4air", "legendFunc": "getLibraryLegend_Y2K4air" },
	{
		"title": "単写真", "isFolder": true, "key": "photopoint", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_photoPoint",
		"children": [
			{ "title": "2011年～", "type": "kmlurl", "key": "photopoint_2011_", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "2001年～2010年", "type": "kmlurl", "key": "photopoint_2001_2010", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "1991年～2000年", "type": "kmlurl", "key": "photopoint_1991_2000", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "1981年～1990年", "type": "kmlurl", "key": "photopoint_1981_1990", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "1971年～1980年", "type": "kmlurl", "key": "photopoint_1971_1980", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "1961年～1970年", "type": "kmlurl", "key": "photopoint_1961_1970", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "1951年～1960年", "type": "kmlurl", "key": "photopoint_1951_1960", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "1941年～1950年", "type": "kmlurl", "key": "photopoint_1941_1950", "icon": "photo.png", "getURL": "getURL_photoPoint" },
			{ "title": "1931年～1940年", "type": "kmlurl", "key": "photopoint_1931_1940", "icon": "photo.png", "getURL": "getURL_photoPoint" },
		]
	},
	{
		"title": "東日本大震災後オルソ画像", "isFolder": true, "key": "toho", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_toho",
		"children": [
			{ "title": "2012年10月～2013年5月", "type": "map", "key": "toho3", "icon": "photo.png", "dataset": "dataSetOverlay_toho3", "zindex": 475 },
			{ "title": "2011年5月～2012年4月", "type": "map", "key": "toho2", "icon": "photo.png", "dataset": "dataSetOverlay_toho2", "zindex": 476 },
			{ "title": "2011年3月～2011年4月", "type": "map", "key": "toho1", "icon": "photo.png", "dataset": "dataSetOverlay_toho1", "zindex": 477 }
		]
	},
	{ "title": "災害復興計画基図", "type": "map", "key": "fukkokizu", "icon": false, "dataset": "dataSetOverlay_fukkokizu", "zindex": 216, "legendFunc": "getLibraryLegend_fukkokizu" },
	{ "title": "色別標高図", "type": "map", "key": "relief", "icon": false, "dataset": "dataSet_Relief", "zindex": 215, "legendFunc": "getLibraryLegend_relief" },

	{ "title": "都市圏活断層図", "type": "map", "key": "fm", "icon": false, "dataset": "dataSetOverlay_AFM", "zindex": 345, "legendFunc": "getLibraryLegend_FM" },


//	{ "title": "明治前期の低湿地", "type": "map", "key": "meijiswale", "icon": false, "dataset": "dataSetOverlay_MeijiSwale", "zindex": 279, "legendFunc": "getLibraryLegend_meijiswale" },

	//	20140818
	{ "title": "明治前期の低湿地", "type": "map", "key": "meijiswale", "icon": false, "dataset": "dataSetOverlay_MeijiSwale_NewXYZ", "zindex": 278, "legendFunc": "getLibraryLegend_meijiswale" },
	//	20140818


	{
		"title": "土地条件図", "isFolder": true, "key": "LCM", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_lcm25k",
		"children": [
			{ "title": "数値地図25000(土地条件)", "type": "map", "key": "lcm25k_2012", "icon": false, "dataset": "dataSetOverlay_LCM25K_2012", "zindex": 276 },
			{ "title": "初期整備版", "type": "map", "key": "lcm25k", "icon": false, "dataset": "dataSetOverlay_LCM25K", "zindex": 275 }
		]
	},
	{
		"title": "沿岸海域土地条件図", "isFolder": true, "key": "CCM", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_CCM",
		"children": [
			{ "title": "平成元年以降", "type": "map", "key": "ccm2", "icon": false, "dataset": "dataSetOverlay_CCM2", "zindex": 201 },
			{ "title": "昭和63年以前", "type": "map", "key": "ccm1", "icon": false, "dataset": "dataSetOverlay_CCM1", "zindex": 277 }
		]
	},
	/////////////////////////////////////////////////////////////////////////////////////////////
	{
		"title": "治水地形分類図", "isFolder": true, "key": "LCMF", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_LCMFC",
		"children": [
			{ "title": "初版(1976～1978年)"			, "type": "map", "key": "LCMFC01"		, "icon": false, "dataset": "dataSetOverlay_LCMFC01", "legendFunc": "getLibraryLegend_LCMFC", "zindex": 258		 },		//	, "legendFunc": "getLibraryLegend_LCMFC"
			{ "title": "更新版(2007～2012年)"		, "type": "map", "key": "LCMFC02"		, "icon": false, "dataset": "dataSetOverlay_LCMFC02", "legendFunc": "getLibraryLegend_LCMFC2", "zindex": 259	 },
//ORG         	{ "title": "治水地形分類図（初版）"	, "type": "map", "key": "lcmfc", "icon": false, "dataset": "dataSetOverlay_LCMFC01", "zindex": 274, "legendFunc": "getLibraryLegend_LCMFC" },
//			{ "title": "平成元年以降", 				"type": "map", "key": "ccm2", "icon": false, "dataset": "dataSetOverlay_CCM2", "zindex": 278 },
//			{ "title": "昭和63年以前", "type": "map", "key": "ccm1", "icon": false, "dataset": "dataSetOverlay_CCM1", "zindex": 277 }
		]
	},
	/////////////////////////////////////////////////////////////////////////////////////////////


//	{ "title": "治水地形分類図（初版）", "type": "map", "key": "lcmfc", "icon": false, "dataset": "dataSetOverlay_LCMFC", "zindex": 274, "legendFunc": "getLibraryLegend_LCMFC" },



	{
		"title": "火山土地条件図", "isFolder": true, "key": "lcmv", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_volcano",
		"children": [
			{ "title": "雌阿寒岳・雄阿寒岳", "type": "map", "key": "akandake", "icon": false, "dataset": "dataSetOverlay_akandake", "zindex": 350 },
			{ "title": "十勝岳", "type": "map", "key": "tokachidake", "icon": false, "dataset": "dataSetOverlay_tokachidake", "zindex": 351 },
			{ "title": "樽前山", "type": "map", "key": "tarumaesan", "icon": false, "dataset": "dataSetOverlay_tarumaesan", "zindex": 352 },
			{ "title": "有珠山", "type": "map", "key": "usuzan", "icon": false, "dataset": "dataSetOverlay_usuzan", "zindex": 353 },
			{ "title": "北海道駒ヶ岳", "type": "map", "key": "komagatake", "icon": false, "dataset": "dataSetOverlay_komagatake", "zindex": 354 },
			{ "title": "岩手山", "type": "map", "key": "iwatesan", "icon": false, "dataset": "dataSetOverlay_iwatesan", "zindex": 369 },
			{ "title": "栗駒山", "type": "map", "key": "kurikomayama", "icon": false, "dataset": "dataSetOverlay_kurikomayama", "zindex": 355 },
			{ "title": "安達太良山", "type": "map", "key": "adatarayama", "icon": false, "dataset": "dataSetOverlay_adatarayama", "zindex": 356 },
			{ "title": "磐梯山", "type": "map", "key": "bandaisan", "icon": false, "dataset": "dataSetOverlay_bandaisan", "zindex": 357 },
			{ "title": "伊豆大島", "type": "map", "key": "izuoshima", "icon": false, "dataset": "dataSetOverlay_izuoshima", "zindex": 358 },
			{ "title": "三宅島", "type": "map", "key": "miyakezima", "icon": false, "dataset": "dataSetOverlay_miyakezima", "zindex": 359 },
			{ "title": "草津白根山", "type": "map", "key": "kusatsushiranesan", "icon": false, "dataset": "dataSetOverlay_kusatsushiranesan", "zindex": 360 },
			{ "title": "富士山", "type": "map", "key": "fujisan", "icon": false, "dataset": "dataSetOverlay_fujisan", "zindex": 361 },
			{ "title": "御嶽山", "type": "map", "key": "ontakesan", "icon": false, "dataset": "dataSetOverlay_ontakesan", "zindex": 362 },
			{ "title": "くじゅう連山", "type": "map", "key": "kujirenzan", "icon": false, "dataset": "dataSetOverlay_kujirenzan", "zindex": 363 },
			{ "title": "阿蘇山", "type": "map", "key": "asosan", "icon": false, "dataset": "dataSetOverlay_asosan", "zindex": 364 },
			{ "title": "雲仙岳", "type": "map", "key": "unzendake", "icon": false, "dataset": "dataSetOverlay_unzendake", "zindex": 365 },
			{ "title": "霧島山", "type": "map", "key": "kirishimayama", "icon": false, "dataset": "dataSetOverlay_kirishimayama", "zindex": 366 },
			{ "title": "桜島", "type": "map", "key": "sakurazima", "icon": false, "dataset": "dataSetOverlay_sakurazima", "zindex": 367 },
			{ "title": "薩摩硫黄島", "type": "map", "key": "satsumaiojima", "icon": false, "dataset": "dataSetOverlay_satsumaiojima", "zindex": 368 }
		]
	},
	{
		"title": "火山基本図", "isFolder": true, "key": "vbm", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_vbmc",
		"children": [
			{ "title": "雌阿寒岳", "type": "map", "key": "vbm01meakan", "icon": false, "dataset": "dataSetOverlay_vbm01meakan", "zindex": 280 },
			{ "title": "十勝岳", "type": "map", "key": "vbm02tokachi", "icon": false, "dataset": "dataSetOverlay_vbm02tokachi", "zindex": 281 },
			{ "title": "樽前山", "type": "map", "key": "vbm03tarumae", "icon": false, "dataset": "dataSetOverlay_vbm03tarumae", "zindex": 282 },
			{ "title": "有珠山", "type": "map", "key": "vbm04usu", "icon": false, "dataset": "dataSetOverlay_vbm04usu", "zindex": 283 },
			{ "title": "北海道駒ヶ岳", "type": "map", "key": "vbm05hokkaidokoma", "icon": false, "dataset": "dataSetOverlay_vbm05hokkaidokoma", "zindex": 284 },
			{ "title": "恵山", "type": "map", "key": "vbm35esan", "icon": false, "dataset": "dataSetOverlay_vbm35esan", "zindex": 299 },
			{ "title": "岩木山", "type": "map", "key": "vbm06iwaki", "icon": false, "dataset": "dataSetOverlay_vbm06iwaki", "zindex": 202 },
			{ "title": "秋田焼山", "type": "map", "key": "vbm07akitayake", "icon": false, "dataset": "dataSetOverlay_vbm07akitayake", "zindex": 203 },
			{ "title": "岩手山", "type": "map", "key": "vbm08iwate", "icon": false, "dataset": "dataSetOverlay_vbm08iwate", "zindex": 204 },
			{ "title": "栗駒山", "type": "map", "key": "vbm09kurikoma", "icon": false, "dataset": "dataSetOverlay_vbm09kurikoma", "zindex": 285 },
			{ "title": "秋田駒ケ岳", "type": "map", "key": "vbm10akitakoma", "icon": false, "dataset": "dataSetOverlay_vbm10akitakoma", "zindex": 205 },
			{ "title": "鳥海山", "type": "map", "key": "vbm11chokai", "icon": false, "dataset": "dataSetOverlay_vbm11chokai", "zindex": 206 },
			{ "title": "蔵王山", "type": "map", "key": "vbm12zao", "icon": false, "dataset": "dataSetOverlay_vbm12zao", "zindex": 207 },
			{ "title": "吾妻山", "type": "map", "key": "vbm13azuma", "icon": false, "dataset": "dataSetOverlay_vbm13azuma", "zindex": 208 },
			{ "title": "安達太良山", "type": "map", "key": "vbm14adatara", "icon": false, "dataset": "dataSetOverlay_vbm14adatara", "zindex": 286 },
			{ "title": "磐梯山", "type": "map", "key": "vbm15bandai", "icon": false, "dataset": "dataSetOverlay_vbm15bandai", "zindex": 287 },
			{ "title": "那須岳", "type": "map", "key": "vbm16nasu", "icon": false, "dataset": "dataSetOverlay_vbm16nasu", "zindex": 209 },
			{ "title": "草津白根山", "type": "map", "key": "vbm17kusatsushirane", "icon": false, "dataset": "dataSetOverlay_vbm17kusatsushirane", "zindex": 210 },
			{ "title": "浅間山", "type": "map", "key": "vbm18asama", "icon": false, "dataset": "dataSetOverlay_vbm18asama", "zindex": 211 },
			{ "title": "箱根山", "type": "map", "key": "vbm19hakone", "icon": false, "dataset": "dataSetOverlay_vbm19hakone", "zindex": 212 },
			{ "title": "富士山", "type": "map", "key": "vbm20fuji", "icon": false, "dataset": "dataSetOverlay_vbm20fuji", "zindex": 213 },
			{ "title": "東伊豆単成火山群", "type": "map", "key": "vbm21eastizu", "icon": false, "dataset": "dataSetOverlay_vbm21eastizu", "zindex": 214 },
			{ "title": "伊豆大島", "type": "map", "key": "vbm22izuoshima", "icon": false, "dataset": "dataSetOverlay_vbm22izuoshima", "zindex": 288 },
			{ "title": "三宅島", "type": "map", "key": "vbm23miyake", "icon": false, "dataset": "dataSetOverlay_vbm23miyake", "zindex": 289 },
			{ "title": "焼岳", "type": "map", "key": "vbm24yakedake", "icon": false, "dataset": "dataSetOverlay_vbm24yakedake", "zindex": 217 },
			{ "title": "御岳山", "type": "map", "key": "vbm25ontake", "icon": false, "dataset": "dataSetOverlay_vbm25ontake", "zindex": 290 },
			{ "title": "鶴見岳", "type": "map", "key": "vbm26tsurumi", "icon": false, "dataset": "dataSetOverlay_vbm26tsurumi", "zindex": 218 },
			{ "title": "くじゅう連山", "type": "map", "key": "vbm27kujyu", "icon": false, "dataset": "dataSetOverlay_vbm27kujyu", "zindex": 293 },
			{ "title": "阿蘇山", "type": "map", "key": "vbm28aso", "icon": false, "dataset": "dataSetOverlay_vbm28aso", "zindex": 294 },
			{ "title": "雲仙岳", "type": "map", "key": "vbm29unzen", "icon": false, "dataset": "dataSetOverlay_vbm29unzen", "zindex": 295 },
			{ "title": "霧島山", "type": "map", "key": "vbm30kirishima", "icon": false, "dataset": "dataSetOverlay_vbm30kirishima", "zindex": 296 },
			{ "title": "桜島", "type": "map", "key": "vbm31sakurajima", "icon": false, "dataset": "dataSetOverlay_vbm31sakurajima", "zindex": 297 },
			{ "title": "薩摩竹島", "type": "map", "key": "vbm32satsumatakesima", "icon": false, "dataset": "dataSetOverlay_vbm32satsumatakesima", "zindex": 298 },
			{ "title": "薩摩硫黄島", "type": "map", "key": "vbm33satsumaiojima", "icon": false, "dataset": "dataSetOverlay_vbm33satsumaiojima", "zindex": 219 },
			{ "title": "諏訪之瀬島", "type": "map", "key": "vbm34suwanosejima", "icon": false, "dataset": "dataSetOverlay_vbm34suwanosejima", "zindex": 220 }
		]
	},
	{
		"title": "地球地図", "isFolder": true, "key": "globalm", "hideCheckbox": true, "expand": false, "isLazy": true,
		"children": [
			{
				"title": "地球地図全球版", "isFolder": true, "key": "globalm_zen", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "土地被覆(GLCNMO)", "type": "map", "key": "GLCNMO2", "icon": false, "dataset": "dataSetOverlay_GLCNMO2", "zindex": 342, "legendFunc": "getLibraryLegend_GLCNMO2" },
					{ "title": "植生(樹木被覆率)", "type": "map", "key": "PTC2", "icon": false, "dataset": "dataSetOverlay_PTC2", "zindex": 343, "legendFunc": "getLibraryLegend_PTC2" }
				]
			},

//			///////////////////////////////////////////////////////			20140714
//			{
//				"title": "地球地図日本", "isFolder": true, "key": "globalm_japan", "hideCheckbox": true, "expand": false, "isLazy": true,
//				"children": [
//
//						{ "title": "空港", "type": "map", "key": "TikyuTizuNipponairp", "icon": false, "dataset": "DS_TikyuTizuNippon_airp", "zindex": 	801, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "鉄道駅", "type": "map", "key": "TikyuTizuNipponrstatp", "icon": false, "dataset": "DS_TikyuTizuNippon_rstatp", "zindex": 	802, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "鉄道", "type": "map", "key": "TikyuTizuNipponraill", "icon": false, "dataset": "DS_TikyuTizuNippon_raill", "zindex": 	803, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "道路", "type": "map", "key": "TikyuTizuNipponroadl", "icon": false, "dataset": "DS_TikyuTizuNippon_roadl", "zindex": 	804, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "航路", "type": "map", "key": "TikyuTizuNipponferryl", "icon": false, "dataset": "DS_TikyuTizuNippon_ferryl", "zindex": 	805, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "港湾", "type": "map", "key": "TikyuTizuNipponportp", "icon": false, "dataset": "DS_TikyuTizuNippon_portp", "zindex": 	806, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "行政界（線）", "type": "map", "key": "TikyuTizuNipponpolbndl", "icon": false, "dataset": "DS_TikyuTizuNippon_polbndl", "zindex": 	807, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "行政界（名前）", "type": "map", "key": "TikyuTizuNipponpolbnda", "icon": false, "dataset": "DS_TikyuTizuNippon_polbnda", "zindex": 	808, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "海岸線", "type": "map", "key": "TikyuTizuNipponcoastl", "icon": false, "dataset": "DS_TikyuTizuNippon_coastl", "zindex": 	809, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "河川", "type": "map", "key": "TikyuTizuNipponriverl", "icon": false, "dataset": "DS_TikyuTizuNippon_riverl", "zindex": 	810, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "内水域", "type": "map", "key": "TikyuTizuNipponinwatera", "icon": false, "dataset": "DS_TikyuTizuNippon_inwatera", "zindex": 	811, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "市街地", "type": "map", "key": "TikyuTizuNipponbuiltupa", "icon": false, "dataset": "DS_TikyuTizuNippon_builtupa", "zindex": 	812, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 },
//						{ "title": "市街地（名前）", "type": "map", "key": "TikyuTizuNipponbuiltupp", "icon": false, "dataset": "DS_TikyuTizuNippon_builtupp", "zindex": 	813, "legendFunc": "getLibraryLegend_TikyuTizuNippon"	 }
//
//				]
//			}
//			///////////////////////////////////////////////////////			20140714

		]
	},
	{
		"title": "全国植生指標データ（250m）", "isFolder": true, "key": "NDVI250m", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_NDVI250m",
		"children": [
			{
				"title": "2012年", "isFolder": true, "key": "NDVI250m_2012", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2012_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201212", "zindex": 474 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2012_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201211", "zindex": 473 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2012_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201210", "zindex": 472 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2012_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201209", "zindex": 471 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2012_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201208", "zindex": 470 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2012_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201207", "zindex": 469 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2012_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201206", "zindex": 468 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2012_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201205", "zindex": 467 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2012_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201204", "zindex": 466 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2012_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201203", "zindex": 465 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2012_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201202", "zindex": 464 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2012_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201201", "zindex": 463 }
				]
			},
			{
				"title": "2011年", "isFolder": true, "key": "NDVI250m_2011", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2011_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201112", "zindex": 462 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2011_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201111", "zindex": 461 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2011_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201110", "zindex": 460 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2011_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201109", "zindex": 459 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2011_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201108", "zindex": 458 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2011_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201107", "zindex": 457 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2011_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201106", "zindex": 456 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2011_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201105", "zindex": 455 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2011_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201104", "zindex": 454 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2011_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201103", "zindex": 453 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2011_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201102", "zindex": 452 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2011_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201101", "zindex": 451 }
				]
			},
			{
				"title": "2010年", "isFolder": true, "key": "NDVI250m_2010", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2010_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201012", "zindex": 450 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2010_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201011", "zindex": 449 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2010_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201010", "zindex": 448 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2010_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201009", "zindex": 447 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2010_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201008", "zindex": 446 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2010_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201007", "zindex": 445 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2010_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201006", "zindex": 444 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2010_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201005", "zindex": 443 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2010_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201004", "zindex": 442 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2010_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201003", "zindex": 441 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2010_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201002", "zindex": 440 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2010_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_201001", "zindex": 439 }
				]
			},
			{
				"title": "2009年", "isFolder": true, "key": "NDVI250m_2009", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2009_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200912", "zindex": 438 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2009_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200911", "zindex": 437 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2009_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200910", "zindex": 436 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2009_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200909", "zindex": 435 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2009_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200908", "zindex": 434 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2009_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200907", "zindex": 433 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2009_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200906", "zindex": 432 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2009_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200905", "zindex": 431 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2009_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200904", "zindex": 430 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2009_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200903", "zindex": 429 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2009_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200902", "zindex": 428 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2009_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200901", "zindex": 427 }
				]
			},
			{
				"title": "2008年", "isFolder": true, "key": "NDVI250m_2008", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2008_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200812", "zindex": 426 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2008_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200811", "zindex": 425 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2008_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200810", "zindex": 424 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2008_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200809", "zindex": 423 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2008_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200808", "zindex": 422 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2008_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200807", "zindex": 421 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2008_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200806", "zindex": 420 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2008_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200805", "zindex": 419 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2008_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200804", "zindex": 418 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2008_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200803", "zindex": 417 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2008_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200802", "zindex": 416 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2008_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200801", "zindex": 415 }
				]
			},
			{
				"title": "2007年", "isFolder": true, "key": "NDVI250m_2007", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2007_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200712", "zindex": 414 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2007_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200711", "zindex": 413 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2007_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200710", "zindex": 412 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2007_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200709", "zindex": 411 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2007_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200708", "zindex": 410 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2007_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200707", "zindex": 409 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2007_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200706", "zindex": 408 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2007_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200705", "zindex": 407 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2007_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200704", "zindex": 406 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2007_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200703", "zindex": 405 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2007_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200702", "zindex": 404 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2007_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200701", "zindex": 403 }
				]
			},
			{
				"title": "2006年", "isFolder": true, "key": "NDVI250m_2006", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2006_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200612", "zindex": 402 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2006_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200611", "zindex": 401 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2006_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200610", "zindex": 400 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2006_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200609", "zindex": 399 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2006_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200608", "zindex": 398 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2006_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200607", "zindex": 397 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2006_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200606", "zindex": 396 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2006_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200605", "zindex": 395 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2006_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200604", "zindex": 394 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2006_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200603", "zindex": 393 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2006_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200602", "zindex": 392 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2006_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200601", "zindex": 391 }
				]
			},
			{
				"title": "2005年", "isFolder": true, "key": "NDVI250m_2005", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2005_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200512", "zindex": 390 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2005_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200511", "zindex": 389 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2005_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200510", "zindex": 388 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2005_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200509", "zindex": 387 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2005_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200508", "zindex": 386 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2005_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200507", "zindex": 385 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2005_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200506", "zindex": 384 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2005_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200505", "zindex": 383 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2005_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200504", "zindex": 382 },
					{ "title": "3月", "type": "map", "key": "NDVI250m_2005_03", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200503", "zindex": 381 },
					{ "title": "2月", "type": "map", "key": "NDVI250m_2005_02", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200502", "zindex": 380 },
					{ "title": "1月", "type": "map", "key": "NDVI250m_2005_01", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200501", "zindex": 379 }
				]
			},
			{
				"title": "2004年", "isFolder": true, "key": "NDVI250m_2004", "hideCheckbox": true, "expand": false, "isLazy": true,
				"children": [
					{ "title": "12月", "type": "map", "key": "NDVI250m_2004_12", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200412", "zindex": 378 },
					{ "title": "11月", "type": "map", "key": "NDVI250m_2004_11", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200411", "zindex": 377 },
					{ "title": "10月", "type": "map", "key": "NDVI250m_2004_10", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200410", "zindex": 376 },
					{ "title": "9月", "type": "map", "key": "NDVI250m_2004_09", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200409", "zindex": 375 },
					{ "title": "8月", "type": "map", "key": "NDVI250m_2004_08", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200408", "zindex": 374 },
					{ "title": "7月", "type": "map", "key": "NDVI250m_2004_07", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200407", "zindex": 373 },
					{ "title": "6月", "type": "map", "key": "NDVI250m_2004_06", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200406", "zindex": 372 },
					{ "title": "5月", "type": "map", "key": "NDVI250m_2004_05", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200405", "zindex": 371 },
					{ "title": "4月", "type": "map", "key": "NDVI250m_2004_04", "icon": false, "dataset": "dataSetOverlay_NDVI250m_200404", "zindex": 370 },
				]
			}
		]
	},
	{ "title": "20万分１土地利用図（1982～1983年）", "type": "map", "key": "lum200k", "icon": false, "dataset": "dataSetOverlay_LUM200K", "zindex": 274, "legendFunc": "getLibraryLegend_LUM200K" },
	{
		"title": "宅地利用動向調査", "isFolder": true, "key": "takudo", "hideCheckbox": true, "expand": false, "isLazy": true,
		"children": [
			{
				"title": "首都圏", "isFolder": true, "key": "takudo_cap", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_takudo",
				"children": [
					{ "title": "2005年", "type": "map", "key": "capital2005", "icon": false, "dataset": "dataSetOverlay_capital2005", "zindex": 310 },
					{ "title": "2000年", "type": "map", "key": "capital2000", "icon": false, "dataset": "dataSetOverlay_capital2000", "zindex": 311 },
					{ "title": "1994年", "type": "map", "key": "capital1994", "icon": false, "dataset": "dataSetOverlay_capital1994", "zindex": 312 },
					{ "title": "1989年", "type": "map", "key": "capital1989", "icon": false, "dataset": "dataSetOverlay_capital1989", "zindex": 313 },
					{ "title": "1984年", "type": "map", "key": "capital1984", "icon": false, "dataset": "dataSetOverlay_capital1984", "zindex": 314 },
					{ "title": "1979年", "type": "map", "key": "capital1979", "icon": false, "dataset": "dataSetOverlay_capital1979", "zindex": 315 },
					{ "title": "1974年", "type": "map", "key": "capital1974", "icon": false, "dataset": "dataSetOverlay_capital1974", "zindex": 316 }
				]
			},
			{
				"title": "中部圏", "isFolder": true, "key": "takudo_chu", "hideCheckbox": true, "expand": false,  "legendFunc": "getLibraryLegend_takudo",
				"children": [
					{ "title": "2003年", "type": "map", "key": "chubu2003", "icon": false, "dataset": "dataSetOverlay_chubu2003", "zindex": 320 },
					{ "title": "1997年", "type": "map", "key": "chubu1997", "icon": false, "dataset": "dataSetOverlay_chubu1997", "zindex": 321 },
					{ "title": "1991年", "type": "map", "key": "chubu1991", "icon": false, "dataset": "dataSetOverlay_chubu1991", "zindex": 322 },
					{ "title": "1987年", "type": "map", "key": "chubu1987", "icon": false, "dataset": "dataSetOverlay_chubu1987", "zindex": 323 },
					{ "title": "1982年", "type": "map", "key": "chubu1982", "icon": false, "dataset": "dataSetOverlay_chubu1982", "zindex": 324 },
					{ "title": "1977年", "type": "map", "key": "chubu1977", "icon": false, "dataset": "dataSetOverlay_chubu1977", "zindex": 325 }
				]
			},
			{
				"title": "近畿圏", "isFolder": true, "key": "takudo_kin", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_takudo",
				"children": [
					{ "title": "2008年", "type": "map", "key": "kinki2008", "icon": false, "dataset": "dataSetOverlay_kinki2008", "zindex": 330 },
					{ "title": "2001年", "type": "map", "key": "kinki2001", "icon": false, "dataset": "dataSetOverlay_kinki2001", "zindex": 331 },
					{ "title": "1996年", "type": "map", "key": "kinki1996", "icon": false, "dataset": "dataSetOverlay_kinki1996", "zindex": 332 },
					{ "title": "1991年", "type": "map", "key": "kinki1991", "icon": false, "dataset": "dataSetOverlay_kinki1991", "zindex": 333 },
					{ "title": "1985年", "type": "map", "key": "kinki1985", "icon": false, "dataset": "dataSetOverlay_kinki1985", "zindex": 334 },
					{ "title": "1979年", "type": "map", "key": "kinki1979", "icon": false, "dataset": "dataSetOverlay_kinki1979", "zindex": 335 },
					{ "title": "1974年", "type": "map", "key": "kinki1974", "icon": false, "dataset": "dataSetOverlay_kinki1974", "zindex": 336 }
				]
			}
		]
	},
	{
		"title": "湖沼図", "isFolder": true, "key": "lake", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_LAKE",
		"children": [
			{ "title": "平成3年以降", "type": "map", "key": "lake2", "icon": false, "dataset": "dataSetOverlay_LAKE2", "zindex": 341 },
			{ "title": "平成2年以前", "type": "map", "key": "lake1", "icon": false, "dataset": "dataSetOverlay_LAKE1", "zindex": 340 }
		]
	},
//	{ "title": "基盤地図情報(縮尺レベル2500)", "type": "map", "key": "fgd", "icon": false, "dataset": "dataSetOverlay_kiban", "zindex": 217, "legendFunc": "getLibraryLegend_kiban" },
	{
		"title": "基盤地図情報", "isFolder": true, "key": "teikyo_root", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_fgd",
		"children":
		[
			{
				"title": "基盤地図情報の提供地域", "isFolder": true, "key": "teikyo", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_fgd",
				"children":
				[

					{ "title": "縮尺2500分1相当以上の概ねの範囲", "type": "map", "key": "fgd1_2", "icon": false, "dataset": "DS_KIBANCHIZU", "zindex": 244 },
					{ "title": "5mメッシュDEM（航空レーザー測量）", "type": "tms", "key": "fgd2", "icon": false, "path": "http://geolib.gsi.go.jp/tiles2/KIBANCHIZU/5m_laser/", "getURL": "overlay_getTileURL", "zindex": 246},
					{ "title": "5mメッシュDEM（写真測量）", "type": "tms", "key": "fgd3", "icon": false, "path": "http://geolib.gsi.go.jp/tiles2/KIBANCHIZU/5m_syashin/", "getURL": "overlay_getTileURL", "zindex": 245},
					{ "title": "10mメッシュDEM（火山基本図）", "type": "tms", "key": "fgd5", "icon": false, "path": "http://geolib.gsi.go.jp/tiles2/KIBANCHIZU/10m_kazan/", "getURL": "overlay_getTileURL", "zindex": 247}
				],
			},
			{
				"title": "基盤地図情報更新情報", "isFolder": true, "key": "kiban_koushin", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_fgd",
				"children":
				{

					"title": "2014年更新情報", "isFolder": true, "key": "kiban_koushin2014", "hideCheckbox": true, "expand": false, "isLazy": true, "legendFunc": "getLibraryLegend_fgd",
					"children":
					[
//						{ "title": "10月更新", "type": 	"map", "key": 	"kiban_koushin2014_10", "icon": false, "dataset": 	"dataSetOverlay_kiban_koushin2014_10", 	"zindex": 478 },
						{ title:	"10月更新",type:	"map",	key:	"kiban_koushin2014_10",	icon:	false,"dataset":	"dataSetOverlay_KTZ_KOUSIN_2014_10",	"zindex":478	},
					]
				}
			}
		]
	},



//	//////////////////////////////////
//	{
//		"title": "南極の地理空間情報", "isFolder": true, "key": "antarctic", "hideCheckbox": true, "expand": false, "isLazy": true,
//		"children": [
//			{ "title": "南極の地理空間情報データ"	, "type": "kml"		, "key": "antarctic_0"			, "icon": false		, "path": "http://localhost/site/data/point/antarctic.kml" },
//			{ "title": "1: 2,500　南極地形図XXX"		, "type": "kml"		, "key": "antarctic_2500"		, "icon": false		, "path": "http://localhost/site/data/polygon/antarctic2500.kml" },
////			{ "title": "1: 2,500　南極地形図"		, "type": "kml"		, "key": "antarctic_2500"		, "icon": false		, "path": "http://portal.cyberjapan.jp/site/data/polygon/antarctic2500.kml" },
//			{ "title": "1:25,000　南極地形図CCC"		, "type": "kml"		, "key": "antarctic_25000"		, "icon": false		, "path": "http://localhost/site/data/polygon/antarctic25000.kml" },
//			{ "title": "1:50,000　南極地形図"		, "type": "kml"		, "key": "antarctic_50000"		, "icon": false		, "path": "http://portal.cyberjapan.jp/site/data/polygon/antarctic50000.kml" },
//		]
//	},
//	//////////////////////////////////

	//////////////////////////////////
	{
		"title": "南極の地理空間情報", "isFolder": true, "key": "antarctic", "hideCheckbox": true, "expand": false, "isLazy": true,
		"children": [
			{ "title": "南極の地理空間情報データ"	, "type": "kml"		, "key": "antarctic_0"			, "icon": false		, "path": "http://portal.cyberjapan.jp/site/data/point/antarctic.kml" },
			{ "title": "1: 2,500　南極地形図"		, "type": "kml"		, "key": "antarctic_2500"		, "icon": false		, "path": "http://portal.cyberjapan.jp/site/data/polygon/antarctic2500.kml" },
			{ "title": "1:25,000　南極地形図"		, "type": "kml"		, "key": "antarctic_25000"		, "icon": false		, "path": "http://portal.cyberjapan.jp/site/data/polygon/antarctic25000.kml" },
			{ "title": "1:50,000　南極地形図"		, "type": "kml"		, "key": "antarctic_50000"		, "icon": false		, "path": "http://portal.cyberjapan.jp/site/data/polygon/antarctic50000.kml" },
		]
	},
	//////////////////////////////////

	]

;


///////////////////////////////////////////////////////////////////		一時的なタイルURL生成関数
function getTileURL_for_Katudansou( bounds )
{
	var res = this.map.getResolution();

	var x = Math.round((bounds.left - this.maxExtent.left) / (res * this.tileSize.w));
	var y = Math.round((bounds.bottom - this.tileOrigin.lat) / (res * this.tileSize.h));
	var z = this.map.getZoom();

	return this.url + z + "/" + x + "/" + y + "." + this.type;
}


//
// @source = libraryGeodeticData.js
//
var libraryGeodeticData =
[
	{ "title": "験潮場", "type": "kml", "key": "kenchou", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/point/kenchou.kml", "legendFunc": "getLibraryLegend_kenchou" },
	{
		"title": "電子基準点", "isFolder": true, "key": "ekijun", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_denshi",
		"children": [
			{ "title": "北海道", "type": "kml", "key": "ekijun_01hokkaido", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_01hokkaido.kml" },
			{ "title": "青森県", "type": "kml", "key": "ekijun_02aomori", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_02aomori.kml" },
			{ "title": "岩手県", "type": "kml", "key": "ekijun_03iwate", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_03iwate.kml" },
			{ "title": "宮城県", "type": "kml", "key": "ekijun_04miyagi", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_04miyagi.kml" },
			{ "title": "秋田県", "type": "kml", "key": "ekijun_05akita", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_05akita.kml" },
			{ "title": "山形県", "type": "kml", "key": "ekijun_06yamagata", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_06yamagata.kml" },
			{ "title": "福島県", "type": "kml", "key": "ekijun_07fukushima", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_07fukushima.kml" },
			{ "title": "茨城県", "type": "kml", "key": "ekijun_08ibaraki", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_08ibaraki.kml" },
			{ "title": "栃木県", "type": "kml", "key": "ekijun_09tochigi", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_09tochigi.kml" },
			{ "title": "群馬県", "type": "kml", "key": "ekijun_10gunma", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_10gunma.kml" },
			{ "title": "埼玉県", "type": "kml", "key": "ekijun_11saitama", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_11saitama.kml" },
			{ "title": "千葉県", "type": "kml", "key": "ekijun_12chiba", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_12chiba.kml" },
			{ "title": "東京都", "type": "kml", "key": "ekijun_13tokyo", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_13tokyo.kml" },
			{ "title": "神奈川県", "type": "kml", "key": "ekijun_14kanagawa", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_14kanagawa.kml" },
			{ "title": "新潟県", "type": "kml", "key": "ekijun_15niigata", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_15niigata.kml" },
			{ "title": "富山県", "type": "kml", "key": "ekijun_16toyama", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_16toyama.kml" },
			{ "title": "石川県", "type": "kml", "key": "ekijun_17ishikawa", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_17ishikawa.kml" },
			{ "title": "福井県", "type": "kml", "key": "ekijun_18fukui", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_18fukui.kml" },
			{ "title": "山梨県", "type": "kml", "key": "ekijun_19yamanashi", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_19yamanashi.kml" },
			{ "title": "長野県", "type": "kml", "key": "ekijun_20nagano", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_20nagano.kml" },
			{ "title": "岐阜県", "type": "kml", "key": "ekijun_21gifu", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_21gifu.kml" },
			{ "title": "静岡県", "type": "kml", "key": "ekijun_22shizuoka", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_22shizuoka.kml" },
			{ "title": "愛知県", "type": "kml", "key": "ekijun_23aichi", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_23aichi.kml" },
			{ "title": "三重県", "type": "kml", "key": "ekijun_24mie", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_24mie.kml" },
			{ "title": "滋賀県", "type": "kml", "key": "ekijun_25shiga", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_25shiga.kml" },
			{ "title": "京都府", "type": "kml", "key": "ekijun_26kyoto", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_26kyoto.kml" },
			{ "title": "大阪府", "type": "kml", "key": "ekijun_27oosaka", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_27oosaka.kml" },
			{ "title": "兵庫県", "type": "kml", "key": "ekijun_28hyogo", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_28hyogo.kml" },
			{ "title": "奈良県", "type": "kml", "key": "ekijun_29nara", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_29nara.kml" },
			{ "title": "和歌山県", "type": "kml", "key": "ekijun_30wakayama", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_30wakayama.kml" },
			{ "title": "鳥取県", "type": "kml", "key": "ekijun_31tottori", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_31tottori.kml" },
			{ "title": "島根県", "type": "kml", "key": "ekijun_32shimane", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_32shimane.kml" },
			{ "title": "岡山県", "type": "kml", "key": "ekijun_33okayama", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_33okayama.kml" },
			{ "title": "広島県", "type": "kml", "key": "ekijun_34hiroshima", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_34hiroshima.kml" },
			{ "title": "山口県", "type": "kml", "key": "ekijun_35yamaguchi", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_35yamaguchi.kml" },
			{ "title": "徳島県", "type": "kml", "key": "ekijun_36tokushima", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_36tokushima.kml" },
			{ "title": "香川県", "type": "kml", "key": "ekijun_37kagawa", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_37kagawa.kml" },
			{ "title": "愛媛県", "type": "kml", "key": "ekijun_38ehime", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_38ehime.kml" },
			{ "title": "高知県", "type": "kml", "key": "ekijun_39kouchi", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_39kouchi.kml" },
			{ "title": "福岡県", "type": "kml", "key": "ekijun_40fukuoka", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_40fukuoka.kml" },
			{ "title": "佐賀県", "type": "kml", "key": "ekijun_41saga", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_41saga.kml" },
			{ "title": "長崎県", "type": "kml", "key": "ekijun_42nagasaki", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_42nagasaki.kml" },
			{ "title": "熊本県", "type": "kml", "key": "ekijun_43kumamoto", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_43kumamoto.kml" },
			{ "title": "大分県", "type": "kml", "key": "ekijun_44ooita", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_44ooita.kml" },
			{ "title": "宮崎県", "type": "kml", "key": "ekijun_45miyazaki", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_45miyazaki.kml" },
			{ "title": "鹿児島県", "type": "kml", "key": "ekijun_46kagoshima", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_46kagoshima.kml" },
			{ "title": "沖縄県", "type": "kml", "key": "ekijun_47okinawa", "icon": "obj_denshi.png", "path": "http://portal.cyberjapan.jp/site/data/point/denshi/ekijun_47okinawa.kml" }
		]
	},
	{
		"title": "観測を強化している地域の地殻変動", "isFolder": true, "key": "kidou", "hideCheckbox": true, "expand": false,
		"children": [
			{
				"title": "現在観測している地区", "isFolder": true, "key": "kidou_cur", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_kansokukyouka",
				"children": [
					{ "title": "測距", "type": "kml", "key": "EDM", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/kidou/top_1_EDM.kml" },
					{ "title": "水準", "type": "kml", "key": "suijun", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/kidou/top_1_suijun.kml" },
					{ "title": "重力", "type": "kml", "key": "gravity", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/kidou/top_1_gravity.kml" },
					{ "title": "火山", "type": "kml", "key": "volcano", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/kidou/top_1_volcano.kml" }
				]
			},
			{
				"title": "過去に観測していた地区", "isFolder": true, "key": "kidou_fin", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_kansokukyouka",
				"children": [
					{ "title": "測距", "type": "kml", "key": "EDM_finish", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/kidou/top1_EDM_finish.kml" }
				]
			}
		]
	},
	{
		"title": "磁気図2010.0年値", "isFolder": true, "key": "chijiki", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_chijiki",
		"children": [
			{ "title": "偏角図/偏角一覧図", "type": "map", "key": "chijikiD", "icon": false, "dataset": "dataSetOverlay_chijikiD" },
			{ "title": "伏角図", "type": "map", "key": "chijikiI", "icon": false, "dataset": "dataSetOverlay_chijikiI" },
			{ "title": "全磁力図", "type": "map", "key": "chijikiF", "icon": false, "dataset": "dataSetOverlay_chijikiF" },
			{ "title": "水平分力図", "type": "map", "key": "chijikiH", "icon": false, "dataset": "dataSetOverlay_chijikiH" },
			{ "title": "鉛直分力図", "type": "map", "key": "chijikiZ", "icon": false, "dataset": "dataSetOverlay_chijikiZ" }
		]
	},
	{
		title:"干渉SAR",isFolder:true,hideCheckbox:true,expand:false,legendFunc:"getLibraryLegend_SAR",
		children: [
			{
				title:"地盤沈下",isFolder:true,hideCheckbox:true,expand:false,
				children: [
					{
						title:"石狩平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.20-2011.04.13",type:"map",key:"SAR_subsidence_ishikari_2008.05.20-2011.04.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2008052020110413"},
							{title:"2008.05.20-2010.10.11",type:"map",key:"SAR_subsidence_ishikari_2008.05.20-2010.10.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2008052020101011"},
							{title:"2010.05.26-2010.08.26",type:"map",key:"SAR_subsidence_ishikari_2010.05.26-2010.08.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2010052620100826"},
							{title:"2008.05.02-2010.05.08",type:"map",key:"SAR_subsidence_ishikari_2008.05.02-2010.05.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2008050220100508"},
							{title:"2007.04.30-2009.11.05",type:"map",key:"SAR_subsidence_ishikari_2007.04.30-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2007043020091105"},
							{title:"2009.05.05-2009.11.05",type:"map",key:"SAR_subsidence_ishikari_2009.05.05-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2009050520091105"},
							{title:"2007.08.18-2009.10.08",type:"map",key:"SAR_subsidence_ishikari_2007.08.18-2009.10.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2007081820091008"},
							{title:"2007.04.30-2009.09.20",type:"map",key:"SAR_subsidence_ishikari_2007.04.30-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2007043020090920"},
							{title:"2007.04.30-2009.08.05",type:"map",key:"SAR_subsidence_ishikari_2007.04.30-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2007043020090805"},
							{title:"2008.07.05-2009.07.08",type:"map",key:"SAR_subsidence_ishikari_2008.07.05-2009.07.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2008070520090708"},
							{title:"2006.06.12-2008.09.17",type:"map",key:"SAR_subsidence_ishikari_2006.06.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2006061220080917"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_subsidence_ishikari_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2006091220080917"},
							{title:"2007.08.18-2008.07.05",type:"map",key:"SAR_subsidence_ishikari_2007.08.18-2008.07.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2007081820080705"},
							{title:"2006.04.27-2007.04.30",type:"map",key:"SAR_subsidence_ishikari_2006.04.27-2007.04.30",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_ishikari_2006042720070430"}
						]
					},
					{
						title:"釧路平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.10-2011.01.01",type:"map",key:"SAR_subsidence_kushiro_2008.05.10-2011.01.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2008051020110101"},
							{title:"2010.04.28-2010.10.29",type:"map",key:"SAR_subsidence_kushiro_2010.04.28-2010.10.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2010042820101029"},
							{title:"2008.05.10-2010.10.01",type:"map",key:"SAR_subsidence_kushiro_2008.05.10-2010.10.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2008051020101001"},
							{title:"2008.06.07-2010.06.13",type:"map",key:"SAR_subsidence_kushiro_2008.06.07-2010.06.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2008060720100613"},
							{title:"2008.06.25-2009.08.13",type:"map",key:"SAR_subsidence_kushiro_2008.06.25-2009.08.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2008062520090813"},
							{title:"2006.10.18-2008.10.23",type:"map",key:"SAR_subsidence_kushiro_2006.10.18-2008.10.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2006101820081023"},
							{title:"2006.12.03-2008.10.23",type:"map",key:"SAR_subsidence_kushiro_2006.12.03-2008.10.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2006120320081023"},
							{title:"2007.09.23-2008.06.25",type:"map",key:"SAR_subsidence_kushiro_2007.09.23-2008.06.25",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2007092320080625"},
							{title:"2007.10.21-2008.06.07",type:"map",key:"SAR_subsidence_kushiro_2007.10.21-2008.06.07",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2007102120080607"},
							{title:"2007.10.21-2008.04.22",type:"map",key:"SAR_subsidence_kushiro_2007.10.21-2008.04.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2007102120080422"},
							{title:"2007.06.05-2007.10.21",type:"map",key:"SAR_subsidence_kushiro_2007.06.05-2007.10.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2007060520071021"},
							{title:"2007.08.08-2007.09.23",type:"map",key:"SAR_subsidence_kushiro_2007.08.08-2007.09.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2007080820070923"},
							{title:"2007.06.05-2007.09.05",type:"map",key:"SAR_subsidence_kushiro_2007.06.05-2007.09.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kushiro_2007060520070905"}
						]
					},
					{
						title:"十勝平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.26-2011.04.19",type:"map",key:"SAR_subsidence_tokachi-s_2008.05.26-2011.04.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tokachis_2008052620110419"},
							{title:"2008.05.26-2010.10.17",type:"map",key:"SAR_subsidence_tokachi-s_2008.05.26-2010.10.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tokachis_2008052620101017"},
							{title:"2007.05.24-2010.06.01",type:"map",key:"SAR_subsidence_tokachi-s_2007.05.24-2010.06.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tokachis_2007052420100601"},
							{title:"2008.07.29-2009.08.01",type:"map",key:"SAR_subsidence_tokachi-s_2008.07.29-2009.08.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tokachis_2008072920090801"},
							{title:"2007.07.09-2009.04.13",type:"map",key:"SAR_subsidence_tokachi-s_2007.07.09-2009.04.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tokachis_2007070920090413"}
						]
					},
					{
						title:"津軽平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.03.23-2011.04.01",type:"map",key:"SAR_subsidence_tsugaru_2008.03.23-2011.04.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2008032320110401"},
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_subsidence_tsugaru_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2008050220101108"},
							{title:"2008.06.23-2010.05.14",type:"map",key:"SAR_subsidence_tsugaru_2008.06.23-2010.05.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2008062320100514"},
							{title:"2008.09.17-2008.11.02",type:"map",key:"SAR_subsidence_tsugaru_2008.09.17-2008.11.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2008091720081102"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_subsidence_tsugaru_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2006091220080917"},
							{title:"2007.12.22-2008.06.23",type:"map",key:"SAR_subsidence_tsugaru_2007.12.22-2008.06.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2007122220080623"},
							{title:"2007.09.15-2008.05.02",type:"map",key:"SAR_subsidence_tsugaru_2007.09.15-2008.05.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2007091520080502"},
							{title:"2007.12.22-2008.03.23",type:"map",key:"SAR_subsidence_tsugaru_2007.12.22-2008.03.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2007122220080323"},
							{title:"2007.08.06-2008.03.23",type:"map",key:"SAR_subsidence_tsugaru_2007.08.06-2008.03.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2007080620080323"},
							{title:"2007.08.06-2007.12.22",type:"map",key:"SAR_subsidence_tsugaru_2007.08.06-2007.12.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2007080620071222"},
							{title:"2007.06.21-2007.09.21",type:"map",key:"SAR_subsidence_tsugaru_2007.06.21-2007.09.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2007062120070921"},
							{title:"2006.09.12-2007.09.15",type:"map",key:"SAR_subsidence_tsugaru_2006.09.12-2007.09.15",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2006091220070915"},
							{title:"2006.07.28-2007.09.15",type:"map",key:"SAR_subsidence_tsugaru_2006.07.28-2007.09.15",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2006072820070915"},
							{title:"2006.04.27-2006.06.12",type:"map",key:"SAR_subsidence_tsugaru_2006.04.27-2006.06.12",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_tsugaru_2006042720060612"}
						]
					},
					{
						title:"八戸地区",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.20-2011.01.11",type:"map",key:"SAR_subsidence_hachinohe_2008.05.20-2011.01.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008052020110111"},
							{title:"2010.04.10-2010.10.11",type:"map",key:"SAR_subsidence_hachinohe_2010.04.10-2010.10.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2010041020101011"},
							{title:"2008.02.18-2010.10.11",type:"map",key:"SAR_subsidence_hachinohe_2008.02.18-2010.10.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008021820101011"},
							{title:"2010.04.10-2010.08.26",type:"map",key:"SAR_subsidence_hachinohe_2010.04.10-2010.08.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2010041020100826"},
							{title:"2008.02.18-2010.08.26",type:"map",key:"SAR_subsidence_hachinohe_2008.02.18-2010.08.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008021820100826"},
							{title:"2008.01.03-2010.08.26",type:"map",key:"SAR_subsidence_hachinohe_2008.01.03-2010.08.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008010320100826"},
							{title:"2008.01.14-2010.07.22",type:"map",key:"SAR_subsidence_hachinohe_2008.01.14-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008011420100722"},
							{title:"2008.01.03-2010.05.26",type:"map",key:"SAR_subsidence_hachinohe_2008.01.03-2010.05.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008010320100526"},
							{title:"2008.01.03-2010.04.10",type:"map",key:"SAR_subsidence_hachinohe_2008.01.03-2010.04.10",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008010320100410"},
							{title:"2008.07.05-2010.01.08",type:"map",key:"SAR_subsidence_hachinohe_2008.07.05-2010.01.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008070520100108"},
							{title:"2008.07.16-2009.12.04",type:"map",key:"SAR_subsidence_hachinohe_2008.07.16-2009.12.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2008071620091204"},
							{title:"2007.08.29-2009.12.04",type:"map",key:"SAR_subsidence_hachinohe_2007.08.29-2009.12.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2007082920091204"},
							{title:"2007.07.14-2009.10.19",type:"map",key:"SAR_subsidence_hachinohe_2007.07.14-2009.10.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2007071420091019"},
							{title:"2007.10.03-2009.10.08",type:"map",key:"SAR_subsidence_hachinohe_2007.10.03-2009.10.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2007100320091008"},
							{title:"2006.10.11-2008.10.16",type:"map",key:"SAR_subsidence_hachinohe_2006.10.11-2008.10.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hachinohe_2006101120081016"}
						]
					},
					{
						title:"仙台平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.31-2011.01.22",type:"map",key:"SAR_subsidence_sendai_2008.05.31-2011.01.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2008053120110122"},
							{title:"2008.05.31-2010.10.22",type:"map",key:"SAR_subsidence_sendai_2008.05.31-2010.10.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2008053120101022"},
							{title:"2010.05.14-2010.09.29",type:"map",key:"SAR_subsidence_sendai_2010.05.14-2010.09.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2010051420100929"},
							{title:"2008.03.23-2010.09.29",type:"map",key:"SAR_subsidence_sendai_2008.03.23-2010.09.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2008032320100929"},
							{title:"2008.01.14-2010.06.06",type:"map",key:"SAR_subsidence_sendai_2008.01.14-2010.06.06",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2008011420100606"},
							{title:"2007.12.22-2010.05.14",type:"map",key:"SAR_subsidence_sendai_2007.12.22-2010.05.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2007122220100514"},
							{title:"2008.07.16-2009.12.04",type:"map",key:"SAR_subsidence_sendai_2008.07.16-2009.12.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2008071620091204"},
							{title:"2007.08.29-2009.12.04",type:"map",key:"SAR_subsidence_sendai_2007.08.29-2009.12.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2007082920091204"},
							{title:"2007.07.14-2009.10.19",type:"map",key:"SAR_subsidence_sendai_2007.07.14-2009.10.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2007071420091019"},
							{title:"2007.02.03-2009.02.08",type:"map",key:"SAR_subsidence_sendai_2007.02.03-2009.02.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2007020320090208"},
							{title:"2007.08.29-2008.07.16",type:"map",key:"SAR_subsidence_sendai_2007.08.29-2008.07.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_sendai_2007082920080716"}
						]
					},
					{
						title:"関東平野北部",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2011.01.04-2011.02.19",type:"map",key:"SAR_subsidence_kanto-n_2011.01.04-2011.02.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2011010420110219"},
							{title:"2008.02.11-2011.01.04",type:"map",key:"SAR_subsidence_kanto-n_2008.02.11-2011.01.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2008021120110104"},
							{title:"2010.11.08-2010.12.24",type:"map",key:"SAR_subsidence_kanto-n_2010.11.08-2010.12.24",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2010110820101224"},
							{title:"2008.03.28-2010.10.04",type:"map",key:"SAR_subsidence_kanto-n_2008.03.28-2010.10.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2008032820101004"},
							{title:"2008.02.11-2010.05.19",type:"map",key:"SAR_subsidence_kanto-n_2008.02.11-2010.05.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2008021120100519"},
							{title:"2007.12.27-2010.04.03",type:"map",key:"SAR_subsidence_kanto-n_2007.12.27-2010.04.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2007122720100403"},
							{title:"2007.12.27-2010.02.16",type:"map",key:"SAR_subsidence_kanto-n_2007.12.27-2010.02.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2007122720100216"},
							{title:"2007.01.28-2009.11.05",type:"map",key:"SAR_subsidence_kanto-n_2007.01.28-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2007012820091105"},
							{title:"2006.09.23-2009.07.01",type:"map",key:"SAR_subsidence_kanto-n_2006.09.23-2009.07.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2006092320090701"},
							{title:"2006.12.24-2008.12.29",type:"map",key:"SAR_subsidence_kanto-n_2006.12.24-2008.12.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2006122420081229"},
							{title:"2006.06.12-2008.12.18",type:"map",key:"SAR_subsidence_kanto-n_2006.06.12-2008.12.18",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2006061220081218"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_subsidence_kanto-n_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanton_2006091220080917"}
						]
					},
					{
						title:"関東平野南部",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.04.14-2011.01.21",type:"map",key:"SAR_subsidence_kanto-s_2008.04.14-2011.01.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2008041420110121"},
							{title:"2010.05.08-2010.08.08",type:"map",key:"SAR_subsidence_kanto-s_2010.05.08-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2010050820100808"},
							{title:"2010.03.23-2010.08.08",type:"map",key:"SAR_subsidence_kanto-s_2010.03.23-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2010032320100808"},
							{title:"2008.01.31-2010.05.08",type:"map",key:"SAR_subsidence_kanto-s_2008.01.31-2010.05.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2008013120100508"},
							{title:"2007.10.13-2010.01.18",type:"map",key:"SAR_subsidence_kanto-s_2007.10.13-2010.01.18",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007101320100118"},
							{title:"2007.10.13-2009.12.03",type:"map",key:"SAR_subsidence_kanto-s_2007.10.13-2009.12.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007101320091203"},
							{title:"2007.09.15-2009.11.05",type:"map",key:"SAR_subsidence_kanto-s_2007.09.15-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007091520091105"},
							{title:"2007.01.28-2009.11.05",type:"map",key:"SAR_subsidence_kanto-s_2007.01.28-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007012820091105"},
							{title:"2006.07.28-2009.11.05",type:"map",key:"SAR_subsidence_kanto-s_2006.07.28-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006072820091105"},
							{title:"2007.09.15-2009.09.20",type:"map",key:"SAR_subsidence_kanto-s_2007.09.15-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007091520090920"},
							{title:"2006.10.10-2009.09.02",type:"map",key:"SAR_subsidence_kanto-s_2006.10.10-2009.09.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006101020090902"},
							{title:"2007.09.15-2009.08.05",type:"map",key:"SAR_subsidence_kanto-s_2007.09.15-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007091520090805"},
							{title:"2006.10.10-2009.07.18",type:"map",key:"SAR_subsidence_kanto-s_2006.10.10-2009.07.18",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006101020090718"},
							{title:"2007.01.28-2009.03.20",type:"map",key:"SAR_subsidence_kanto-s_2007.01.28-2009.03.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007012820090320"},
							{title:"2006.07.28-2009.03.20",type:"map",key:"SAR_subsidence_kanto-s_2006.07.28-2009.03.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006072820090320"},
							{title:"2006.06.12-2009.03.20",type:"map",key:"SAR_subsidence_kanto-s_2006.06.12-2009.03.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006061220090320"},
							{title:"2007.01.28-2009.02.02",type:"map",key:"SAR_subsidence_kanto-s_2007.01.28-2009.02.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007012820090202"},
							{title:"2006.06.12-2009.02.02",type:"map",key:"SAR_subsidence_kanto-s_2006.06.12-2009.02.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006061220090202"},
							{title:"2007.01.28-2008.12.18",type:"map",key:"SAR_subsidence_kanto-s_2007.01.28-2008.12.18",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007012820081218"},
							{title:"2007.01.10-2008.11.30",type:"map",key:"SAR_subsidence_kanto-s_2007.01.10-2008.11.30",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2007011020081130"},
							{title:"2006.09.12-2008.11.02",type:"map",key:"SAR_subsidence_kanto-s_2006.09.12-2008.11.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006091220081102"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_subsidence_kanto-s_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006091220080917"},
							{title:"2006.06.12-2008.09.17",type:"map",key:"SAR_subsidence_kanto-s_2006.06.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kantos_2006061220080917"}
						]
					},
					{
						title:"九十九里平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.02.11-2011.02.19",type:"map",key:"SAR_subsidence_kujyukuri_2008.02.11-2011.02.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2008021120110219"},
							{title:"2008.05.31-2011.01.22",type:"map",key:"SAR_subsidence_kujyukuri_2008.05.31-2011.01.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2008053120110122"},
							{title:"2008.03.28-2011.01.04",type:"map",key:"SAR_subsidence_kujyukuri_2008.03.28-2011.01.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2008032820110104"},
							{title:"2008.01.14-2010.09.06",type:"map",key:"SAR_subsidence_kujyukuri_2008.01.14-2010.09.06",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2008011420100906"},
							{title:"2008.02.11-2010.07.04",type:"map",key:"SAR_subsidence_kujyukuri_2008.02.11-2010.07.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2008021120100704"},
							{title:"2008.01.14-2010.06.06",type:"map",key:"SAR_subsidence_kujyukuri_2008.01.14-2010.06.06",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2008011420100606"},
							{title:"2008.02.11-2010.02.16",type:"map",key:"SAR_subsidence_kujyukuri_2008.02.11-2010.02.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2008021120100216"},
							{title:"2007.07.14-2009.12.04",type:"map",key:"SAR_subsidence_kujyukuri_2007.07.14-2009.12.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007071420091204"},
							{title:"2006.11.08-2009.11.16",type:"map",key:"SAR_subsidence_kujyukuri_2006.11.08-2009.11.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006110820091116"},
							{title:"2007.02.26-2009.10.19",type:"map",key:"SAR_subsidence_kujyukuri_2007.02.26-2009.10.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007022620091019"},
							{title:"2007.08.11-2009.10.01",type:"map",key:"SAR_subsidence_kujyukuri_2007.08.11-2009.10.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007081120091001"},
							{title:"2006.11.08-2009.10.01",type:"map",key:"SAR_subsidence_kujyukuri_2006.11.08-2009.10.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006110820091001"},
							{title:"2007.02.26-2009.09.03",type:"map",key:"SAR_subsidence_kujyukuri_2007.02.26-2009.09.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007022620090903"},
							{title:"2007.02.26-2009.06.03",type:"map",key:"SAR_subsidence_kujyukuri_2007.02.26-2009.06.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007022620090603"},
							{title:"2006.12.24-2009.02.13",type:"map",key:"SAR_subsidence_kujyukuri_2006.12.24-2009.02.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006122420090213"},
							{title:"2006.11.26-2009.01.16",type:"map",key:"SAR_subsidence_kujyukuri_2006.11.26-2009.01.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006112620090116"},
							{title:"2006.10.11-2009.01.16",type:"map",key:"SAR_subsidence_kujyukuri_2006.10.11-2009.01.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006101120090116"},
							{title:"2006.12.24-2008.12.29",type:"map",key:"SAR_subsidence_kujyukuri_2006.12.24-2008.12.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006122420081229"},
							{title:"2006.11.26-2008.12.01",type:"map",key:"SAR_subsidence_kujyukuri_2006.11.26-2008.12.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006112620081201"},
							{title:"2006.10.11-2008.12.01",type:"map",key:"SAR_subsidence_kujyukuri_2006.10.11-2008.12.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006101120081201"},
							{title:"2006.12.24-2008.11.13",type:"map",key:"SAR_subsidence_kujyukuri_2006.12.24-2008.11.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006122420081113"},
							{title:"2006.11.26-2008.10.16",type:"map",key:"SAR_subsidence_kujyukuri_2006.11.26-2008.10.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006112620081016"},
							{title:"2006.10.11-2008.10.16",type:"map",key:"SAR_subsidence_kujyukuri_2006.10.11-2008.10.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006101120081016"},
							{title:"2006.12.24-2008.09.28",type:"map",key:"SAR_subsidence_kujyukuri_2006.12.24-2008.09.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006122420080928"},
							{title:"2006.08.08-2008.09.28",type:"map",key:"SAR_subsidence_kujyukuri_2006.08.08-2008.09.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006080820080928"},
							{title:"2006.11.26-2008.08.31",type:"map",key:"SAR_subsidence_kujyukuri_2006.11.26-2008.08.31",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006112620080831"},
							{title:"2006.10.11-2008.08.31",type:"map",key:"SAR_subsidence_kujyukuri_2006.10.11-2008.08.31",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006101120080831"},
							{title:"2007.09.26-2008.06.28",type:"map",key:"SAR_subsidence_kujyukuri_2007.09.26-2008.06.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007092620080628"},
							{title:"2007.01.11-2008.01.14",type:"map",key:"SAR_subsidence_kujyukuri_2007.01.11-2008.01.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007011120080114"},
							{title:"2007.01.11-2007.11.29",type:"map",key:"SAR_subsidence_kujyukuri_2007.01.11-2007.11.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007011120071129"},
							{title:"2007.01.11-2007.10.14",type:"map",key:"SAR_subsidence_kujyukuri_2007.01.11-2007.10.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2007011120071014"},
							{title:"2006.11.08-2007.05.11",type:"map",key:"SAR_subsidence_kujyukuri_2006.11.08-2007.05.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kujyukuri_2006110820070511"}
						]
					},
					{
						title:"新潟平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.04.14-2010.10.21",type:"map",key:"SAR_subsidence_niigata_2008.04.14-2010.10.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2008041420101021"},
							{title:"2010.04.26-2010.09.11",type:"map",key:"SAR_subsidence_niigata_2010.04.26-2010.09.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2010042620100911"},
							{title:"2008.06.05-2010.09.11",type:"map",key:"SAR_subsidence_niigata_2008.06.05-2010.09.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2008060520100911"},
							{title:"2007.10.19-2010.07.27",type:"map",key:"SAR_subsidence_niigata_2007.10.19-2010.07.27",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007101920100727"},
							{title:"2007.10.19-2010.06.11",type:"map",key:"SAR_subsidence_niigata_2007.10.19-2010.06.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007101920100611"},
							{title:"2007.10.19-2010.04.26",type:"map",key:"SAR_subsidence_niigata_2007.10.19-2010.04.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007101920100426"},
							{title:"2010.03.05-2010.04.20",type:"map",key:"SAR_subsidence_niigata_2010.03.05-2010.04.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2010030520100420"},
							{title:"2007.10.19-2009.12.09",type:"map",key:"SAR_subsidence_niigata_2007.10.19-2009.12.09",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007101920091209"},
							{title:"2007.07.19-2009.12.09",type:"map",key:"SAR_subsidence_niigata_2007.07.19-2009.12.09",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007071920091209"},
							{title:"2007.08.28-2009.12.03",type:"map",key:"SAR_subsidence_niigata_2007.08.28-2009.12.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007082820091203"},
							{title:"2008.07.21-2009.10.24",type:"map",key:"SAR_subsidence_niigata_2008.07.21-2009.10.24",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2008072120091024"},
							{title:"2007.10.19-2009.10.24",type:"map",key:"SAR_subsidence_niigata_2007.10.19-2009.10.24",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007101920091024"},
							{title:"2007.07.19-2009.10.24",type:"map",key:"SAR_subsidence_niigata_2007.07.19-2009.10.24",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007071920091024"},
							{title:"2007.08.28-2009.10.18",type:"map",key:"SAR_subsidence_niigata_2007.08.28-2009.10.18",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007082820091018"},
							{title:"2008.07.21-2009.09.08",type:"map",key:"SAR_subsidence_niigata_2008.07.21-2009.09.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2008072120090908"},
							{title:"2007.07.19-2009.09.08",type:"map",key:"SAR_subsidence_niigata_2007.07.19-2009.09.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007071920090908"},
							{title:"2007.08.28-2009.09.02",type:"map",key:"SAR_subsidence_niigata_2007.08.28-2009.09.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007082820090902"},
							{title:"2006.10.10-2009.09.02",type:"map",key:"SAR_subsidence_niigata_2006.10.10-2009.09.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2006101020090902"},
							{title:"2008.07.21-2009.04.23",type:"map",key:"SAR_subsidence_niigata_2008.07.21-2009.04.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2008072120090423"},
							{title:"2006.05.25-2008.11.30",type:"map",key:"SAR_subsidence_niigata_2006.05.25-2008.11.30",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2006052520081130"},
							{title:"2007.07.19-2008.07.21",type:"map",key:"SAR_subsidence_niigata_2007.07.19-2008.07.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2007071920080721"},
							{title:"2006.10.10-2007.07.13",type:"map",key:"SAR_subsidence_niigata_2006.10.10-2007.07.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_niigata_2006101020070713"}
						]
					},
					{
						title:"南魚沼地区",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2007.10.19-2010.07.27",type:"map",key:"SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_minamiuonuma_2007101920100727"},
							{title:"2007.10.19-2010.06.11",type:"map",key:"SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_minamiuonuma_2007101920100611"},
							{title:"2007.10.30-2010.05.07",type:"map",key:"SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_minamiuonuma_2007103020100507"},
							{title:"2007.09.14-2010.03.22",type:"map",key:"SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_minamiuonuma_2007091420100322"}
						]
					},
					{
						title:"金沢平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.04.07-2011.03.01",type:"map",key:"SAR_subsidence_kanazawa_2008.04.07-2011.03.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanazawa_2008040720110301"},
							{title:"2008.04.07-2010.10.14",type:"map",key:"SAR_subsidence_kanazawa_2008.04.07-2010.10.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanazawa_2008040720101014"},
							{title:"2007.08.10-2010.07.03",type:"map",key:"SAR_subsidence_kanazawa_2007.08.10-2010.07.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanazawa_2007081020100703"},
							{title:"2007.10.06-2010.04.13",type:"map",key:"SAR_subsidence_kanazawa_2007.10.06-2010.04.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanazawa_2007100620100413"},
							{title:"2008.07.08-2009.07.11",type:"map",key:"SAR_subsidence_kanazawa_2008.07.08-2009.07.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanazawa_2008070820090711"},
							{title:"2006.12.23-2008.12.28",type:"map",key:"SAR_subsidence_kanazawa_2006.12.23-2008.12.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanazawa_2006122320081228"},
							{title:"2007.01.03-2008.11.23",type:"map",key:"SAR_subsidence_kanazawa_2007.01.03-2008.11.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_kanazawa_2007010320081123"}
						]
					},
					{
						title:"静岡平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.09.10-2011.01.26",type:"map",key:"SAR_subsidence_shizuoka_2010.09.10-2011.01.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2010091020110126"},
							{title:"2008.04.19-2011.01.26",type:"map",key:"SAR_subsidence_shizuoka_2008.04.19-2011.01.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2008041920110126"},
							{title:"2008.06.05-2010.09.11",type:"map",key:"SAR_subsidence_shizuoka_2008.06.05-2010.09.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2008060520100911"},
							{title:"2010.04.26-2010.07.27",type:"map",key:"SAR_subsidence_shizuoka_2010.04.26-2010.07.27",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2010042620100727"},
							{title:"2007.10.19-2010.06.11",type:"map",key:"SAR_subsidence_shizuoka_2007.10.19-2010.06.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2007101920100611"},
							{title:"2007.10.19-2010.04.26",type:"map",key:"SAR_subsidence_shizuoka_2007.10.19-2010.04.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2007101920100426"},
							{title:"2009.09.08-2009.10.24",type:"map",key:"SAR_subsidence_shizuoka_2009.09.08-2009.10.24",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2009090820091024"},
							{title:"2008.07.21-2009.09.08",type:"map",key:"SAR_subsidence_shizuoka_2008.07.21-2009.09.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2008072120090908"},
							{title:"2007.01.15-2009.01.20",type:"map",key:"SAR_subsidence_shizuoka_2007.01.15-2009.01.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2007011520090120"},
							{title:"2007.01.16-2007.12.04",type:"map",key:"SAR_subsidence_shizuoka_2007.01.16-2007.12.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_shizuoka_2007011620071204"}
						]
					},
					{
						title:"濃尾平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.04.07-2011.03.01",type:"map",key:"SAR_subsidence_noubi_2008.04.07-2011.03.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2008040720110301"},
							{title:"2010.08.29-2010.10.14",type:"map",key:"SAR_subsidence_noubi_2010.08.29-2010.10.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2010082920101014"},
							{title:"2010.02.26-2010.10.14",type:"map",key:"SAR_subsidence_noubi_2010.02.26-2010.10.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2010022620101014"},
							{title:"2008.01.23-2010.09.15",type:"map",key:"SAR_subsidence_noubi_2008.01.23-2010.09.15",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2008012320100915"},
							{title:"2010.01.11-2010.08.29",type:"map",key:"SAR_subsidence_noubi_2010.01.11-2010.08.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2010011120100829"},
							{title:"2008.02.21-2010.08.29",type:"map",key:"SAR_subsidence_noubi_2008.02.21-2010.08.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2008022120100829"},
							{title:"2008.01.06-2010.04.13",type:"map",key:"SAR_subsidence_noubi_2008.01.06-2010.04.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2008010620100413"},
							{title:"2007.11.21-2010.02.26",type:"map",key:"SAR_subsidence_noubi_2007.11.21-2010.02.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2007112120100226"},
							{title:"2007.10.24-2009.10.29",type:"map",key:"SAR_subsidence_noubi_2007.10.24-2009.10.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2007102420091029"},
							{title:"2006.12.06-2009.06.13",type:"map",key:"SAR_subsidence_noubi_2006.12.06-2009.06.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2006120620090613"},
							{title:"2006.12.05-2009.01.25",type:"map",key:"SAR_subsidence_noubi_2006.12.05-2009.01.25",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2006120520090125"},
							{title:"2007.01.03-2009.01.08",type:"map",key:"SAR_subsidence_noubi_2007.01.03-2009.01.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2007010320090108"},
							{title:"2007.04.23-2008.04.25",type:"map",key:"SAR_subsidence_noubi_2007.04.23-2008.04.25",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2007042320080425"},
							{title:"2006.12.05-2008.01.23",type:"map",key:"SAR_subsidence_noubi_2006.12.05-2008.01.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2006120520080123"},
							{title:"2007.01.03-2008.01.06",type:"map",key:"SAR_subsidence_noubi_2007.01.03-2008.01.06",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2007010320080106"},
							{title:"2006.12.05-2007.12.08",type:"map",key:"SAR_subsidence_noubi_2006.12.05-2007.12.08",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2006120520071208"},
							{title:"2006.12.06-2007.10.24",type:"map",key:"SAR_subsidence_noubi_2006.12.06-2007.10.24",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2006120620071024"},
							{title:"2006.12.05-2007.10.23",type:"map",key:"SAR_subsidence_noubi_2006.12.05-2007.10.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_noubi_2006120520071023"}
						]
					},
					{
						title:"大阪平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.29-2010.10.20",type:"map",key:"SAR_subsidence_osaka_2008.05.29-2010.10.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2008052920101020"},
							{title:"2007.01.09-2010.10.20",type:"map",key:"SAR_subsidence_osaka_2007.01.09-2010.10.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007010920101020"},
							{title:"2010.03.03-2010.10.19",type:"map",key:"SAR_subsidence_osaka_2010.03.03-2010.10.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2010030320101019"},
							{title:"2008.02.26-2010.10.19",type:"map",key:"SAR_subsidence_osaka_2008.02.26-2010.10.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2008022620101019"},
							{title:"2008.05.29-2010.09.04",type:"map",key:"SAR_subsidence_osaka_2008.05.29-2010.09.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2008052920100904"},
							{title:"2008.02.26-2010.09.03",type:"map",key:"SAR_subsidence_osaka_2008.02.26-2010.09.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2008022620100903"},
							{title:"2008.05.29-2010.06.04",type:"map",key:"SAR_subsidence_osaka_2008.05.29-2010.06.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2008052920100604"},
							{title:"2008.01.11-2010.03.03",type:"map",key:"SAR_subsidence_osaka_2008.01.11-2010.03.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2008011120100303"},
							{title:"2008.01.11-2010.01.16",type:"map",key:"SAR_subsidence_osaka_2008.01.11-2010.01.16",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2008011120100116"},
							{title:"2007.01.09-2009.12.02",type:"map",key:"SAR_subsidence_osaka_2007.01.09-2009.12.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007010920091202"},
							{title:"2007.01.08-2009.01.13",type:"map",key:"SAR_subsidence_osaka_2007.01.08-2009.01.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007010820090113"},
							{title:"2007.05.27-2008.05.29",type:"map",key:"SAR_subsidence_osaka_2007.05.27-2008.05.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007052720080529"},
							{title:"2007.01.26-2008.04.30",type:"map",key:"SAR_subsidence_osaka_2007.01.26-2008.04.30",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007012620080430"},
							{title:"2007.01.09-2008.02.27",type:"map",key:"SAR_subsidence_osaka_2007.01.09-2008.02.27",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007010920080227"},
							{title:"2007.01.09-2007.08.27",type:"map",key:"SAR_subsidence_osaka_2007.01.09-2007.08.27",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007010920070827"},
							{title:"2007.01.09-2007.05.27",type:"map",key:"SAR_subsidence_osaka_2007.01.09-2007.05.27",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_osaka_2007010920070527"}
						]
					},
					{
						title:"広島平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.03.13-2010.10.29",type:"map",key:"SAR_subsidence_hiroshima_2010.03.13-2010.10.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2010031320101029"},
							{title:"2008.03.07-2010.10.29",type:"map",key:"SAR_subsidence_hiroshima_2008.03.07-2010.10.29",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2008030720101029"},
							{title:"2010.04.28-2010.09.13",type:"map",key:"SAR_subsidence_hiroshima_2010.04.28-2010.09.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2010042820100913"},
							{title:"2010.01.26-2010.04.28",type:"map",key:"SAR_subsidence_hiroshima_2010.01.26-2010.04.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2010012620100428"},
							{title:"2008.01.21-2010.04.28",type:"map",key:"SAR_subsidence_hiroshima_2008.01.21-2010.04.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2008012120100428"},
							{title:"2007.12.06-2010.03.13",type:"map",key:"SAR_subsidence_hiroshima_2007.12.06-2010.03.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2007120620100313"},
							{title:"2008.01.21-2010.01.26",type:"map",key:"SAR_subsidence_hiroshima_2008.01.21-2010.01.26",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2008012120100126"},
							{title:"2007.01.19-2009.12.12",type:"map",key:"SAR_subsidence_hiroshima_2007.01.19-2009.12.12",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2007011920091212"},
							{title:"2007.01.18-2009.01.23",type:"map",key:"SAR_subsidence_hiroshima_2007.01.18-2009.01.23",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2007011820090123"},
							{title:"2007.01.18-2008.09.07",type:"map",key:"SAR_subsidence_hiroshima_2007.01.18-2008.09.07",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2007011820080907"},
							{title:"2007.01.19-2008.01.22",type:"map",key:"SAR_subsidence_hiroshima_2007.01.19-2008.01.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2007011920080122"},
							{title:"2007.01.19-2007.10.22",type:"map",key:"SAR_subsidence_hiroshima_2007.01.19-2007.10.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_hiroshima_2007011920071022"}
						]
					},
					{
						title:"佐賀平野",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.31-2011.03.09",type:"map",key:"SAR_subsidence_saga_2008.05.31-2011.03.09",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008053120110309"},
							{title:"2008.05.15-2011.02.21",type:"map",key:"SAR_subsidence_saga_2008.05.15-2011.02.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008051520110221"},
							{title:"2010.11.20-2011.02.20",type:"map",key:"SAR_subsidence_saga_2010.11.20-2011.02.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010112020110220"},
							{title:"2008.05.14-2011.02.20",type:"map",key:"SAR_subsidence_saga_2008.05.14-2011.02.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008051420110220"},
							{title:"2008.05.31-2011.01.22",type:"map",key:"SAR_subsidence_saga_2008.05.31-2011.01.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008053120110122"},
							{title:"2010.06.19-2010.12.20",type:"map",key:"SAR_subsidence_saga_2010.06.19-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010061920101220"},
							{title:"2010.02.17-2010.11.20",type:"map",key:"SAR_subsidence_saga_2010.02.17-2010.11.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010021720101120"},
							{title:"2010.01.03-2010.08.21",type:"map",key:"SAR_subsidence_saga_2010.01.03-2010.08.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010010320100821"},
							{title:"2008.02.12-2010.08.20",type:"map",key:"SAR_subsidence_saga_2008.02.12-2010.08.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008021220100820"},
							{title:"2010.04.21-2010.07.22",type:"map",key:"SAR_subsidence_saga_2010.04.21-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010042120100722"},
							{title:"2010.03.06-2010.07.22",type:"map",key:"SAR_subsidence_saga_2010.03.06-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010030620100722"},
							{title:"2010.01.19-2010.07.22",type:"map",key:"SAR_subsidence_saga_2010.01.19-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010011920100722"},
							{title:"2008.05.31-2010.07.22",type:"map",key:"SAR_subsidence_saga_2008.05.31-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008053120100722"},
							{title:"2008.02.29-2010.07.22",type:"map",key:"SAR_subsidence_saga_2008.02.29-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008022920100722"},
							{title:"2008.01.14-2010.07.22",type:"map",key:"SAR_subsidence_saga_2008.01.14-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008011420100722"},
							{title:"2008.04.28-2010.06.19",type:"map",key:"SAR_subsidence_saga_2008.04.28-2010.06.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008042820100619"},
							{title:"2008.03.29-2010.05.20",type:"map",key:"SAR_subsidence_saga_2008.03.29-2010.05.20",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008032920100520"},
							{title:"2009.12.17-2010.05.04",type:"map",key:"SAR_subsidence_saga_2009.12.17-2010.05.04",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2009121720100504"},
							{title:"2010.03.06-2010.04.21",type:"map",key:"SAR_subsidence_saga_2010.03.06-2010.04.21",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2010030620100421"},
							{title:"2009.12.17-2010.03.19",type:"map",key:"SAR_subsidence_saga_2009.12.17-2010.03.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2009121720100319"},
							{title:"2007.12.12-2010.03.19",type:"map",key:"SAR_subsidence_saga_2007.12.12-2010.03.19",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007121220100319"},
							{title:"2008.01.14-2010.03.06",type:"map",key:"SAR_subsidence_saga_2008.01.14-2010.03.06",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2008011420100306"},
							{title:"2007.11.13-2010.01.03",type:"map",key:"SAR_subsidence_saga_2007.11.13-2010.01.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007111320100103"},
							{title:"2007.12.28-2010.01.02",type:"map",key:"SAR_subsidence_saga_2007.12.28-2010.01.02",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007122820100102"},
							{title:"2007.12.12-2009.12.17",type:"map",key:"SAR_subsidence_saga_2007.12.12-2009.12.17",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007121220091217"},
							{title:"2006.11.26-2009.09.03",type:"map",key:"SAR_subsidence_saga_2006.11.26-2009.09.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2006112620090903"},
							{title:"2007.02.10-2009.08.18",type:"map",key:"SAR_subsidence_saga_2007.02.10-2009.08.18",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007021020090818"},
							{title:"2007.03.11-2009.08.01",type:"map",key:"SAR_subsidence_saga_2007.03.11-2009.08.01",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007031120090801"},
							{title:"2006.11.26-2009.03.03",type:"map",key:"SAR_subsidence_saga_2006.11.26-2009.03.03",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2006112620090303"},
							{title:"2006.12.25-2009.02.14",type:"map",key:"SAR_subsidence_saga_2006.12.25-2009.02.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2006122520090214"},
							{title:"2006.12.25-2008.12.30",type:"map",key:"SAR_subsidence_saga_2006.12.25-2008.12.30",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2006122520081230"},
							{title:"2007.03.11-2008.12.14",type:"map",key:"SAR_subsidence_saga_2007.03.11-2008.12.14",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007031120081214"},
							{title:"2007.04.26-2008.04.28",type:"map",key:"SAR_subsidence_saga_2007.04.26-2008.04.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007042620080428"},
							{title:"2007.11.12-2007.12.28",type:"map",key:"SAR_subsidence_saga_2007.11.12-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007111220071228"},
							{title:"2007.06.27-2007.12.28",type:"map",key:"SAR_subsidence_saga_2007.06.27-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007062720071228"},
							{title:"2006.12.25-2007.12.28",type:"map",key:"SAR_subsidence_saga_2006.12.25-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2006122520071228"},
							{title:"2007.06.11-2007.12.12",type:"map",key:"SAR_subsidence_saga_2007.06.11-2007.12.12",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007061120071212"},
							{title:"2007.02.10-2007.11.13",type:"map",key:"SAR_subsidence_saga_2007.02.10-2007.11.13",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007021020071113"},
							{title:"2007.06.11-2007.09.11",type:"map",key:"SAR_subsidence_saga_2007.06.11-2007.09.11",icon:false,"dataset":"dataSetOverlay_SAR_subsidence_saga_2007061120070911"}
						]
					}
				]
			},
			{
				title:"火山",isFolder:true,hideCheckbox:true,expand:false,
				children: [
					{
						title:"茂世路岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.07.02-2010.10.02",type:"map",key:"SAR_volcano_moyorodake_2010.07.02-2010.10.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_moyorodake_2010070220101002"},
							{title:"2007.09.24-2010.08.17",type:"map",key:"SAR_volcano_moyorodake_2007.09.24-2010.08.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_moyorodake_2007092420100817"},
							{title:"2007.09.08-2010.06.16",type:"map",key:"SAR_volcano_moyorodake_2007.09.08-2010.06.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_moyorodake_2007090820100616"},
							{title:"2007.09.24-2010.05.17",type:"map",key:"SAR_volcano_moyorodake_2007.09.24-2010.05.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_moyorodake_2007092420100517"}
						]
					},
					{
						title:"散布山/指臼岳/小田萌山/択捉焼山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.06.03-2010.10.19",type:"map",key:"SAR_volcano_chirippuyama_2010.06.03-2010.10.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_chirippuyama_2010060320101019"},
							{title:"2007.09.25-2010.07.03",type:"map",key:"SAR_volcano_chirippuyama_2007.09.25-2010.07.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_chirippuyama_2007092520100703"}
						]
					},
					{
						title:"択捉阿登佐岳/ベルタルベ山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.08.06-2010.09.21",type:"map",key:"SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_etorofuatosadake_2010080620100921"},
							{title:"2007.09.29-2010.05.22",type:"map",key:"SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_etorofuatosadake_2007092920100522"}
						]
					},
					{
						title:"ルルイ岳/爺爺岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.06.08-2010.10.24",type:"map",key:"SAR_volcano_ruruidake_2010.06.08-2010.10.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ruruidake_2010060820101024"},
							{title:"2010.06.09-2010.07.25",type:"map",key:"SAR_volcano_ruruidake_2010.06.09-2010.07.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ruruidake_2010060920100725"},
							{title:"2007.10.17-2010.07.25",type:"map",key:"SAR_volcano_ruruidake_2007.10.17-2010.07.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ruruidake_2007101720100725"},
							{title:"2007.09.01-2010.07.25",type:"map",key:"SAR_volcano_ruruidake_2007.09.01-2010.07.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ruruidake_2007090120100725"},
							{title:"2007.10.17-2010.06.09",type:"map",key:"SAR_volcano_ruruidake_2007.10.17-2010.06.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ruruidake_2007101720100609"},
							{title:"2007.10.16-2010.06.08",type:"map",key:"SAR_volcano_ruruidake_2007.10.16-2010.06.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ruruidake_2007101620100608"}
						]
					},
					{
						title:"羅臼山/泊山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.05.10-2010.09.25",type:"map",key:"SAR_volcano_rausuyama_2010.05.10-2010.09.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausuyama_2010051020100925"},
							{title:"2010.06.26-2010.08.11",type:"map",key:"SAR_volcano_rausuyama_2010.06.26-2010.08.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausuyama_2010062620100811"},
							{title:"2007.09.18-2010.05.11",type:"map",key:"SAR_volcano_rausuyama_2007.09.18-2010.05.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausuyama_2007091820100511"},
							{title:"2007.11.02-2010.05.10",type:"map",key:"SAR_volcano_rausuyama_2007.11.02-2010.05.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausuyama_2007110220100510"},
							{title:"2009.09.22-2009.11.07",type:"map",key:"SAR_volcano_rausuyama_2009.09.22-2009.11.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausuyama_2009092220091107"},
							{title:"2009.05.07-2009.11.07",type:"map",key:"SAR_volcano_rausuyama_2009.05.07-2009.11.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausuyama_2009050720091107"}
						]
					},
					{
						title:"羅臼岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.07.12-2010.10.12",type:"map",key:"SAR_volcano_rausu_2010.07.12-2010.10.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2010071220101012"},
							{title:"2010.05.27-2010.08.27",type:"map",key:"SAR_volcano_rausu_2010.05.27-2010.08.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2010052720100827"},
							{title:"2007.10.04-2010.05.27",type:"map",key:"SAR_volcano_rausu_2007.10.04-2010.05.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2007100420100527"},
							{title:"2007.08.19-2009.10.09",type:"map",key:"SAR_volcano_rausu_2007.08.19-2009.10.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2007081920091009"},
							{title:"2008.07.07-2009.08.25",type:"map",key:"SAR_volcano_rausu_2008.07.07-2009.08.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2008070720090825"},
							{title:"2007.07.05-2008.07.07",type:"map",key:"SAR_volcano_rausu_2007.07.05-2008.07.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2007070520080707"},
							{title:"2007.07.05-2007.10.05",type:"map",key:"SAR_volcano_rausu_2007.07.05-2007.10.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2007070520071005"},
							{title:"2007.05.19-2007.08.19",type:"map",key:"SAR_volcano_rausu_2007.05.19-2007.08.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_rausu_2007051920070819"}
						]
					},
					{
						title:"雌阿寒岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.09.30-2010.11.15",type:"map",key:"SAR_volcano_meakandake_2010.09.30-2010.11.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2010093020101115"},
							{title:"2008.05.10-2010.10.01",type:"map",key:"SAR_volcano_meakandake_2008.05.10-2010.10.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008051020101001"},
							{title:"2010.05.16-2010.08.16",type:"map",key:"SAR_volcano_meakandake_2010.05.16-2010.08.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2010051620100816"},
							{title:"2010.05.15-2010.08.15",type:"map",key:"SAR_volcano_meakandake_2010.05.15-2010.08.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2010051520100815"},
							{title:"2007.09.22-2010.06.30",type:"map",key:"SAR_volcano_meakandake_2007.09.22-2010.06.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007092220100630"},
							{title:"2007.09.23-2010.05.16",type:"map",key:"SAR_volcano_meakandake_2007.09.23-2010.05.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007092320100516"},
							{title:"2009.06.28-2009.09.28",type:"map",key:"SAR_volcano_meakandake_2009.06.28-2009.09.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2009062820090928"},
							{title:"2007.09.23-2009.09.28",type:"map",key:"SAR_volcano_meakandake_2007.09.23-2009.09.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007092320090928"},
							{title:"2009.06.27-2009.09.27",type:"map",key:"SAR_volcano_meakandake_2009.06.27-2009.09.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2009062720090927"},
							{title:"2007.08.07-2009.09.27",type:"map",key:"SAR_volcano_meakandake_2007.08.07-2009.09.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007080720090927"},
							{title:"2009.06.28-2009.08.13",type:"map",key:"SAR_volcano_meakandake_2009.06.28-2009.08.13",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2009062820090813"},
							{title:"2008.06.25-2009.06.28",type:"map",key:"SAR_volcano_meakandake_2008.06.25-2009.06.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008062520090628"},
							{title:"2008.12.25-2009.06.27",type:"map",key:"SAR_volcano_meakandake_2008.12.25-2009.06.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008122520090627"},
							{title:"2007.08.07-2009.06.27",type:"map",key:"SAR_volcano_meakandake_2007.08.07-2009.06.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007080720090627"},
							{title:"2006.12.21-2009.02.10",type:"map",key:"SAR_volcano_meakandake_2006.12.21-2009.02.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2006122120090210"},
							{title:"2008.09.25-2008.12.26",type:"map",key:"SAR_volcano_meakandake_2008.09.25-2008.12.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008092520081226"},
							{title:"2008.09.24-2008.12.25",type:"map",key:"SAR_volcano_meakandake_2008.09.24-2008.12.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008092420081225"},
							{title:"2008.08.27-2008.10.12",type:"map",key:"SAR_volcano_meakandake_2008.08.27-2008.10.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008082720081012"},
							{title:"2008.08.10-2008.09.25",type:"map",key:"SAR_volcano_meakandake_2008.08.10-2008.09.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008081020080925"},
							{title:"2007.09.23-2008.06.25",type:"map",key:"SAR_volcano_meakandake_2007.09.23-2008.06.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007092320080625"},
							{title:"2007.08.08-2008.06.25",type:"map",key:"SAR_volcano_meakandake_2007.08.08-2008.06.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007080820080625"},
							{title:"2008.03.25-2008.05.10",type:"map",key:"SAR_volcano_meakandake_2008.03.25-2008.05.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2008032520080510"},
							{title:"2007.09.23-2008.03.25",type:"map",key:"SAR_volcano_meakandake_2007.09.23-2008.03.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007092320080325"},
							{title:"2007.08.08-2007.09.23",type:"map",key:"SAR_volcano_meakandake_2007.08.08-2007.09.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007080820070923"},
							{title:"2007.08.07-2007.09.22",type:"map",key:"SAR_volcano_meakandake_2007.08.07-2007.09.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_meakandake_2007080720070922"}
						]
					},
					{
						title:"十勝岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.07.06-2010.10.06",type:"map",key:"SAR_volcano_tokachidake_2010.07.06-2010.10.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2010070620101006"},
							{title:"2010.07.05-2010.10.05",type:"map",key:"SAR_volcano_tokachidake_2010.07.05-2010.10.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2010070520101005"},
							{title:"2010.05.21-2010.08.21",type:"map",key:"SAR_volcano_tokachidake_2010.05.21-2010.08.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2010052120100821"},
							{title:"2010.05.20-2010.08.20",type:"map",key:"SAR_volcano_tokachidake_2010.05.20-2010.08.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2010052020100820"},
							{title:"2007.09.27-2010.07.05",type:"map",key:"SAR_volcano_tokachidake_2007.09.27-2010.07.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2007092720100705"},
							{title:"2009.07.03-2009.10.03",type:"map",key:"SAR_volcano_tokachidake_2009.07.03-2009.10.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2009070320091003"},
							{title:"2009.05.17-2009.10.02",type:"map",key:"SAR_volcano_tokachidake_2009.05.17-2009.10.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2009051720091002"},
							{title:"2009.07.03-2009.08.18",type:"map",key:"SAR_volcano_tokachidake_2009.07.03-2009.08.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2009070320090818"},
							{title:"2008.07.28-2009.07.31",type:"map",key:"SAR_volcano_tokachidake_2008.07.28-2009.07.31",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2008072820090731"},
							{title:"2008.06.30-2009.07.03",type:"map",key:"SAR_volcano_tokachidake_2008.06.30-2009.07.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2008063020090703"},
							{title:"2008.06.29-2009.05.17",type:"map",key:"SAR_volcano_tokachidake_2008.06.29-2009.05.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2008062920090517"},
							{title:"2006.09.24-2008.08.14",type:"map",key:"SAR_volcano_tokachidake_2006.09.24-2008.08.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tokachidake_2006092420080814"}
						]
					},
					{
						title:"樽前山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_volcano_tarumae_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2008050220101108"},
							{title:"2008.05.20-2010.10.11",type:"map",key:"SAR_volcano_tarumae_2008.05.20-2010.10.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2008052020101011"},
							{title:"2010.05.26-2010.08.26",type:"map",key:"SAR_volcano_tarumae_2010.05.26-2010.08.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2010052620100826"},
							{title:"2008.05.20-2010.08.26",type:"map",key:"SAR_volcano_tarumae_2008.05.20-2010.08.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2008052020100826"},
							{title:"2010.05.08-2010.08.08",type:"map",key:"SAR_volcano_tarumae_2010.05.08-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2010050820100808"},
							{title:"2007.09.15-2010.08.08",type:"map",key:"SAR_volcano_tarumae_2007.09.15-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2007091520100808"},
							{title:"2007.10.03-2010.05.26",type:"map",key:"SAR_volcano_tarumae_2007.10.03-2010.05.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2007100320100526"},
							{title:"2008.05.02-2010.05.08",type:"map",key:"SAR_volcano_tarumae_2008.05.02-2010.05.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2008050220100508"},
							{title:"2009.05.05-2009.11.05",type:"map",key:"SAR_volcano_tarumae_2009.05.05-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2009050520091105"},
							{title:"2007.09.15-2009.11.05",type:"map",key:"SAR_volcano_tarumae_2007.09.15-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2007091520091105"},
							{title:"2007.04.30-2009.11.05",type:"map",key:"SAR_volcano_tarumae_2007.04.30-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2007043020091105"},
							{title:"2006.04.27-2009.11.05",type:"map",key:"SAR_volcano_tarumae_2006.04.27-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2006042720091105"},
							{title:"2007.08.18-2009.10.08",type:"map",key:"SAR_volcano_tarumae_2007.08.18-2009.10.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2007081820091008"},
							{title:"2007.04.30-2009.09.20",type:"map",key:"SAR_volcano_tarumae_2007.04.30-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2007043020090920"},
							{title:"2007.04.30-2009.08.05",type:"map",key:"SAR_volcano_tarumae_2007.04.30-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2007043020090805"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_volcano_tarumae_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2006091220080917"},
							{title:"2006.06.12-2008.09.17",type:"map",key:"SAR_volcano_tarumae_2006.06.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_tarumae_2006061220080917"}
						]
					},
					{
						title:"有珠山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_volcano_usu_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2008050220101108"},
							{title:"2010.04.27-2010.10.28",type:"map",key:"SAR_volcano_usu_2010.04.27-2010.10.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2010042720101028"},
							{title:"2008.06.06-2010.10.28",type:"map",key:"SAR_volcano_usu_2008.06.06-2010.10.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2008060620101028"},
							{title:"2010.05.08-2010.08.08",type:"map",key:"SAR_volcano_usu_2010.05.08-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2010050820100808"},
							{title:"2010.04.27-2010.07.28",type:"map",key:"SAR_volcano_usu_2010.04.27-2010.07.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2010042720100728"},
							{title:"2007.10.20-2010.06.12",type:"map",key:"SAR_volcano_usu_2007.10.20-2010.06.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2007102020100612"},
							{title:"2008.05.02-2010.05.08",type:"map",key:"SAR_volcano_usu_2008.05.02-2010.05.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2008050220100508"},
							{title:"2007.04.30-2009.09.20",type:"map",key:"SAR_volcano_usu_2007.04.30-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2007043020090920"},
							{title:"2008.07.22-2009.09.09",type:"map",key:"SAR_volcano_usu_2008.07.22-2009.09.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2008072220090909"},
							{title:"2007.07.20-2009.09.09",type:"map",key:"SAR_volcano_usu_2007.07.20-2009.09.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2007072020090909"},
							{title:"2006.07.28-2009.08.05",type:"map",key:"SAR_volcano_usu_2006.07.28-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2006072820090805"},
							{title:"2008.09.17-2008.11.02",type:"map",key:"SAR_volcano_usu_2008.09.17-2008.11.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2008091720081102"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_volcano_usu_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2006091220080917"},
							{title:"2007.07.20-2008.07.22",type:"map",key:"SAR_volcano_usu_2007.07.20-2008.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2007072020080722"},
							{title:"2007.07.20-2007.10.20",type:"map",key:"SAR_volcano_usu_2007.07.20-2007.10.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2007072020071020"},
							{title:"2006.04.27-2007.04.30",type:"map",key:"SAR_volcano_usu_2006.04.27-2007.04.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_usu_2006042720070430"}
						]
					},
					{
						title:"北海道駒ヶ岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_volcano_komagatake_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2008050220101108"},
							{title:"2010.04.27-2010.10.28",type:"map",key:"SAR_volcano_komagatake_2010.04.27-2010.10.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2010042720101028"},
							{title:"2008.06.06-2010.10.28",type:"map",key:"SAR_volcano_komagatake_2008.06.06-2010.10.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2008060620101028"},
							{title:"2010.05.08-2010.08.08",type:"map",key:"SAR_volcano_komagatake_2010.05.08-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2010050820100808"},
							{title:"2007.10.20-2010.06.12",type:"map",key:"SAR_volcano_komagatake_2007.10.20-2010.06.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2007102020100612"},
							{title:"2008.05.02-2010.05.08",type:"map",key:"SAR_volcano_komagatake_2008.05.02-2010.05.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2008050220100508"},
							{title:"2007.04.30-2009.09.20",type:"map",key:"SAR_volcano_komagatake_2007.04.30-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2007043020090920"},
							{title:"2008.07.22-2009.09.09",type:"map",key:"SAR_volcano_komagatake_2008.07.22-2009.09.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2008072220090909"},
							{title:"2007.07.20-2009.09.09",type:"map",key:"SAR_volcano_komagatake_2007.07.20-2009.09.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_komagatake_2007072020090909"}
						]
					},
					{
						title:"岩木山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.05.25-2010.11.25",type:"map",key:"SAR_volcano_iwaki_2010.05.25-2010.11.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwaki_2010052520101125"},
							{title:"2007.10.02-2010.05.25",type:"map",key:"SAR_volcano_iwaki_2007.10.02-2010.05.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwaki_2007100220100525"},
							{title:"2008.06.23-2010.05.14",type:"map",key:"SAR_volcano_iwaki_2008.06.23-2010.05.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwaki_2008062320100514"},
							{title:"2008.06.23-2009.06.26",type:"map",key:"SAR_volcano_iwaki_2008.06.23-2009.06.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwaki_2008062320090626"},
							{title:"2007.06.21-2008.06.23",type:"map",key:"SAR_volcano_iwaki_2007.06.21-2008.06.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwaki_2007062120080623"},
							{title:"2007.12.22-2008.03.23",type:"map",key:"SAR_volcano_iwaki_2007.12.22-2008.03.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwaki_2007122220080323"},
							{title:"2007.06.21-2007.09.21",type:"map",key:"SAR_volcano_iwaki_2007.06.21-2007.09.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwaki_2007062120070921"}
						]
					},
					{
						title:"岩手山/秋田駒ヶ岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.06.06-2010.10.22",type:"map",key:"SAR_volcano_iwate_2010.06.06-2010.10.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwate_2010060620101022"},
							{title:"2007.10.14-2010.07.22",type:"map",key:"SAR_volcano_iwate_2007.10.14-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwate_2007101420100722"},
							{title:"2007.10.14-2010.06.06",type:"map",key:"SAR_volcano_iwate_2007.10.14-2010.06.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwate_2007101420100606"},
							{title:"2009.06.03-2009.09.03",type:"map",key:"SAR_volcano_iwate_2009.06.03-2009.09.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwate_2009060320090903"},
							{title:"2008.07.16-2009.09.03",type:"map",key:"SAR_volcano_iwate_2008.07.16-2009.09.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwate_2008071620090903"},
							{title:"2008.06.23-2009.06.26",type:"map",key:"SAR_volcano_iwate_2008.06.23-2009.06.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwate_2008062320090626"},
							{title:"2007.09.21-2008.06.23",type:"map",key:"SAR_volcano_iwate_2007.09.21-2008.06.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwate_2007092120080623"}
						]
					},
					{
						title:"栗駒山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.06.06-2010.10.22",type:"map",key:"SAR_volcano_kurikoma_2010.06.06-2010.10.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2010060620101022"},
							{title:"2010.06.06-2010.07.22",type:"map",key:"SAR_volcano_kurikoma_2010.06.06-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2010060620100722"},
							{title:"2009.06.03-2009.10.19",type:"map",key:"SAR_volcano_kurikoma_2009.06.03-2009.10.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2009060320091019"},
							{title:"2009.06.26-2009.09.26",type:"map",key:"SAR_volcano_kurikoma_2009.06.26-2009.09.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2009062620090926"},
							{title:"2008.07.16-2009.07.19",type:"map",key:"SAR_volcano_kurikoma_2008.07.16-2009.07.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2008071620090719"},
							{title:"2008.06.23-2009.06.26",type:"map",key:"SAR_volcano_kurikoma_2008.06.23-2009.06.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2008062320090626"},
							{title:"2008.06.24-2008.11.09",type:"map",key:"SAR_volcano_kurikoma_2008.06.24-2008.11.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2008062420081109"},
							{title:"2008.08.31-2008.10.16",type:"map",key:"SAR_volcano_kurikoma_2008.08.31-2008.10.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2008083120081016"},
							{title:"2008.08.08-2008.09.23",type:"map",key:"SAR_volcano_kurikoma_2008.08.08-2008.09.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2008080820080923"},
							{title:"2007.06.21-2007.09.21",type:"map",key:"SAR_volcano_kurikoma_2007.06.21-2007.09.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kurikoma_2007062120070921"}
						]
					},
					{
						title:"蔵王山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_volcano_zaou_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_zaou_2008050220101108"},
							{title:"2010.07.16-2010.10.16",type:"map",key:"SAR_volcano_zaou_2010.07.16-2010.10.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_zaou_2010071620101016"},
							{title:"2008.05.02-2010.05.08",type:"map",key:"SAR_volcano_zaou_2008.05.02-2010.05.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_zaou_2008050220100508"},
							{title:"2008.07.10-2009.10.13",type:"map",key:"SAR_volcano_zaou_2008.07.10-2009.10.13",icon:false,"dataset":"dataSetOverlay_SAR_volcano_zaou_2008071020091013"},
							{title:"2007.04.30-2009.09.20",type:"map",key:"SAR_volcano_zaou_2007.04.30-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_zaou_2007043020090920"},
							{title:"2006.04.27-2007.04.30",type:"map",key:"SAR_volcano_zaou_2006.04.27-2007.04.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_zaou_2006042720070430"}
						]
					},
					{
						title:"吾妻山/安達太良山/磐梯山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_volcano_azuma_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2008050220101108"},
							{title:"2010.06.17-2010.11.02",type:"map",key:"SAR_volcano_azuma_2010.06.17-2010.11.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2010061720101102"},
							{title:"2010.06.17-2010.08.02",type:"map",key:"SAR_volcano_azuma_2010.06.17-2010.08.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2010061720100802"},
							{title:"2007.10.25-2010.06.17",type:"map",key:"SAR_volcano_azuma_2007.10.25-2010.06.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2007102520100617"},
							{title:"2009.09.20-2009.11.05",type:"map",key:"SAR_volcano_azuma_2009.09.20-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2009092020091105"},
							{title:"2007.04.30-2009.11.05",type:"map",key:"SAR_volcano_azuma_2007.04.30-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2007043020091105"},
							{title:"2007.04.30-2009.09.20",type:"map",key:"SAR_volcano_azuma_2007.04.30-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2007043020090920"},
							{title:"2009.05.05-2009.08.05",type:"map",key:"SAR_volcano_azuma_2009.05.05-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2009050520090805"},
							{title:"2008.10.27-2009.07.30",type:"map",key:"SAR_volcano_azuma_2008.10.27-2009.07.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2008102720090730"},
							{title:"2008.09.17-2008.11.02",type:"map",key:"SAR_volcano_azuma_2008.09.17-2008.11.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2008091720081102"},
							{title:"2008.09.11-2008.10.27",type:"map",key:"SAR_volcano_azuma_2008.09.11-2008.10.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2008091120081027"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_volcano_azuma_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2006091220080917"},
							{title:"2006.04.27-2007.04.30",type:"map",key:"SAR_volcano_azuma_2006.04.27-2007.04.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_azuma_2006042720070430"}
						]
					},
					{
						title:"草津白根山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.18-2010.10.09",type:"map",key:"SAR_volcano_kusatsu_2008.05.18-2010.10.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kusatsu_2008051820101009"},
							{title:"2008.06.05-2010.09.11",type:"map",key:"SAR_volcano_kusatsu_2008.06.05-2010.09.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kusatsu_2008060520100911"},
							{title:"2010.04.26-2010.07.27",type:"map",key:"SAR_volcano_kusatsu_2010.04.26-2010.07.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kusatsu_2010042620100727"},
							{title:"2007.10.19-2010.06.11",type:"map",key:"SAR_volcano_kusatsu_2007.10.19-2010.06.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kusatsu_2007101920100611"},
							{title:"2007.10.19-2010.04.26",type:"map",key:"SAR_volcano_kusatsu_2007.10.19-2010.04.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kusatsu_2007101920100426"},
							{title:"2008.07.21-2009.09.08",type:"map",key:"SAR_volcano_kusatsu_2008.07.21-2009.09.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kusatsu_2008072120090908"},
							{title:"2007.07.19-2008.07.21",type:"map",key:"SAR_volcano_kusatsu_2007.07.19-2008.07.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kusatsu_2007071920080721"}
						]
					},
					{
						title:"浅間山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.06.11-2010.10.27",type:"map",key:"SAR_volcano_asama_2010.06.11-2010.10.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2010061120101027"},
							{title:"2008.06.05-2010.09.11",type:"map",key:"SAR_volcano_asama_2008.06.05-2010.09.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2008060520100911"},
							{title:"2010.04.26-2010.07.27",type:"map",key:"SAR_volcano_asama_2010.04.26-2010.07.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2010042620100727"},
							{title:"2007.10.19-2010.06.11",type:"map",key:"SAR_volcano_asama_2007.10.19-2010.06.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2007101920100611"},
							{title:"2007.10.19-2010.04.26",type:"map",key:"SAR_volcano_asama_2007.10.19-2010.04.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2007101920100426"},
							{title:"2007.07.19-2009.10.24",type:"map",key:"SAR_volcano_asama_2007.07.19-2009.10.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2007071920091024"},
							{title:"2008.07.21-2009.09.08",type:"map",key:"SAR_volcano_asama_2008.07.21-2009.09.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2008072120090908"},
							{title:"2008.08.18-2009.07.06",type:"map",key:"SAR_volcano_asama_2008.08.18-2009.07.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2008081820090706"},
							{title:"2008.07.21-2009.04.23",type:"map",key:"SAR_volcano_asama_2008.07.21-2009.04.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2008072120090423"},
							{title:"2009.01.03-2009.02.18",type:"map",key:"SAR_volcano_asama_2009.01.03-2009.02.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2009010320090218"},
							{title:"2008.07.21-2008.10.21",type:"map",key:"SAR_volcano_asama_2008.07.21-2008.10.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2008072120081021"},
							{title:"2007.07.19-2008.07.21",type:"map",key:"SAR_volcano_asama_2007.07.19-2008.07.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2007071920080721"},
							{title:"2007.07.01-2007.11.16",type:"map",key:"SAR_volcano_asama_2007.07.01-2007.11.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_asama_2007070120071116"}
						]
					},
					{
						title:"御獄山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.06.27-2010.11.12",type:"map",key:"SAR_volcano_ontake_2010.06.27-2010.11.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ontake_2010062720101112"},
							{title:"2010.06.27-2010.08.12",type:"map",key:"SAR_volcano_ontake_2010.06.27-2010.08.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ontake_2010062720100812"},
							{title:"2007.09.19-2010.03.27",type:"map",key:"SAR_volcano_ontake_2007.09.19-2010.03.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ontake_2007091920100327"},
							{title:"2009.09.24-2009.12.25",type:"map",key:"SAR_volcano_ontake_2009.09.24-2009.12.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ontake_2009092420091225"},
							{title:"2007.09.19-2009.12.25",type:"map",key:"SAR_volcano_ontake_2007.09.19-2009.12.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ontake_2007091920091225"},
							{title:"2007.06.19-2009.09.24",type:"map",key:"SAR_volcano_ontake_2007.06.19-2009.09.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_ontake_2007061920090924"}
						]
					},
					{
						title:"富士山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.04.02-2011.01.09",type:"map",key:"SAR_volcano_fuji_2008.04.02-2011.01.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2008040220110109"},
							{title:"2008.04.02-2010.10.09",type:"map",key:"SAR_volcano_fuji_2008.04.02-2010.10.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2008040220101009"},
							{title:"2008.06.05-2010.09.11",type:"map",key:"SAR_volcano_fuji_2008.06.05-2010.09.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2008060520100911"},
							{title:"2008.05.18-2010.08.24",type:"map",key:"SAR_volcano_fuji_2008.05.18-2010.08.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2008051820100824"},
							{title:"2007.10.19-2010.06.11",type:"map",key:"SAR_volcano_fuji_2007.10.19-2010.06.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2007101920100611"},
							{title:"2009.09.08-2009.10.24",type:"map",key:"SAR_volcano_fuji_2009.09.08-2009.10.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2009090820091024"},
							{title:"2008.07.21-2009.09.08",type:"map",key:"SAR_volcano_fuji_2008.07.21-2009.09.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2008072120090908"},
							{title:"2008.08.18-2009.07.06",type:"map",key:"SAR_volcano_fuji_2008.08.18-2009.07.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2008081820090706"},
							{title:"2006.12.29-2008.11.18",type:"map",key:"SAR_volcano_fuji_2006.12.29-2008.11.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2006122920081118"},
							{title:"2008.09.05-2008.10.21",type:"map",key:"SAR_volcano_fuji_2008.09.05-2008.10.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_fuji_2008090520081021"}
						]
					},
					{
						title:"箱根山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.08.07-2010.12.23",type:"map",key:"SAR_volcano_hakone_2010.08.07-2010.12.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2010080720101223"},
							{title:"2010.02.04-2010.08.07",type:"map",key:"SAR_volcano_hakone_2010.02.04-2010.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2010020420100807"},
							{title:"2010.03.22-2010.05.07",type:"map",key:"SAR_volcano_hakone_2010.03.22-2010.05.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2010032220100507"},
							{title:"2007.10.30-2010.05.07",type:"map",key:"SAR_volcano_hakone_2007.10.30-2010.05.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2007103020100507"},
							{title:"2010.02.04-2010.03.22",type:"map",key:"SAR_volcano_hakone_2010.02.04-2010.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2010020420100322"},
							{title:"2007.12.15-2010.02.04",type:"map",key:"SAR_volcano_hakone_2007.12.15-2010.02.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2007121520100204"},
							{title:"2007.07.30-2009.12.20",type:"map",key:"SAR_volcano_hakone_2007.07.30-2009.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2007073020091220"},
							{title:"2009.05.22-2009.11.22",type:"map",key:"SAR_volcano_hakone_2009.05.22-2009.11.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2009052220091122"},
							{title:"2006.12.30-2009.11.22",type:"map",key:"SAR_volcano_hakone_2006.12.30-2009.11.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2006123020091122"},
							{title:"2009.02.01-2009.08.04",type:"map",key:"SAR_volcano_hakone_2009.02.01-2009.08.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2009020120090804"},
							{title:"2006.12.30-2009.05.22",type:"map",key:"SAR_volcano_hakone_2006.12.30-2009.05.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2006123020090522"},
							{title:"2006.12.30-2008.01.02",type:"map",key:"SAR_volcano_hakone_2006.12.30-2008.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_hakone_2006123020080102"}
						]
					},
					{
						title:"伊豆東部火山群",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.08.07-2010.12.23",type:"map",key:"SAR_volcano_izutoubu_2010.08.07-2010.12.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2010080720101223"},
							{title:"2008.01.02-2010.08.25",type:"map",key:"SAR_volcano_izutoubu_2008.01.02-2010.08.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2008010220100825"},
							{title:"2010.02.04-2010.08.07",type:"map",key:"SAR_volcano_izutoubu_2010.02.04-2010.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2010020420100807"},
							{title:"2007.12.15-2010.02.04",type:"map",key:"SAR_volcano_izutoubu_2007.12.15-2010.02.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2007121520100204"},
							{title:"2009.11.05-2009.12.21",type:"map",key:"SAR_volcano_izutoubu_2009.11.05-2009.12.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2009110520091221"},
							{title:"2009.06.19-2009.12.20",type:"map",key:"SAR_volcano_izutoubu_2009.06.19-2009.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2009061920091220"},
							{title:"2007.07.30-2009.12.20",type:"map",key:"SAR_volcano_izutoubu_2007.07.30-2009.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2007073020091220"},
							{title:"2009.05.22-2009.11.22",type:"map",key:"SAR_volcano_izutoubu_2009.05.22-2009.11.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2009052220091122"},
							{title:"2006.12.30-2009.11.22",type:"map",key:"SAR_volcano_izutoubu_2006.12.30-2009.11.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2006123020091122"},
							{title:"2009.02.01-2009.08.04",type:"map",key:"SAR_volcano_izutoubu_2009.02.01-2009.08.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2009020120090804"},
							{title:"2006.12.30-2009.05.22",type:"map",key:"SAR_volcano_izutoubu_2006.12.30-2009.05.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2006123020090522"},
							{title:"2006.07.27-2008.09.16",type:"map",key:"SAR_volcano_izutoubu_2006.07.27-2008.09.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2006072720080916"},
							{title:"2006.12.30-2008.01.02",type:"map",key:"SAR_volcano_izutoubu_2006.12.30-2008.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izutoubu_2006123020080102"}
						]
					},
					{
						title:"伊豆大島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.11.08-2011.02.08",type:"map",key:"SAR_volcano_izuoshima_2010.11.08-2011.02.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2010110820110208"},
							{title:"2010.12.23-2011.02.07",type:"map",key:"SAR_volcano_izuoshima_2010.12.23-2011.02.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2010122320110207"},
							{title:"2008.05.01-2011.02.07",type:"map",key:"SAR_volcano_izuoshima_2008.05.01-2011.02.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008050120110207"},
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_volcano_izuoshima_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008050220101108"},
							{title:"2008.05.02-2010.08.08",type:"map",key:"SAR_volcano_izuoshima_2008.05.02-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008050220100808"},
							{title:"2010.03.22-2010.08.07",type:"map",key:"SAR_volcano_izuoshima_2010.03.22-2010.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2010032220100807"},
							{title:"2008.01.31-2010.03.23",type:"map",key:"SAR_volcano_izuoshima_2008.01.31-2010.03.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008013120100323"},
							{title:"2010.02.04-2010.03.22",type:"map",key:"SAR_volcano_izuoshima_2010.02.04-2010.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2010020420100322"},
							{title:"2009.08.05-2009.12.21",type:"map",key:"SAR_volcano_izuoshima_2009.08.05-2009.12.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2009080520091221"},
							{title:"2009.06.19-2009.12.20",type:"map",key:"SAR_volcano_izuoshima_2009.06.19-2009.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2009061920091220"},
							{title:"2009.09.20-2009.11.05",type:"map",key:"SAR_volcano_izuoshima_2009.09.20-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2009092020091105"},
							{title:"2009.05.05-2009.08.05",type:"map",key:"SAR_volcano_izuoshima_2009.05.05-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2009050520090805"},
							{title:"2007.01.28-2009.08.05",type:"map",key:"SAR_volcano_izuoshima_2007.01.28-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2007012820090805"},
							{title:"2009.02.01-2009.08.04",type:"map",key:"SAR_volcano_izuoshima_2009.02.01-2009.08.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2009020120090804"},
							{title:"2008.12.18-2009.02.02",type:"map",key:"SAR_volcano_izuoshima_2008.12.18-2009.02.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008121820090202"},
							{title:"2008.12.17-2009.02.01",type:"map",key:"SAR_volcano_izuoshima_2008.12.17-2009.02.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008121720090201"},
							{title:"2008.09.17-2008.12.18",type:"map",key:"SAR_volcano_izuoshima_2008.09.17-2008.12.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008091720081218"},
							{title:"2008.09.16-2008.12.17",type:"map",key:"SAR_volcano_izuoshima_2008.09.16-2008.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008091620081217"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_volcano_izuoshima_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2006091220080917"},
							{title:"2006.07.27-2008.09.16",type:"map",key:"SAR_volcano_izuoshima_2006.07.27-2008.09.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2006072720080916"},
							{title:"2008.05.21-2008.07.06",type:"map",key:"SAR_volcano_izuoshima_2008.05.21-2008.07.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008052120080706"},
							{title:"2008.01.30-2008.05.01",type:"map",key:"SAR_volcano_izuoshima_2008.01.30-2008.05.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008013020080501"},
							{title:"2008.01.30-2008.03.16",type:"map",key:"SAR_volcano_izuoshima_2008.01.30-2008.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2008013020080316"},
							{title:"2007.01.28-2008.01.31",type:"map",key:"SAR_volcano_izuoshima_2007.01.28-2008.01.31",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2007012820080131"},
							{title:"2006.09.11-2007.06.14",type:"map",key:"SAR_volcano_izuoshima_2006.09.11-2007.06.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_izuoshima_2006091120070614"}
						]
					},
					{
						title:"新島/神津島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.11.08-2011.02.08",type:"map",key:"SAR_volcano_nijima_2010.11.08-2011.02.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2010110820110208"},
							{title:"2008.05.02-2011.02.08",type:"map",key:"SAR_volcano_nijima_2008.05.02-2011.02.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2008050220110208"},
							{title:"2010.12.23-2011.02.07",type:"map",key:"SAR_volcano_nijima_2010.12.23-2011.02.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2010122320110207"},
							{title:"2008.05.02-2010.12.24",type:"map",key:"SAR_volcano_nijima_2008.05.02-2010.12.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2008050220101224"},
							{title:"2009.12.21-2010.08.08",type:"map",key:"SAR_volcano_nijima_2009.12.21-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2009122120100808"},
							{title:"2010.03.22-2010.08.07",type:"map",key:"SAR_volcano_nijima_2010.03.22-2010.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2010032220100807"},
							{title:"2008.01.30-2010.08.07",type:"map",key:"SAR_volcano_nijima_2008.01.30-2010.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2008013020100807"},
							{title:"2010.03.22-2010.05.07",type:"map",key:"SAR_volcano_nijima_2010.03.22-2010.05.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2010032220100507"},
							{title:"2009.12.21-2010.03.23",type:"map",key:"SAR_volcano_nijima_2009.12.21-2010.03.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2009122120100323"},
							{title:"2007.10.30-2010.03.22",type:"map",key:"SAR_volcano_nijima_2007.10.30-2010.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2007103020100322"},
							{title:"2009.08.05-2009.12.21",type:"map",key:"SAR_volcano_nijima_2009.08.05-2009.12.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2009080520091221"},
							{title:"2009.06.19-2009.12.20",type:"map",key:"SAR_volcano_nijima_2009.06.19-2009.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2009061920091220"},
							{title:"2007.01.28-2009.08.05",type:"map",key:"SAR_volcano_nijima_2007.01.28-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2007012820090805"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_volcano_nijima_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2006091220080917"},
							{title:"2006.09.11-2007.06.14",type:"map",key:"SAR_volcano_nijima_2006.09.11-2007.06.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nijima_2006091120070614"}
						]
					},
					{
						title:"三宅島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.08.07-2010.12.23",type:"map",key:"SAR_volcano_miyake_2010.08.07-2010.12.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2010080720101223"},
							{title:"2010.03.22-2010.08.07",type:"map",key:"SAR_volcano_miyake_2010.03.22-2010.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2010032220100807"},
							{title:"2010.03.22-2010.05.07",type:"map",key:"SAR_volcano_miyake_2010.03.22-2010.05.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2010032220100507"},
							{title:"2010.02.04-2010.03.22",type:"map",key:"SAR_volcano_miyake_2010.02.04-2010.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2010020420100322"},
							{title:"2009.12.21-2010.03.23",type:"map",key:"SAR_volcano_miyake_2009.12.21-2010.03.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2009122120100323"},
							{title:"2009.08.05-2009.12.21",type:"map",key:"SAR_volcano_miyake_2009.08.05-2009.12.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2009080520091221"},
							{title:"2009.06.19-2009.12.20",type:"map",key:"SAR_volcano_miyake_2009.06.19-2009.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2009061920091220"},
							{title:"2009.09.20-2009.11.05",type:"map",key:"SAR_volcano_miyake_2009.09.20-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2009092020091105"},
							{title:"2009.05.05-2009.08.05",type:"map",key:"SAR_volcano_miyake_2009.05.05-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2009050520090805"},
							{title:"2007.01.28-2009.08.05",type:"map",key:"SAR_volcano_miyake_2007.01.28-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007012820090805"},
							{title:"2009.02.01-2009.08.04",type:"map",key:"SAR_volcano_miyake_2009.02.01-2009.08.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2009020120090804"},
							{title:"2008.12.18-2009.02.02",type:"map",key:"SAR_volcano_miyake_2008.12.18-2009.02.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008121820090202"},
							{title:"2008.12.17-2009.02.01",type:"map",key:"SAR_volcano_miyake_2008.12.17-2009.02.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008121720090201"},
							{title:"2008.07.16-2009.01.16",type:"map",key:"SAR_volcano_miyake_2008.07.16-2009.01.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008071620090116"},
							{title:"2008.09.17-2008.12.18",type:"map",key:"SAR_volcano_miyake_2008.09.17-2008.12.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008091720081218"},
							{title:"2008.09.16-2008.12.17",type:"map",key:"SAR_volcano_miyake_2008.09.16-2008.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008091620081217"},
							{title:"2008.08.31-2008.10.16",type:"map",key:"SAR_volcano_miyake_2008.08.31-2008.10.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008083120081016"},
							{title:"2008.05.31-2008.07.16",type:"map",key:"SAR_volcano_miyake_2008.05.31-2008.07.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008053120080716"},
							{title:"2008.01.30-2008.05.01",type:"map",key:"SAR_volcano_miyake_2008.01.30-2008.05.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008013020080501"},
							{title:"2008.01.14-2008.04.15",type:"map",key:"SAR_volcano_miyake_2008.01.14-2008.04.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008011420080415"},
							{title:"2008.01.30-2008.03.16",type:"map",key:"SAR_volcano_miyake_2008.01.30-2008.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2008013020080316"},
							{title:"2007.10.30-2008.03.16",type:"map",key:"SAR_volcano_miyake_2007.10.30-2008.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007103020080316"},
							{title:"2007.08.29-2008.01.14",type:"map",key:"SAR_volcano_miyake_2007.08.29-2008.01.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007082920080114"},
							{title:"2007.01.11-2008.01.14",type:"map",key:"SAR_volcano_miyake_2007.01.11-2008.01.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007011120080114"},
							{title:"2006.09.11-2007.12.15",type:"map",key:"SAR_volcano_miyake_2006.09.11-2007.12.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2006091120071215"},
							{title:"2007.09.14-2007.10.30",type:"map",key:"SAR_volcano_miyake_2007.09.14-2007.10.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007091420071030"},
							{title:"2007.07.30-2007.09.14",type:"map",key:"SAR_volcano_miyake_2007.07.30-2007.09.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007073020070914"},
							{title:"2007.07.14-2007.08.29",type:"map",key:"SAR_volcano_miyake_2007.07.14-2007.08.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007071420070829"},
							{title:"2007.06.14-2007.07.30",type:"map",key:"SAR_volcano_miyake_2007.06.14-2007.07.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007061420070730"},
							{title:"2007.02.26-2007.07.14",type:"map",key:"SAR_volcano_miyake_2007.02.26-2007.07.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2007022620070714"},
							{title:"2006.09.11-2007.06.14",type:"map",key:"SAR_volcano_miyake_2006.09.11-2007.06.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2006091120070614"},
							{title:"2006.09.12-2007.01.28",type:"map",key:"SAR_volcano_miyake_2006.09.12-2007.01.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2006091220070128"},
							{title:"2006.04.27-2007.01.28",type:"map",key:"SAR_volcano_miyake_2006.04.27-2007.01.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2006042720070128"},
							{title:"2006.06.12-2006.09.12",type:"map",key:"SAR_volcano_miyake_2006.06.12-2006.09.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2006061220060912"},
							{title:"2006.04.27-2006.06.12",type:"map",key:"SAR_volcano_miyake_2006.04.27-2006.06.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_miyake_2006042720060612"}
						]
					},
					{
						title:"硫黄島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2011.02.27-2011.04.14",type:"map",key:"SAR_volcano_iwo_2011.02.27-2011.04.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2011022720110414"},
							{title:"2011.02.10-2011.03.28",type:"map",key:"SAR_volcano_iwo_2011.02.10-2011.03.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2011021020110328"},
							{title:"2011.01.12-2011.02.27",type:"map",key:"SAR_volcano_iwo_2011.01.12-2011.02.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2011011220110227"},
							{title:"2010.11.10-2011.02.10",type:"map",key:"SAR_volcano_iwo_2010.11.10-2011.02.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010111020110210"},
							{title:"2010.11.27-2011.01.12",type:"map",key:"SAR_volcano_iwo_2010.11.27-2011.01.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010112720110112"},
							{title:"2010.08.27-2011.01.12",type:"map",key:"SAR_volcano_iwo_2010.08.27-2011.01.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010082720110112"},
							{title:"2010.08.07-2010.12.23",type:"map",key:"SAR_volcano_iwo_2010.08.07-2010.12.23",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010080720101223"},
							{title:"2010.09.25-2010.11.10",type:"map",key:"SAR_volcano_iwo_2010.09.25-2010.11.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010092520101110"},
							{title:"2010.08.10-2010.09.25",type:"map",key:"SAR_volcano_iwo_2010.08.10-2010.09.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010081020100925"},
							{title:"2010.06.25-2010.08.10",type:"map",key:"SAR_volcano_iwo_2010.06.25-2010.08.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010062520100810"},
							{title:"2010.05.07-2010.08.07",type:"map",key:"SAR_volcano_iwo_2010.05.07-2010.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010050720100807"},
							{title:"2010.05.10-2010.06.25",type:"map",key:"SAR_volcano_iwo_2010.05.10-2010.06.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010051020100625"},
							{title:"2010.04.11-2010.05.27",type:"map",key:"SAR_volcano_iwo_2010.04.11-2010.05.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010041120100527"},
							{title:"2010.03.25-2010.05.10",type:"map",key:"SAR_volcano_iwo_2010.03.25-2010.05.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010032520100510"},
							{title:"2010.03.22-2010.05.07",type:"map",key:"SAR_volcano_iwo_2010.03.22-2010.05.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010032220100507"},
							{title:"2009.11.24-2010.04.11",type:"map",key:"SAR_volcano_iwo_2009.11.24-2010.04.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009112420100411"},
							{title:"2010.02.07-2010.03.25",type:"map",key:"SAR_volcano_iwo_2010.02.07-2010.03.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010020720100325"},
							{title:"2010.02.04-2010.03.22",type:"map",key:"SAR_volcano_iwo_2010.02.04-2010.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2010020420100322"},
							{title:"2009.11.07-2010.02.07",type:"map",key:"SAR_volcano_iwo_2009.11.07-2010.02.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009110720100207"},
							{title:"2009.12.20-2010.02.04",type:"map",key:"SAR_volcano_iwo_2009.12.20-2010.02.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009122020100204"},
							{title:"2009.08.04-2009.12.20",type:"map",key:"SAR_volcano_iwo_2009.08.04-2009.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009080420091220"},
							{title:"2009.10.09-2009.11.24",type:"map",key:"SAR_volcano_iwo_2009.10.09-2009.11.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009100920091124"},
							{title:"2009.08.24-2009.11.24",type:"map",key:"SAR_volcano_iwo_2009.08.24-2009.11.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009082420091124"},
							{title:"2009.09.22-2009.11.07",type:"map",key:"SAR_volcano_iwo_2009.09.22-2009.11.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009092220091107"},
							{title:"2009.08.07-2009.09.22",type:"map",key:"SAR_volcano_iwo_2009.08.07-2009.09.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009080720090922"},
							{title:"2009.06.22-2009.08.07",type:"map",key:"SAR_volcano_iwo_2009.06.22-2009.08.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009062220090807"},
							{title:"2009.05.07-2009.06.22",type:"map",key:"SAR_volcano_iwo_2009.05.07-2009.06.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009050720090622"},
							{title:"2009.02.01-2009.06.19",type:"map",key:"SAR_volcano_iwo_2009.02.01-2009.06.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009020120090619"},
							{title:"2009.04.08-2009.05.24",type:"map",key:"SAR_volcano_iwo_2009.04.08-2009.05.24",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009040820090524"},
							{title:"2009.02.21-2009.04.08",type:"map",key:"SAR_volcano_iwo_2009.02.21-2009.04.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2009022120090408"},
							{title:"2008.11.21-2009.02.21",type:"map",key:"SAR_volcano_iwo_2008.11.21-2009.02.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008112120090221"},
							{title:"2008.12.20-2009.02.04",type:"map",key:"SAR_volcano_iwo_2008.12.20-2009.02.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008122020090204"},
							{title:"2008.12.17-2009.02.01",type:"map",key:"SAR_volcano_iwo_2008.12.17-2009.02.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008121720090201"},
							{title:"2008.11.04-2008.12.20",type:"map",key:"SAR_volcano_iwo_2008.11.04-2008.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008110420081220"},
							{title:"2008.09.16-2008.12.17",type:"map",key:"SAR_volcano_iwo_2008.09.16-2008.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008091620081217"},
							{title:"2008.10.06-2008.11.21",type:"map",key:"SAR_volcano_iwo_2008.10.06-2008.11.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008100620081121"},
							{title:"2008.07.06-2008.10.06",type:"map",key:"SAR_volcano_iwo_2008.07.06-2008.10.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008070620081006"},
							{title:"2008.05.21-2008.07.06",type:"map",key:"SAR_volcano_iwo_2008.05.21-2008.07.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008052120080706"},
							{title:"2007.11.19-2008.05.21",type:"map",key:"SAR_volcano_iwo_2007.11.19-2008.05.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2007111920080521"},
							{title:"2008.03.19-2008.05.04",type:"map",key:"SAR_volcano_iwo_2008.03.19-2008.05.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008031920080504"},
							{title:"2008.03.16-2008.05.01",type:"map",key:"SAR_volcano_iwo_2008.03.16-2008.05.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008031620080501"},
							{title:"2008.01.30-2008.03.16",type:"map",key:"SAR_volcano_iwo_2008.01.30-2008.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2008013020080316"},
							{title:"2007.10.04-2007.11.19",type:"map",key:"SAR_volcano_iwo_2007.10.04-2007.11.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2007100420071119"},
							{title:"2007.02.16-2007.04.03",type:"map",key:"SAR_volcano_iwo_2007.02.16-2007.04.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2007021620070403"},
							{title:"2006.11.01-2007.02.01",type:"map",key:"SAR_volcano_iwo_2006.11.01-2007.02.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2006110120070201"},
							{title:"2006.11.11-2006.12.27",type:"map",key:"SAR_volcano_iwo_2006.11.11-2006.12.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_iwo_2006111120061227"}
						]
					},
					{
						title:"鶴見岳・伽藍岳/九重山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.10-2010.11.16",type:"map",key:"SAR_volcano_kujyu_2008.05.10-2010.11.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2008051020101116"},
							{title:"2010.04.16-2010.10.17",type:"map",key:"SAR_volcano_kujyu_2010.04.16-2010.10.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2010041620101017"},
							{title:"2008.02.24-2010.10.17",type:"map",key:"SAR_volcano_kujyu_2008.02.24-2010.10.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2008022420101017"},
							{title:"2009.11.29-2010.04.16",type:"map",key:"SAR_volcano_kujyu_2009.11.29-2010.04.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2009112920100416"},
							{title:"2007.11.24-2010.03.01",type:"map",key:"SAR_volcano_kujyu_2007.11.24-2010.03.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2007112420100301"},
							{title:"2007.11.08-2009.12.29",type:"map",key:"SAR_volcano_kujyu_2007.11.08-2009.12.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2007110820091229"},
							{title:"2009.07.14-2009.11.29",type:"map",key:"SAR_volcano_kujyu_2009.07.14-2009.11.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2009071420091129"},
							{title:"2007.11.24-2009.11.29",type:"map",key:"SAR_volcano_kujyu_2007.11.24-2009.11.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2007112420091129"},
							{title:"2008.11.10-2009.03.28",type:"map",key:"SAR_volcano_kujyu_2008.11.10-2009.03.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2008111020090328"},
							{title:"2007.01.06-2008.11.26",type:"map",key:"SAR_volcano_kujyu_2007.01.06-2008.11.26",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2007010620081126"},
							{title:"2007.02.05-2008.11.10",type:"map",key:"SAR_volcano_kujyu_2007.02.05-2008.11.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2007020520081110"},
							{title:"2007.02.05-2007.11.08",type:"map",key:"SAR_volcano_kujyu_2007.02.05-2007.11.08",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kujyu_2007020520071108"}
						]
					},
					{
						title:"阿蘇山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2011.03.05-2011.04.20",type:"map",key:"SAR_volcano_aso_2011.03.05-2011.04.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2011030520110420"},
							{title:"2008.05.27-2011.03.05",type:"map",key:"SAR_volcano_aso_2008.05.27-2011.03.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2008052720110305"},
							{title:"2008.01.26-2010.12.19",type:"map",key:"SAR_volcano_aso_2008.01.26-2010.12.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2008012620101219"},
							{title:"2008.05.27-2010.12.03",type:"map",key:"SAR_volcano_aso_2008.05.27-2010.12.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2008052720101203"},
							{title:"2010.05.03-2010.09.18",type:"map",key:"SAR_volcano_aso_2010.05.03-2010.09.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2010050320100918"},
							{title:"2008.01.26-2010.09.18",type:"map",key:"SAR_volcano_aso_2008.01.26-2010.09.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2008012620100918"},
							{title:"2010.03.18-2010.05.03",type:"map",key:"SAR_volcano_aso_2010.03.18-2010.05.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2010031820100503"},
							{title:"2009.12.16-2010.05.03",type:"map",key:"SAR_volcano_aso_2009.12.16-2010.05.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2009121620100503"},
							{title:"2010.03.02-2010.04.17",type:"map",key:"SAR_volcano_aso_2010.03.02-2010.04.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2010030220100417"},
							{title:"2010.01.31-2010.03.18",type:"map",key:"SAR_volcano_aso_2010.01.31-2010.03.18",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2010013120100318"},
							{title:"2007.10.26-2010.01.31",type:"map",key:"SAR_volcano_aso_2007.10.26-2010.01.31",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2007102620100131"},
							{title:"2009.11.30-2010.01.15",type:"map",key:"SAR_volcano_aso_2009.11.30-2010.01.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2009113020100115"},
							{title:"2007.10.26-2009.12.16",type:"map",key:"SAR_volcano_aso_2007.10.26-2009.12.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2007102620091216"},
							{title:"2007.11.25-2009.11.30",type:"map",key:"SAR_volcano_aso_2007.11.25-2009.11.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2007112520091130"},
							{title:"2009.05.30-2009.10.15",type:"map",key:"SAR_volcano_aso_2009.05.30-2009.10.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2009053020091015"},
							{title:"2008.07.12-2009.10.15",type:"map",key:"SAR_volcano_aso_2008.07.12-2009.10.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2008071220091015"},
							{title:"2009.06.15-2009.09.15",type:"map",key:"SAR_volcano_aso_2009.06.15-2009.09.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2009061520090915"},
							{title:"2007.07.26-2009.09.15",type:"map",key:"SAR_volcano_aso_2007.07.26-2009.09.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2007072620090915"},
							{title:"2007.07.26-2008.07.28",type:"map",key:"SAR_volcano_aso_2007.07.26-2008.07.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2007072620080728"},
							{title:"2008.01.10-2008.05.27",type:"map",key:"SAR_volcano_aso_2008.01.10-2008.05.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2008011020080527"},
							{title:"2007.01.07-2008.01.10",type:"map",key:"SAR_volcano_aso_2007.01.07-2008.01.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_aso_2007010720080110"}
						]
					},
					{
						title:"雲仙岳",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.08.20-2011.04.07",type:"map",key:"SAR_volcano_unzen_2010.08.20-2011.04.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010082020110407"},
							{title:"2010.08.04-2011.03.22",type:"map",key:"SAR_volcano_unzen_2010.08.04-2011.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010080420110322"},
							{title:"2010.06.19-2011.03.22",type:"map",key:"SAR_volcano_unzen_2010.06.19-2011.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010061920110322"},
							{title:"2010.05.04-2011.03.22",type:"map",key:"SAR_volcano_unzen_2010.05.04-2011.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010050420110322"},
							{title:"2010.07.22-2011.03.09",type:"map",key:"SAR_volcano_unzen_2010.07.22-2011.03.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010072220110309"},
							{title:"2010.08.20-2011.02.20",type:"map",key:"SAR_volcano_unzen_2010.08.20-2011.02.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010082020110220"},
							{title:"2010.07.05-2011.02.20",type:"map",key:"SAR_volcano_unzen_2010.07.05-2011.02.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010070520110220"},
							{title:"2010.11.04-2010.12.20",type:"map",key:"SAR_volcano_unzen_2010.11.04-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010110420101220"},
							{title:"2010.07.05-2010.11.20",type:"map",key:"SAR_volcano_unzen_2010.07.05-2010.11.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010070520101120"},
							{title:"2010.04.21-2010.07.22",type:"map",key:"SAR_volcano_unzen_2010.04.21-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010042120100722"},
							{title:"2008.01.27-2010.06.19",type:"map",key:"SAR_volcano_unzen_2008.01.27-2010.06.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2008012720100619"},
							{title:"2010.02.17-2010.05.20",type:"map",key:"SAR_volcano_unzen_2010.02.17-2010.05.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010021720100520"},
							{title:"2008.03.29-2010.05.20",type:"map",key:"SAR_volcano_unzen_2008.03.29-2010.05.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2008032920100520"},
							{title:"2010.03.06-2010.04.21",type:"map",key:"SAR_volcano_unzen_2010.03.06-2010.04.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010030620100421"},
							{title:"2010.02.17-2010.04.04",type:"map",key:"SAR_volcano_unzen_2010.02.17-2010.04.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2010021720100404"},
							{title:"2007.12.12-2010.03.19",type:"map",key:"SAR_volcano_unzen_2007.12.12-2010.03.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007121220100319"},
							{title:"2007.12.28-2010.02.17",type:"map",key:"SAR_volcano_unzen_2007.12.28-2010.02.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007122820100217"},
							{title:"2009.12.17-2010.02.01",type:"map",key:"SAR_volcano_unzen_2009.12.17-2010.02.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2009121720100201"},
							{title:"2007.12.28-2010.01.02",type:"map",key:"SAR_volcano_unzen_2007.12.28-2010.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007122820100102"},
							{title:"2007.12.12-2009.12.17",type:"map",key:"SAR_volcano_unzen_2007.12.12-2009.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007121220091217"},
							{title:"2006.11.26-2009.09.03",type:"map",key:"SAR_volcano_unzen_2006.11.26-2009.09.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2006112620090903"},
							{title:"2007.03.11-2009.08.01",type:"map",key:"SAR_volcano_unzen_2007.03.11-2009.08.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007031120090801"},
							{title:"2006.11.26-2009.03.03",type:"map",key:"SAR_volcano_unzen_2006.11.26-2009.03.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2006112620090303"},
							{title:"2006.12.25-2009.02.14",type:"map",key:"SAR_volcano_unzen_2006.12.25-2009.02.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2006122520090214"},
							{title:"2006.12.25-2008.12.30",type:"map",key:"SAR_volcano_unzen_2006.12.25-2008.12.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2006122520081230"},
							{title:"2007.03.11-2008.12.14",type:"map",key:"SAR_volcano_unzen_2007.03.11-2008.12.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007031120081214"},
							{title:"2007.04.26-2008.04.28",type:"map",key:"SAR_volcano_unzen_2007.04.26-2008.04.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007042620080428"},
							{title:"2007.11.12-2007.12.28",type:"map",key:"SAR_volcano_unzen_2007.11.12-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007111220071228"},
							{title:"2007.08.12-2007.12.28",type:"map",key:"SAR_volcano_unzen_2007.08.12-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007081220071228"},
							{title:"2007.06.27-2007.12.28",type:"map",key:"SAR_volcano_unzen_2007.06.27-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007062720071228"},
							{title:"2007.06.11-2007.12.12",type:"map",key:"SAR_volcano_unzen_2007.06.11-2007.12.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007061120071212"},
							{title:"2007.07.27-2007.10.27",type:"map",key:"SAR_volcano_unzen_2007.07.27-2007.10.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007072720071027"},
							{title:"2007.06.11-2007.09.11",type:"map",key:"SAR_volcano_unzen_2007.06.11-2007.09.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007061120070911"},
							{title:"2007.03.11-2007.07.27",type:"map",key:"SAR_volcano_unzen_2007.03.11-2007.07.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_unzen_2007031120070727"}
						]
					},
					{
						title:"霧島山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2011.03.05-2011.04.20",type:"map",key:"SAR_volcano_kirishima_2011.03.05-2011.04.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2011030520110420"},
							{title:"2011.02.20-2011.04.07",type:"map",key:"SAR_volcano_kirishima_2011.02.20-2011.04.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2011022020110407"},
							{title:"2011.01.18-2011.03.05",type:"map",key:"SAR_volcano_kirishima_2011.01.18-2011.03.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2011011820110305"},
							{title:"2010.11.20-2011.02.20",type:"map",key:"SAR_volcano_kirishima_2010.11.20-2011.02.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2010112020110220"},
							{title:"2010.02.17-2010.11.20",type:"map",key:"SAR_volcano_kirishima_2010.02.17-2010.11.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2010021720101120"},
							{title:"2008.02.12-2010.11.20",type:"map",key:"SAR_volcano_kirishima_2008.02.12-2010.11.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008021220101120"},
							{title:"2007.11.12-2010.07.05",type:"map",key:"SAR_volcano_kirishima_2007.11.12-2010.07.05",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007111220100705"},
							{title:"2010.02.17-2010.04.04",type:"map",key:"SAR_volcano_kirishima_2010.02.17-2010.04.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2010021720100404"},
							{title:"2010.01.02-2010.04.04",type:"map",key:"SAR_volcano_kirishima_2010.01.02-2010.04.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2010010220100404"},
							{title:"2007.11.12-2010.04.04",type:"map",key:"SAR_volcano_kirishima_2007.11.12-2010.04.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007111220100404"},
							{title:"2010.01.15-2010.03.02",type:"map",key:"SAR_volcano_kirishima_2010.01.15-2010.03.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2010011520100302"},
							{title:"2007.12.28-2010.02.17",type:"map",key:"SAR_volcano_kirishima_2007.12.28-2010.02.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007122820100217"},
							{title:"2007.11.12-2010.02.17",type:"map",key:"SAR_volcano_kirishima_2007.11.12-2010.02.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007111220100217"},
							{title:"2009.11.30-2010.01.15",type:"map",key:"SAR_volcano_kirishima_2009.11.30-2010.01.15",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2009113020100115"},
							{title:"2009.02.14-2010.01.02",type:"map",key:"SAR_volcano_kirishima_2009.02.14-2010.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2009021420100102"},
							{title:"2007.12.28-2010.01.02",type:"map",key:"SAR_volcano_kirishima_2007.12.28-2010.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007122820100102"},
							{title:"2007.11.25-2009.11.30",type:"map",key:"SAR_volcano_kirishima_2007.11.25-2009.11.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007112520091130"},
							{title:"2006.09.24-2009.08.17",type:"map",key:"SAR_volcano_kirishima_2006.09.24-2009.08.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2006092420090817"},
							{title:"2008.07.12-2009.05.30",type:"map",key:"SAR_volcano_kirishima_2008.07.12-2009.05.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008071220090530"},
							{title:"2008.07.12-2009.04.14",type:"map",key:"SAR_volcano_kirishima_2008.07.12-2009.04.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008071220090414"},
							{title:"2008.06.29-2009.02.14",type:"map",key:"SAR_volcano_kirishima_2008.06.29-2009.02.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008062920090214"},
							{title:"2006.12.25-2009.02.14",type:"map",key:"SAR_volcano_kirishima_2006.12.25-2009.02.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2006122520090214"},
							{title:"2006.12.25-2008.12.30",type:"map",key:"SAR_volcano_kirishima_2006.12.25-2008.12.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2006122520081230"},
							{title:"2008.04.11-2008.05.27",type:"map",key:"SAR_volcano_kirishima_2008.04.11-2008.05.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008041120080527"},
							{title:"2008.02.25-2008.05.27",type:"map",key:"SAR_volcano_kirishima_2008.02.25-2008.05.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008022520080527"},
							{title:"2008.03.29-2008.05.14",type:"map",key:"SAR_volcano_kirishima_2008.03.29-2008.05.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008032920080514"},
							{title:"2008.02.25-2008.04.11",type:"map",key:"SAR_volcano_kirishima_2008.02.25-2008.04.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008022520080411"},
							{title:"2008.01.10-2008.04.11",type:"map",key:"SAR_volcano_kirishima_2008.01.10-2008.04.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2008011020080411"},
							{title:"2007.12.28-2008.03.29",type:"map",key:"SAR_volcano_kirishima_2007.12.28-2008.03.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007122820080329"},
							{title:"2007.12.28-2008.02.12",type:"map",key:"SAR_volcano_kirishima_2007.12.28-2008.02.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007122820080212"},
							{title:"2007.08.12-2007.12.28",type:"map",key:"SAR_volcano_kirishima_2007.08.12-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007081220071228"},
							{title:"2007.01.07-2007.11.25",type:"map",key:"SAR_volcano_kirishima_2007.01.07-2007.11.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2007010720071125"},
							{title:"2006.09.24-2006.12.25",type:"map",key:"SAR_volcano_kirishima_2006.09.24-2006.12.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kirishima_2006092420061225"}
						]
					},
					{
						title:"桜島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2011.03.05-2011.04.20",type:"map",key:"SAR_volcano_sakurajima_2011.03.05-2011.04.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2011030520110420"},
							{title:"2011.02.20-2011.04.07",type:"map",key:"SAR_volcano_sakurajima_2011.02.20-2011.04.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2011022020110407"},
							{title:"2008.05.14-2011.04.07",type:"map",key:"SAR_volcano_sakurajima_2008.05.14-2011.04.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008051420110407"},
							{title:"2010.02.17-2010.11.20",type:"map",key:"SAR_volcano_sakurajima_2010.02.17-2010.11.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2010021720101120"},
							{title:"2008.02.12-2010.11.20",type:"map",key:"SAR_volcano_sakurajima_2008.02.12-2010.11.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008021220101120"},
							{title:"2010.05.20-2010.08.20",type:"map",key:"SAR_volcano_sakurajima_2010.05.20-2010.08.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2010052020100820"},
							{title:"2010.04.04-2010.08.20",type:"map",key:"SAR_volcano_sakurajima_2010.04.04-2010.08.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2010040420100820"},
							{title:"2010.02.17-2010.04.04",type:"map",key:"SAR_volcano_sakurajima_2010.02.17-2010.04.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2010021720100404"},
							{title:"2010.01.02-2010.04.04",type:"map",key:"SAR_volcano_sakurajima_2010.01.02-2010.04.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2010010220100404"},
							{title:"2009.11.30-2010.03.02",type:"map",key:"SAR_volcano_sakurajima_2009.11.30-2010.03.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2009113020100302"},
							{title:"2009.10.15-2010.03.02",type:"map",key:"SAR_volcano_sakurajima_2009.10.15-2010.03.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2009101520100302"},
							{title:"2007.12.28-2010.02.17",type:"map",key:"SAR_volcano_sakurajima_2007.12.28-2010.02.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007122820100217"},
							{title:"2007.11.12-2010.02.17",type:"map",key:"SAR_volcano_sakurajima_2007.11.12-2010.02.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007111220100217"},
							{title:"2009.02.14-2010.01.02",type:"map",key:"SAR_volcano_sakurajima_2009.02.14-2010.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2009021420100102"},
							{title:"2007.12.28-2010.01.02",type:"map",key:"SAR_volcano_sakurajima_2007.12.28-2010.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007122820100102"},
							{title:"2007.11.25-2009.11.30",type:"map",key:"SAR_volcano_sakurajima_2007.11.25-2009.11.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007112520091130"},
							{title:"2006.09.24-2009.08.17",type:"map",key:"SAR_volcano_sakurajima_2006.09.24-2009.08.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2006092420090817"},
							{title:"2008.07.12-2009.04.14",type:"map",key:"SAR_volcano_sakurajima_2008.07.12-2009.04.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008071220090414"},
							{title:"2006.12.25-2009.02.14",type:"map",key:"SAR_volcano_sakurajima_2006.12.25-2009.02.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2006122520090214"},
							{title:"2006.12.25-2008.12.30",type:"map",key:"SAR_volcano_sakurajima_2006.12.25-2008.12.30",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2006122520081230"},
							{title:"2007.06.27-2008.06.29",type:"map",key:"SAR_volcano_sakurajima_2007.06.27-2008.06.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007062720080629"},
							{title:"2008.02.25-2008.05.27",type:"map",key:"SAR_volcano_sakurajima_2008.02.25-2008.05.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008022520080527"},
							{title:"2008.03.29-2008.05.14",type:"map",key:"SAR_volcano_sakurajima_2008.03.29-2008.05.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008032920080514"},
							{title:"2008.02.25-2008.04.11",type:"map",key:"SAR_volcano_sakurajima_2008.02.25-2008.04.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008022520080411"},
							{title:"2008.01.10-2008.04.11",type:"map",key:"SAR_volcano_sakurajima_2008.01.10-2008.04.11",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008011020080411"},
							{title:"2008.02.12-2008.03.29",type:"map",key:"SAR_volcano_sakurajima_2008.02.12-2008.03.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2008021220080329"},
							{title:"2007.12.28-2008.02.12",type:"map",key:"SAR_volcano_sakurajima_2007.12.28-2008.02.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007122820080212"},
							{title:"2007.08.12-2007.12.28",type:"map",key:"SAR_volcano_sakurajima_2007.08.12-2007.12.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007081220071228"},
							{title:"2007.01.07-2007.11.25",type:"map",key:"SAR_volcano_sakurajima_2007.01.07-2007.11.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007010720071125"},
							{title:"2007.08.12-2007.11.12",type:"map",key:"SAR_volcano_sakurajima_2007.08.12-2007.11.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007081220071112"},
							{title:"2007.06.27-2007.08.12",type:"map",key:"SAR_volcano_sakurajima_2007.06.27-2007.08.12",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2007062720070812"},
							{title:"2006.09.24-2006.12.25",type:"map",key:"SAR_volcano_sakurajima_2006.09.24-2006.12.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_sakurajima_2006092420061225"}
						]
					},
					{
						title:"薩摩硫黄島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.11.04-2011.03.22",type:"map",key:"SAR_volcano_satsumaiwo_2010.11.04-2011.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010110420110322"},
							{title:"2011.01.22-2011.03.09",type:"map",key:"SAR_volcano_satsumaiwo_2011.01.22-2011.03.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2011012220110309"},
							{title:"2008.02.29-2011.01.22",type:"map",key:"SAR_volcano_satsumaiwo_2008.02.29-2011.01.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008022920110122"},
							{title:"2010.09.19-2010.12.20",type:"map",key:"SAR_volcano_satsumaiwo_2010.09.19-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010091920101220"},
							{title:"2008.04.28-2010.12.20",type:"map",key:"SAR_volcano_satsumaiwo_2008.04.28-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008042820101220"},
							{title:"2010.04.21-2010.09.06",type:"map",key:"SAR_volcano_satsumaiwo_2010.04.21-2010.09.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010042120100906"},
							{title:"2010.05.04-2010.08.04",type:"map",key:"SAR_volcano_satsumaiwo_2010.05.04-2010.08.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010050420100804"},
							{title:"2010.04.21-2010.07.22",type:"map",key:"SAR_volcano_satsumaiwo_2010.04.21-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010042120100722"},
							{title:"2009.10.19-2010.07.22",type:"map",key:"SAR_volcano_satsumaiwo_2009.10.19-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009101920100722"},
							{title:"2010.04.21-2010.06.06",type:"map",key:"SAR_volcano_satsumaiwo_2010.04.21-2010.06.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010042120100606"},
							{title:"2008.05.31-2010.06.06",type:"map",key:"SAR_volcano_satsumaiwo_2008.05.31-2010.06.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008053120100606"},
							{title:"2010.02.01-2010.05.04",type:"map",key:"SAR_volcano_satsumaiwo_2010.02.01-2010.05.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010020120100504"},
							{title:"2009.09.16-2010.05.04",type:"map",key:"SAR_volcano_satsumaiwo_2009.09.16-2010.05.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009091620100504"},
							{title:"2008.04.28-2010.05.04",type:"map",key:"SAR_volcano_satsumaiwo_2008.04.28-2010.05.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008042820100504"},
							{title:"2010.03.06-2010.04.21",type:"map",key:"SAR_volcano_satsumaiwo_2010.03.06-2010.04.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2010030620100421"},
							{title:"2009.09.16-2010.02.01",type:"map",key:"SAR_volcano_satsumaiwo_2009.09.16-2010.02.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009091620100201"},
							{title:"2009.10.19-2010.01.19",type:"map",key:"SAR_volcano_satsumaiwo_2009.10.19-2010.01.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009101920100119"},
							{title:"2009.06.16-2009.12.17",type:"map",key:"SAR_volcano_satsumaiwo_2009.06.16-2009.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009061620091217"},
							{title:"2007.10.14-2009.10.19",type:"map",key:"SAR_volcano_satsumaiwo_2007.10.14-2009.10.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2007101420091019"},
							{title:"2008.07.29-2009.09.16",type:"map",key:"SAR_volcano_satsumaiwo_2008.07.29-2009.09.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008072920090916"},
							{title:"2009.03.16-2009.08.01",type:"map",key:"SAR_volcano_satsumaiwo_2009.03.16-2009.08.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009031620090801"},
							{title:"2009.03.03-2009.07.19",type:"map",key:"SAR_volcano_satsumaiwo_2009.03.03-2009.07.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009030320090719"},
							{title:"2008.12.14-2009.03.16",type:"map",key:"SAR_volcano_satsumaiwo_2008.12.14-2009.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008121420090316"},
							{title:"2009.01.16-2009.03.03",type:"map",key:"SAR_volcano_satsumaiwo_2009.01.16-2009.03.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2009011620090303"},
							{title:"2008.10.16-2009.01.16",type:"map",key:"SAR_volcano_satsumaiwo_2008.10.16-2009.01.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008101620090116"},
							{title:"2008.09.13-2008.12.14",type:"map",key:"SAR_volcano_satsumaiwo_2008.09.13-2008.12.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2008091320081214"},
							{title:"2007.01.11-2008.10.16",type:"map",key:"SAR_volcano_satsumaiwo_2007.01.11-2008.10.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2007011120081016"},
							{title:"2007.01.11-2008.08.31",type:"map",key:"SAR_volcano_satsumaiwo_2007.01.11-2008.08.31",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2007011120080831"},
							{title:"2007.07.27-2008.07.29",type:"map",key:"SAR_volcano_satsumaiwo_2007.07.27-2008.07.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2007072720080729"},
							{title:"2007.03.11-2007.07.27",type:"map",key:"SAR_volcano_satsumaiwo_2007.03.11-2007.07.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_satsumaiwo_2007031120070727"}
						]
					},
					{
						title:"口永良部島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.11.04-2011.03.22",type:"map",key:"SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2010110420110322"},
							{title:"2011.01.22-2011.03.09",type:"map",key:"SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2011012220110309"},
							{title:"2008.02.29-2011.01.22",type:"map",key:"SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2008022920110122"},
							{title:"2010.09.19-2010.12.20",type:"map",key:"SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2010091920101220"},
							{title:"2010.04.21-2010.09.06",type:"map",key:"SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2010042120100906"},
							{title:"2010.04.21-2010.07.22",type:"map",key:"SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2010042120100722"},
							{title:"2009.10.19-2010.07.22",type:"map",key:"SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2009101920100722"},
							{title:"2010.04.21-2010.06.06",type:"map",key:"SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2010042120100606"},
							{title:"2009.10.19-2010.06.06",type:"map",key:"SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2009101920100606"},
							{title:"2010.03.06-2010.04.21",type:"map",key:"SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2010030620100421"},
							{title:"2010.01.19-2010.03.06",type:"map",key:"SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2010011920100306"},
							{title:"2009.10.19-2010.01.19",type:"map",key:"SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2009101920100119"},
							{title:"2009.06.16-2009.12.17",type:"map",key:"SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2009061620091217"},
							{title:"2007.10.14-2009.10.19",type:"map",key:"SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2007101420091019"},
							{title:"2009.03.16-2009.08.01",type:"map",key:"SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2009031620090801"},
							{title:"2009.03.03-2009.07.19",type:"map",key:"SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2009030320090719"},
							{title:"2008.12.14-2009.03.16",type:"map",key:"SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2008121420090316"},
							{title:"2009.01.16-2009.03.03",type:"map",key:"SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2009011620090303"},
							{title:"2008.10.16-2009.01.16",type:"map",key:"SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2008101620090116"},
							{title:"2008.09.13-2008.12.14",type:"map",key:"SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2008091320081214"},
							{title:"2007.01.11-2008.10.16",type:"map",key:"SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2007011120081016"},
							{title:"2007.01.11-2008.08.31",type:"map",key:"SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2007011120080831"},
							{title:"2007.07.27-2008.07.29",type:"map",key:"SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2007072720080729"},
							{title:"2007.03.11-2007.07.27",type:"map",key:"SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27",icon:false,"dataset":"dataSetOverlay_SAR_volcano_kuchinoerabu_2007031120070727"}
						]
					},
					{
						title:"中之島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.09.19-2010.12.20",type:"map",key:"SAR_volcano_nakanoshima_2010.09.19-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2010091920101220"},
							{title:"2008.04.28-2010.12.20",type:"map",key:"SAR_volcano_nakanoshima_2008.04.28-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2008042820101220"},
							{title:"2010.02.22-2010.10.10",type:"map",key:"SAR_volcano_nakanoshima_2010.02.22-2010.10.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2010022220101010"},
							{title:"2010.04.09-2010.08.25",type:"map",key:"SAR_volcano_nakanoshima_2010.04.09-2010.08.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2010040920100825"},
							{title:"2010.05.04-2010.08.04",type:"map",key:"SAR_volcano_nakanoshima_2010.05.04-2010.08.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2010050420100804"},
							{title:"2010.02.22-2010.05.25",type:"map",key:"SAR_volcano_nakanoshima_2010.02.22-2010.05.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2010022220100525"},
							{title:"2009.12.17-2010.02.01",type:"map",key:"SAR_volcano_nakanoshima_2009.12.17-2010.02.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2009121720100201"},
							{title:"2008.01.02-2010.01.07",type:"map",key:"SAR_volcano_nakanoshima_2008.01.02-2010.01.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2008010220100107"},
							{title:"2007.12.12-2009.12.17",type:"map",key:"SAR_volcano_nakanoshima_2007.12.12-2009.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2007121220091217"},
							{title:"2007.10.02-2009.10.07",type:"map",key:"SAR_volcano_nakanoshima_2007.10.02-2009.10.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2007100220091007"},
							{title:"2009.02.19-2009.08.22",type:"map",key:"SAR_volcano_nakanoshima_2009.02.19-2009.08.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2009021920090822"},
							{title:"2007.08.17-2009.08.22",type:"map",key:"SAR_volcano_nakanoshima_2007.08.17-2009.08.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2007081720090822"},
							{title:"2008.07.29-2009.08.01",type:"map",key:"SAR_volcano_nakanoshima_2008.07.29-2009.08.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2008072920090801"},
							{title:"2008.12.14-2009.03.16",type:"map",key:"SAR_volcano_nakanoshima_2008.12.14-2009.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2008121420090316"},
							{title:"2009.01.04-2009.02.19",type:"map",key:"SAR_volcano_nakanoshima_2009.01.04-2009.02.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2009010420090219"},
							{title:"2006.12.30-2009.01.04",type:"map",key:"SAR_volcano_nakanoshima_2006.12.30-2009.01.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2006123020090104"},
							{title:"2007.03.11-2008.07.29",type:"map",key:"SAR_volcano_nakanoshima_2007.03.11-2008.07.29",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2007031120080729"},
							{title:"2007.07.02-2008.07.04",type:"map",key:"SAR_volcano_nakanoshima_2007.07.02-2008.07.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2007070220080704"},
							{title:"2007.04.26-2008.04.28",type:"map",key:"SAR_volcano_nakanoshima_2007.04.26-2008.04.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2007042620080428"},
							{title:"2007.11.17-2008.01.02",type:"map",key:"SAR_volcano_nakanoshima_2007.11.17-2008.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_nakanoshima_2007111720080102"}
						]
					},
					{
						title:"諏訪之瀬島",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.11.04-2011.03.22",type:"map",key:"SAR_volcano_suwanose_2010.11.04-2011.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2010110420110322"},
							{title:"2008.04.28-2011.03.22",type:"map",key:"SAR_volcano_suwanose_2008.04.28-2011.03.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008042820110322"},
							{title:"2008.04.28-2010.12.20",type:"map",key:"SAR_volcano_suwanose_2008.04.28-2010.12.20",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008042820101220"},
							{title:"2010.02.22-2010.10.10",type:"map",key:"SAR_volcano_suwanose_2010.02.22-2010.10.10",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2010022220101010"},
							{title:"2010.04.09-2010.08.25",type:"map",key:"SAR_volcano_suwanose_2010.04.09-2010.08.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2010040920100825"},
							{title:"2008.02.17-2010.08.25",type:"map",key:"SAR_volcano_suwanose_2008.02.17-2010.08.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008021720100825"},
							{title:"2010.05.04-2010.08.04",type:"map",key:"SAR_volcano_suwanose_2010.05.04-2010.08.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2010050420100804"},
							{title:"2010.02.22-2010.05.25",type:"map",key:"SAR_volcano_suwanose_2010.02.22-2010.05.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2010022220100525"},
							{title:"2008.01.02-2010.05.25",type:"map",key:"SAR_volcano_suwanose_2008.01.02-2010.05.25",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008010220100525"},
							{title:"2010.02.01-2010.05.04",type:"map",key:"SAR_volcano_suwanose_2010.02.01-2010.05.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2010020120100504"},
							{title:"2008.04.28-2010.05.04",type:"map",key:"SAR_volcano_suwanose_2008.04.28-2010.05.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008042820100504"},
							{title:"2010.02.22-2010.04.09",type:"map",key:"SAR_volcano_suwanose_2010.02.22-2010.04.09",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2010022220100409"},
							{title:"2008.01.02-2010.01.07",type:"map",key:"SAR_volcano_suwanose_2008.01.02-2010.01.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008010220100107"},
							{title:"2007.12.12-2009.12.17",type:"map",key:"SAR_volcano_suwanose_2007.12.12-2009.12.17",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2007121220091217"},
							{title:"2007.10.02-2009.10.07",type:"map",key:"SAR_volcano_suwanose_2007.10.02-2009.10.07",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2007100220091007"},
							{title:"2009.02.19-2009.08.22",type:"map",key:"SAR_volcano_suwanose_2009.02.19-2009.08.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2009021920090822"},
							{title:"2007.08.17-2009.08.22",type:"map",key:"SAR_volcano_suwanose_2007.08.17-2009.08.22",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2007081720090822"},
							{title:"2008.07.29-2009.08.01",type:"map",key:"SAR_volcano_suwanose_2008.07.29-2009.08.01",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008072920090801"},
							{title:"2008.12.14-2009.03.16",type:"map",key:"SAR_volcano_suwanose_2008.12.14-2009.03.16",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2008121420090316"},
							{title:"2009.01.04-2009.02.19",type:"map",key:"SAR_volcano_suwanose_2009.01.04-2009.02.19",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2009010420090219"},
							{title:"2006.12.30-2009.01.04",type:"map",key:"SAR_volcano_suwanose_2006.12.30-2009.01.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2006123020090104"},
							{title:"2007.03.11-2008.12.14",type:"map",key:"SAR_volcano_suwanose_2007.03.11-2008.12.14",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2007031120081214"},
							{title:"2007.07.02-2008.07.04",type:"map",key:"SAR_volcano_suwanose_2007.07.02-2008.07.04",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2007070220080704"},
							{title:"2007.04.26-2008.04.28",type:"map",key:"SAR_volcano_suwanose_2007.04.26-2008.04.28",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2007042620080428"},
							{title:"2007.11.17-2008.01.02",type:"map",key:"SAR_volcano_suwanose_2007.11.17-2008.01.02",icon:false,"dataset":"dataSetOverlay_SAR_volcano_suwanose_2007111720080102"}
						]
					}
				]
			},
			{
				title:"地すべり",isFolder:true,hideCheckbox:true,expand:false,
				children: [
					{
						title:"秋田東成瀬",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2010.06.06-2010.10.22",type:"map",key:"SAR_landslide_higashinaruse_2010.06.06-2010.10.22",icon:false,"dataset":"dataSetOverlay_SAR_landslide_higashinaruse_2010060620101022"},
							{title:"2010.06.29-2010.08.14",type:"map",key:"SAR_landslide_higashinaruse_2010.06.29-2010.08.14",icon:false,"dataset":"dataSetOverlay_SAR_landslide_higashinaruse_2010062920100814"},
							{title:"2009.06.03-2009.10.19",type:"map",key:"SAR_landslide_higashinaruse_2009.06.03-2009.10.19",icon:false,"dataset":"dataSetOverlay_SAR_landslide_higashinaruse_2009060320091019"},
							{title:"2009.06.26-2009.09.26",type:"map",key:"SAR_landslide_higashinaruse_2009.06.26-2009.09.26",icon:false,"dataset":"dataSetOverlay_SAR_landslide_higashinaruse_2009062620090926"},
							{title:"2006.04.27-2007.04.30",type:"map",key:"SAR_landslide_higashinaruse_2006.04.27-2007.04.30",icon:false,"dataset":"dataSetOverlay_SAR_landslide_higashinaruse_2006042720070430"}
						]
					},
					{
						title:"山形月山",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.05.02-2010.11.08",type:"map",key:"SAR_landslide_gassan_2008.05.02-2010.11.08",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2008050220101108"},
							{title:"2010.03.23-2010.08.08",type:"map",key:"SAR_landslide_gassan_2010.03.23-2010.08.08",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2010032320100808"},
							{title:"2009.05.05-2009.11.05",type:"map",key:"SAR_landslide_gassan_2009.05.05-2009.11.05",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2009050520091105"},
							{title:"2009.06.14-2009.10.30",type:"map",key:"SAR_landslide_gassan_2009.06.14-2009.10.30",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2009061420091030"},
							{title:"2009.08.05-2009.09.20",type:"map",key:"SAR_landslide_gassan_2009.08.05-2009.09.20",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2009080520090920"},
							{title:"2009.05.05-2009.08.05",type:"map",key:"SAR_landslide_gassan_2009.05.05-2009.08.05",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2009050520090805"},
							{title:"2009.06.14-2009.07.30",type:"map",key:"SAR_landslide_gassan_2009.06.14-2009.07.30",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2009061420090730"},
							{title:"2009.03.20-2009.05.05",type:"map",key:"SAR_landslide_gassan_2009.03.20-2009.05.05",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2009032020090505"},
							{title:"2006.06.06-2008.10.27",type:"map",key:"SAR_landslide_gassan_2006.06.06-2008.10.27",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2006060620081027"},
							{title:"2006.09.12-2008.09.17",type:"map",key:"SAR_landslide_gassan_2006.09.12-2008.09.17",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2006091220080917"},
							{title:"2006.04.27-2007.04.30",type:"map",key:"SAR_landslide_gassan_2006.04.27-2007.04.30",icon:false,"dataset":"dataSetOverlay_SAR_landslide_gassan_2006042720070430"}
						]
					},
					{
						title:"大井川赤崩",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{title:"2008.01.18-2010.09.10",type:"map",key:"SAR_landslide_akakuzure_2008.01.18-2010.09.10",icon:false,"dataset":"dataSetOverlay_SAR_landslide_akakuzure_2008011820100910"},
							{title:"2007.10.18-2010.04.25",type:"map",key:"SAR_landslide_akakuzure_2007.10.18-2010.04.25",icon:false,"dataset":"dataSetOverlay_SAR_landslide_akakuzure_2007101820100425"},
							{title:"2009.09.08-2009.10.24",type:"map",key:"SAR_landslide_akakuzure_2009.09.08-2009.10.24",icon:false,"dataset":"dataSetOverlay_SAR_landslide_akakuzure_2009090820091024"},
							{title:"2008.09.05-2008.10.21",type:"map",key:"SAR_landslide_akakuzure_2008.09.05-2008.10.21",icon:false,"dataset":"dataSetOverlay_SAR_landslide_akakuzure_2008090520081021"}
						]
					}
				]
			},
			{
				title:"地震",isFolder:true,hideCheckbox:true,expand:false,
				children: [
					{
						title:"2008.06.14岩手・宮城内陸地震(M7.2)",isFolder:true,hideCheckbox:true,expand:false,
						children: [
							{	"title": "ダム等の位置", "type": "kml", "key": "sar_earthquake_dam", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/point/sar_earthquake.kml",
									 "legendFunc": "getLibraryLegend_SAR_EQ"  },
							{title:"2010.07.22-2010.10.22",type:"map",key:"BUILD_IMI__http2010.07.22-2010.10.22",icon:false,dataset:"dataSetOverlay_IMI_2010_07_22_2010_10_22",zindex:479, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2010.06.29-2010.09.29",type:"map",key:"BUILD_IMI__http2010.06.29-2010.09.29",icon:false,dataset:"dataSetOverlay_IMI_2010_06_29_2010_09_29",zindex:480, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2010.05.14-2010.09.29",type:"map",key:"BUILD_IMI__http2010.05.14-2010.09.29",icon:false,dataset:"dataSetOverlay_IMI_2010_05_14_2010_09_29",zindex:481, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2010.07.22-2010.09.06",type:"map",key:"BUILD_IMI__http2010.07.22-2010.09.06",icon:false,dataset:"dataSetOverlay_IMI_2010_07_22_2010_09_06",zindex:482, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2010.06.06-2010.07.22",type:"map",key:"BUILD_IMI__http2010.06.06-2010.07.22",icon:false,dataset:"dataSetOverlay_IMI_2010_06_06_2010_07_22",zindex:483, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2010.05.14-2010.06.29",type:"map",key:"BUILD_IMI__http2010.05.14-2010.06.29",icon:false,dataset:"dataSetOverlay_IMI_2010_05_14_2010_06_29",zindex:484, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2008.06.23-2009.09.26",type:"map",key:"BUILD_IMI__http2008.06.23-2009.09.26",icon:false,dataset:"dataSetOverlay_IMI_2008_06_23_2009_09_26",zindex:485, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2009.06.03-2009.09.03",type:"map",key:"BUILD_IMI__http2009.06.03-2009.09.03",icon:false,dataset:"dataSetOverlay_IMI_2009_06_03_2009_09_03",zindex:486, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2008.07.16-2009.09.03",type:"map",key:"BUILD_IMI__http2008.07.16-2009.09.03",icon:false,dataset:"dataSetOverlay_IMI_2008_07_16_2009_09_03",zindex:487, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2008.06.23-2009.06.26",type:"map",key:"BUILD_IMI__http2008.06.23-2009.06.26",icon:false,dataset:"dataSetOverlay_IMI_2008_06_23_2009_06_26",zindex:488, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2007.08.29-2008.07.16",type:"map",key:"BUILD_IMI__http2007.08.29-2008.07.16",icon:false,dataset:"dataSetOverlay_IMI_2007_08_29_2008_07_16",zindex:489, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2007.08.06-2008.06.23",type:"map",key:"BUILD_IMI__http2007.08.06-2008.06.23",icon:false,dataset:"dataSetOverlay_IMI_2007_08_06_2008_06_23",zindex:490, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2007.08.06-2007.09.21",type:"map",key:"BUILD_IMI__http2007.08.06-2007.09.21",icon:false,dataset:"dataSetOverlay_IMI_2007_08_06_2007_09_21",zindex:491, legendFunc:"getLibraryLegend_SAR_EQ" },
							{title:"2007.06.21-2007.09.21",type:"map",key:"BUILD_IMI__http2007.06.21-2007.09.21",icon:false,dataset:"dataSetOverlay_IMI_2007_06_21_2007_09_21",zindex:492, legendFunc:"getLibraryLegend_SAR_EQ" },
						]
					},
				]
			},
		]
	}
];//
// @source = librarySaigaiData.js
//
var librarySaigaiData =
[
	{
		"title": "御嶽山噴火活動", "isFolder": true, "key": "1409ontake", "hideCheckbox": true, "expand": true, "addClass": "Saigai", "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{	"title": "斜め写真(9/28)", "type": "kml", "key": "naname1409ontake1_l", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1409ontake/naname1409ontake1_l.kml", "addClass": "Saigai"  },
			{	"title": "斜め写真(9/29)", "type": "kml", "key": "naname1409ontake2_l", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1409ontake/naname1409ontake2_l.kml", "addClass": "Saigai"  },
			{	"title": "正射画像_分割版(9/28)", "type": "kml", "key": "seisyazukaku1409ontake1_l", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1409ontake/seisyazukaku1409ontake1_l.kml", "addClass": "Saigai"  },
			{	"title": "正射画像_分割版(9/29)", "type": "kml", "key": "seisyazukaku1409ontake2", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1409ontake/seisyazukaku1409ontake2.kml", "addClass": "Saigai"  },
			{	"title": "正射画像(9/28)", "type": "map", "key": "20140928dol", "icon": false, "dataset": "dataSetOverlay_20140928dol", "zindex": 307, "addClass": "Saigai"  },
			{	"title": "正射画像(9/29)", "type": "map", "key": "20140929dol", "icon": false, "dataset": "dataSetOverlay_20140929dol", "zindex": 309, "addClass": "Saigai"  },
			{	"title": "航空機SAR画像(9/29)", "type": "map", "key": "20140929dol2", "icon": false, "dataset": "dataSetOverlay_20140929dol2", "zindex": 317, "addClass": "Saigai", "legendFunc": "getLibraryLegend_1409ontake"  },
			{	"title": "航空機SAR画像(9/30)", "type": "map", "key": "20140930dol", "icon": false, "dataset": "dataSetOverlay_20140930dol", "zindex": 318, "addClass": "Saigai", "legendFunc": "getLibraryLegend_1409ontake"  },
			{	"title": "干渉SARコメント(8/18-9/29)", "type": "kml", "key": "0818_0929coment1409ontake", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1409ontake/0818_0929coment1409ontake.kml", "addClass": "Saigai"  },
			{	"title": "干渉SAR(8/18-9/29)", "type": "map", "key": "201408180929sar1409ontake", "icon": false, "dataset": "dataSetOverlay_201408180929sar1409ontake", "zindex": 319, "addClass": "Saigai", "legendFunc": "getLibraryLegend_1409ontake"  },
			{	"title": "干渉SARコメント(8/22-10/3)", "type": "kml", "key": "0822_1003coment1409ontake", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1409ontake/0822_1003coment1409ontake.kml", "addClass": "Saigai"  },
			{	"title": "干渉SAR(8/22-10/3)", "type": "map", "key": "201408221003sar1409ontake", "icon": false, "dataset": "dataSetOverlay_201408221003sar1409ontake", "zindex": 328, "addClass": "Saigai", "legendFunc": "getLibraryLegend_1409ontake"  },
			{	"title": "衛星SAR強度画像(8/18)", "type": "map", "key": "20140818d_mag_ontake", "icon": false, "dataset": "dataSetOverlay_20140818d_mag_ontake", "zindex": 326, "addClass": "Saigai", "legendFunc": "getLibraryLegend_1409ontake"  },
			{	"title": "衛星SAR強度画像(9/29)", "type": "map", "key": "20140929d_mag_ontake", "icon": false, "dataset": "dataSetOverlay_20140929d_mag_ontake", "zindex": 327, "addClass": "Saigai", "legendFunc": "getLibraryLegend_1409ontake"  },
			{	"title": "推定火口(9/30暫定版：航空機SAR画像判読)", "type": "kml", "key": "sar1409ontake", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/limited/1409ontake/sar1409ontake.kml", "addClass": "Saigai", "legendFunc": "getLibraryLegend_1409ontake"  },
			{	"title": "火山基本図", "type": "map", "key": "vbm1409ontake", "icon": false, "dataset": "dataSetOverlay_vbm25ontake", "zindex": 304, "addClass": "Saigai" },
			{	"title": "火山基本図(透過)", "type": "map", "key": "vbmtouka1409ontake", "icon": false, "dataset": "dataSetOverlay_vbmtouka1409ontake", "zindex": 720, "addClass": "Saigai" },
			{	"title": "火山土地条件図", "type": "map", "key": "volcano1409ontake", "icon": false, "dataset": "dataSetOverlay_ontakesan", "zindex": 305, "addClass": "Saigai" },
			{	"title": "過去に撮影した空中写真(1991年～2000年)", "type": "kmlurl", "key": "photopoint_1991_2000", "icon": "photo.png", "getURL": "getURL_photoPoint", "addClass": "Saigai", "extent": "35.970439_137.390098_35.84433_137.585792" },
			{	"title": "過去に撮影した空中写真(1981年～1990年)", "type": "kmlurl", "key": "photopoint_1981_1990", "icon": "photo.png", "getURL": "getURL_photoPoint", "addClass": "Saigai", "extent": "35.970439_137.390098_35.84433_137.585792" },
			{	"title": "過去に撮影した空中写真(1971年～1980年)", "type": "kmlurl", "key": "photopoint_1971_1980", "icon": "photo.png", "getURL": "getURL_photoPoint", "addClass": "Saigai", "extent": "35.970439_137.390098_35.84433_137.585792" },
			{	"title": "過去の正射画像(1974年～1978年)", "type": "map", "key": "yk74_1409ontake", "icon": "photo.png", "dataset": "dataSetOverlay_YK74", "zindex": 306, "addClass": "Saigai" }
		]
	},
	{
		"title": "8月16日からの大雨", "isFolder": true, "key": "1408ooame", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children":
		[
			{
				"title": "広島市内", "isFolder": true, "key": "1408ooame_hiroshima", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
				"children":
					[
						{	"title": "斜め写真(8/20)", "type": "kml", "key": "naname1408ooame_hiroshima_1", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/naname1408ooame_hiroshima.kml"  },
						{	"title": "斜め写真(8/21)", "type": "kml", "key": "naname1408ooame_hiroshima2", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/naname1408ooame_hiroshima2.kml" },
						{	"title": "垂直写真(8/28)", "type": "kml", "key": "suichoku1408ooame_hiroshima_l", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/suichoku1408ooame_hiroshima_l.kml","legendFunc": "getLibraryLegend_suichoku1408ooame_tanba"  },
						{	"title": "垂直写真(8/30)", "type": "kml", "key": "suichoku1408ooame_hiroshima2_l", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/suichoku1408ooame_hiroshima2_l.kml","legendFunc": "getLibraryLegend_suichoku1408ooame_hiroshima2"  },
						{	"title": "垂直写真(8/31)", "type": "kml", "key": "suichoku1408ooame_hiroshima3_l", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/suichoku1408ooame_hiroshima3_l.kml","legendFunc": "getLibraryLegend_saigaiTemp"  },
						{	"title": "写真判読図(8/28・30・31垂直写真)", "type": "kml", "key": "hisai1408ooame_hiroshima3", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/hisai1408ooame_hiroshima3.kml"
							, "legendFunc": "getLibraryLegend_genchi1408ooame_hiroshima3"  },
						{ "title": "正射画像(8/28)", "type": "map", "key": "20140828dol", "icon": false, "dataset": "dataSetOverlay_20140828dol", "zindex": 273
							, "legendFunc": "getLibraryLegend_seisya1408ooame_hiroshima" },
						{ "title": "正射画像(8/30)", "type": "map", "key": "20140830dol", "icon": false, "dataset": "dataSetOverlay_20140830dol", "zindex": 279
							, "legendFunc": "getLibraryLegend_saigaiTemp"  },
						{ "title": "正射画像(8/30・31)", "type": "map", "key": "20140831dol", "icon": false, "dataset": "dataSetOverlay_20140831dol", "zindex": 291
							, "legendFunc": "getLibraryLegend_saigaiTemp" },
						{	"title": "正射画像_図郭版(8/28)", "type": "kml", "key": "seisyazukaku1408ooame_hiroshima_l", "icon": false,  "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/seisyazukaku1408ooame_hiroshima_l.kml"
							, "legendFunc": "getLibraryLegend_seisyazukaku1408ooame_hiroshima" },
						{	"title": "正射画像_図郭版(8/30)", "type": "kml", "key": "seisyazukaku1408ooame_hiroshima2_l", "icon": false,  "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/seisyazukaku1408ooame_hiroshima2_l.kml"
							, "legendFunc": "getLibraryLegend_saigaiTemp" },
						{	"title": "正射画像_図郭版(8/30・31)", "type": "kml", "key": "seisyazukaku1408ooame_hiroshima3_l", "icon": false,  "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/seisyazukaku1408ooame_hiroshima3_l.kml"
							, "legendFunc": "getLibraryLegend_saigaiTemp"},
						{
							"title": "斜め写真による正射画像", "isFolder": true, "key": "1408ooame_hiroshima_nanameseisya", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
							"children":
								[
									{ "title": "斜め写真による正射画像(8/20 安佐南区八木)", "type": "map", "key": "20140820dol", "icon": false, "dataset": "dataSetOverlay_20140820dol", "zindex": 228  },
									{ "title": "斜め写真による正射画像(8/20 安佐南区山本)", "type": "map", "key": "20140820dol2", "icon": false, "dataset": "dataSetOverlay_20140820dol2", "zindex": 229  },
									{ "title": "斜め写真による正射画像(8/20 安佐北区可部)", "type": "map", "key": "20140820dol3", "icon": false, "dataset": "dataSetOverlay_20140820dol3", "zindex": 261 },
								]
						},
						{ 	"title": "数値地図25000(土地条件)", 		"type": "map", "key": "LCM25K_2012_2", "icon": false, "dataset": "dataSetOverlay_LCM25K_2012"
							, "legendFunc": "getLibraryLegend_lcm25k", "zindex": 263 },
						{ 	"title": "治水地形分類図・更新版", 	"type": "map", "key": "LCMFC02_2"		, "icon": false, "dataset": "dataSetOverlay_LCMFC02", "legendFunc": "getLibraryLegend_LCMFC2", "zindex": 262 },
						{	"title": "過去に撮影した空中写真(2005～2009年)", "type": "kml", "key": "airphoto1408ooame_hiroshima", "icon": "080.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/airphoto1408ooame_hiroshima.kml" },

						{	"title": "過去に撮影した空中写真（1948年）", "type": "kml", "key": "airphoto1408ooame_hiroshima2", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/airphoto1408ooame_hiroshima2.kml" },


						{ 	"title": "過去の正射画像(1947～1948年)", 	"type": "map", "key": "19480000dol"		, "icon": false, "dataset": "dataSetOverlay_19480000dol"
							, "zindex": 266 },

						{ "title": "過去の正射画像(1962年)", "type": "map", "key": "19620000dol", "icon": false, "dataset": "dataSetOverlay_19620000dol", "zindex": 272 },
						{ "title": "過去の正射画像(1974～1978年)", "type": "map", "key": "yk74_2", "icon": false, "dataset": "dataSetOverlay_YK74", "zindex": 267},
						{ "title": "過去の正射画像(1979～1983年)", "type": "map", "key": "yk79_2", "icon": false, "dataset": "dataSetOverlay_YK79", "zindex": 268 },
						{ "title": "過去の正射画像(1988～1990年)", "type": "map", "key": "yk88_2", "icon": false, "dataset": "dataSetOverlay_YK88", "zindex": 269},
						{ "title": "過去の正射画像(2007年～)", "type": "map", "key": "y2k7_2", "icon": false, "dataset": "dataSetOverlay_Y2K7", "zindex": 271 },

						{	"title": "立体図", "type": "kml", "key": "3d1408ooame_hiroshima", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/3d1408ooame_hiroshima.kml" },
					]
			},
			{
				"title": "丹波市市島地区", "isFolder": true, "key": "1408ooame_tanba", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
				"children":
					[
						{	"title": "斜め写真(8/19)", "type": "kml", "key": "naname1408ooame_tanba_1", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/naname1408ooame_tanba.kml"  },
						{	"title": "垂直写真(8/19)", "type": "kml", "key": "suichoku1408ooame_tanba", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/suichoku1408ooame_tanba.kml"
							, "legendFunc": "getLibraryLegend_suichoku1408ooame_tanba" },

							{	"title": "写真判読図(8/19)", "type": "kml", "key": "hisai1408ooame_tanba", "icon": false,  "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/hisai1408ooame_tanba.kml"
								, "legendFunc": "getLibraryLegend_suichoku1408ooame_tanba_2" },
							{ "title": "正射画像(8/19)", "type": "map", "key": "20140819dol", "icon": false, "dataset": "dataSetOverlay_20140819dol", "zindex": 230
								, "legendFunc": "getLibraryLegend_suichoku1408ooame_tanba"  },



						{	"title": "正射画像_図郭版(8/19)", "type": "kml", "key": "seisyazukaku1408ooame_tanba", "icon": false,  "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/seisyazukaku1408ooame_tanba.kml"
							, "legendFunc": "getLibraryLegend_suichoku1408ooame_tanba"},
					]
			},
			{
				"title": "福知山市街地区", "isFolder": true, "key": "1408ooame_fukuchiyama", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
				"children":
					[
					{	"title": "斜め写真(8/19)", "type": "kml", "key": "naname1408ooame_fukuchiyama_1", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408ooame/naname1408ooame_fukuchiyama.kml" },
					]
			}
		]
	},



	{
		"title": "台風第11号等による大雨", "isFolder": true, "key": "1408typhoon11", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{	"title": "斜め写真 (8/13)", "type": "kml", "key": "naname1408typhoon11", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408typhoon11/naname1408typhoon11.kml"  },
			{	"title": "垂直写真 (8/13)", "type": "kml", "key": "suichoku1408typhoon11", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1408typhoon11/suichoku1408typhoon11.kml"  },
			{	"title": "正射画像 (8/13)", "type": "map", "key": "20140813dol", "icon": false, "dataset": "dataSetOverlay_20140813dol", "zindex": 243 },
			{	"title": "正射画像_図郭版 (8/13)", "type": "kml", "key": "1408typhoon11", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1408typhoon11/seisyazukaku1408typhoon11.kml"  },
		]
	},
	{
		"title": "台風第8号等による大雨", "isFolder": true, "key": "1407typhoon8", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{	"title": "斜め写真（7/11)", "type": "kml", "key": "naname1407typhoon8", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1407typhoon8/naname1407typhoon8.kml"  },
			{	"title": "斜め写真による正射画像（7/11)", "type": "map", "key": "seisya20140711dol", "icon": false, "dataset": "DS_20140711dol", "zindex": 	254 },
			{	"title": "災害概況図", "type": "kml", "key": "gaikyozu1407typhoon8", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1407typhoon8/gaikyozu1407typhoon8.kml" }
		]
	},
	{
		"title": "西之島付近噴火活動", "isFolder": true, "key": "kaijohoancho", "hideCheckbox": true, "expand": true, "addClass": "Saigai",
		"children": [
			{
				"title": "正射画像", "isFolder": true, "key": "seisyanishinoshima", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_nishinoshimaTemp",
				"children": [
					{ "title": "2014.7.4（無人航空機（UAV）撮影）", "type": "map", "key": "20140704dol"				, "icon": false, "dataset": "dataSetOverlay_20140704dol", "zindex": 242 },
					{ "title": "2014.3.22（無人航空機（UAV）撮影）", "type": "map", "key": "seisya1311nishinoshima4"	, "icon": false, "dataset": "dataSetOverlay_seisya1311nishinoshima4", "zindex": 241 },
					{ "title": "2014.2.16", "type": "map", "key": "seisya1311nishinoshima3"								, "icon": false, "dataset": "dataSetOverlay_seisya1311nishinoshima3", "zindex": 240 },
					{ "title": "2013.12.17", "type": "map", "key": "seisya1311nishinoshima2"							, "icon": false, "dataset": "dataSetOverlay_seisya1311nishinoshima2", "zindex": 239 },
					{ "title": "2013.12.4", "type": "map", "key": "seisya1311nishinoshima", "icon": false, "dataset": "dataSetOverlay_seisya1311nishinoshima", "zindex": 238 },
				]
			},
			{ "title": "2014.7.4_飛行経路（無人航空機（UAV）撮影）", "type": "kml", "key": "uavhikou1311nishinoshima_140704", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/uavhikou1311nishinoshima_140704.kml", "legendFunc": "getLibraryLegend_saigaiTemp" },
			{ "title": "2014.3.22_飛行経路（無人航空機（UAV）撮影）", "type": "kml", "key": "uavhikou1311nishinoshima_140322", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/uavhikou1311nishinoshima_140322.kml", "legendFunc": "getLibraryLegend_saigaiTemp" },
			{
				"title": "（上載）地形判読図", "isFolder": true, "key": "handokunishinoshima", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_nishinoshima_shintou",
				"children": [
					{ "title": "2014.7.4(無人航空機(UAV)撮影)", "type": "map", "key": "handoku1311nishinoshima_20140704dol2", "icon": false, "dataset": "DS_nishinoshima_20140704dol2", "zindex": 719 },
					{ "title": "2014.3.22（無人航空機（UAV）撮影)", "type": "map", "key": "handoku1311nishinoshima4", "icon": false, "dataset": "dataSetOverlay_handoku1311nishinoshima4", "zindex": 718 },
					{ "title": "2014.2.16", "type": "map", "key": "handoku1311nishinoshima3", "icon": false, "dataset": "dataSetOverlay_handoku1311nishinoshima3", "zindex": 717 },
					{ "title": "2013.12.17", "type": "map", "key": "handoku1311nishinoshima2", "icon": false, "dataset": "dataSetOverlay_handoku1311nishinoshima2", "zindex": 716 },
					{ "title": "2013.12.4", "type": "map", "key": "handoku1311nishinoshima", "icon": false, "dataset": "dataSetOverlay_handoku1311nishinoshima", "zindex": 715 }
				]
			},
			{ "title": "立体図", "type": "kml", "key": "3D1311nishinoshima", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/3D1311nishinoshima5.kml", "legendFunc": "getLibraryLegend_saigaiTemp" },
			{
				"title": "正射画像_図郭版", "isFolder": true, "key": "seisyazukakunishinoshima", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_nishinoshimaTemp",
				"children": [
					{ "title": "2014.2.16", "type": "kml", "key": "seisyazukaku1311nishinoshima3", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/seisyazukaku1311nishinoshima3.kml" },
					{ "title": "2013.12.17", "type": "kml", "key": "seisyazukaku1311nishinoshima2", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/seisyazukaku1311nishinoshima2.kml" },
					{ "title": "2013.12.4", "type": "kml", "key": "seisyazukaku1311nishinoshima", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/seisyazukaku1311nishinoshima.kml" }
				]
			},
			{
				"title": "衛星画像", "isFolder": true, "key": "lsinishinoshima", "hideCheckbox": true, "expand": true, "legendFunc": "getLibraryLegend_nishinoshima", "addClass": "Saigai",
				"children": [


					{ "title" :"2014.10.24","type" : "map", "key" : "nishinoshima_2014_10_24", "icon" : false, "dataset" : "dataSetOverlay_NISHINOSHIMA_2014_10_24","zindex":493, "addClass": "Saigai" },
					{ "title": "2014.10.8", "type": "map", "key": "20141008lsi", "icon": false, "dataset": "dataSetOverlay_20141008lsi", "zindex": 337 },
					{ "title": "2014.9.6", "type": "map", "key": "20140906lsi", "icon": false, "dataset": "dataSetOverlay_20140906lsi", "zindex": 292 },
					{ "title": "2014.8.21", "type": "map", "key": "20140821lsi", "icon": false, "dataset": "dataSetOverlay_20140821lsi", "zindex": 264 },
					{ "title": "2014.7.4", "type": "map", "key": "lsi1311nishinoshima7", "icon": false, "dataset": "dataSetOverlay_lsi1311nishinoshima7", "zindex": 237 },
					{ "title": "2014.6.2", "type": "map", "key": "lsi1311nishinoshima6", "icon": false, "dataset": "dataSetOverlay_lsi1311nishinoshima6", "zindex": 236 },
					{ "title": "2014.5.17", "type": "map", "key": "lsi1311nishinoshima4", "icon": false, "dataset": "dataSetOverlay_lsi1311nishinoshima4", "zindex": 235 },
					{ "title": "2014.3.30", "type": "map", "key": "lsi1311nishinoshima3", "icon": false, "dataset": "dataSetOverlay_lsi1311nishinoshima3", "zindex": 234 },
					{ "title": "2014.2.26", "type": "map", "key": "lsi1311nishinoshima2", "icon": false, "dataset": "dataSetOverlay_lsi1311nishinoshima2", "zindex": 233 },
					{ "title": "2013.12.24", "type": "map", "key": "lsi1311nishinoshima", "icon": false, "dataset": "dataSetOverlay_lsi1311nishinoshima", "zindex": 232 },
					{ "title": "2013.9.3", "type": "map", "key": "lsi1311nishinoshima5", "icon": false, "dataset": "dataSetOverlay_lsi1311nishinoshima5", "zindex": 231 },

				]
			},
			{
				"title": "垂直写真", "isFolder": true, "key": "suichokunishinoshima", "hideCheckbox": true, "expand": false,	//		 "legendFunc": "getLibraryLegend_nishinoshima",
				"children": [
				 	{	"title": "2014.7.4(無人航空機(UAV)撮影)"			, "type": "kml", "key": "nishinoshima7", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/suichoku1311nishinoshima_140704.kml"		, "legendFunc": "getLibraryLegend_saigaiTemp"  },
					{ "title": "2014.3.22（無人航空機（UAV）撮影）", "type": "kml", "key": "suichoku1311nishinoshima_140322", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/suichoku1311nishinoshima_140322.kml", "legendFunc": "getLibraryLegend_saigaiTemp" }
				]
			},
			{
				"title": "新島海岸線（暫定）", "isFolder": true, "key": "coastlinenishinoshima", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_nishinoshimaTemp",
				"children": [
					{ "title": "2014.2.16", "type": "kml", "key": "coastline1311nishinoshima_140216", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/coastline1311nishinoshima_140216.kml" },
					{ "title": "2013.12.17", "type": "kml", "key": "coastline1311nishinoshima_1217", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/coastline1311nishinoshima_1217.kml" },
					{ "title": "2013.12.4", "type": "kml", "key": "coastline1311nishinoshima_1204", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/coastline1311nishinoshima_1204.kml" },
					{ "title": "2013.11.21", "type": "kml", "key": "coastline1311nishinoshima_1121", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/coastline1311nishinoshima_1121.kml", "legendFunc": "getLibraryLegend_nishinoshima_shintou" }
				]
			},
			{
				"title": "斜め写真", "isFolder": true, "key": "nanamenishinoshima", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_nishinoshima_shintou_naname",
				"children": [
					{ "title": "2014.7.4(無人航空機(UAV)撮影)", "type": "kml", "key": "naname1311nishinoshima3", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/naname1311nishinoshima3.kml", "noLegend": true },
					{ "title": "2013.11.21（海上保安庁）", "type": "kml", "key": "naname1311nishinoshima2", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/naname1311nishinoshima2.kml", "noLegend": true },
					{ "title": "2013.11.20（海上保安庁）", "type": "kml", "key": "naname1311nishinoshima", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/naname1311nishinoshima.kml", "noLegend": true }
				]
			},
			{
				"title": "関連情報", "isFolder": true, "key": "elsenishinoshima", "hideCheckbox": true, "expand": false,
				"children": [
					{ "title": "地形等（地理院取得2009ALOS画像）", "type": "kml", "key": "coastline1311nishinoshima_2009alos", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/coastline1311nishinoshima_2009alos.kml", "legendFunc": "getLibraryLegend_nishinoshima_2009alos" },
					{ "title": "垂直写真（1947、76、78撮影）", "type": "kml", "key": "suichoku_old_nishinoshima", "icon": "mobile004.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/suichoku_old_nishinoshima.kml", "legendFunc": "getLibraryLegend_nishinoshimaElse" },
					{ "title": "（参考）国土地理院・気象庁", "type": "kml", "key": "chikeizu1311nishinoshima", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1311nishinoshima/chikeizu1311nishinoshima.kml", "legendFunc": "getLibraryLegend_nishinoshimaElse" }
				]
			}
		]
	},
	{
		"title": "平成25年台風第26・27号の大雨", "isFolder": true, "key": "1310typhoon26", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{	"title": "斜め写真（10/16)", "type": "kml", "key": "naname1310typhoon26", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1310typhoon26/naname1310typhoon26.kml" },
			{	"title": "垂直写真（10/17)", "type": "kml", "key": "suichoku1310typhoon26", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1310typhoon26/suichoku1310typhoon26.kml" },
			{	"title": "土砂流出箇所", "type": "kml", "key": "hisai1310typhoon26", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1310typhoon26/hisai1310typhoon26.kml" },
			{	"title": "土砂流出箇所（断面図）", "type": "kml", "key": "hisaidanmen1310typhoon26", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1310typhoon26/hisaidanmen1310typhoon26.kml" },
			{ 	"title": "正射画像（H24.4）", "type": "map", "key": "laserortho1204", "icon": false, "dataset": "dataSetOverlay_laserortho1204", "zindex": 222 },
			{ 	"title": "正射画像（10/17）", "type": "map", "key": "seisya1310typhoon26", "icon": false, "dataset": "dataSetOverlay_seisya1310typhoon26", "zindex": 225 },
			{ 	"title": "正射画像（10/28）", "type": "map", "key": "seisya1310typhoon27", "icon": false, "dataset": "dataSetOverlay_seisya1310typhoon27", "zindex": 227 },
			{ 	"title": "正射画像_図郭版（10/17）", "type": "kml", "key": "seisyazukaku1310typhoon26", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1310typhoon26/seisyazukaku1310typhoon26.kml" },
			{ 	"title": "正射画像_図郭版（10/28）", "type": "kml", "key": "seisyazukaku1310typhoon27", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1310typhoon26/seisyazukaku1310typhoon27.kml" },
			{ 	"title": "火山土地条件図", "type": "map", "key": "izuoshima2", "icon": false, "dataset": "dataSetOverlay_izuoshima", "zindex": 349 },
			{ 	"title": "火山基本図", "type": "map", "key": "izuoshima_kihon3", "icon": false, "dataset": "dataSetOverlay_izuoshima_kihon", "zindex": 224 },
			{ 	"title": "火山基本図（透過）", "type": "map", "key": "izuoshima_kihon2", "icon": false, "dataset": "dataSetOverlay_izuoshima_kihon2", "zindex": 226 },
			{ 	"title": "色別標高図", "type": "map", "key": "relief2", "icon": false, "dataset": "dataSet_Relief", "zindex": 223, "legendFunc": "getLibraryLegend_relief" }
		]
	},
	{
		"title": "平成25年台風第18号等による大雨", "isFolder": true, "key": "1309typhoon18", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{	"title": "垂直写真(9/20)", "type": "kml", "key": "suichoku1309typhoon18", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1309typhoon18/suichoku1309typhoon18.kml" }
		]
	},
	{
		"title": "平成25年9月2日からの突風", "isFolder": true, "key": "1309saitama", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{ "title": "撮影範囲", "type": "kml", "key": "satueihani1309saitama", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1309saitama/satueihani1309saitama.kml" },
			{ "title": "正射画像(9/9)", "type": "map", "key": "seisya1309saitama", "icon": false, "dataset": "dataSetOverlay_seisyaH1309saitama", "zindex": 346 },
			{ "title": "正射画像/正射地図(9/9)", "type": "kml", "key": "seisyahani1309saitama", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1309saitama/seisyahani1309saitama.kml" },
			{ "title": "被災箇所", "type": "kml", "key": "hisai1309koshigaya_l", "icon": "092.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1309saitama/hisai1309koshigaya_l.kml" }
		]
	},
	{
		"title": "平成25年7月17日からの大雨", "isFolder": true, "key": "1307yamaguchi", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{
				"title": "山口地方「須佐地区」", "isFolder": true, "key": "1307yamaguchi_susa", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
				"children": [
					{ "title": "垂直写真(7/31)", "type": "kml", "key": "suichoku1307yamaguchi", "icon": "080.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/suichoku1307yamaguchi.kml" },
					{ "title": "垂直写真(8/7 A)", "type": "kml", "key": "suichoku1307yamaguchi2A", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/suichoku1307yamaguchi2A.kml" },
					{ "title": "垂直写真(8/7 B)", "type": "kml", "key": "suichoku1307yamaguchi2B", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/suichoku1307yamaguchi2B.kml" },
					{ "title": "被災箇所(7/31)", "type": "kml", "key": "hisai1307yamaguchi", "icon": "092.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/hisai1307yamaguchi.kml" },
					{ "title": "被災箇所(8/7)", "type": "kml", "key": "hisai1307yamaguchi2", "icon": "092.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/hisai1307yamaguchi2.kml" },
					{ "title": "正射画像(7/31)", "type": "map", "key": "seisya1307yamaguchi", "icon": false, "dataset": "dataSetOverlay_seisya1307yamaguchi", "zindex": 348 },
					{ "title": "正射画像(8/7)", "type": "map", "key": "seisya1307yamaguchi2", "icon": false, "dataset": "dataSetOverlay_seisya1307yamaguchi2", "zindex": 221 },
					{ "title": "正射画像_図郭版（7/31)", "type": "kml", "key": "ortho130731yamaguchi", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/ortho130731yamaguchi.kml" },
					{ "title": "正射画像_図郭版（8/7)", "type": "kml", "key": "ortho130807yamaguchi", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/ortho130807yamaguchi.kml" },
					{ "title": "正射写真地図_図郭版（7/31)", "type": "kml", "key": "orthomap130731yamaguchi", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/ortho-map130731yamaguchi.kml" },
					{ "title": "正射写真地図_図郭版（8/7)", "type": "kml", "key": "orthomap130807yamaguchi", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/ortho-map130807yamaguchi.kml" }
				]
			},
			{
				"title": "島根地方「津和野地区」", "isFolder": true, "key": "1307yamaguchi_tsuwano", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
				"children": [
					{ "title": "垂直写真(8/9)", "type": "kml", "key": "suichoku1307tsuwano_l2", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/suichoku1307tsuwano_l2.kml" },
					{ "title": "被災箇所(8/9)", "type": "kml", "key": "hisai1307tsuwano2", "icon": "092.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/hisai1307tsuwano2.kml" }
				]
			},
			{
				"title": "山口地方「阿東地区」", "isFolder": true, "key": "1307yamaguchi_atou", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
				"children": [
					{ "title": "垂直写真(8/9)", "type": "kml", "key": "suichoku1307ato_l2", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/suichoku1307ato_l2.kml" },
					{ "title": "被災箇所(8/9)", "type": "kml", "key": "hisai1307ato2", "icon": "092.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1307yamaguchi/hisai1307ato2.kml" }
				]
			}
		]
	},
	{
		"title": "平成24年7月九州北部豪雨", "isFolder": true, "key": "1207kyushu", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{ "title": "斜面崩壊(7/25)", "type": "kml", "key": "shamen1207kyushu", "icon": "103BK_new.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1207kyushu/shamenari.kml" },
			{ "title": "斜め写真(7/15)", "type": "kml", "key": "naname1207kyushu", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1207kyushu/naname.kml" },
			{ "title": "堤防決壊(7/15)", "type": "kml", "key": "teibou1207kyushu", "icon": "100R.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1207kyushu/teibou.kml" },
			{ "title": "越水(7/17、7/25)", "type": "kml", "key": "essui1207kyushu", "icon": "101B.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1207kyushu/essuiari.kml" },
			{ "title": "正射画像/正射写真地図(7/15)", "type": "kml", "key": "orthomap1207kyushu", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1207kyushu/ortho_map.kml" },
			{ "title": "正射画像/正射写真地図(7/17)", "type": "kml", "key": "ortho2map1207kyushu", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1207kyushu/ortho2_map.kml" },
			{ "title": "正射画像/正射写真地図(7/25)", "type": "kml", "key": "ortho3map1207kyushu", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1207kyushu/ortho3_map.kml" }
		]
	},
	{
		"title": "平成23年台風12号による大雨", "isFolder": true, "key": "1109typhoon12", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_saigaiTemp",
		"children": [
			{
				"title": "写真判読", "isFolder": true, "key": "1109typhoon12_handoku", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_1109typhoon12",
				"children": [
					{ "title": "河道閉塞（大）", "type": "kml", "key": "kadoudai1109typhoon12", "icon": "dam.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/kadou_dai.kml" },
					{ "title": "土砂崩れ（大）", "type": "kml", "key": "doshadai1109typhoon12", "icon": "100R.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/dosha_dai.kml" },
					{ "title": "土石流（大）", "type": "kml", "key": "dosekidai1109typhoon12", "icon": "101B.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/doseki_dai.kml" },
					{ "title": "家屋流出", "type": "kml", "key": "kaoku1109typhoon12", "icon": "103BK.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/kaoku.kml" },
					{ "title": "河道閉塞（小）", "type": "kml", "key": "kadoushou1109typhoon12", "icon": "dam-s.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/kadou_shou.kml" },
					{ "title": "土砂崩れ（小）", "type": "kml", "key": "doshashou1109typhoon12", "icon": "100Rs.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/dosha_shou.kml" },
					{ "title": "土石流（小）", "type": "kml", "key": "dosekishou1109typhoon12", "icon": "101Bs.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/doseki_shou.kml" }
				]
			},
			{
				"title": "情報収集", "isFolder": true, "key": "1109typhoon12_shushu", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_1109typhoon12_shushu",
				"children": [
					{ "title": "土石流・土砂崩れ", "type": "kml", "key": "dosekidosha1109typhoon12", "icon": "dosya-s.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/doseki-dosha.kml" },
					{ "title": "橋流失", "type": "kml", "key": "hashi1109typhoon12", "icon": "092-s.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/hashi.kml" },
					{ "title": "灯台崩壊", "type": "kml", "key": "todai1109typhoon12", "icon": "096-s.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/todai.kml" }
				]
			},
			{
				"title": "災害前との比較", "isFolder": true, "key": "1109typhoon12_hikaku", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_1109typhoon12",
				"children": [
					{ "title": "新旧比較地点", "type": "kml", "key": "beforeafter1109typhoon12", "icon": "mobile006.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/beforeafter.kml" }
				]
			},
			{
				"title": "正射画像", "isFolder": true, "key": "1109typhoon12_seisya", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_1109typhoon12",
				"children": [
					{ "title": "作成範囲", "type": "kml", "key": "orthophoto1109typhoon12", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1109typhoon12/orthophoto.kml" }
				]
			}
		]
	},
	{
		"title": "東北地方太平洋沖地震", "isFolder": true, "key": "geje", "hideCheckbox": true, "expand": false,
		"children": [
			{
				"title": "地殻変動量", "isFolder": true, "key": "gejechikaku", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_geje",
				"children": [
					{ "title": "青森県", "type": "kml", "key": "gejechikaku_aomori", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/aomori.kml" },
					{ "title": "岩手県", "type": "kml", "key": "gejechikaku_iwate", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/iwate.kml" },
					{ "title": "宮城県", "type": "kml", "key": "gejechikaku_miyagi", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/miyagi.kml" },
					{ "title": "秋田県", "type": "kml", "key": "gejechikaku_akita", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/akita.kml" },
					{ "title": "山形県", "type": "kml", "key": "gejechikaku_yamagata", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/yamagata.kml" },
					{ "title": "福島県", "type": "kml", "key": "gejechikaku_fukushima", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/fukushima.kml" },
					{ "title": "茨城県", "type": "kml", "key": "gejechikaku_ibaraki", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/ibaraki.kml" },
					{ "title": "栃木県", "type": "kml", "key": "gejechikaku_tochigi", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/tochigi.kml" },
					{ "title": "群馬県", "type": "kml", "key": "gejechikaku_gunma", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/gunma.kml" },
					{ "title": "埼玉県", "type": "kml", "key": "gejechikaku_saitama", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/saitama.kml" },
					{ "title": "千葉県", "type": "kml", "key": "gejechikaku_chiba", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/chiba.kml" },
					{ "title": "東京県", "type": "kml", "key": "gejechikaku_tokyo", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/tokyo.kml" },
					{ "title": "神奈川県", "type": "kml", "key": "gejechikaku_kanagawa", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/kanagawa.kml" },
					{ "title": "新潟県", "type": "kml", "key": "gejechikaku_niigata", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/niigata.kml" },
					{ "title": "長野県", "type": "kml", "key": "gejechikaku_nagano", "icon": "geje.png", "path": "http://portal.cyberjapan.jp/site/data/geje-chikaku/nagano.kml" }
				]
			},
			{
				"title": "斜め写真", "isFolder": true, "key": "1103tohoku_naname", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_1103tohoku_naname",
				"children": [
					{ "title": "青森県六ヶ所村", "type": "kml", "key": "001naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/001.kml" },
					{ "title": "青森県三沢市", "type": "kml", "key": "002naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/002.kml" },
					{ "title": "青森県おいらせ町", "type": "kml", "key": "003naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/003.kml" },
					{ "title": "青森県八戸市", "type": "kml", "key": "004naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/004.kml" },
					{ "title": "青森県階上町", "type": "kml", "key": "005naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/005.kml" },
					{ "title": "岩手県洋野町", "type": "kml", "key": "006naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/006.kml" },
					{ "title": "岩手県久慈市", "type": "kml", "key": "007naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/007.kml" },
					{ "title": "岩手県野田村", "type": "kml", "key": "008naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/008.kml" },
					{ "title": "岩手県普代村", "type": "kml", "key": "009naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/009.kml" },
					{ "title": "岩手県田野畑村", "type": "kml", "key": "010naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/010.kml" },
					{ "title": "岩手県岩泉町", "type": "kml", "key": "011naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/011.kml" },
					{ "title": "岩手県宮古市", "type": "kml", "key": "012naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/012.kml" },
					{ "title": "岩手県山田町", "type": "kml", "key": "013naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/013.kml" },
					{ "title": "岩手県大槌町", "type": "kml", "key": "014naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/014.kml" },
					{ "title": "岩手県釜石市", "type": "kml", "key": "015naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/015.kml" },
					{ "title": "岩手県大船渡市", "type": "kml", "key": "016naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/016.kml" },
					{ "title": "岩手県陸前高田市", "type": "kml", "key": "017naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/017.kml" },
					{ "title": "宮城県気仙沼市", "type": "kml", "key": "018naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/018.kml" },
					{ "title": "宮城県南三陸町", "type": "kml", "key": "019naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/019.kml" },
					{ "title": "宮城県女川町", "type": "kml", "key": "020naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/020.kml" },
					{ "title": "宮城県石巻市", "type": "kml", "key": "021naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/021.kml" },
					{ "title": "宮城県東松島市", "type": "kml", "key": "022naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/022.kml" },
					{ "title": "宮城県松島町", "type": "kml", "key": "023naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/023.kml" },
					{ "title": "宮城県塩竈市", "type": "kml", "key": "024naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/024.kml" },
					{ "title": "宮城県利府町", "type": "kml", "key": "025naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/025.kml" },
					{ "title": "宮城県七ヶ浜町", "type": "kml", "key": "026naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/026.kml" },
					{ "title": "宮城県多賀城市", "type": "kml", "key": "027naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/027.kml" },
					{ "title": "宮城県仙台市宮城野区", "type": "kml", "key": "028naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/028.kml" },
					{ "title": "宮城県仙台市若林区", "type": "kml", "key": "029naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/029.kml" },
					{ "title": "宮城県名取市", "type": "kml", "key": "030naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/030.kml" },
					{ "title": "宮城県岩沼市", "type": "kml", "key": "031naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/031.kml" },
					{ "title": "宮城県亘理町", "type": "kml", "key": "032naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/032.kml" },
					{ "title": "宮城県山元町", "type": "kml", "key": "033naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/033.kml" },
					{ "title": "福島県新地町", "type": "kml", "key": "034naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/034.kml" },
					{ "title": "福島県相馬市", "type": "kml", "key": "035naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/035.kml" },
					{ "title": "福島県南相馬市", "type": "kml", "key": "036naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/036.kml" },
					{ "title": "福島県浪江町", "type": "kml", "key": "037naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/037.kml" },
					{ "title": "福島県双葉町", "type": "kml", "key": "038naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/038.kml" },
					{ "title": "福島県大熊町", "type": "kml", "key": "039naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/039.kml" },
					{ "title": "福島県富岡町", "type": "kml", "key": "040naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/040.kml" },
					{ "title": "福島県楢葉町", "type": "kml", "key": "041naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/041.kml" },
					{ "title": "福島県広野町", "type": "kml", "key": "042naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/042.kml" },
					{ "title": "福島県いわき市", "type": "kml", "key": "043naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/043.kml" },
					{ "title": "茨城県北茨城市", "type": "kml", "key": "044naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/044.kml" },
					{ "title": "茨城県高萩市", "type": "kml", "key": "045naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/045.kml" },
					{ "title": "茨城県日立市", "type": "kml", "key": "046naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/046.kml" },
					{ "title": "茨城県東海村", "type": "kml", "key": "047naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/047.kml" },
					{ "title": "茨城県ひたちなか市", "type": "kml", "key": "048naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/048.kml" },
					{ "title": "茨城県大洗町", "type": "kml", "key": "049naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/049.kml" },
					{ "title": "茨城県鉾田市", "type": "kml", "key": "050naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/050.kml" },
					{ "title": "茨城県鹿嶋市", "type": "kml", "key": "051naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/051.kml" },
					{ "title": "茨城県神栖市", "type": "kml", "key": "052naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/052.kml" },
					{ "title": "千葉県銚子市", "type": "kml", "key": "053naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/053.kml" },
					{ "title": "千葉県旭市", "type": "kml", "key": "054naname1103tohoku", "icon": "183.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/naname/054.kml" }
				]
			},
			{
				"title": "空中写真", "isFolder": true, "key": "1103tohoku_airphoto", "hideCheckbox": true, "expand": false, "legendFunc": "getLibraryLegend_1103tohoku_airphoto",
				"children": [
					{ "title": "青森県　三八地方沿岸（3月13日撮影）", "type": "kml", "key": "001airphoto1103tohoku", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/aomori_kokudo45n.kml" },
					{ "title": "青森県　三八上北地方沿岸（4月5日撮影）", "type": "kml", "key": "002airphoto1103tohoku", "icon": "097.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/aomori_sanrikukaigan0405.kml" },
					{ "title": "岩手県　沿岸北部（3月13日撮影）", "type": "kml", "key": "003airphoto1103tohoku", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/iwate_kokudo45n.kml" },
					{ "title": "岩手県　沿岸南部（3月13日撮影）", "type": "kml", "key": "004airphoto1103tohoku", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/iwate_kokudo45s.kml" },
					{ "title": "岩手県～宮城県　三陸海岸（4月1日撮影）", "type": "kml", "key": "005airphoto1103tohoku", "icon": "080.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/iwate_sanrikukaigan0401.kml" },
					{ "title": "岩手県　三陸海岸（4月5日撮影）", "type": "kml", "key": "006airphoto1103tohoku", "icon": "097.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/iwate_sanrikukaigan0405.kml" },
					{ "title": "宮城県　沿岸北部（3月13日撮影）", "type": "kml", "key": "007airphoto1103tohoku", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/miyagi_kokudo45s.kml" },
					{ "title": "宮城県　石巻市周辺（3月12日撮影）", "type": "kml", "key": "008airphoto1103tohoku", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/miyagi_ishinomaki.kml" },
					{ "title": "宮城県　仙台市周辺（3月12日撮影）", "type": "kml", "key": "009airphoto1103tohoku", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/miyagi_sendai0312.kml" },
					{ "title": "宮城県　仙台市周辺（3月13日撮影）", "type": "kml", "key": "010airphoto1103tohoku", "icon": "082.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/miyagi_sendai0313.kml" },
					{ "title": "宮城県　沿岸南部（3月12日撮影）", "type": "kml", "key": "011airphoto1103tohoku", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/miyagi_kokudo6.kml" },
					{ "title": "宮城県　三陸海岸（3月19日撮影）", "type": "kml", "key": "012airphoto1103tohoku", "icon": "098.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/miyagi_sanrikukaigan0319.kml" },
					{ "title": "福島県　沿岸北部（3月12日撮影）", "type": "kml", "key": "013airphoto1103tohoku", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/fukushima_kokudo6.kml" },
					{ "title": "茨城県　沿岸北部（3月12日撮影）", "type": "kml", "key": "014airphoto1103tohoku", "icon": "081.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/ibaraki0312.kml" },
					{ "title": "茨城県　沿岸南部（3月27日撮影）", "type": "kml", "key": "015airphoto1103tohoku", "icon": "099.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/airphoto/ibaraki0327.kml" },
				]
			},
			{ "title": "新旧写真比較", "type": "kml", "key": "beforeafter1103tohoku", "icon": "180.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/beforeafter.kml", "legendFunc": "getLibraryLegend_beforeafter" },
			{ "title": "デジタル標高図", "type": "kml", "key": "digelevmap1103tohoku", "icon": "086.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/digelevmap.kml" },
			{ "title": "震央", "type": "kml", "key": "epicenter1103tohoku", "icon": "092.png", "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/epicenter.kml", "legendFunc": "getLibraryLegend_epicenter"},
			{ "title": "東北地方道路規制情報", "type": "kml", "key": "roadRegulation1103tohoku", "icon": false, "path": "http://portal.cyberjapan.jp/site/data/saigai/1103tohoku/roadRegulation.kml", "legendFunc": "getLibraryLegend_roadRegulation" }
		]
	}
];
//
// @source = libraryOtherData.js
//
var libraryOtherData =
[
	{
		"title": "気象庁", "isFolder": true, "key": "jma", "hideCheckbox": true, "expand": true,
		"children": [
			{ "title": "活火山分布", "type": "kml", "key": "active_volcanoes", "icon": "101.png", "path": "http://portal.cyberjapan.jp/site/data/active_volcanoes.kml", "noLegend": true }
		]
	}
]//
// @source = libraryMapOverlay.js
//
// 土地条件図レイヤー（初期整備版）
dataSetObj.dataSetOverlay_LCM25K = {
	0: { "dataId" : "LCM25K" },
	1: { "dataId" : "LCM25K" },
	2: { "dataId" : "LCM25K" },
	3: { "dataId" : "LCM25K" },
	4: { "dataId" : "LCM25K" },
	5: { "dataId" : "LCM25K" },
	6: { "dataId" : "LCM25K" },
	7: { "dataId" : "LCM25K" },
	8: { "dataId" : "LCM25K" },
	9: { "dataId" : "LCM25K" },
	10: { "dataId" : "LCM25K" },
	11: { "dataId" : "LCM25K" },
	12: { "dataId" : "LCM25K" },
	13: { "dataId" : "LCM25K" },

	14: { "dataId" : "LCM25K" },
	15: { "dataId" : "LCM25K" },
	16: { "dataId" : "LCM25K" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 土地条件図レイヤー（人工地形更新版）
dataSetObj.dataSetOverlay_LCM25K_2011 = {
	0: { "dataId" : "LCM25K_2011" },
	1: { "dataId" : "LCM25K_2011" },
	2: { "dataId" : "LCM25K_2011" },
	3: { "dataId" : "LCM25K_2011" },
	4: { "dataId" : "LCM25K_2011" },
	5: { "dataId" : "LCM25K_2011" },
	6: { "dataId" : "LCM25K_2011" },
	7: { "dataId" : "LCM25K_2011" },
	8: { "dataId" : "LCM25K_2011" },
	9: { "dataId" : "LCM25K_2011" },
	10: { "dataId" : "LCM25K_2011" },
	11: { "dataId" : "LCM25K_2011" },
	12: { "dataId" : "LCM25K_2011" },
	13: { "dataId" : "LCM25K_2011" },

	14: { "dataId" : "LCM25K_2011" },
	15: { "dataId" : "LCM25K_2011" },
	16: { "dataId" : "LCM25K_2011" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};


// 沿岸海域土地条件図（昭和63年以前）
dataSetObj.dataSetOverlay_CCM1 = {
	0: { "dataId" : "CCM1" },
	1: { "dataId" : "CCM1" },
	2: { "dataId" : "CCM1" },
	3: { "dataId" : "CCM1" },
	4: { "dataId" : "CCM1" },
	5: { "dataId" : "CCM1" },
	6: { "dataId" : "CCM1" },
	7: { "dataId" : "CCM1" },
	8: { "dataId" : "CCM1" },
	9: { "dataId" : "CCM1" },
	10: { "dataId" : "CCM1" },
	11: { "dataId" : "CCM1" },
	12: { "dataId" : "CCM1" },
	13: { "dataId" : "CCM1" },

	14: { "dataId" : "CCM1" },
	15: { "dataId" : "CCM1" },
	16: { "dataId" : "CCM1" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 沿岸海域土地条件図（平成元年以降）
dataSetObj.dataSetOverlay_CCM2 = {
	0: { "dataId" : "CCM2" },
	1: { "dataId" : "CCM2" },
	2: { "dataId" : "CCM2" },
	3: { "dataId" : "CCM2" },
	4: { "dataId" : "CCM2" },
	5: { "dataId" : "CCM2" },
	6: { "dataId" : "CCM2" },
	7: { "dataId" : "CCM2" },
	8: { "dataId" : "CCM2" },
	9: { "dataId" : "CCM2" },
	10: { "dataId" : "CCM2" },
	11: { "dataId" : "CCM2" },
	12: { "dataId" : "CCM2" },
	13: { "dataId" : "CCM2" },

	14: { "dataId" : "CCM2" },
	15: { "dataId" : "CCM2" },
	16: { "dataId" : "CCM2" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 色別標高図レイヤー
dataSetObj.dataSetOverlay_Relief = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "RELIEF" },
	6: { "dataId" : "RELIEF" },
	7: { "dataId" : "RELIEF" },
	8: { "dataId" : "RELIEF" },
	9: { "dataId" : "RELIEF" },
	10: { "dataId" : "RELIEF" },
	11: { "dataId" : "RELIEF" },
	12: { "dataId" : "RELIEF" },
	13: { "dataId" : "RELIEF" },
	14: { "dataId" : "RELIEF" },
	15: { "dataId" : "RELIEF" },

	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 2007-
dataSetObj.dataSetOverlay_Y2K7 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "photoarea" },
	6: { "dataId" : "photoarea" },
	7: { "dataId" : "photoarea" },
	8: { "dataId" : "photoarea" },
	9: { "dataId" : "photoarea" },
	10: { "dataId" : "photoarea" },
	11: { "dataId" : "photoarea" },
	12: { "dataId" : "photoarea" },
	13: { "dataId" : "photoarea" },
	14: { "dataId" : "photoarea" },

	15: { "dataId" : "ort" },
	16: { "dataId" : "ort" },
	17: { "dataId" : "ort" },

	18: { "dataId" : "ort" }
};

// 1988-
dataSetObj.dataSetOverlay_YK88 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "gazo4area" },
	6: { "dataId" : "gazo4area" },
	7: { "dataId" : "gazo4area" },
	8: { "dataId" : "gazo4area" },
	9: { "dataId" : "gazo4area" },
	10: { "dataId" : "gazo4area" },
	11: { "dataId" : "gazo4area" },
	12: { "dataId" : "gazo4area" },
	13: { "dataId" : "gazo4area" },
	14: { "dataId" : "gazo4area" },

	15: { "dataId" : "gazo4" },
	16: { "dataId" : "gazo4" },
	17: { "dataId" : "gazo4" },

	18: { "dataId" : "gazo4" }
};

// 1984-
dataSetObj.dataSetOverlay_YK84 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "gazo3area" },
	6: { "dataId" : "gazo3area" },
	7: { "dataId" : "gazo3area" },
	8: { "dataId" : "gazo3area" },
	9: { "dataId" : "gazo3area" },
	10: { "dataId" : "gazo3area" },
	11: { "dataId" : "gazo3area" },
	12: { "dataId" : "gazo3area" },
	13: { "dataId" : "gazo3area" },
	14: { "dataId" : "gazo3area" },

	15: { "dataId" : "gazo3" },
	16: { "dataId" : "gazo3" },
	17: { "dataId" : "gazo3" },

	18: { "dataId" : "gazo3" }
};

// 1979-
dataSetObj.dataSetOverlay_YK79 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "gazo2area" },
	6: { "dataId" : "gazo2area" },
	7: { "dataId" : "gazo2area" },
	8: { "dataId" : "gazo2area" },
	9: { "dataId" : "gazo2area" },
	10: { "dataId" : "gazo2area" },
	11: { "dataId" : "gazo2area" },
	12: { "dataId" : "gazo2area" },
	13: { "dataId" : "gazo2area" },
	14: { "dataId" : "gazo2area" },

	15: { "dataId" : "gazo2" },
	16: { "dataId" : "gazo2" },
	17: { "dataId" : "gazo2" },

	18: { "dataId" : "gazo2" }
};

// 1974-
dataSetObj.dataSetOverlay_YK74 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "gazo1area" },
	6: { "dataId" : "gazo1area" },
	7: { "dataId" : "gazo1area" },
	8: { "dataId" : "gazo1area" },
	9: { "dataId" : "gazo1area" },
	10: { "dataId" : "gazo1area" },
	11: { "dataId" : "gazo1area" },
	12: { "dataId" : "gazo1area" },
	13: { "dataId" : "gazo1area" },
	14: { "dataId" : "gazo1area" },

	15: { "dataId" : "gazo1" },
	16: { "dataId" : "gazo1" },
	17: { "dataId" : "gazo1" },

	18: { "dataId" : "gazo1" }
};


// 雌阿寒岳・阿寒岳
dataSetObj.dataSetOverlay_akandake = {
	0: { "dataId" : "16akandake" },
	1: { "dataId" : "16akandake" },
	2: { "dataId" : "16akandake" },
	3: { "dataId" : "16akandake" },
	4: { "dataId" : "16akandake" },
	5: { "dataId" : "16akandake" },
	6: { "dataId" : "16akandake" },
	7: { "dataId" : "16akandake" },
	8: { "dataId" : "16akandake" },
	9: { "dataId" : "16akandake" },
	10: { "dataId" : "16akandake" },
	11: { "dataId" : "16akandake" },
	12: { "dataId" : "16akandake" },
	13: { "dataId" : "16akandake" },
	14: { "dataId" : "16akandake" },
	15: { "dataId" : "16akandake" },
	16: { "dataId" : "16akandake" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 十勝岳
dataSetObj.dataSetOverlay_tokachidake = {
	0: { "dataId" : "02tokachidake" },
	1: { "dataId" : "02tokachidake" },
	2: { "dataId" : "02tokachidake" },
	3: { "dataId" : "02tokachidake" },
	4: { "dataId" : "02tokachidake" },
	5: { "dataId" : "02tokachidake" },
	6: { "dataId" : "02tokachidake" },
	7: { "dataId" : "02tokachidake" },
	8: { "dataId" : "02tokachidake" },
	9: { "dataId" : "02tokachidake" },
	10: { "dataId" : "02tokachidake" },
	11: { "dataId" : "02tokachidake" },
	12: { "dataId" : "02tokachidake" },
	13: { "dataId" : "02tokachidake" },
	14: { "dataId" : "02tokachidake" },
	15: { "dataId" : "02tokachidake" },
	16: { "dataId" : "02tokachidake" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 樽前山
dataSetObj.dataSetOverlay_tarumaesan = {
	0: { "dataId" : "10tarumaesan" },
	1: { "dataId" : "10tarumaesan" },
	2: { "dataId" : "10tarumaesan" },
	3: { "dataId" : "10tarumaesan" },
	4: { "dataId" : "10tarumaesan" },
	5: { "dataId" : "10tarumaesan" },
	6: { "dataId" : "10tarumaesan" },
	7: { "dataId" : "10tarumaesan" },
	8: { "dataId" : "10tarumaesan" },
	9: { "dataId" : "10tarumaesan" },
	10: { "dataId" : "10tarumaesan" },
	11: { "dataId" : "10tarumaesan" },
	12: { "dataId" : "10tarumaesan" },
	13: { "dataId" : "10tarumaesan" },
	14: { "dataId" : "10tarumaesan" },
	15: { "dataId" : "10tarumaesan" },
	16: { "dataId" : "10tarumaesan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 有珠山
dataSetObj.dataSetOverlay_usuzan = {
	0: { "dataId" : "09usuzan" },
	1: { "dataId" : "09usuzan" },
	2: { "dataId" : "09usuzan" },
	3: { "dataId" : "09usuzan" },
	4: { "dataId" : "09usuzan" },
	5: { "dataId" : "09usuzan" },
	6: { "dataId" : "09usuzan" },
	7: { "dataId" : "09usuzan" },
	8: { "dataId" : "09usuzan" },
	9: { "dataId" : "09usuzan" },
	10: { "dataId" : "09usuzan" },
	11: { "dataId" : "09usuzan" },
	12: { "dataId" : "09usuzan" },
	13: { "dataId" : "09usuzan" },
	14: { "dataId" : "09usuzan" },
	15: { "dataId" : "09usuzan" },
	16: { "dataId" : "09usuzan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 北海道駒ケ岳
dataSetObj.dataSetOverlay_komagatake = {
	0: { "dataId" : "05komagatake" },
	1: { "dataId" : "05komagatake" },
	2: { "dataId" : "05komagatake" },
	3: { "dataId" : "05komagatake" },
	4: { "dataId" : "05komagatake" },
	5: { "dataId" : "05komagatake" },
	6: { "dataId" : "05komagatake" },
	7: { "dataId" : "05komagatake" },
	8: { "dataId" : "05komagatake" },
	9: { "dataId" : "05komagatake" },
	10: { "dataId" : "05komagatake" },
	11: { "dataId" : "05komagatake" },
	12: { "dataId" : "05komagatake" },
	13: { "dataId" : "05komagatake" },
	14: { "dataId" : "05komagatake" },
	15: { "dataId" : "05komagatake" },
	16: { "dataId" : "05komagatake" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 岩手山
dataSetObj.dataSetOverlay_iwatesan = {
	0: { "dataId" : "00iwatesan" },
	1: { "dataId" : "00iwatesan" },
	2: { "dataId" : "00iwatesan" },
	3: { "dataId" : "00iwatesan" },
	4: { "dataId" : "00iwatesan" },
	5: { "dataId" : "00iwatesan" },
	6: { "dataId" : "00iwatesan" },
	7: { "dataId" : "00iwatesan" },
	8: { "dataId" : "00iwatesan" },
	9: { "dataId" : "00iwatesan" },
	10: { "dataId" : "00iwatesan" },
	11: { "dataId" : "00iwatesan" },
	12: { "dataId" : "00iwatesan" },
	13: { "dataId" : "00iwatesan" },
	14: { "dataId" : "00iwatesan" },
	15: { "dataId" : "00iwatesan" },
	16: { "dataId" : "00iwatesan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 栗駒山
dataSetObj.dataSetOverlay_kurikomayama = {
	0: { "dataId" : "00kurikomayama" },
	1: { "dataId" : "00kurikomayama" },
	2: { "dataId" : "00kurikomayama" },
	3: { "dataId" : "00kurikomayama" },
	4: { "dataId" : "00kurikomayama" },
	5: { "dataId" : "00kurikomayama" },
	6: { "dataId" : "00kurikomayama" },
	7: { "dataId" : "00kurikomayama" },
	8: { "dataId" : "00kurikomayama" },
	9: { "dataId" : "00kurikomayama" },
	10: { "dataId" : "00kurikomayama" },
	11: { "dataId" : "00kurikomayama" },
	12: { "dataId" : "00kurikomayama" },
	13: { "dataId" : "00kurikomayama" },
	14: { "dataId" : "00kurikomayama" },
	15: { "dataId" : "00kurikomayama" },
	16: { "dataId" : "00kurikomayama" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};


// 安達太良山
dataSetObj.dataSetOverlay_adatarayama = {
	0: { "dataId" : "14adatarayama" },
	1: { "dataId" : "14adatarayama" },
	2: { "dataId" : "14adatarayama" },
	3: { "dataId" : "14adatarayama" },
	4: { "dataId" : "14adatarayama" },
	5: { "dataId" : "14adatarayama" },
	6: { "dataId" : "14adatarayama" },
	7: { "dataId" : "14adatarayama" },
	8: { "dataId" : "14adatarayama" },
	9: { "dataId" : "14adatarayama" },
	10: { "dataId" : "14adatarayama" },
	11: { "dataId" : "14adatarayama" },
	12: { "dataId" : "14adatarayama" },
	13: { "dataId" : "14adatarayama" },
	14: { "dataId" : "14adatarayama" },
	15: { "dataId" : "14adatarayama" },
	16: { "dataId" : "14adatarayama" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};


// 磐梯山
dataSetObj.dataSetOverlay_bandaisan = {
	0: { "dataId" : "11bandaisan" },
	1: { "dataId" : "11bandaisan" },
	2: { "dataId" : "11bandaisan" },
	3: { "dataId" : "11bandaisan" },
	4: { "dataId" : "11bandaisan" },
	5: { "dataId" : "11bandaisan" },
	6: { "dataId" : "11bandaisan" },
	7: { "dataId" : "11bandaisan" },
	8: { "dataId" : "11bandaisan" },
	9: { "dataId" : "11bandaisan" },
	10: { "dataId" : "11bandaisan" },
	11: { "dataId" : "11bandaisan" },
	12: { "dataId" : "11bandaisan" },
	13: { "dataId" : "11bandaisan" },
	14: { "dataId" : "11bandaisan" },
	15: { "dataId" : "11bandaisan" },
	16: { "dataId" : "11bandaisan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 伊豆大島
dataSetObj.dataSetOverlay_izuoshima = {
	0: { "dataId" : "13izuoshima" },
	1: { "dataId" : "13izuoshima" },
	2: { "dataId" : "13izuoshima" },
	3: { "dataId" : "13izuoshima" },
	4: { "dataId" : "13izuoshima" },
	5: { "dataId" : "13izuoshima" },
	6: { "dataId" : "13izuoshima" },
	7: { "dataId" : "13izuoshima" },
	8: { "dataId" : "13izuoshima" },
	9: { "dataId" : "13izuoshima" },
	10: { "dataId" : "13izuoshima" },
	11: { "dataId" : "13izuoshima" },
	12: { "dataId" : "13izuoshima" },
	13: { "dataId" : "13izuoshima" },
	14: { "dataId" : "13izuoshima" },
	15: { "dataId" : "13izuoshima" },
	16: { "dataId" : "13izuoshima" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 伊豆大島(火山基本図)
dataSetObj.dataSetOverlay_izuoshima_kihon = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "vbm22izuoshima" },
	2: { "dataId" : "vbm22izuoshima" },
	3: { "dataId" : "vbm22izuoshima" },
	4: { "dataId" : "vbm22izuoshima" },
	5: { "dataId" : "vbm22izuoshima" },
	6: { "dataId" : "vbm22izuoshima" },
	7: { "dataId" : "vbm22izuoshima" },
	8: { "dataId" : "vbm22izuoshima" },
	9: { "dataId" : "vbm22izuoshima" },
	10: { "dataId" : "vbm22izuoshima" },
	11: { "dataId" : "vbm22izuoshima" },
	12: { "dataId" : "vbm22izuoshima" },
	13: { "dataId" : "vbm22izuoshima" },
	14: { "dataId" : "vbm22izuoshima" },
	15: { "dataId" : "vbm22izuoshima" },
	16: { "dataId" : "vbm22izuoshima" },
	17: { "dataId" : "vbm22izuoshima" },
	18: { "dataId" : "TRANSPARENT" }
};

// 三宅島
dataSetObj.dataSetOverlay_miyakezima = {
	0: { "dataId" : "06miyakezima" },
	1: { "dataId" : "06miyakezima" },
	2: { "dataId" : "06miyakezima" },
	3: { "dataId" : "06miyakezima" },
	4: { "dataId" : "06miyakezima" },
	5: { "dataId" : "06miyakezima" },
	6: { "dataId" : "06miyakezima" },
	7: { "dataId" : "06miyakezima" },
	8: { "dataId" : "06miyakezima" },
	9: { "dataId" : "06miyakezima" },
	10: { "dataId" : "06miyakezima" },
	11: { "dataId" : "06miyakezima" },
	12: { "dataId" : "06miyakezima" },
	13: { "dataId" : "06miyakezima" },
	14: { "dataId" : "06miyakezima" },
	15: { "dataId" : "06miyakezima" },
	16: { "dataId" : "06miyakezima" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 草津白根山
dataSetObj.dataSetOverlay_kusatsushiranesan = {
	0: { "dataId" : "03kusatsushiranesan" },
	1: { "dataId" : "03kusatsushiranesan" },
	2: { "dataId" : "03kusatsushiranesan" },
	3: { "dataId" : "03kusatsushiranesan" },
	4: { "dataId" : "03kusatsushiranesan" },
	5: { "dataId" : "03kusatsushiranesan" },
	6: { "dataId" : "03kusatsushiranesan" },
	7: { "dataId" : "03kusatsushiranesan" },
	8: { "dataId" : "03kusatsushiranesan" },
	9: { "dataId" : "03kusatsushiranesan" },
	10: { "dataId" : "03kusatsushiranesan" },
	11: { "dataId" : "03kusatsushiranesan" },
	12: { "dataId" : "03kusatsushiranesan" },
	13: { "dataId" : "03kusatsushiranesan" },
	14: { "dataId" : "03kusatsushiranesan" },
	15: { "dataId" : "03kusatsushiranesan" },
	16: { "dataId" : "03kusatsushiranesan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 富士山
dataSetObj.dataSetOverlay_fujisan = {
	0: { "dataId" : "12fujisan" },
	1: { "dataId" : "12fujisan" },
	2: { "dataId" : "12fujisan" },
	3: { "dataId" : "12fujisan" },
	4: { "dataId" : "12fujisan" },
	5: { "dataId" : "12fujisan" },
	6: { "dataId" : "12fujisan" },
	7: { "dataId" : "12fujisan" },
	8: { "dataId" : "12fujisan" },
	9: { "dataId" : "12fujisan" },
	10: { "dataId" : "12fujisan" },
	11: { "dataId" : "12fujisan" },
	12: { "dataId" : "12fujisan" },
	13: { "dataId" : "12fujisan" },
	14: { "dataId" : "12fujisan" },
	15: { "dataId" : "12fujisan" },
	16: { "dataId" : "12fujisan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 御嶽山
dataSetObj.dataSetOverlay_ontakesan = {
	0: { "dataId" : "00ontakesan" },
	1: { "dataId" : "00ontakesan" },
	2: { "dataId" : "00ontakesan" },
	3: { "dataId" : "00ontakesan" },
	4: { "dataId" : "00ontakesan" },
	5: { "dataId" : "00ontakesan" },
	6: { "dataId" : "00ontakesan" },
	7: { "dataId" : "00ontakesan" },
	8: { "dataId" : "00ontakesan" },
	9: { "dataId" : "00ontakesan" },
	10: { "dataId" : "00ontakesan" },
	11: { "dataId" : "00ontakesan" },
	12: { "dataId" : "00ontakesan" },
	13: { "dataId" : "00ontakesan" },
	14: { "dataId" : "00ontakesan" },
	15: { "dataId" : "00ontakesan" },
	16: { "dataId" : "00ontakesan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// くじゅう連山
dataSetObj.dataSetOverlay_kujirenzan = {
	0: { "dataId" : "15kujirenzan" },
	1: { "dataId" : "15kujirenzan" },
	2: { "dataId" : "15kujirenzan" },
	3: { "dataId" : "15kujirenzan" },
	4: { "dataId" : "15kujirenzan" },
	5: { "dataId" : "15kujirenzan" },
	6: { "dataId" : "15kujirenzan" },
	7: { "dataId" : "15kujirenzan" },
	8: { "dataId" : "15kujirenzan" },
	9: { "dataId" : "15kujirenzan" },
	10: { "dataId" : "15kujirenzan" },
	11: { "dataId" : "15kujirenzan" },
	12: { "dataId" : "15kujirenzan" },
	13: { "dataId" : "15kujirenzan" },
	14: { "dataId" : "15kujirenzan" },
	15: { "dataId" : "15kujirenzan" },
	16: { "dataId" : "15kujirenzan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 阿蘇山
dataSetObj.dataSetOverlay_asosan = {
	0: { "dataId" : "04asosan" },
	1: { "dataId" : "04asosan" },
	2: { "dataId" : "04asosan" },
	3: { "dataId" : "04asosan" },
	4: { "dataId" : "04asosan" },
	5: { "dataId" : "04asosan" },
	6: { "dataId" : "04asosan" },
	7: { "dataId" : "04asosan" },
	8: { "dataId" : "04asosan" },
	9: { "dataId" : "04asosan" },
	10: { "dataId" : "04asosan" },
	11: { "dataId" : "04asosan" },
	12: { "dataId" : "04asosan" },
	13: { "dataId" : "04asosan" },
	14: { "dataId" : "04asosan" },
	15: { "dataId" : "04asosan" },
	16: { "dataId" : "04asosan" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 雲仙岳
dataSetObj.dataSetOverlay_unzendake = {
	0: { "dataId" : "07unzendake" },
	1: { "dataId" : "07unzendake" },
	2: { "dataId" : "07unzendake" },
	3: { "dataId" : "07unzendake" },
	4: { "dataId" : "07unzendake" },
	5: { "dataId" : "07unzendake" },
	6: { "dataId" : "07unzendake" },
	7: { "dataId" : "07unzendake" },
	8: { "dataId" : "07unzendake" },
	9: { "dataId" : "07unzendake" },
	10: { "dataId" : "07unzendake" },
	11: { "dataId" : "07unzendake" },
	12: { "dataId" : "07unzendake" },
	13: { "dataId" : "07unzendake" },
	14: { "dataId" : "07unzendake" },
	15: { "dataId" : "07unzendake" },
	16: { "dataId" : "07unzendake" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 霧島山
dataSetObj.dataSetOverlay_kirishimayama = {
	0: { "dataId" : "08kirishimayama" },
	1: { "dataId" : "08kirishimayama" },
	2: { "dataId" : "08kirishimayama" },
	3: { "dataId" : "08kirishimayama" },
	4: { "dataId" : "08kirishimayama" },
	5: { "dataId" : "08kirishimayama" },
	6: { "dataId" : "08kirishimayama" },
	7: { "dataId" : "08kirishimayama" },
	8: { "dataId" : "08kirishimayama" },
	9: { "dataId" : "08kirishimayama" },
	10: { "dataId" : "08kirishimayama" },
	11: { "dataId" : "08kirishimayama" },
	12: { "dataId" : "08kirishimayama" },
	13: { "dataId" : "08kirishimayama" },
	14: { "dataId" : "08kirishimayama" },
	15: { "dataId" : "08kirishimayama" },
	16: { "dataId" : "08kirishimayama" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 桜島
dataSetObj.dataSetOverlay_sakurazima = {
	0: { "dataId" : "01sakurazima" },
	1: { "dataId" : "01sakurazima" },
	2: { "dataId" : "01sakurazima" },
	3: { "dataId" : "01sakurazima" },
	4: { "dataId" : "01sakurazima" },
	5: { "dataId" : "01sakurazima" },
	6: { "dataId" : "01sakurazima" },
	7: { "dataId" : "01sakurazima" },
	8: { "dataId" : "01sakurazima" },
	9: { "dataId" : "01sakurazima" },
	10: { "dataId" : "01sakurazima" },
	11: { "dataId" : "01sakurazima" },
	12: { "dataId" : "01sakurazima" },
	13: { "dataId" : "01sakurazima" },
	14: { "dataId" : "01sakurazima" },
	15: { "dataId" : "01sakurazima" },
	16: { "dataId" : "01sakurazima" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 薩摩硫黄島
dataSetObj.dataSetOverlay_satsumaiojima = {
	0: { "dataId" : "17satsumaiojima" },
	1: { "dataId" : "17satsumaiojima" },
	2: { "dataId" : "17satsumaiojima" },
	3: { "dataId" : "17satsumaiojima" },
	4: { "dataId" : "17satsumaiojima" },
	5: { "dataId" : "17satsumaiojima" },
	6: { "dataId" : "17satsumaiojima" },
	7: { "dataId" : "17satsumaiojima" },
	8: { "dataId" : "17satsumaiojima" },
	9: { "dataId" : "17satsumaiojima" },
	10: { "dataId" : "17satsumaiojima" },
	11: { "dataId" : "17satsumaiojima" },
	12: { "dataId" : "17satsumaiojima" },
	13: { "dataId" : "17satsumaiojima" },
	14: { "dataId" : "17satsumaiojima" },
	15: { "dataId" : "17satsumaiojima" },
	16: { "dataId" : "17satsumaiojima" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-首都圏-2005
dataSetObj.dataSetOverlay_capital2005 = {
	0: { "dataId" : "capital2005" },
	1: { "dataId" : "capital2005" },
	2: { "dataId" : "capital2005" },
	3: { "dataId" : "capital2005" },
	4: { "dataId" : "capital2005" },
	5: { "dataId" : "capital2005" },
	6: { "dataId" : "capital2005" },
	7: { "dataId" : "capital2005" },
	8: { "dataId" : "capital2005" },
	9: { "dataId" : "capital2005" },
	10: { "dataId" : "capital2005" },
	11: { "dataId" : "capital2005" },
	12: { "dataId" : "capital2005" },
	13: { "dataId" : "capital2005" },
	14: { "dataId" : "capital2005" },
	15: { "dataId" : "capital2005" },
	16: { "dataId" : "capital2005" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-首都圏-2000
dataSetObj.dataSetOverlay_capital2000 = {
	0: { "dataId" : "capital2000" },
	1: { "dataId" : "capital2000" },
	2: { "dataId" : "capital2000" },
	3: { "dataId" : "capital2000" },
	4: { "dataId" : "capital2000" },
	5: { "dataId" : "capital2000" },
	6: { "dataId" : "capital2000" },
	7: { "dataId" : "capital2000" },
	8: { "dataId" : "capital2000" },
	9: { "dataId" : "capital2000" },
	10: { "dataId" : "capital2000" },
	11: { "dataId" : "capital2000" },
	12: { "dataId" : "capital2000" },
	13: { "dataId" : "capital2000" },
	14: { "dataId" : "capital2000" },
	15: { "dataId" : "capital2000" },
	16: { "dataId" : "capital2000" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-首都圏-1994
dataSetObj.dataSetOverlay_capital1994 = {
	0: { "dataId" : "capital1994" },
	1: { "dataId" : "capital1994" },
	2: { "dataId" : "capital1994" },
	3: { "dataId" : "capital1994" },
	4: { "dataId" : "capital1994" },
	5: { "dataId" : "capital1994" },
	6: { "dataId" : "capital1994" },
	7: { "dataId" : "capital1994" },
	8: { "dataId" : "capital1994" },
	9: { "dataId" : "capital1994" },
	10: { "dataId" : "capital1994" },
	11: { "dataId" : "capital1994" },
	12: { "dataId" : "capital1994" },
	13: { "dataId" : "capital1994" },
	14: { "dataId" : "capital1994" },
	15: { "dataId" : "capital1994" },
	16: { "dataId" : "capital1994" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-首都圏-1989
dataSetObj.dataSetOverlay_capital1989 = {
	0: { "dataId" : "capital1989" },
	1: { "dataId" : "capital1989" },
	2: { "dataId" : "capital1989" },
	3: { "dataId" : "capital1989" },
	4: { "dataId" : "capital1989" },
	5: { "dataId" : "capital1989" },
	6: { "dataId" : "capital1989" },
	7: { "dataId" : "capital1989" },
	8: { "dataId" : "capital1989" },
	9: { "dataId" : "capital1989" },
	10: { "dataId" : "capital1989" },
	11: { "dataId" : "capital1989" },
	12: { "dataId" : "capital1989" },
	13: { "dataId" : "capital1989" },
	14: { "dataId" : "capital1989" },
	15: { "dataId" : "capital1989" },
	16: { "dataId" : "capital1989" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-首都圏-1984
dataSetObj.dataSetOverlay_capital1984 = {
	0: { "dataId" : "capital1984" },
	1: { "dataId" : "capital1984" },
	2: { "dataId" : "capital1984" },
	3: { "dataId" : "capital1984" },
	4: { "dataId" : "capital1984" },
	5: { "dataId" : "capital1984" },
	6: { "dataId" : "capital1984" },
	7: { "dataId" : "capital1984" },
	8: { "dataId" : "capital1984" },
	9: { "dataId" : "capital1984" },
	10: { "dataId" : "capital1984" },
	11: { "dataId" : "capital1984" },
	12: { "dataId" : "capital1984" },
	13: { "dataId" : "capital1984" },
	14: { "dataId" : "capital1984" },
	15: { "dataId" : "capital1984" },
	16: { "dataId" : "capital1984" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-首都圏-1979
dataSetObj.dataSetOverlay_capital1979 = {
	0: { "dataId" : "capital1979" },
	1: { "dataId" : "capital1979" },
	2: { "dataId" : "capital1979" },
	3: { "dataId" : "capital1979" },
	4: { "dataId" : "capital1979" },
	5: { "dataId" : "capital1979" },
	6: { "dataId" : "capital1979" },
	7: { "dataId" : "capital1979" },
	8: { "dataId" : "capital1979" },
	9: { "dataId" : "capital1979" },
	10: { "dataId" : "capital1979" },
	11: { "dataId" : "capital1979" },
	12: { "dataId" : "capital1979" },
	13: { "dataId" : "capital1979" },
	14: { "dataId" : "capital1979" },
	15: { "dataId" : "capital1979" },
	16: { "dataId" : "capital1979" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-首都圏-1974
dataSetObj.dataSetOverlay_capital1974 = {
	0: { "dataId" : "capital1974" },
	1: { "dataId" : "capital1974" },
	2: { "dataId" : "capital1974" },
	3: { "dataId" : "capital1974" },
	4: { "dataId" : "capital1974" },
	5: { "dataId" : "capital1974" },
	6: { "dataId" : "capital1974" },
	7: { "dataId" : "capital1974" },
	8: { "dataId" : "capital1974" },
	9: { "dataId" : "capital1974" },
	10: { "dataId" : "capital1974" },
	11: { "dataId" : "capital1974" },
	12: { "dataId" : "capital1974" },
	13: { "dataId" : "capital1974" },
	14: { "dataId" : "capital1974" },
	15: { "dataId" : "capital1974" },
	16: { "dataId" : "capital1974" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-中部圏-2003
dataSetObj.dataSetOverlay_chubu2003 = {
	0: { "dataId" : "chubu2003" },
	1: { "dataId" : "chubu2003" },
	2: { "dataId" : "chubu2003" },
	3: { "dataId" : "chubu2003" },
	4: { "dataId" : "chubu2003" },
	5: { "dataId" : "chubu2003" },
	6: { "dataId" : "chubu2003" },
	7: { "dataId" : "chubu2003" },
	8: { "dataId" : "chubu2003" },
	9: { "dataId" : "chubu2003" },
	10: { "dataId" : "chubu2003" },
	11: { "dataId" : "chubu2003" },
	12: { "dataId" : "chubu2003" },
	13: { "dataId" : "chubu2003" },
	14: { "dataId" : "chubu2003" },
	15: { "dataId" : "chubu2003" },
	16: { "dataId" : "chubu2003" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-中部圏-1997
dataSetObj.dataSetOverlay_chubu1997 = {
	0: { "dataId" : "chubu1997" },
	1: { "dataId" : "chubu1997" },
	2: { "dataId" : "chubu1997" },
	3: { "dataId" : "chubu1997" },
	4: { "dataId" : "chubu1997" },
	5: { "dataId" : "chubu1997" },
	6: { "dataId" : "chubu1997" },
	7: { "dataId" : "chubu1997" },
	8: { "dataId" : "chubu1997" },
	9: { "dataId" : "chubu1997" },
	10: { "dataId" : "chubu1997" },
	11: { "dataId" : "chubu1997" },
	12: { "dataId" : "chubu1997" },
	13: { "dataId" : "chubu1997" },
	14: { "dataId" : "chubu1997" },
	15: { "dataId" : "chubu1997" },
	16: { "dataId" : "chubu1997" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-中部圏-1991
dataSetObj.dataSetOverlay_chubu1991 = {
	0: { "dataId" : "chubu1991" },
	1: { "dataId" : "chubu1991" },
	2: { "dataId" : "chubu1991" },
	3: { "dataId" : "chubu1991" },
	4: { "dataId" : "chubu1991" },
	5: { "dataId" : "chubu1991" },
	6: { "dataId" : "chubu1991" },
	7: { "dataId" : "chubu1991" },
	8: { "dataId" : "chubu1991" },
	9: { "dataId" : "chubu1991" },
	10: { "dataId" : "chubu1991" },
	11: { "dataId" : "chubu1991" },
	12: { "dataId" : "chubu1991" },
	13: { "dataId" : "chubu1991" },
	14: { "dataId" : "chubu1991" },
	15: { "dataId" : "chubu1991" },
	16: { "dataId" : "chubu1991" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-中部圏-1987
dataSetObj.dataSetOverlay_chubu1987 = {
	0: { "dataId" : "chubu1987" },
	1: { "dataId" : "chubu1987" },
	2: { "dataId" : "chubu1987" },
	3: { "dataId" : "chubu1987" },
	4: { "dataId" : "chubu1987" },
	5: { "dataId" : "chubu1987" },
	6: { "dataId" : "chubu1987" },
	7: { "dataId" : "chubu1987" },
	8: { "dataId" : "chubu1987" },
	9: { "dataId" : "chubu1987" },
	10: { "dataId" : "chubu1987" },
	11: { "dataId" : "chubu1987" },
	12: { "dataId" : "chubu1987" },
	13: { "dataId" : "chubu1987" },
	14: { "dataId" : "chubu1987" },
	15: { "dataId" : "chubu1987" },
	16: { "dataId" : "chubu1987" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-中部圏-1982
dataSetObj.dataSetOverlay_chubu1982 = {
	0: { "dataId" : "chubu1982" },
	1: { "dataId" : "chubu1982" },
	2: { "dataId" : "chubu1982" },
	3: { "dataId" : "chubu1982" },
	4: { "dataId" : "chubu1982" },
	5: { "dataId" : "chubu1982" },
	6: { "dataId" : "chubu1982" },
	7: { "dataId" : "chubu1982" },
	8: { "dataId" : "chubu1982" },
	9: { "dataId" : "chubu1982" },
	10: { "dataId" : "chubu1982" },
	11: { "dataId" : "chubu1982" },
	12: { "dataId" : "chubu1982" },
	13: { "dataId" : "chubu1982" },
	14: { "dataId" : "chubu1982" },
	15: { "dataId" : "chubu1982" },
	16: { "dataId" : "chubu1982" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-中部圏-1977
dataSetObj.dataSetOverlay_chubu1977 = {
	0: { "dataId" : "chubu1977" },
	1: { "dataId" : "chubu1977" },
	2: { "dataId" : "chubu1977" },
	3: { "dataId" : "chubu1977" },
	4: { "dataId" : "chubu1977" },
	5: { "dataId" : "chubu1977" },
	6: { "dataId" : "chubu1977" },
	7: { "dataId" : "chubu1977" },
	8: { "dataId" : "chubu1977" },
	9: { "dataId" : "chubu1977" },
	10: { "dataId" : "chubu1977" },
	11: { "dataId" : "chubu1977" },
	12: { "dataId" : "chubu1977" },
	13: { "dataId" : "chubu1977" },
	14: { "dataId" : "chubu1977" },
	15: { "dataId" : "chubu1977" },
	16: { "dataId" : "chubu1977" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-近畿圏-2008
dataSetObj.dataSetOverlay_kinki2008 = {
	0: { "dataId" : "kinki2008" },
	1: { "dataId" : "kinki2008" },
	2: { "dataId" : "kinki2008" },
	3: { "dataId" : "kinki2008" },
	4: { "dataId" : "kinki2008" },
	5: { "dataId" : "kinki2008" },
	6: { "dataId" : "kinki2008" },
	7: { "dataId" : "kinki2008" },
	8: { "dataId" : "kinki2008" },
	9: { "dataId" : "kinki2008" },
	10: { "dataId" : "kinki2008" },
	11: { "dataId" : "kinki2008" },
	12: { "dataId" : "kinki2008" },
	13: { "dataId" : "kinki2008" },
	14: { "dataId" : "kinki2008" },
	15: { "dataId" : "kinki2008" },
	16: { "dataId" : "kinki2008" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-近畿圏-2001
dataSetObj.dataSetOverlay_kinki2001 = {
	0: { "dataId" : "kinki2001" },
	1: { "dataId" : "kinki2001" },
	2: { "dataId" : "kinki2001" },
	3: { "dataId" : "kinki2001" },
	4: { "dataId" : "kinki2001" },
	5: { "dataId" : "kinki2001" },
	6: { "dataId" : "kinki2001" },
	7: { "dataId" : "kinki2001" },
	8: { "dataId" : "kinki2001" },
	9: { "dataId" : "kinki2001" },
	10: { "dataId" : "kinki2001" },
	11: { "dataId" : "kinki2001" },
	12: { "dataId" : "kinki2001" },
	13: { "dataId" : "kinki2001" },
	14: { "dataId" : "kinki2001" },
	15: { "dataId" : "kinki2001" },
	16: { "dataId" : "kinki2001" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-近畿圏-1996
dataSetObj.dataSetOverlay_kinki1996 = {
	0: { "dataId" : "kinki1996" },
	1: { "dataId" : "kinki1996" },
	2: { "dataId" : "kinki1996" },
	3: { "dataId" : "kinki1996" },
	4: { "dataId" : "kinki1996" },
	5: { "dataId" : "kinki1996" },
	6: { "dataId" : "kinki1996" },
	7: { "dataId" : "kinki1996" },
	8: { "dataId" : "kinki1996" },
	9: { "dataId" : "kinki1996" },
	10: { "dataId" : "kinki1996" },
	11: { "dataId" : "kinki1996" },
	12: { "dataId" : "kinki1996" },
	13: { "dataId" : "kinki1996" },
	14: { "dataId" : "kinki1996" },
	15: { "dataId" : "kinki1996" },
	16: { "dataId" : "kinki1996" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-近畿圏-1991
dataSetObj.dataSetOverlay_kinki1991 = {
	0: { "dataId" : "kinki1991" },
	1: { "dataId" : "kinki1991" },
	2: { "dataId" : "kinki1991" },
	3: { "dataId" : "kinki1991" },
	4: { "dataId" : "kinki1991" },
	5: { "dataId" : "kinki1991" },
	6: { "dataId" : "kinki1991" },
	7: { "dataId" : "kinki1991" },
	8: { "dataId" : "kinki1991" },
	9: { "dataId" : "kinki1991" },
	10: { "dataId" : "kinki1991" },
	11: { "dataId" : "kinki1991" },
	12: { "dataId" : "kinki1991" },
	13: { "dataId" : "kinki1991" },
	14: { "dataId" : "kinki1991" },
	15: { "dataId" : "kinki1991" },
	16: { "dataId" : "kinki1991" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-近畿圏-1985
dataSetObj.dataSetOverlay_kinki1985 = {
	0: { "dataId" : "kinki1985" },
	1: { "dataId" : "kinki1985" },
	2: { "dataId" : "kinki1985" },
	3: { "dataId" : "kinki1985" },
	4: { "dataId" : "kinki1985" },
	5: { "dataId" : "kinki1985" },
	6: { "dataId" : "kinki1985" },
	7: { "dataId" : "kinki1985" },
	8: { "dataId" : "kinki1985" },
	9: { "dataId" : "kinki1985" },
	10: { "dataId" : "kinki1985" },
	11: { "dataId" : "kinki1985" },
	12: { "dataId" : "kinki1985" },
	13: { "dataId" : "kinki1985" },
	14: { "dataId" : "kinki1985" },
	15: { "dataId" : "kinki1985" },
	16: { "dataId" : "kinki1985" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-近畿圏-1979
dataSetObj.dataSetOverlay_kinki1979 = {
	0: { "dataId" : "kinki1979" },
	1: { "dataId" : "kinki1979" },
	2: { "dataId" : "kinki1979" },
	3: { "dataId" : "kinki1979" },
	4: { "dataId" : "kinki1979" },
	5: { "dataId" : "kinki1979" },
	6: { "dataId" : "kinki1979" },
	7: { "dataId" : "kinki1979" },
	8: { "dataId" : "kinki1979" },
	9: { "dataId" : "kinki1979" },
	10: { "dataId" : "kinki1979" },
	11: { "dataId" : "kinki1979" },
	12: { "dataId" : "kinki1979" },
	13: { "dataId" : "kinki1979" },
	14: { "dataId" : "kinki1979" },
	15: { "dataId" : "kinki1979" },
	16: { "dataId" : "kinki1979" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 宅地利用動向調査-近畿圏-1974
dataSetObj.dataSetOverlay_kinki1974 = {
	0: { "dataId" : "kinki1974" },
	1: { "dataId" : "kinki1974" },
	2: { "dataId" : "kinki1974" },
	3: { "dataId" : "kinki1974" },
	4: { "dataId" : "kinki1974" },
	5: { "dataId" : "kinki1974" },
	6: { "dataId" : "kinki1974" },
	7: { "dataId" : "kinki1974" },
	8: { "dataId" : "kinki1974" },
	9: { "dataId" : "kinki1974" },
	10: { "dataId" : "kinki1974" },
	11: { "dataId" : "kinki1974" },
	12: { "dataId" : "kinki1974" },
	13: { "dataId" : "kinki1974" },
	14: { "dataId" : "kinki1974" },
	15: { "dataId" : "kinki1974" },
	16: { "dataId" : "kinki1974" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 明治前期の低湿地
dataSetObj.dataSetOverlay_MeijiSwale = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "SWALE" },
	6: { "dataId" : "SWALE" },
	7: { "dataId" : "SWALE" },
	8: { "dataId" : "SWALE" },
	9: { "dataId" : "SWALE" },
	10: { "dataId" : "SWALE" },
	11: { "dataId" : "SWALE" },
	12: { "dataId" : "SWALE" },
	13: { "dataId" : "SWALE" },
	14: { "dataId" : "SWALE" },
	15: { "dataId" : "SWALE" },
	16: { "dataId" : "SWALE" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 湖沼図（平成2年以前）
dataSetObj.dataSetOverlay_LAKE1 = {
	0: { "dataId" : "LAKE1" },
	1: { "dataId" : "LAKE1" },
	2: { "dataId" : "LAKE1" },
	3: { "dataId" : "LAKE1" },
	4: { "dataId" : "LAKE1" },
	5: { "dataId" : "LAKE1" },
	6: { "dataId" : "LAKE1" },
	7: { "dataId" : "LAKE1" },
	8: { "dataId" : "LAKE1" },
	9: { "dataId" : "LAKE1" },
	10: { "dataId" : "LAKE1" },
	11: { "dataId" : "LAKE1" },
	12: { "dataId" : "LAKE1" },
	13: { "dataId" : "LAKE1" },
	14: { "dataId" : "LAKE1" },
	15: { "dataId" : "LAKE1" },
	16: { "dataId" : "LAKE1" },
	17: { "dataId" : "LAKE1" },

	18: { "dataId" : "TRANSPARENT" }
};

// 湖沼図（平成3年以降）
dataSetObj.dataSetOverlay_LAKE2 = {
	0: { "dataId" : "LAKE2" },
	1: { "dataId" : "LAKE2" },
	2: { "dataId" : "LAKE2" },
	3: { "dataId" : "LAKE2" },
	4: { "dataId" : "LAKE2" },
	5: { "dataId" : "LAKE2" },
	6: { "dataId" : "LAKE2" },
	7: { "dataId" : "LAKE2" },
	8: { "dataId" : "LAKE2" },
	9: { "dataId" : "LAKE2" },
	10: { "dataId" : "LAKE2" },
	11: { "dataId" : "LAKE2" },
	12: { "dataId" : "LAKE2" },
	13: { "dataId" : "LAKE2" },
	14: { "dataId" : "LAKE2" },
	15: { "dataId" : "LAKE2" },
	16: { "dataId" : "LAKE2" },
	17: { "dataId" : "LAKE2" },

	18: { "dataId" : "TRANSPARENT" }
};

// 土地被覆
dataSetObj.dataSetOverlay_GLCNMO2 = {
	0: { "dataId" : "GMLD_glcnmo2" },
	1: { "dataId" : "GMLD_glcnmo2" },
	2: { "dataId" : "GMLD_glcnmo2" },
	3: { "dataId" : "GMLD_glcnmo2" },
	4: { "dataId" : "GMLD_glcnmo2" },
	5: { "dataId" : "GMLD_glcnmo2" },
	6: { "dataId" : "GMLD_glcnmo2" },
	7: { "dataId" : "GMLD_glcnmo2" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 植生
dataSetObj.dataSetOverlay_PTC2 = {
	0: { "dataId" : "GMLD_ptc2" },
	1: { "dataId" : "GMLD_ptc2" },
	2: { "dataId" : "GMLD_ptc2" },
	3: { "dataId" : "GMLD_ptc2" },
	4: { "dataId" : "GMLD_ptc2" },
	5: { "dataId" : "GMLD_ptc2" },
	6: { "dataId" : "GMLD_ptc2" },
	7: { "dataId" : "GMLD_ptc2" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 都市圏活断層図
dataSetObj.dataSetOverlay_FM = {
	0: { "dataId" : "FM" },
	1: { "dataId" : "FM" },
	2: { "dataId" : "FM" },
	3: { "dataId" : "FM" },
	4: { "dataId" : "FM" },
	5: { "dataId" : "FM" },
	6: { "dataId" : "FM" },
	7: { "dataId" : "FM" },
	8: { "dataId" : "FM" },
	9: { "dataId" : "FM" },
	10: { "dataId" : "FM" },
	11: { "dataId" : "FM" },
	12: { "dataId" : "FM" },
	13: { "dataId" : "FM" },

	14: { "dataId" : "FM" },
	15: { "dataId" : "FM" },
	16: { "dataId" : "FM" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 火山基本図
// 雌阿寒岳
dataSetObj.dataSetOverlay_vbm01meakan = {
	0: { "dataId" : "vbm01meakan" },
	1: { "dataId" : "vbm01meakan" },
	2: { "dataId" : "vbm01meakan" },
	3: { "dataId" : "vbm01meakan" },
	4: { "dataId" : "vbm01meakan" },
	5: { "dataId" : "vbm01meakan" },
	6: { "dataId" : "vbm01meakan" },
	7: { "dataId" : "vbm01meakan" },
	8: { "dataId" : "vbm01meakan" },
	9: { "dataId" : "vbm01meakan" },
	10: { "dataId" : "vbm01meakan" },
	11: { "dataId" : "vbm01meakan" },
	12: { "dataId" : "vbm01meakan" },
	13: { "dataId" : "vbm01meakan" },
	14: { "dataId" : "vbm01meakan" },
	15: { "dataId" : "vbm01meakan" },
	16: { "dataId" : "vbm01meakan" },
	17: { "dataId" : "vbm01meakan" },
	18: { "dataId" : "TRANSPARENT" }
};

// 十勝岳
dataSetObj.dataSetOverlay_vbm02tokachi = {
	0: { "dataId" : "vbm02tokachi" },
	1: { "dataId" : "vbm02tokachi" },
	2: { "dataId" : "vbm02tokachi" },
	3: { "dataId" : "vbm02tokachi" },
	4: { "dataId" : "vbm02tokachi" },
	5: { "dataId" : "vbm02tokachi" },
	6: { "dataId" : "vbm02tokachi" },
	7: { "dataId" : "vbm02tokachi" },
	8: { "dataId" : "vbm02tokachi" },
	9: { "dataId" : "vbm02tokachi" },
	10: { "dataId" : "vbm02tokachi" },
	11: { "dataId" : "vbm02tokachi" },
	12: { "dataId" : "vbm02tokachi" },
	13: { "dataId" : "vbm02tokachi" },
	14: { "dataId" : "vbm02tokachi" },
	15: { "dataId" : "vbm02tokachi" },
	16: { "dataId" : "vbm02tokachi" },
	17: { "dataId" : "vbm02tokachi" },
	18: { "dataId" : "TRANSPARENT" }
};

// 樽前山
dataSetObj.dataSetOverlay_vbm03tarumae = {
	0: { "dataId" : "vbm03tarumae" },
	1: { "dataId" : "vbm03tarumae" },
	2: { "dataId" : "vbm03tarumae" },
	3: { "dataId" : "vbm03tarumae" },
	4: { "dataId" : "vbm03tarumae" },
	5: { "dataId" : "vbm03tarumae" },
	6: { "dataId" : "vbm03tarumae" },
	7: { "dataId" : "vbm03tarumae" },
	8: { "dataId" : "vbm03tarumae" },
	9: { "dataId" : "vbm03tarumae" },
	10: { "dataId" : "vbm03tarumae" },
	11: { "dataId" : "vbm03tarumae" },
	12: { "dataId" : "vbm03tarumae" },
	13: { "dataId" : "vbm03tarumae" },
	14: { "dataId" : "vbm03tarumae" },
	15: { "dataId" : "vbm03tarumae" },
	16: { "dataId" : "vbm03tarumae" },
	17: { "dataId" : "vbm03tarumae" },
	18: { "dataId" : "TRANSPARENT" }
};

// 有珠山
dataSetObj.dataSetOverlay_vbm04usu = {
	0: { "dataId" : "vbm04usu" },
	1: { "dataId" : "vbm04usu" },
	2: { "dataId" : "vbm04usu" },
	3: { "dataId" : "vbm04usu" },
	4: { "dataId" : "vbm04usu" },
	5: { "dataId" : "vbm04usu" },
	6: { "dataId" : "vbm04usu" },
	7: { "dataId" : "vbm04usu" },
	8: { "dataId" : "vbm04usu" },
	9: { "dataId" : "vbm04usu" },
	10: { "dataId" : "vbm04usu" },
	11: { "dataId" : "vbm04usu" },
	12: { "dataId" : "vbm04usu" },
	13: { "dataId" : "vbm04usu" },
	14: { "dataId" : "vbm04usu" },
	15: { "dataId" : "vbm04usu" },
	16: { "dataId" : "vbm04usu" },
	17: { "dataId" : "vbm04usu" },
	18: { "dataId" : "TRANSPARENT" }
};

// 北海道駒ヶ岳
dataSetObj.dataSetOverlay_vbm05hokkaidokoma = {
	0: { "dataId" : "vbm05hokkaidokoma" },
	1: { "dataId" : "vbm05hokkaidokoma" },
	2: { "dataId" : "vbm05hokkaidokoma" },
	3: { "dataId" : "vbm05hokkaidokoma" },
	4: { "dataId" : "vbm05hokkaidokoma" },
	5: { "dataId" : "vbm05hokkaidokoma" },
	6: { "dataId" : "vbm05hokkaidokoma" },
	7: { "dataId" : "vbm05hokkaidokoma" },
	8: { "dataId" : "vbm05hokkaidokoma" },
	9: { "dataId" : "vbm05hokkaidokoma" },
	10: { "dataId" : "vbm05hokkaidokoma" },
	11: { "dataId" : "vbm05hokkaidokoma" },
	12: { "dataId" : "vbm05hokkaidokoma" },
	13: { "dataId" : "vbm05hokkaidokoma" },
	14: { "dataId" : "vbm05hokkaidokoma" },
	15: { "dataId" : "vbm05hokkaidokoma" },
	16: { "dataId" : "vbm05hokkaidokoma" },
	17: { "dataId" : "vbm05hokkaidokoma" },
	18: { "dataId" : "TRANSPARENT" }
};

// 岩木山
dataSetObj.dataSetOverlay_vbm06iwaki = {
	0: { "dataId" : "vbm06iwaki" },
	1: { "dataId" : "vbm06iwaki" },
	2: { "dataId" : "vbm06iwaki" },
	3: { "dataId" : "vbm06iwaki" },
	4: { "dataId" : "vbm06iwaki" },
	5: { "dataId" : "vbm06iwaki" },
	6: { "dataId" : "vbm06iwaki" },
	7: { "dataId" : "vbm06iwaki" },
	8: { "dataId" : "vbm06iwaki" },
	9: { "dataId" : "vbm06iwaki" },
	10: { "dataId" : "vbm06iwaki" },
	11: { "dataId" : "vbm06iwaki" },
	12: { "dataId" : "vbm06iwaki" },
	13: { "dataId" : "vbm06iwaki" },
	14: { "dataId" : "vbm06iwaki" },
	15: { "dataId" : "vbm06iwaki" },
	16: { "dataId" : "vbm06iwaki" },
	17: { "dataId" : "vbm06iwaki" },
	18: { "dataId" : "TRANSPARENT" }
};

// 秋田焼山
dataSetObj.dataSetOverlay_vbm07akitayake = {
	0: { "dataId" : "vbm07akitayake" },
	1: { "dataId" : "vbm07akitayake" },
	2: { "dataId" : "vbm07akitayake" },
	3: { "dataId" : "vbm07akitayake" },
	4: { "dataId" : "vbm07akitayake" },
	5: { "dataId" : "vbm07akitayake" },
	6: { "dataId" : "vbm07akitayake" },
	7: { "dataId" : "vbm07akitayake" },
	8: { "dataId" : "vbm07akitayake" },
	9: { "dataId" : "vbm07akitayake" },
	10: { "dataId" : "vbm07akitayake" },
	11: { "dataId" : "vbm07akitayake" },
	12: { "dataId" : "vbm07akitayake" },
	13: { "dataId" : "vbm07akitayake" },
	14: { "dataId" : "vbm07akitayake" },
	15: { "dataId" : "vbm07akitayake" },
	16: { "dataId" : "vbm07akitayake" },
	17: { "dataId" : "vbm07akitayake" },
	18: { "dataId" : "TRANSPARENT" }
};

// 岩手山
dataSetObj.dataSetOverlay_vbm08iwate = {
	0: { "dataId" : "vbm08iwate" },
	1: { "dataId" : "vbm08iwate" },
	2: { "dataId" : "vbm08iwate" },
	3: { "dataId" : "vbm08iwate" },
	4: { "dataId" : "vbm08iwate" },
	5: { "dataId" : "vbm08iwate" },
	6: { "dataId" : "vbm08iwate" },
	7: { "dataId" : "vbm08iwate" },
	8: { "dataId" : "vbm08iwate" },
	9: { "dataId" : "vbm08iwate" },
	10: { "dataId" : "vbm08iwate" },
	11: { "dataId" : "vbm08iwate" },
	12: { "dataId" : "vbm08iwate" },
	13: { "dataId" : "vbm08iwate" },
	14: { "dataId" : "vbm08iwate" },
	15: { "dataId" : "vbm08iwate" },
	16: { "dataId" : "vbm08iwate" },
	17: { "dataId" : "vbm08iwate" },
	18: { "dataId" : "TRANSPARENT" }
};

// 栗駒山
dataSetObj.dataSetOverlay_vbm09kurikoma = {
	0: { "dataId" : "vbm09kurikoma" },
	1: { "dataId" : "vbm09kurikoma" },
	2: { "dataId" : "vbm09kurikoma" },
	3: { "dataId" : "vbm09kurikoma" },
	4: { "dataId" : "vbm09kurikoma" },
	5: { "dataId" : "vbm09kurikoma" },
	6: { "dataId" : "vbm09kurikoma" },
	7: { "dataId" : "vbm09kurikoma" },
	8: { "dataId" : "vbm09kurikoma" },
	9: { "dataId" : "vbm09kurikoma" },
	10: { "dataId" : "vbm09kurikoma" },
	11: { "dataId" : "vbm09kurikoma" },
	12: { "dataId" : "vbm09kurikoma" },
	13: { "dataId" : "vbm09kurikoma" },
	14: { "dataId" : "vbm09kurikoma" },
	15: { "dataId" : "vbm09kurikoma" },
	16: { "dataId" : "vbm09kurikoma" },
	17: { "dataId" : "vbm09kurikoma" },
	18: { "dataId" : "TRANSPARENT" }
};

// 秋田駒ケ岳
dataSetObj.dataSetOverlay_vbm10akitakoma = {
	0: { "dataId" : "vbm10akitakoma" },
	1: { "dataId" : "vbm10akitakoma" },
	2: { "dataId" : "vbm10akitakoma" },
	3: { "dataId" : "vbm10akitakoma" },
	4: { "dataId" : "vbm10akitakoma" },
	5: { "dataId" : "vbm10akitakoma" },
	6: { "dataId" : "vbm10akitakoma" },
	7: { "dataId" : "vbm10akitakoma" },
	8: { "dataId" : "vbm10akitakoma" },
	9: { "dataId" : "vbm10akitakoma" },
	10: { "dataId" : "vbm10akitakoma" },
	11: { "dataId" : "vbm10akitakoma" },
	12: { "dataId" : "vbm10akitakoma" },
	13: { "dataId" : "vbm10akitakoma" },
	14: { "dataId" : "vbm10akitakoma" },
	15: { "dataId" : "vbm10akitakoma" },
	16: { "dataId" : "vbm10akitakoma" },
	17: { "dataId" : "vbm10akitakoma" },
	18: { "dataId" : "TRANSPARENT" }
};

// 鳥海山
dataSetObj.dataSetOverlay_vbm11chokai = {
	0: { "dataId" : "vbm11chokai" },
	1: { "dataId" : "vbm11chokai" },
	2: { "dataId" : "vbm11chokai" },
	3: { "dataId" : "vbm11chokai" },
	4: { "dataId" : "vbm11chokai" },
	5: { "dataId" : "vbm11chokai" },
	6: { "dataId" : "vbm11chokai" },
	7: { "dataId" : "vbm11chokai" },
	8: { "dataId" : "vbm11chokai" },
	9: { "dataId" : "vbm11chokai" },
	10: { "dataId" : "vbm11chokai" },
	11: { "dataId" : "vbm11chokai" },
	12: { "dataId" : "vbm11chokai" },
	13: { "dataId" : "vbm11chokai" },
	14: { "dataId" : "vbm11chokai" },
	15: { "dataId" : "vbm11chokai" },
	16: { "dataId" : "vbm11chokai" },
	17: { "dataId" : "vbm11chokai" },
	18: { "dataId" : "TRANSPARENT" }
};

// 蔵王山
dataSetObj.dataSetOverlay_vbm12zao = {
	0: { "dataId" : "vbm12zao" },
	1: { "dataId" : "vbm12zao" },
	2: { "dataId" : "vbm12zao" },
	3: { "dataId" : "vbm12zao" },
	4: { "dataId" : "vbm12zao" },
	5: { "dataId" : "vbm12zao" },
	6: { "dataId" : "vbm12zao" },
	7: { "dataId" : "vbm12zao" },
	8: { "dataId" : "vbm12zao" },
	9: { "dataId" : "vbm12zao" },
	10: { "dataId" : "vbm12zao" },
	11: { "dataId" : "vbm12zao" },
	12: { "dataId" : "vbm12zao" },
	13: { "dataId" : "vbm12zao" },
	14: { "dataId" : "vbm12zao" },
	15: { "dataId" : "vbm12zao" },
	16: { "dataId" : "vbm12zao" },
	17: { "dataId" : "vbm12zao" },
	18: { "dataId" : "TRANSPARENT" }
};

// 吾妻山
dataSetObj.dataSetOverlay_vbm13azuma = {
	0: { "dataId" : "vbm13azuma" },
	1: { "dataId" : "vbm13azuma" },
	2: { "dataId" : "vbm13azuma" },
	3: { "dataId" : "vbm13azuma" },
	4: { "dataId" : "vbm13azuma" },
	5: { "dataId" : "vbm13azuma" },
	6: { "dataId" : "vbm13azuma" },
	7: { "dataId" : "vbm13azuma" },
	8: { "dataId" : "vbm13azuma" },
	9: { "dataId" : "vbm13azuma" },
	10: { "dataId" : "vbm13azuma" },
	11: { "dataId" : "vbm13azuma" },
	12: { "dataId" : "vbm13azuma" },
	13: { "dataId" : "vbm13azuma" },
	14: { "dataId" : "vbm13azuma" },
	15: { "dataId" : "vbm13azuma" },
	16: { "dataId" : "vbm13azuma" },
	17: { "dataId" : "vbm13azuma" },
	18: { "dataId" : "TRANSPARENT" }
};

// 安達太良山
dataSetObj.dataSetOverlay_vbm14adatara = {
	0: { "dataId" : "vbm14adatara" },
	1: { "dataId" : "vbm14adatara" },
	2: { "dataId" : "vbm14adatara" },
	3: { "dataId" : "vbm14adatara" },
	4: { "dataId" : "vbm14adatara" },
	5: { "dataId" : "vbm14adatara" },
	6: { "dataId" : "vbm14adatara" },
	7: { "dataId" : "vbm14adatara" },
	8: { "dataId" : "vbm14adatara" },
	9: { "dataId" : "vbm14adatara" },
	10: { "dataId" : "vbm14adatara" },
	11: { "dataId" : "vbm14adatara" },
	12: { "dataId" : "vbm14adatara" },
	13: { "dataId" : "vbm14adatara" },
	14: { "dataId" : "vbm14adatara" },
	15: { "dataId" : "vbm14adatara" },
	16: { "dataId" : "vbm14adatara" },
	17: { "dataId" : "vbm14adatara" },
	18: { "dataId" : "TRANSPARENT" }
};

// 磐梯山
dataSetObj.dataSetOverlay_vbm15bandai = {
	0: { "dataId" : "vbm15bandai" },
	1: { "dataId" : "vbm15bandai" },
	2: { "dataId" : "vbm15bandai" },
	3: { "dataId" : "vbm15bandai" },
	4: { "dataId" : "vbm15bandai" },
	5: { "dataId" : "vbm15bandai" },
	6: { "dataId" : "vbm15bandai" },
	7: { "dataId" : "vbm15bandai" },
	8: { "dataId" : "vbm15bandai" },
	9: { "dataId" : "vbm15bandai" },
	10: { "dataId" : "vbm15bandai" },
	11: { "dataId" : "vbm15bandai" },
	12: { "dataId" : "vbm15bandai" },
	13: { "dataId" : "vbm15bandai" },
	14: { "dataId" : "vbm15bandai" },
	15: { "dataId" : "vbm15bandai" },
	16: { "dataId" : "vbm15bandai" },
	17: { "dataId" : "vbm15bandai" },
	18: { "dataId" : "TRANSPARENT" }
};

// 那須岳
dataSetObj.dataSetOverlay_vbm16nasu = {
	0: { "dataId" : "vbm16nasu" },
	1: { "dataId" : "vbm16nasu" },
	2: { "dataId" : "vbm16nasu" },
	3: { "dataId" : "vbm16nasu" },
	4: { "dataId" : "vbm16nasu" },
	5: { "dataId" : "vbm16nasu" },
	6: { "dataId" : "vbm16nasu" },
	7: { "dataId" : "vbm16nasu" },
	8: { "dataId" : "vbm16nasu" },
	9: { "dataId" : "vbm16nasu" },
	10: { "dataId" : "vbm16nasu" },
	11: { "dataId" : "vbm16nasu" },
	12: { "dataId" : "vbm16nasu" },
	13: { "dataId" : "vbm16nasu" },
	14: { "dataId" : "vbm16nasu" },
	15: { "dataId" : "vbm16nasu" },
	16: { "dataId" : "vbm16nasu" },
	17: { "dataId" : "vbm16nasu" },
	18: { "dataId" : "TRANSPARENT" }
};

// 草津白根山
dataSetObj.dataSetOverlay_vbm17kusatsushirane = {
	0: { "dataId" : "vbm17kusatsushirane" },
	1: { "dataId" : "vbm17kusatsushirane" },
	2: { "dataId" : "vbm17kusatsushirane" },
	3: { "dataId" : "vbm17kusatsushirane" },
	4: { "dataId" : "vbm17kusatsushirane" },
	5: { "dataId" : "vbm17kusatsushirane" },
	6: { "dataId" : "vbm17kusatsushirane" },
	7: { "dataId" : "vbm17kusatsushirane" },
	8: { "dataId" : "vbm17kusatsushirane" },
	9: { "dataId" : "vbm17kusatsushirane" },
	10: { "dataId" : "vbm17kusatsushirane" },
	11: { "dataId" : "vbm17kusatsushirane" },
	12: { "dataId" : "vbm17kusatsushirane" },
	13: { "dataId" : "vbm17kusatsushirane" },
	14: { "dataId" : "vbm17kusatsushirane" },
	15: { "dataId" : "vbm17kusatsushirane" },
	16: { "dataId" : "vbm17kusatsushirane" },
	17: { "dataId" : "vbm17kusatsushirane" },
	18: { "dataId" : "TRANSPARENT" }
};

// 浅間山
dataSetObj.dataSetOverlay_vbm18asama = {
	0: { "dataId" : "vbm18asama" },
	1: { "dataId" : "vbm18asama" },
	2: { "dataId" : "vbm18asama" },
	3: { "dataId" : "vbm18asama" },
	4: { "dataId" : "vbm18asama" },
	5: { "dataId" : "vbm18asama" },
	6: { "dataId" : "vbm18asama" },
	7: { "dataId" : "vbm18asama" },
	8: { "dataId" : "vbm18asama" },
	9: { "dataId" : "vbm18asama" },
	10: { "dataId" : "vbm18asama" },
	11: { "dataId" : "vbm18asama" },
	12: { "dataId" : "vbm18asama" },
	13: { "dataId" : "vbm18asama" },
	14: { "dataId" : "vbm18asama" },
	15: { "dataId" : "vbm18asama" },
	16: { "dataId" : "vbm18asama" },
	17: { "dataId" : "vbm18asama" },
	18: { "dataId" : "TRANSPARENT" }
};

// 箱根山
dataSetObj.dataSetOverlay_vbm19hakone = {
	0: { "dataId" : "vbm19hakone" },
	1: { "dataId" : "vbm19hakone" },
	2: { "dataId" : "vbm19hakone" },
	3: { "dataId" : "vbm19hakone" },
	4: { "dataId" : "vbm19hakone" },
	5: { "dataId" : "vbm19hakone" },
	6: { "dataId" : "vbm19hakone" },
	7: { "dataId" : "vbm19hakone" },
	8: { "dataId" : "vbm19hakone" },
	9: { "dataId" : "vbm19hakone" },
	10: { "dataId" : "vbm19hakone" },
	11: { "dataId" : "vbm19hakone" },
	12: { "dataId" : "vbm19hakone" },
	13: { "dataId" : "vbm19hakone" },
	14: { "dataId" : "vbm19hakone" },
	15: { "dataId" : "vbm19hakone" },
	16: { "dataId" : "vbm19hakone" },
	17: { "dataId" : "vbm19hakone" },
	18: { "dataId" : "TRANSPARENT" }
};

// 富士山
dataSetObj.dataSetOverlay_vbm20fuji = {
	0: { "dataId" : "vbm20fuji" },
	1: { "dataId" : "vbm20fuji" },
	2: { "dataId" : "vbm20fuji" },
	3: { "dataId" : "vbm20fuji" },
	4: { "dataId" : "vbm20fuji" },
	5: { "dataId" : "vbm20fuji" },
	6: { "dataId" : "vbm20fuji" },
	7: { "dataId" : "vbm20fuji" },
	8: { "dataId" : "vbm20fuji" },
	9: { "dataId" : "vbm20fuji" },
	10: { "dataId" : "vbm20fuji" },
	11: { "dataId" : "vbm20fuji" },
	12: { "dataId" : "vbm20fuji" },
	13: { "dataId" : "vbm20fuji" },
	14: { "dataId" : "vbm20fuji" },
	15: { "dataId" : "vbm20fuji" },
	16: { "dataId" : "vbm20fuji" },
	17: { "dataId" : "vbm20fuji" },
	18: { "dataId" : "TRANSPARENT" }
};

// 東伊豆単成火山群
dataSetObj.dataSetOverlay_vbm21eastizu = {
	0: { "dataId" : "vbm21eastizu" },
	1: { "dataId" : "vbm21eastizu" },
	2: { "dataId" : "vbm21eastizu" },
	3: { "dataId" : "vbm21eastizu" },
	4: { "dataId" : "vbm21eastizu" },
	5: { "dataId" : "vbm21eastizu" },
	6: { "dataId" : "vbm21eastizu" },
	7: { "dataId" : "vbm21eastizu" },
	8: { "dataId" : "vbm21eastizu" },
	9: { "dataId" : "vbm21eastizu" },
	10: { "dataId" : "vbm21eastizu" },
	11: { "dataId" : "vbm21eastizu" },
	12: { "dataId" : "vbm21eastizu" },
	13: { "dataId" : "vbm21eastizu" },
	14: { "dataId" : "vbm21eastizu" },
	15: { "dataId" : "vbm21eastizu" },
	16: { "dataId" : "vbm21eastizu" },
	17: { "dataId" : "vbm21eastizu" },
	18: { "dataId" : "TRANSPARENT" }
};

// 伊豆大島
dataSetObj.dataSetOverlay_vbm22izuoshima = {
	0: { "dataId" : "vbm22izuoshima" },
	1: { "dataId" : "vbm22izuoshima" },
	2: { "dataId" : "vbm22izuoshima" },
	3: { "dataId" : "vbm22izuoshima" },
	4: { "dataId" : "vbm22izuoshima" },
	5: { "dataId" : "vbm22izuoshima" },
	6: { "dataId" : "vbm22izuoshima" },
	7: { "dataId" : "vbm22izuoshima" },
	8: { "dataId" : "vbm22izuoshima" },
	9: { "dataId" : "vbm22izuoshima" },
	10: { "dataId" : "vbm22izuoshima" },
	11: { "dataId" : "vbm22izuoshima" },
	12: { "dataId" : "vbm22izuoshima" },
	13: { "dataId" : "vbm22izuoshima" },
	14: { "dataId" : "vbm22izuoshima" },
	15: { "dataId" : "vbm22izuoshima" },
	16: { "dataId" : "vbm22izuoshima" },
	17: { "dataId" : "vbm22izuoshima" },
	18: { "dataId" : "TRANSPARENT" }
};

// 三宅島
dataSetObj.dataSetOverlay_vbm23miyake = {
	0: { "dataId" : "vbm23miyake" },
	1: { "dataId" : "vbm23miyake" },
	2: { "dataId" : "vbm23miyake" },
	3: { "dataId" : "vbm23miyake" },
	4: { "dataId" : "vbm23miyake" },
	5: { "dataId" : "vbm23miyake" },
	6: { "dataId" : "vbm23miyake" },
	7: { "dataId" : "vbm23miyake" },
	8: { "dataId" : "vbm23miyake" },
	9: { "dataId" : "vbm23miyake" },
	10: { "dataId" : "vbm23miyake" },
	11: { "dataId" : "vbm23miyake" },
	12: { "dataId" : "vbm23miyake" },
	13: { "dataId" : "vbm23miyake" },
	14: { "dataId" : "vbm23miyake" },
	15: { "dataId" : "vbm23miyake" },
	16: { "dataId" : "vbm23miyake" },
	17: { "dataId" : "vbm23miyake" },
	18: { "dataId" : "TRANSPARENT" }
};

// 焼岳
dataSetObj.dataSetOverlay_vbm24yakedake = {
	0: { "dataId" : "vbm24yakedake" },
	1: { "dataId" : "vbm24yakedake" },
	2: { "dataId" : "vbm24yakedake" },
	3: { "dataId" : "vbm24yakedake" },
	4: { "dataId" : "vbm24yakedake" },
	5: { "dataId" : "vbm24yakedake" },
	6: { "dataId" : "vbm24yakedake" },
	7: { "dataId" : "vbm24yakedake" },
	8: { "dataId" : "vbm24yakedake" },
	9: { "dataId" : "vbm24yakedake" },
	10: { "dataId" : "vbm24yakedake" },
	11: { "dataId" : "vbm24yakedake" },
	12: { "dataId" : "vbm24yakedake" },
	13: { "dataId" : "vbm24yakedake" },
	14: { "dataId" : "vbm24yakedake" },
	15: { "dataId" : "vbm24yakedake" },
	16: { "dataId" : "vbm24yakedake" },
	17: { "dataId" : "vbm24yakedake" },
	18: { "dataId" : "TRANSPARENT" }
};

// 御岳山
dataSetObj.dataSetOverlay_vbm25ontake = {
	0: { "dataId" : "vbm25ontake" },
	1: { "dataId" : "vbm25ontake" },
	2: { "dataId" : "vbm25ontake" },
	3: { "dataId" : "vbm25ontake" },
	4: { "dataId" : "vbm25ontake" },
	5: { "dataId" : "vbm25ontake" },
	6: { "dataId" : "vbm25ontake" },
	7: { "dataId" : "vbm25ontake" },
	8: { "dataId" : "vbm25ontake" },
	9: { "dataId" : "vbm25ontake" },
	10: { "dataId" : "vbm25ontake" },
	11: { "dataId" : "vbm25ontake" },
	12: { "dataId" : "vbm25ontake" },
	13: { "dataId" : "vbm25ontake" },
	14: { "dataId" : "vbm25ontake" },
	15: { "dataId" : "vbm25ontake" },
	16: { "dataId" : "vbm25ontake" },
	17: { "dataId" : "vbm25ontake" },
	18: { "dataId" : "TRANSPARENT" }
};

// 鶴見岳
dataSetObj.dataSetOverlay_vbm26tsurumi = {
	0: { "dataId" : "vbm26tsurumi" },
	1: { "dataId" : "vbm26tsurumi" },
	2: { "dataId" : "vbm26tsurumi" },
	3: { "dataId" : "vbm26tsurumi" },
	4: { "dataId" : "vbm26tsurumi" },
	5: { "dataId" : "vbm26tsurumi" },
	6: { "dataId" : "vbm26tsurumi" },
	7: { "dataId" : "vbm26tsurumi" },
	8: { "dataId" : "vbm26tsurumi" },
	9: { "dataId" : "vbm26tsurumi" },
	10: { "dataId" : "vbm26tsurumi" },
	11: { "dataId" : "vbm26tsurumi" },
	12: { "dataId" : "vbm26tsurumi" },
	13: { "dataId" : "vbm26tsurumi" },
	14: { "dataId" : "vbm26tsurumi" },
	15: { "dataId" : "vbm26tsurumi" },
	16: { "dataId" : "vbm26tsurumi" },
	17: { "dataId" : "vbm26tsurumi" },
	18: { "dataId" : "TRANSPARENT" }
};

// くじゅう連山
dataSetObj.dataSetOverlay_vbm27kujyu = {
	0: { "dataId" : "vbm27kujyu" },
	1: { "dataId" : "vbm27kujyu" },
	2: { "dataId" : "vbm27kujyu" },
	3: { "dataId" : "vbm27kujyu" },
	4: { "dataId" : "vbm27kujyu" },
	5: { "dataId" : "vbm27kujyu" },
	6: { "dataId" : "vbm27kujyu" },
	7: { "dataId" : "vbm27kujyu" },
	8: { "dataId" : "vbm27kujyu" },
	9: { "dataId" : "vbm27kujyu" },
	10: { "dataId" : "vbm27kujyu" },
	11: { "dataId" : "vbm27kujyu" },
	12: { "dataId" : "vbm27kujyu" },
	13: { "dataId" : "vbm27kujyu" },
	14: { "dataId" : "vbm27kujyu" },
	15: { "dataId" : "vbm27kujyu" },
	16: { "dataId" : "vbm27kujyu" },
	17: { "dataId" : "vbm27kujyu" },
	18: { "dataId" : "TRANSPARENT" }
};

// 阿蘇山
dataSetObj.dataSetOverlay_vbm28aso = {
	0: { "dataId" : "vbm28aso" },
	1: { "dataId" : "vbm28aso" },
	2: { "dataId" : "vbm28aso" },
	3: { "dataId" : "vbm28aso" },
	4: { "dataId" : "vbm28aso" },
	5: { "dataId" : "vbm28aso" },
	6: { "dataId" : "vbm28aso" },
	7: { "dataId" : "vbm28aso" },
	8: { "dataId" : "vbm28aso" },
	9: { "dataId" : "vbm28aso" },
	10: { "dataId" : "vbm28aso" },
	11: { "dataId" : "vbm28aso" },
	12: { "dataId" : "vbm28aso" },
	13: { "dataId" : "vbm28aso" },
	14: { "dataId" : "vbm28aso" },
	15: { "dataId" : "vbm28aso" },
	16: { "dataId" : "vbm28aso" },
	17: { "dataId" : "vbm28aso" },
	18: { "dataId" : "TRANSPARENT" }
};

// 雲仙岳
dataSetObj.dataSetOverlay_vbm29unzen = {
	0: { "dataId" : "vbm29unzen" },
	1: { "dataId" : "vbm29unzen" },
	2: { "dataId" : "vbm29unzen" },
	3: { "dataId" : "vbm29unzen" },
	4: { "dataId" : "vbm29unzen" },
	5: { "dataId" : "vbm29unzen" },
	6: { "dataId" : "vbm29unzen" },
	7: { "dataId" : "vbm29unzen" },
	8: { "dataId" : "vbm29unzen" },
	9: { "dataId" : "vbm29unzen" },
	10: { "dataId" : "vbm29unzen" },
	11: { "dataId" : "vbm29unzen" },
	12: { "dataId" : "vbm29unzen" },
	13: { "dataId" : "vbm29unzen" },
	14: { "dataId" : "vbm29unzen" },
	15: { "dataId" : "vbm29unzen" },
	16: { "dataId" : "vbm29unzen" },
	17: { "dataId" : "vbm29unzen" },
	18: { "dataId" : "TRANSPARENT" }
};

// 霧島山
dataSetObj.dataSetOverlay_vbm30kirishima = {
	0: { "dataId" : "vbm30kirishima" },
	1: { "dataId" : "vbm30kirishima" },
	2: { "dataId" : "vbm30kirishima" },
	3: { "dataId" : "vbm30kirishima" },
	4: { "dataId" : "vbm30kirishima" },
	5: { "dataId" : "vbm30kirishima" },
	6: { "dataId" : "vbm30kirishima" },
	7: { "dataId" : "vbm30kirishima" },
	8: { "dataId" : "vbm30kirishima" },
	9: { "dataId" : "vbm30kirishima" },
	10: { "dataId" : "vbm30kirishima" },
	11: { "dataId" : "vbm30kirishima" },
	12: { "dataId" : "vbm30kirishima" },
	13: { "dataId" : "vbm30kirishima" },
	14: { "dataId" : "vbm30kirishima" },
	15: { "dataId" : "vbm30kirishima" },
	16: { "dataId" : "vbm30kirishima" },
	17: { "dataId" : "vbm30kirishima" },
	18: { "dataId" : "TRANSPARENT" }
};

// 桜島
dataSetObj.dataSetOverlay_vbm31sakurajima = {
	0: { "dataId" : "vbm31sakurajima" },
	1: { "dataId" : "vbm31sakurajima" },
	2: { "dataId" : "vbm31sakurajima" },
	3: { "dataId" : "vbm31sakurajima" },
	4: { "dataId" : "vbm31sakurajima" },
	5: { "dataId" : "vbm31sakurajima" },
	6: { "dataId" : "vbm31sakurajima" },
	7: { "dataId" : "vbm31sakurajima" },
	8: { "dataId" : "vbm31sakurajima" },
	9: { "dataId" : "vbm31sakurajima" },
	10: { "dataId" : "vbm31sakurajima" },
	11: { "dataId" : "vbm31sakurajima" },
	12: { "dataId" : "vbm31sakurajima" },
	13: { "dataId" : "vbm31sakurajima" },
	14: { "dataId" : "vbm31sakurajima" },
	15: { "dataId" : "vbm31sakurajima" },
	16: { "dataId" : "vbm31sakurajima" },
	17: { "dataId" : "vbm31sakurajima" },
	18: { "dataId" : "TRANSPARENT" }
};

// 薩摩竹島
dataSetObj.dataSetOverlay_vbm32satsumatakesima = {
	0: { "dataId" : "vbm32satsumatakesima" },
	1: { "dataId" : "vbm32satsumatakesima" },
	2: { "dataId" : "vbm32satsumatakesima" },
	3: { "dataId" : "vbm32satsumatakesima" },
	4: { "dataId" : "vbm32satsumatakesima" },
	5: { "dataId" : "vbm32satsumatakesima" },
	6: { "dataId" : "vbm32satsumatakesima" },
	7: { "dataId" : "vbm32satsumatakesima" },
	8: { "dataId" : "vbm32satsumatakesima" },
	9: { "dataId" : "vbm32satsumatakesima" },
	10: { "dataId" : "vbm32satsumatakesima" },
	11: { "dataId" : "vbm32satsumatakesima" },
	12: { "dataId" : "vbm32satsumatakesima" },
	13: { "dataId" : "vbm32satsumatakesima" },
	14: { "dataId" : "vbm32satsumatakesima" },
	15: { "dataId" : "vbm32satsumatakesima" },
	16: { "dataId" : "vbm32satsumatakesima" },
	17: { "dataId" : "vbm32satsumatakesima" },
	18: { "dataId" : "TRANSPARENT" }
};

// 薩摩硫黄島
dataSetObj.dataSetOverlay_vbm33satsumaiojima = {
	0: { "dataId" : "vbm33satsumaiojima" },
	1: { "dataId" : "vbm33satsumaiojima" },

	2: { "dataId" : "vbm33satsumaiojima" },
	3: { "dataId" : "vbm33satsumaiojima" },
	4: { "dataId" : "vbm33satsumaiojima" },
	5: { "dataId" : "vbm33satsumaiojima" },
	6: { "dataId" : "vbm33satsumaiojima" },
	7: { "dataId" : "vbm33satsumaiojima" },
	8: { "dataId" : "vbm33satsumaiojima" },
	9: { "dataId" : "vbm33satsumaiojima" },
	10: { "dataId" : "vbm33satsumaiojima" },
	11: { "dataId" : "vbm33satsumaiojima" },
	12: { "dataId" : "vbm33satsumaiojima" },
	13: { "dataId" : "vbm33satsumaiojima" },
	14: { "dataId" : "vbm33satsumaiojima" },
	15: { "dataId" : "vbm33satsumaiojima" },
	16: { "dataId" : "vbm33satsumaiojima" },
	17: { "dataId" : "vbm33satsumaiojima" },
	18: { "dataId" : "TRANSPARENT" }
};

// 諏訪之瀬島
dataSetObj.dataSetOverlay_vbm34suwanosejima = {
	0: { "dataId" : "vbm34suwanosejima" },
	1: { "dataId" : "vbm34suwanosejima" },
	2: { "dataId" : "vbm34suwanosejima" },
	3: { "dataId" : "vbm34suwanosejima" },
	4: { "dataId" : "vbm34suwanosejima" },
	5: { "dataId" : "vbm34suwanosejima" },
	6: { "dataId" : "vbm34suwanosejima" },
	7: { "dataId" : "vbm34suwanosejima" },
	8: { "dataId" : "vbm34suwanosejima" },
	9: { "dataId" : "vbm34suwanosejima" },
	10: { "dataId" : "vbm34suwanosejima" },
	11: { "dataId" : "vbm34suwanosejima" },
	12: { "dataId" : "vbm34suwanosejima" },
	13: { "dataId" : "vbm34suwanosejima" },
	14: { "dataId" : "vbm34suwanosejima" },
	15: { "dataId" : "vbm34suwanosejima" },
	16: { "dataId" : "vbm34suwanosejima" },
	17: { "dataId" : "vbm34suwanosejima" },
	18: { "dataId" : "TRANSPARENT" }
};

// 恵山
dataSetObj.dataSetOverlay_vbm35esan = {
	0: { "dataId" : "vbm35esan" },
	1: { "dataId" : "vbm35esan" },
	2: { "dataId" : "vbm35esan" },
	3: { "dataId" : "vbm35esan" },
	4: { "dataId" : "vbm35esan" },
	5: { "dataId" : "vbm35esan" },
	6: { "dataId" : "vbm35esan" },
	7: { "dataId" : "vbm35esan" },
	8: { "dataId" : "vbm35esan" },
	9: { "dataId" : "vbm35esan" },
	10: { "dataId" : "vbm35esan" },
	11: { "dataId" : "vbm35esan" },
	12: { "dataId" : "vbm35esan" },
	13: { "dataId" : "vbm35esan" },
	14: { "dataId" : "vbm35esan" },
	15: { "dataId" : "vbm35esan" },
	16: { "dataId" : "vbm35esan" },
	17: { "dataId" : "vbm35esan" },
	18: { "dataId" : "TRANSPARENT" }
};

// 20万分1土地利用図
dataSetObj.dataSetOverlay_LUM200K = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "lum200k" },
	12: { "dataId" : "lum200k" },
	13: { "dataId" : "lum200k" },
	14: { "dataId" : "lum200k" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};


// 治水地形分類図（初版）
dataSetObj.dataSetOverlay_LCMFC = {
	0: { "dataId" : "LCMFC" },
	1: { "dataId" : "LCMFC" },
	2: { "dataId" : "LCMFC" },
	3: { "dataId" : "LCMFC" },
	4: { "dataId" : "LCMFC" },
	5: { "dataId" : "LCMFC" },
	6: { "dataId" : "LCMFC" },
	7: { "dataId" : "LCMFC" },
	8: { "dataId" : "LCMFC" },
	9: { "dataId" : "LCMFC" },
	10: { "dataId" : "LCMFC" },
	11: { "dataId" : "LCMFC" },
	12: { "dataId" : "LCMFC" },
	13: { "dataId" : "LCMFC" },

	14: { "dataId" : "LCMFC" },
	15: { "dataId" : "LCMFC" },
	16: { "dataId" : "LCMFC" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 数値地図25000(土地条件)
dataSetObj.dataSetOverlay_LCM25K_2012 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "LCM25K_2012" },
	5: { "dataId" : "LCM25K_2012" },
	6: { "dataId" : "LCM25K_2012" },
	7: { "dataId" : "LCM25K_2012" },
	8: { "dataId" : "LCM25K_2012" },
	9: { "dataId" : "LCM25K_2012" },
	10: { "dataId" : "LCM25K_2012" },
	11: { "dataId" : "LCM25K_2012" },
	12: { "dataId" : "LCM25K_2012" },
	13: { "dataId" : "LCM25K_2012" },

	14: { "dataId" : "LCM25K_2012" },
	15: { "dataId" : "LCM25K_2012" },
	16: { "dataId" : "LCM25K_2012" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 数値地図25000(土地条件)
dataSetObj.dataSetOverlay_LCM25K_2012 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "LCM25K_2012" },
	5: { "dataId" : "LCM25K_2012" },
	6: { "dataId" : "LCM25K_2012" },
	7: { "dataId" : "LCM25K_2012" },
	8: { "dataId" : "LCM25K_2012" },
	9: { "dataId" : "LCM25K_2012" },
	10: { "dataId" : "LCM25K_2012" },
	11: { "dataId" : "LCM25K_2012" },
	12: { "dataId" : "LCM25K_2012" },
	13: { "dataId" : "LCM25K_2012" },

	14: { "dataId" : "LCM25K_2012" },
	15: { "dataId" : "LCM25K_2012" },
	16: { "dataId" : "LCM25K_2012" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 簡易空中写真(2004-)
dataSetObj.dataSetOverlay_Y2K4air = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "airphoto" },
	6: { "dataId" : "airphoto" },
	7: { "dataId" : "airphoto" },
	8: { "dataId" : "airphoto" },
	9: { "dataId" : "airphoto" },
	10: { "dataId" : "airphoto" },
	11: { "dataId" : "airphoto" },
	12: { "dataId" : "airphoto" },
	13: { "dataId" : "airphoto" },
	14: { "dataId" : "airphoto" },

	15: { "dataId" : "airphoto" },
	16: { "dataId" : "airphoto" },
	17: { "dataId" : "airphoto" },

	18: { "dataId" : "airphoto" }
};

// 災害復興計画基図
dataSetObj.dataSetOverlay_fukkokizu = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "fukkokizu" },
	6: { "dataId" : "fukkokizu" },
	7: { "dataId" : "fukkokizu" },
	8: { "dataId" : "fukkokizu" },
	9: { "dataId" : "fukkokizu" },
	10: { "dataId" : "fukkokizu" },
	11: { "dataId" : "fukkokizu" },
	12: { "dataId" : "fukkokizu" },
	13: { "dataId" : "fukkokizu" },
	14: { "dataId" : "fukkokizu" },

	15: { "dataId" : "fukkokizu" },
	16: { "dataId" : "fukkokizu" },
	17: { "dataId" : "fukkokizu" },

	18: { "dataId" : "fukkokizu" }
};

// 東日本大震災被災地震災直後オルソ画像（2011.03-04）
dataSetObj.dataSetOverlay_toho1 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "toho1area" },
	6: { "dataId" : "toho1area" },
	7: { "dataId" : "toho1area" },
	8: { "dataId" : "toho1area" },
	9: { "dataId" : "toho1area" },
	10: { "dataId" : "toho1area" },
	11: { "dataId" : "toho1area" },
	12: { "dataId" : "toho1area" },
	13: { "dataId" : "toho1area" },
	14: { "dataId" : "toho1area" },

	15: { "dataId" : "toho1" },
	16: { "dataId" : "toho1" },
	17: { "dataId" : "toho1" },

	18: { "dataId" : "toho1" }
};

// 東日本大震災被災地震災直後オルソ画像（2011.05-2012.04）
dataSetObj.dataSetOverlay_toho2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "toho2area" },
	6: { "dataId" : "toho2area" },
	7: { "dataId" : "toho2area" },
	8: { "dataId" : "toho2area" },
	9: { "dataId" : "toho2area" },
	10: { "dataId" : "toho2area" },
	11: { "dataId" : "toho2area" },
	12: { "dataId" : "toho2area" },
	13: { "dataId" : "toho2area" },
	14: { "dataId" : "toho2area" },

	15: { "dataId" : "toho2" },
	16: { "dataId" : "toho2" },
	17: { "dataId" : "toho2" },

	18: { "dataId" : "toho2" }
};

// 東日本大震災被災地震災直後オルソ画像（2012.10-2013.05）
dataSetObj.dataSetOverlay_toho3 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "toho3area" },
	6: { "dataId" : "toho3area" },
	7: { "dataId" : "toho3area" },
	8: { "dataId" : "toho3area" },
	9: { "dataId" : "toho3area" },
	10: { "dataId" : "toho3area" },
	11: { "dataId" : "toho3area" },
	12: { "dataId" : "toho3area" },
	13: { "dataId" : "toho3area" },
	14: { "dataId" : "toho3area" },

	15: { "dataId" : "toho3" },
	16: { "dataId" : "toho3" },
	17: { "dataId" : "toho3" },

	18: { "dataId" : "toho3" }
};

// 基盤地図情報
dataSetObj.dataSetOverlay_kiban = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },

	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },

	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },

	18: { "dataId" : "fgd" }
};

// 2004年4月～2012年12月までの全国植生指標データ（250m）を作成
dataSetObj.createDataSet_NDVI250m = function() {

	for (var year = 2004; year <= 2012; year++) {
		for (var month = 1; month <= 12; month++) {
			if (year == 2004 && month < 4) {
				continue;
			}

			var ym = year * 100 + month + "";
			var mapId = "dataSetOverlay_NDVI250m_" + ym;
			var dataId = "NDVI_250m/" + ym;

			dataSetObj[mapId] = [];

			// ズームレベル3～10まで植生指標データが存在
			for (var i = 0; i < 18; i++) {
				dataSetObj[mapId][i] = (i < 3 || 10 < i) ? { "dataId" : "TRANSPARENT" } : { "dataId" : dataId };
			}
		}
	}
}();

// 単写真
dataSetObj.getURL_photoPoint = function(data){

	var photoYearFromTo = data.key.split("_");
	var extent = null;
	var urlPhotoList = "http://portal.cyberjapan.jp/GsiJsLibrary/photoprot.php?topLat=";

	if (data.extent) {
		extent = data.extent.split("_");
		urlPhotoList += extent[0] + "&leftLon=" + extent[1] + "&bottomLat=" + extent[2] + "&rightLon=" + extent[3];
	} else {
		extent = map.getExtent().transform(projection900913,projection4326);
		urlPhotoList += extent.top + "&leftLon=" + extent.left + "&bottomLat=" + extent.bottom + "&rightLon=" + extent.right;
	}

	if (photoYearFromTo[1]) {
		urlPhotoList = urlPhotoList + "&searchDateFrom=" + photoYearFromTo[1];
	}
	if (photoYearFromTo[2]) {
		urlPhotoList = urlPhotoList + "&searchDateTo=" + photoYearFromTo[2];
	}

	return urlPhotoList;
}


///////////////////////////////////////////
//治水地形分類図（初版
dataSetObj.dataSetOverlay_LCMFC01 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "LCMFC01" },
	3: { "dataId" : "LCMFC01" },
	4: { "dataId" : "LCMFC01" },
	5: { "dataId" : "LCMFC01" },
	6: { "dataId" : "LCMFC01" },
	7: { "dataId" : "LCMFC01" },
	8: { "dataId" : "LCMFC01" },
	9: { "dataId" : "LCMFC01" },
	10: { "dataId" : "LCMFC01" },
	11: { "dataId" : "LCMFC01" },
	12: { "dataId" : "LCMFC01" },
	13: { "dataId" : "LCMFC01" },

	14: { "dataId" : "LCMFC01" },
	15: { "dataId" : "LCMFC01" },
	16: { "dataId" : "LCMFC01" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//治水地形分類図（初版）
dataSetObj.dataSetOverlay_LCMFC02 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "LCMFC02" },
	6: { "dataId" : "LCMFC02" },
	7: { "dataId" : "LCMFC02" },
	8: { "dataId" : "LCMFC02" },
	9: { "dataId" : "LCMFC02" },
	10: { "dataId" : "LCMFC02" },
	11: { "dataId" : "LCMFC02" },
	12: { "dataId" : "LCMFC02" },
	13: { "dataId" : "LCMFC02" },

	14: { "dataId" : "LCMFC02" },
	15: { "dataId" : "LCMFC02" },
	16: { "dataId" : "LCMFC02" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

///////////////////////////////////////////



/////////////////////////////////////		20140714
//空港	airp
dataSetObj.	DS_TikyuTizuNippon_airp	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "gmjpn_airp" },
				5	: { "dataId" : "gmjpn_airp" },
				6	: { "dataId" : "gmjpn_airp" },
				7	: { "dataId" : "gmjpn_airp" },
				8	: { "dataId" : "gmjpn_airp" },
				9	: { "dataId" : "gmjpn_airp" },
				10	: { "dataId" : "gmjpn_airp" },
				11	: { "dataId" : "gmjpn_airp" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" },
};


//鉄道駅	rstatp
dataSetObj.	DS_TikyuTizuNippon_rstatp	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "TRANSPARENT" },
				5	: { "dataId" : "TRANSPARENT" },
				6	: { "dataId" : "TRANSPARENT" },
				7	: { "dataId" : "TRANSPARENT" },
				8	: { "dataId" : "gmjpn_rstatp" },
				9	: { "dataId" : "gmjpn_rstatp" },
				10	: { "dataId" : "gmjpn_rstatp" },
				11	: { "dataId" : "gmjpn_rstatp" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};


//鉄道	raill
dataSetObj.	DS_TikyuTizuNippon_raill	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "gmjpn_raill" },
				3	: { "dataId" : "gmjpn_raill" },
				4	: { "dataId" : "gmjpn_raill" },
				5	: { "dataId" : "gmjpn_raill" },
				6	: { "dataId" : "gmjpn_raill" },
				7	: { "dataId" : "gmjpn_raill" },
				8	: { "dataId" : "gmjpn_raill" },
				9	: { "dataId" : "gmjpn_raill" },
				10	: { "dataId" : "gmjpn_raill" },
				11	: { "dataId" : "gmjpn_raill" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};


//道路	roadl
dataSetObj.	DS_TikyuTizuNippon_roadl	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "gmjpn_roadl" },
				5	: { "dataId" : "gmjpn_roadl" },
				6	: { "dataId" : "gmjpn_roadl" },
				7	: { "dataId" : "gmjpn_roadl" },
				8	: { "dataId" : "gmjpn_roadl" },
				9	: { "dataId" : "gmjpn_roadl" },
				10	: { "dataId" : "gmjpn_roadl" },
				11	: { "dataId" : "gmjpn_roadl" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//航路	ferryl
dataSetObj.	DS_TikyuTizuNippon_ferryl	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "gmjpn_ferryl" },
				3	: { "dataId" : "gmjpn_ferryl" },
				4	: { "dataId" : "gmjpn_ferryl" },
				5	: { "dataId" : "gmjpn_ferryl" },
				6	: { "dataId" : "gmjpn_ferryl" },
				7	: { "dataId" : "gmjpn_ferryl" },
				8	: { "dataId" : "gmjpn_ferryl" },
				9	: { "dataId" : "gmjpn_ferryl" },
				10	: { "dataId" : "gmjpn_ferryl" },
				11	: { "dataId" : "gmjpn_ferryl" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//港湾	portp
dataSetObj.	DS_TikyuTizuNippon_portp	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "gmjpn_portp" },
				5	: { "dataId" : "gmjpn_portp" },
				6	: { "dataId" : "gmjpn_portp" },
				7	: { "dataId" : "gmjpn_portp" },
				8	: { "dataId" : "gmjpn_portp" },
				9	: { "dataId" : "gmjpn_portp" },
				10	: { "dataId" : "gmjpn_portp" },
				11	: { "dataId" : "gmjpn_portp" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//行政界（線）	polbndl
dataSetObj.	DS_TikyuTizuNippon_polbndl	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "TRANSPARENT" },
				5	: { "dataId" : "TRANSPARENT" },
				6	: { "dataId" : "gmjpn_polbndl" },
				7	: { "dataId" : "gmjpn_polbndl" },
				8	: { "dataId" : "gmjpn_polbndl" },
				9	: { "dataId" : "gmjpn_polbndl" },
				10	: { "dataId" : "gmjpn_polbndl" },
				11	: { "dataId" : "gmjpn_polbndl" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//行政界（名前）	polbnda
dataSetObj.	DS_TikyuTizuNippon_polbnda	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "TRANSPARENT" },
				5	: { "dataId" : "TRANSPARENT" },
				6	: { "dataId" : "TRANSPARENT" },
				7	: { "dataId" : "TRANSPARENT" },
				8	: { "dataId" : "TRANSPARENT" },
				9	: { "dataId" : "TRANSPARENT" },
				10	: { "dataId" : "gmjpn_polbnda" },
				11	: { "dataId" : "gmjpn_polbnda" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//海岸線	coastl
dataSetObj.	DS_TikyuTizuNippon_coastl	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "gmjpn_coastl" },
				3	: { "dataId" : "gmjpn_coastl" },
				4	: { "dataId" : "gmjpn_coastl" },
				5	: { "dataId" : "gmjpn_coastl" },
				6	: { "dataId" : "gmjpn_coastl" },
				7	: { "dataId" : "gmjpn_coastl" },
				8	: { "dataId" : "gmjpn_coastl" },
				9	: { "dataId" : "gmjpn_coastl" },
				10	: { "dataId" : "gmjpn_coastl" },
				11	: { "dataId" : "gmjpn_coastl" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//   	河川	riverl
dataSetObj.	DS_TikyuTizuNippon_riverl	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "TRANSPARENT" },
				5	: { "dataId" : "TRANSPARENT" },
				6	: { "dataId" : "TRANSPARENT" },
				7	: { "dataId" : "TRANSPARENT" },
				8	: { "dataId" : "TRANSPARENT" },
				9	: { "dataId" : "gmjpn_riverl" },
				10	: { "dataId" : "gmjpn_riverl" },
				11	: { "dataId" : "gmjpn_riverl" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//   	内水域	inwatera
dataSetObj.	DS_TikyuTizuNippon_inwatera	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "gmjpn_inwatera" },
				5	: { "dataId" : "gmjpn_inwatera" },
				6	: { "dataId" : "gmjpn_inwatera" },
				7	: { "dataId" : "gmjpn_inwatera" },
				8	: { "dataId" : "gmjpn_inwatera" },
				9	: { "dataId" : "gmjpn_inwatera" },
				10	: { "dataId" : "gmjpn_inwatera" },
				11	: { "dataId" : "gmjpn_inwatera" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//   	市街地	builtupa
dataSetObj.	DS_TikyuTizuNippon_builtupa	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "TRANSPARENT" },
				5	: { "dataId" : "TRANSPARENT" },
				6	: { "dataId" : "TRANSPARENT" },
				7	: { "dataId" : "TRANSPARENT" },
				8	: { "dataId" : "gmjpn_builtupa" },
				9	: { "dataId" : "gmjpn_builtupa" },
				10	: { "dataId" : "gmjpn_builtupa" },
				11	: { "dataId" : "gmjpn_builtupa" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};

//   	市街地（名前）	builtupp
dataSetObj.	DS_TikyuTizuNippon_builtupp	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "TRANSPARENT" },
				5	: { "dataId" : "TRANSPARENT" },
				6	: { "dataId" : "TRANSPARENT" },
				7	: { "dataId" : "TRANSPARENT" },
				8	: { "dataId" : "TRANSPARENT" },
				9	: { "dataId" : "TRANSPARENT" },
				10	: { "dataId" : "gmjpn_builtupp" },
				11	: { "dataId" : "gmjpn_builtupp" },
				12	: { "dataId" : "TRANSPARENT" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};





/////////////////////////////////////		20140714




/////////////////////////////////////		20140731

//	基盤地図情報の提供地域　縮尺レベル2500
dataSetObj.	DS_KIBANCHIZU	 = {
				0	: { "dataId" : "TRANSPARENT" },
				1	: { "dataId" : "TRANSPARENT" },
				2	: { "dataId" : "TRANSPARENT" },
				3	: { "dataId" : "TRANSPARENT" },
				4	: { "dataId" : "fgd2500_area" },
				5	: { "dataId" : "fgd2500_area" },
				6	: { "dataId" : "fgd2500_area" },
				7	: { "dataId" : "fgd2500_area" },
				8	: { "dataId" : "fgd2500_area" },
				9	: { "dataId" : "fgd2500_area" },
				10	: { "dataId" : "fgd2500_area" },
				11	: { "dataId" : "fgd2500_area" },
				12	: { "dataId" : "fgd2500_area" },
				13	: { "dataId" : "TRANSPARENT" },
				14	: { "dataId" : "TRANSPARENT" },
				15	: { "dataId" : "TRANSPARENT" },
				16	: { "dataId" : "TRANSPARENT" },
				17	: { "dataId" : "TRANSPARENT" },
				18	: { "dataId" : "TRANSPARENT" }
};


//都市圏活断層図
dataSetObj.dataSetOverlay_AFM = {
	0: { "dataId" : "AFM" },
	1: { "dataId" : "AFM" },
	2: { "dataId" : "AFM" },
	3: { "dataId" : "AFM" },
	4: { "dataId" : "AFM" },
	5: { "dataId" : "AFM" },
	6: { "dataId" : "AFM" },
	7: { "dataId" : "AFM" },
	8: { "dataId" : "AFM" },
	9: { "dataId" : "AFM" },
	10: { "dataId" : "AFM" },
	11: { "dataId" : "AFM" },
	12: { "dataId" : "AFM" },
	13: { "dataId" : "AFM" },

	14: { "dataId" : "AFM" },
	15: { "dataId" : "AFM" },
	16: { "dataId" : "AFM" },

	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

/////////////////////////////////////		20140731



/////////////////////////////////////		20140818
//明治前期の低湿地
dataSetObj.dataSetOverlay_MeijiSwale_NewXYZ = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "swale" },
	6: { "dataId" : "swale" },
	7: { "dataId" : "swale" },
	8: { "dataId" : "swale" },
	9: { "dataId" : "swale" },
	10: { "dataId" : "swale" },
	11: { "dataId" : "swale" },
	12: { "dataId" : "swale" },
	13: { "dataId" : "swale" },
	14: { "dataId" : "swale" },
	15: { "dataId" : "swale" },
	16: { "dataId" : "swale" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};
/////////////////////////////////////		20140818





//dataSetObj.dataSetOverlay_kiban_koushin2014_10 = {
//		0: { "dataId" : "TRANSPARENT" },
//		1: { "dataId" : "TRANSPARENT" },
//		2: { "dataId" : "TRANSPARENT" },
//		3: { "dataId" : "TRANSPARENT" },
//		4: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
//		13: { "dataId" : "TRANSPARENT" },
//		14: { "dataId" : "TRANSPARENT" },
//		15: { "dataId" : "TRANSPARENT" },
//		16: { "dataId" : "TRANSPARENT" },
//		17: { "dataId" : "TRANSPARENT" },
//		18: { "dataId" : "TRANSPARENT" }
//		};


//基盤地図情報更新情報　10月更新
dataSetObj.dataSetOverlay_KTZ_KOUSIN_2014_10 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		5: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		6: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		7: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		8: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		9: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		10: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		11: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		12: { "dataId" : "BUILD_KTZ_KOUSIN_2014_10__http://cyberjapandata.gsi.go.jp/xyz/fgd_update/2014-10__png" },
		13: { "dataId" : "TRANSPARENT" },
		14: { "dataId" : "TRANSPARENT" },
		15: { "dataId" : "TRANSPARENT" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};//
// @source = libraryGeodeticOverlay.js
//
//磁気図
//偏角
dataSetObj.dataSetOverlay_chijikiD = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "CHIJIKID" },
	5: { "dataId" : "CHIJIKID" },
	6: { "dataId" : "CHIJIKID" },
	7: { "dataId" : "CHIJIKID" },			//このズームレベルまで磁気図
	8: { "dataId" : "CHIJIKID" },			//このズームレベルから一覧図
	9: { "dataId" : "CHIJIKID" },
	10: { "dataId" : "CHIJIKID" },
	11: { "dataId" : "CHIJIKID" },
	12: { "dataId" : "CHIJIKID" },
	13: { "dataId" : "CHIJIKID" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//全磁力
dataSetObj.dataSetOverlay_chijikiF = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "CHIJIKIF" },
	5: { "dataId" : "CHIJIKIF" },
	6: { "dataId" : "CHIJIKIF" },
	7: { "dataId" : "CHIJIKIF" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//水平分力
dataSetObj.dataSetOverlay_chijikiH = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "CHIJIKIH" },
	5: { "dataId" : "CHIJIKIH" },
	6: { "dataId" : "CHIJIKIH" },
	7: { "dataId" : "CHIJIKIH" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//伏角
dataSetObj.dataSetOverlay_chijikiI = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "CHIJIKII" },
	5: { "dataId" : "CHIJIKII" },
	6: { "dataId" : "CHIJIKII" },
	7: { "dataId" : "CHIJIKII" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//鉛直分力
dataSetObj.dataSetOverlay_chijikiZ = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "CHIJIKIZ" },
	5: { "dataId" : "CHIJIKIZ" },
	6: { "dataId" : "CHIJIKIZ" },
	7: { "dataId" : "CHIJIKIZ" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "TRANSPARENT" },
	16: { "dataId" : "TRANSPARENT" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//干渉SAR
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2008052020110413 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},6:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},7:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},8:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},9:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},10:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},11:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},12:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},13:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},14:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},15:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},16:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},17:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2011.04.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2008052020101011 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},6:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},7:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},8:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},9:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},10:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},11:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},12:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},13:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},14:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},15:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},16:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},17:{'dataId':'SAR_subsidence_ishikari_2008.05.20-2010.10.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2010052620100826 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},6:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},7:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},8:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},9:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},10:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},11:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},12:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},13:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},14:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},15:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},16:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},17:{'dataId':'SAR_subsidence_ishikari_2010.05.26-2010.08.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2008050220100508 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},6:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},7:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},8:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},9:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},10:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},11:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},12:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},13:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},14:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},15:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},16:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},17:{'dataId':'SAR_subsidence_ishikari_2008.05.02-2010.05.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2007043020091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},6:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},7:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},8:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},9:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},10:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},11:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},12:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},13:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},14:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},15:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},16:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},17:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2009050520091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},6:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},7:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},8:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},9:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},10:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},11:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},12:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},13:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},14:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},15:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},16:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},17:{'dataId':'SAR_subsidence_ishikari_2009.05.05-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2007081820091008 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},6:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},7:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},8:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},9:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},10:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},11:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},12:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},13:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},14:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},15:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},16:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},17:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2009.10.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2007043020090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},6:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},7:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},8:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},9:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},10:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},11:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},12:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},13:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},14:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},15:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},16:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},17:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2007043020090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},6:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},7:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},8:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},9:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},10:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},11:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},12:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},13:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},14:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},15:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},16:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},17:{'dataId':'SAR_subsidence_ishikari_2007.04.30-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2008070520090708 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},6:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},7:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},8:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},9:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},10:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},11:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},12:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},13:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},14:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},15:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},16:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},17:{'dataId':'SAR_subsidence_ishikari_2008.07.05-2009.07.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2006061220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},6:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},7:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},8:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},9:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},10:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},11:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},12:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},13:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},14:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},15:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},16:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},17:{'dataId':'SAR_subsidence_ishikari_2006.06.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},6:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},7:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},8:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},9:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},10:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},11:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},12:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},13:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},14:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},15:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},16:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},17:{'dataId':'SAR_subsidence_ishikari_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2007081820080705 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},6:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},7:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},8:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},9:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},10:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},11:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},12:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},13:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},14:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},15:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},16:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},17:{'dataId':'SAR_subsidence_ishikari_2007.08.18-2008.07.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_ishikari_2006042720070430 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},6:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},7:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},8:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},9:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},10:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},11:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},12:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},13:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},14:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},15:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},16:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},17:{'dataId':'SAR_subsidence_ishikari_2006.04.27-2007.04.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2008051020110101 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},6:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},7:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},8:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},9:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},10:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},11:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},12:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},13:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},14:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},15:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},16:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},17:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2011.01.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2010042820101029 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},6:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},7:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},8:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},9:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},10:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},11:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},12:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},13:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},14:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},15:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},16:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},17:{'dataId':'SAR_subsidence_kushiro_2010.04.28-2010.10.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2008051020101001 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},6:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},7:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},8:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},9:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},10:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},11:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},12:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},13:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},14:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},15:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},16:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},17:{'dataId':'SAR_subsidence_kushiro_2008.05.10-2010.10.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2008060720100613 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},6:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},7:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},8:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},9:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},10:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},11:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},12:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},13:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},14:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},15:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},16:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},17:{'dataId':'SAR_subsidence_kushiro_2008.06.07-2010.06.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2008062520090813 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},6:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},7:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},8:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},9:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},10:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},11:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},12:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},13:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},14:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},15:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},16:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},17:{'dataId':'SAR_subsidence_kushiro_2008.06.25-2009.08.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2006101820081023 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},6:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},7:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},8:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},9:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},10:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},11:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},12:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},13:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},14:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},15:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},16:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},17:{'dataId':'SAR_subsidence_kushiro_2006.10.18-2008.10.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2006120320081023 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},6:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},7:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},8:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},9:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},10:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},11:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},12:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},13:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},14:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},15:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},16:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},17:{'dataId':'SAR_subsidence_kushiro_2006.12.03-2008.10.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2007092320080625 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},6:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},7:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},8:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},9:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},10:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},11:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},12:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},13:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},14:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},15:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},16:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},17:{'dataId':'SAR_subsidence_kushiro_2007.09.23-2008.06.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2007102120080607 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},6:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},7:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},8:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},9:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},10:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},11:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},12:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},13:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},14:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},15:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},16:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},17:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.06.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2007102120080422 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},6:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},7:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},8:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},9:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},10:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},11:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},12:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},13:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},14:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},15:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},16:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},17:{'dataId':'SAR_subsidence_kushiro_2007.10.21-2008.04.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2007060520071021 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},6:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},7:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},8:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},9:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},10:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},11:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},12:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},13:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},14:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},15:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},16:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},17:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.10.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2007080820070923 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},6:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},7:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},8:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},9:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},10:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},11:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},12:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},13:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},14:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},15:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},16:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},17:{'dataId':'SAR_subsidence_kushiro_2007.08.08-2007.09.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kushiro_2007060520070905 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},6:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},7:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},8:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},9:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},10:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},11:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},12:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},13:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},14:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},15:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},16:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},17:{'dataId':'SAR_subsidence_kushiro_2007.06.05-2007.09.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tokachis_2008052620110419 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},6:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},7:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},8:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},9:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},10:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},11:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},12:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},13:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},14:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},15:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},16:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},17:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2011.04.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tokachis_2008052620101017 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},6:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},7:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},8:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},9:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},10:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},11:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},12:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},13:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},14:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},15:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},16:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},17:{'dataId':'SAR_subsidence_tokachi-s_2008.05.26-2010.10.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tokachis_2007052420100601 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},6:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},7:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},8:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},9:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},10:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},11:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},12:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},13:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},14:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},15:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},16:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},17:{'dataId':'SAR_subsidence_tokachi-s_2007.05.24-2010.06.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tokachis_2008072920090801 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},6:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},7:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},8:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},9:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},10:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},11:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},12:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},13:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},14:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},15:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},16:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},17:{'dataId':'SAR_subsidence_tokachi-s_2008.07.29-2009.08.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tokachis_2007070920090413 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},6:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},7:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},8:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},9:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},10:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},11:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},12:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},13:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},14:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},15:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},16:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},17:{'dataId':'SAR_subsidence_tokachi-s_2007.07.09-2009.04.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2008032320110401 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},6:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},7:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},8:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},9:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},10:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},11:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},12:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},13:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},14:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},15:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},16:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},17:{'dataId':'SAR_subsidence_tsugaru_2008.03.23-2011.04.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},6:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},7:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},8:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},9:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},10:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},11:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},12:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},13:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},14:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},15:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},16:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},17:{'dataId':'SAR_subsidence_tsugaru_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2008062320100514 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},6:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},7:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},8:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},9:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},10:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},11:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},12:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},13:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},14:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},15:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},16:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},17:{'dataId':'SAR_subsidence_tsugaru_2008.06.23-2010.05.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2008091720081102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},6:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},7:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},8:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},9:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},10:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},11:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},12:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},13:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},14:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},15:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},16:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},17:{'dataId':'SAR_subsidence_tsugaru_2008.09.17-2008.11.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},6:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},7:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},8:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},9:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},10:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},11:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},12:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},13:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},14:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},15:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},16:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},17:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2007122220080623 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},6:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},7:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},8:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},9:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},10:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},11:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},12:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},13:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},14:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},15:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},16:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},17:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.06.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2007091520080502 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},6:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},7:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},8:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},9:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},10:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},11:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},12:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},13:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},14:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},15:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},16:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},17:{'dataId':'SAR_subsidence_tsugaru_2007.09.15-2008.05.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2007122220080323 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},6:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},7:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},8:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},9:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},10:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},11:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},12:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},13:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},14:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},15:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},16:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},17:{'dataId':'SAR_subsidence_tsugaru_2007.12.22-2008.03.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2007080620080323 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},6:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},7:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},8:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},9:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},10:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},11:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},12:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},13:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},14:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},15:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},16:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},17:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2008.03.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2007080620071222 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},6:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},7:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},8:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},9:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},10:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},11:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},12:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},13:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},14:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},15:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},16:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},17:{'dataId':'SAR_subsidence_tsugaru_2007.08.06-2007.12.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2007062120070921 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},6:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},7:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},8:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},9:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},10:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},11:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},12:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},13:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},14:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},15:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},16:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},17:{'dataId':'SAR_subsidence_tsugaru_2007.06.21-2007.09.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2006091220070915 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},6:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},7:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},8:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},9:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},10:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},11:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},12:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},13:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},14:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},15:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},16:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},17:{'dataId':'SAR_subsidence_tsugaru_2006.09.12-2007.09.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2006072820070915 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},6:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},7:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},8:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},9:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},10:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},11:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},12:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},13:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},14:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},15:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},16:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},17:{'dataId':'SAR_subsidence_tsugaru_2006.07.28-2007.09.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_tsugaru_2006042720060612 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},6:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},7:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},8:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},9:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},10:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},11:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},12:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},13:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},14:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},15:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},16:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},17:{'dataId':'SAR_subsidence_tsugaru_2006.04.27-2006.06.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008052020110111 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},6:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},7:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},8:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},9:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},10:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},11:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},12:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},13:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},14:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},15:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},16:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},17:{'dataId':'SAR_subsidence_hachinohe_2008.05.20-2011.01.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2010041020101011 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},6:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},7:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},8:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},9:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},10:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},11:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},12:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},13:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},14:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},15:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},16:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},17:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.10.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008021820101011 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},6:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},7:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},8:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},9:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},10:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},11:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},12:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},13:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},14:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},15:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},16:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},17:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.10.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2010041020100826 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},6:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},7:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},8:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},9:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},10:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},11:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},12:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},13:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},14:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},15:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},16:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},17:{'dataId':'SAR_subsidence_hachinohe_2010.04.10-2010.08.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008021820100826 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},6:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},7:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},8:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},9:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},10:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},11:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},12:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},13:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},14:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},15:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},16:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},17:{'dataId':'SAR_subsidence_hachinohe_2008.02.18-2010.08.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008010320100826 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},6:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},7:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},8:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},9:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},10:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},11:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},12:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},13:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},14:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},15:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},16:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},17:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.08.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008011420100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},6:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},7:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},8:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},9:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},10:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},11:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},12:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},13:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},14:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},15:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},16:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},17:{'dataId':'SAR_subsidence_hachinohe_2008.01.14-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008010320100526 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},6:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},7:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},8:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},9:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},10:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},11:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},12:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},13:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},14:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},15:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},16:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},17:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.05.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008010320100410 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},6:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},7:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},8:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},9:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},10:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},11:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},12:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},13:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},14:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},15:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},16:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},17:{'dataId':'SAR_subsidence_hachinohe_2008.01.03-2010.04.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008070520100108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},6:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},7:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},8:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},9:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},10:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},11:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},12:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},13:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},14:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},15:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},16:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},17:{'dataId':'SAR_subsidence_hachinohe_2008.07.05-2010.01.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2008071620091204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},6:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},7:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},8:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},9:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},10:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},11:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},12:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},13:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},14:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},15:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},16:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},17:{'dataId':'SAR_subsidence_hachinohe_2008.07.16-2009.12.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2007082920091204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},6:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},7:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},8:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},9:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},10:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},11:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},12:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},13:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},14:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},15:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},16:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},17:{'dataId':'SAR_subsidence_hachinohe_2007.08.29-2009.12.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2007071420091019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},6:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},7:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},8:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},9:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},10:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},11:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},12:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},13:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},14:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},15:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},16:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},17:{'dataId':'SAR_subsidence_hachinohe_2007.07.14-2009.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2007100320091008 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},6:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},7:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},8:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},9:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},10:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},11:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},12:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},13:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},14:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},15:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},16:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},17:{'dataId':'SAR_subsidence_hachinohe_2007.10.03-2009.10.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hachinohe_2006101120081016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},6:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},7:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},8:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},9:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},10:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},11:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},12:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},13:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},14:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},15:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},16:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},17:{'dataId':'SAR_subsidence_hachinohe_2006.10.11-2008.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2008053120110122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},6:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},7:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},8:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},9:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},10:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},11:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},12:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},13:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},14:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},15:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},16:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},17:{'dataId':'SAR_subsidence_sendai_2008.05.31-2011.01.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2008053120101022 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},6:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},7:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},8:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},9:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},10:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},11:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},12:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},13:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},14:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},15:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},16:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},17:{'dataId':'SAR_subsidence_sendai_2008.05.31-2010.10.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2010051420100929 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},6:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},7:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},8:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},9:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},10:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},11:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},12:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},13:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},14:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},15:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},16:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},17:{'dataId':'SAR_subsidence_sendai_2010.05.14-2010.09.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2008032320100929 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},6:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},7:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},8:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},9:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},10:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},11:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},12:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},13:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},14:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},15:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},16:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},17:{'dataId':'SAR_subsidence_sendai_2008.03.23-2010.09.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2008011420100606 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},6:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},7:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},8:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},9:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},10:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},11:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},12:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},13:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},14:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},15:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},16:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},17:{'dataId':'SAR_subsidence_sendai_2008.01.14-2010.06.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2007122220100514 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},6:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},7:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},8:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},9:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},10:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},11:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},12:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},13:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},14:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},15:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},16:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},17:{'dataId':'SAR_subsidence_sendai_2007.12.22-2010.05.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2008071620091204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},6:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},7:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},8:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},9:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},10:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},11:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},12:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},13:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},14:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},15:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},16:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},17:{'dataId':'SAR_subsidence_sendai_2008.07.16-2009.12.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2007082920091204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},6:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},7:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},8:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},9:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},10:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},11:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},12:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},13:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},14:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},15:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},16:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},17:{'dataId':'SAR_subsidence_sendai_2007.08.29-2009.12.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2007071420091019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},6:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},7:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},8:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},9:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},10:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},11:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},12:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},13:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},14:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},15:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},16:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},17:{'dataId':'SAR_subsidence_sendai_2007.07.14-2009.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2007020320090208 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},6:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},7:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},8:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},9:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},10:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},11:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},12:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},13:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},14:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},15:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},16:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},17:{'dataId':'SAR_subsidence_sendai_2007.02.03-2009.02.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_sendai_2007082920080716 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},6:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},7:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},8:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},9:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},10:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},11:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},12:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},13:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},14:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},15:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},16:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},17:{'dataId':'SAR_subsidence_sendai_2007.08.29-2008.07.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2011010420110219 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},6:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},7:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},8:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},9:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},10:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},11:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},12:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},13:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},14:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},15:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},16:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},17:{'dataId':'SAR_subsidence_kanto-n_2011.01.04-2011.02.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2008021120110104 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},6:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},7:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},8:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},9:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},10:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},11:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},12:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},13:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},14:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},15:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},16:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},17:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2011.01.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2010110820101224 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},6:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},7:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},8:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},9:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},10:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},11:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},12:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},13:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},14:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},15:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},16:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},17:{'dataId':'SAR_subsidence_kanto-n_2010.11.08-2010.12.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2008032820101004 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},6:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},7:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},8:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},9:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},10:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},11:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},12:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},13:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},14:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},15:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},16:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},17:{'dataId':'SAR_subsidence_kanto-n_2008.03.28-2010.10.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2008021120100519 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},6:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},7:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},8:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},9:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},10:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},11:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},12:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},13:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},14:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},15:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},16:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},17:{'dataId':'SAR_subsidence_kanto-n_2008.02.11-2010.05.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2007122720100403 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},6:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},7:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},8:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},9:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},10:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},11:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},12:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},13:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},14:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},15:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},16:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},17:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.04.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2007122720100216 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},6:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},7:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},8:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},9:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},10:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},11:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},12:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},13:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},14:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},15:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},16:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},17:{'dataId':'SAR_subsidence_kanto-n_2007.12.27-2010.02.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2007012820091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},6:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},7:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},8:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},9:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},10:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},11:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},12:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},13:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},14:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},15:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},16:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},17:{'dataId':'SAR_subsidence_kanto-n_2007.01.28-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2006092320090701 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},6:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},7:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},8:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},9:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},10:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},11:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},12:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},13:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},14:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},15:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},16:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},17:{'dataId':'SAR_subsidence_kanto-n_2006.09.23-2009.07.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2006122420081229 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},6:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},7:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},8:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},9:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},10:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},11:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},12:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},13:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},14:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},15:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},16:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},17:{'dataId':'SAR_subsidence_kanto-n_2006.12.24-2008.12.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2006061220081218 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},6:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},7:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},8:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},9:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},10:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},11:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},12:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},13:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},14:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},15:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},16:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},17:{'dataId':'SAR_subsidence_kanto-n_2006.06.12-2008.12.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanton_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},6:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},7:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},8:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},9:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},10:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},11:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},12:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},13:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},14:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},15:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},16:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},17:{'dataId':'SAR_subsidence_kanto-n_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2008041420110121 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},6:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},7:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},8:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},9:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},10:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},11:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},12:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},13:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},14:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},15:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},16:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},17:{'dataId':'SAR_subsidence_kanto-s_2008.04.14-2011.01.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2010050820100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},6:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},7:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},8:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},9:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},10:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},11:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},12:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},13:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},14:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},15:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},16:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},17:{'dataId':'SAR_subsidence_kanto-s_2010.05.08-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2010032320100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},6:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},7:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},8:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},9:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},10:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},11:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},12:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},13:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},14:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},15:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},16:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},17:{'dataId':'SAR_subsidence_kanto-s_2010.03.23-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2008013120100508 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},6:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},7:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},8:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},9:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},10:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},11:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},12:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},13:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},14:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},15:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},16:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},17:{'dataId':'SAR_subsidence_kanto-s_2008.01.31-2010.05.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007101320100118 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},6:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},7:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},8:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},9:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},10:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},11:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},12:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},13:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},14:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},15:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},16:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},17:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2010.01.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007101320091203 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},6:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},7:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},8:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},9:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},10:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},11:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},12:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},13:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},14:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},15:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},16:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},17:{'dataId':'SAR_subsidence_kanto-s_2007.10.13-2009.12.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007091520091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},6:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},7:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},8:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},9:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},10:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},11:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},12:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},13:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},14:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},15:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},16:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},17:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007012820091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},6:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},7:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},8:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},9:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},10:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},11:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},12:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},13:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},14:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},15:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},16:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},17:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006072820091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},6:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},7:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},8:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},9:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},10:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},11:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},12:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},13:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},14:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},15:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},16:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},17:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007091520090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},6:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},7:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},8:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},9:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},10:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},11:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},12:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},13:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},14:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},15:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},16:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},17:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006101020090902 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},6:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},7:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},8:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},9:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},10:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},11:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},12:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},13:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},14:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},15:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},16:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},17:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.09.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007091520090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},6:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},7:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},8:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},9:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},10:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},11:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},12:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},13:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},14:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},15:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},16:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},17:{'dataId':'SAR_subsidence_kanto-s_2007.09.15-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006101020090718 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},6:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},7:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},8:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},9:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},10:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},11:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},12:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},13:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},14:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},15:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},16:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},17:{'dataId':'SAR_subsidence_kanto-s_2006.10.10-2009.07.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007012820090320 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},6:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},7:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},8:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},9:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},10:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},11:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},12:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},13:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},14:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},15:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},16:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},17:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.03.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006072820090320 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},6:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},7:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},8:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},9:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},10:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},11:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},12:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},13:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},14:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},15:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},16:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},17:{'dataId':'SAR_subsidence_kanto-s_2006.07.28-2009.03.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006061220090320 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},6:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},7:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},8:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},9:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},10:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},11:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},12:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},13:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},14:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},15:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},16:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},17:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.03.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007012820090202 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},6:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},7:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},8:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},9:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},10:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},11:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},12:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},13:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},14:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},15:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},16:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},17:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2009.02.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006061220090202 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},6:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},7:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},8:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},9:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},10:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},11:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},12:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},13:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},14:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},15:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},16:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},17:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2009.02.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007012820081218 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},6:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},7:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},8:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},9:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},10:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},11:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},12:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},13:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},14:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},15:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},16:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},17:{'dataId':'SAR_subsidence_kanto-s_2007.01.28-2008.12.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2007011020081130 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},6:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},7:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},8:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},9:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},10:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},11:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},12:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},13:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},14:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},15:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},16:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},17:{'dataId':'SAR_subsidence_kanto-s_2007.01.10-2008.11.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006091220081102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},6:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},7:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},8:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},9:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},10:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},11:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},12:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},13:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},14:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},15:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},16:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},17:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.11.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},6:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},7:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},8:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},9:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},10:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},11:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},12:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},13:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},14:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},15:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},16:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},17:{'dataId':'SAR_subsidence_kanto-s_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kantos_2006061220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},6:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},7:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},8:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},9:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},10:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},11:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},12:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},13:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},14:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},15:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},16:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},17:{'dataId':'SAR_subsidence_kanto-s_2006.06.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2008021120110219 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},6:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},7:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},8:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},9:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},10:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},11:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},12:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},13:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},14:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},15:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},16:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},17:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2011.02.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2008053120110122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},6:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},7:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},8:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},9:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},10:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},11:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},12:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},13:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},14:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},15:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},16:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},17:{'dataId':'SAR_subsidence_kujyukuri_2008.05.31-2011.01.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2008032820110104 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},6:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},7:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},8:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},9:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},10:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},11:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},12:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},13:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},14:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},15:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},16:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},17:{'dataId':'SAR_subsidence_kujyukuri_2008.03.28-2011.01.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2008011420100906 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},6:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},7:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},8:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},9:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},10:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},11:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},12:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},13:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},14:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},15:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},16:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},17:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.09.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2008021120100704 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},6:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},7:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},8:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},9:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},10:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},11:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},12:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},13:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},14:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},15:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},16:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},17:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.07.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2008011420100606 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},6:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},7:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},8:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},9:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},10:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},11:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},12:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},13:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},14:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},15:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},16:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},17:{'dataId':'SAR_subsidence_kujyukuri_2008.01.14-2010.06.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2008021120100216 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},6:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},7:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},8:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},9:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},10:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},11:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},12:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},13:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},14:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},15:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},16:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},17:{'dataId':'SAR_subsidence_kujyukuri_2008.02.11-2010.02.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007071420091204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.07.14-2009.12.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006110820091116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.11.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007022620091019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007081120091001 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.08.11-2009.10.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006110820091001 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2009.10.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007022620090903 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.09.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007022620090603 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.02.26-2009.06.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006122420090213 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2009.02.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006112620090116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2009.01.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006101120090116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2009.01.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006122420081229 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.12.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006112620081201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.12.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006101120081201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.12.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006122420081113 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.11.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006112620081016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006101120081016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006122420080928 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.12.24-2008.09.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006080820080928 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.08.08-2008.09.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006112620080831 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.11.26-2008.08.31'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006101120080831 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.10.11-2008.08.31'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007092620080628 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.09.26-2008.06.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007011120080114 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2008.01.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007011120071129 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.11.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2007011120071014 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},6:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},7:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},8:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},9:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},10:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},11:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},12:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},13:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},14:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},15:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},16:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},17:{'dataId':'SAR_subsidence_kujyukuri_2007.01.11-2007.10.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kujyukuri_2006110820070511 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},6:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},7:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},8:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},9:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},10:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},11:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},12:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},13:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},14:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},15:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},16:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},17:{'dataId':'SAR_subsidence_kujyukuri_2006.11.08-2007.05.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2008041420101021 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},6:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},7:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},8:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},9:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},10:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},11:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},12:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},13:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},14:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},15:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},16:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},17:{'dataId':'SAR_subsidence_niigata_2008.04.14-2010.10.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2010042620100911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},6:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},7:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},8:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},9:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},10:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},11:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},12:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},13:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},14:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},15:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},16:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},17:{'dataId':'SAR_subsidence_niigata_2010.04.26-2010.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2008060520100911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},6:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},7:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},8:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},9:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},10:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},11:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},12:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},13:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},14:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},15:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},16:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},17:{'dataId':'SAR_subsidence_niigata_2008.06.05-2010.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007101920100727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},6:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},7:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},8:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},9:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},10:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},11:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},12:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},13:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},14:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},15:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},16:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},17:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007101920100611 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},6:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},7:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},8:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},9:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},10:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},11:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},12:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},13:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},14:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},15:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},16:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},17:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.06.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007101920100426 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},6:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},7:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},8:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},9:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},10:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},11:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},12:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},13:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},14:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},15:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},16:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},17:{'dataId':'SAR_subsidence_niigata_2007.10.19-2010.04.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2010030520100420 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},6:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},7:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},8:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},9:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},10:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},11:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},12:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},13:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},14:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},15:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},16:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},17:{'dataId':'SAR_subsidence_niigata_2010.03.05-2010.04.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007101920091209 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},6:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},7:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},8:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},9:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},10:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},11:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},12:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},13:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},14:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},15:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},16:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},17:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.12.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007071920091209 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},6:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},7:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},8:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},9:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},10:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},11:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},12:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},13:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},14:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},15:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},16:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},17:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.12.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007082820091203 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},6:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},7:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},8:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},9:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},10:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},11:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},12:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},13:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},14:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},15:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},16:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},17:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.12.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2008072120091024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},6:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},7:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},8:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},9:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},10:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},11:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},12:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},13:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},14:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},15:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},16:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},17:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007101920091024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},6:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},7:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},8:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},9:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},10:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},11:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},12:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},13:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},14:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},15:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},16:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},17:{'dataId':'SAR_subsidence_niigata_2007.10.19-2009.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007071920091024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},6:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},7:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},8:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},9:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},10:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},11:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},12:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},13:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},14:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},15:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},16:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},17:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007082820091018 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},6:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},7:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},8:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},9:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},10:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},11:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},12:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},13:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},14:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},15:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},16:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},17:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.10.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2008072120090908 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},6:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},7:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},8:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},9:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},10:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},11:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},12:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},13:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},14:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},15:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},16:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},17:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.09.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007071920090908 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},6:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},7:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},8:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},9:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},10:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},11:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},12:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},13:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},14:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},15:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},16:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},17:{'dataId':'SAR_subsidence_niigata_2007.07.19-2009.09.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007082820090902 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},6:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},7:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},8:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},9:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},10:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},11:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},12:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},13:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},14:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},15:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},16:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},17:{'dataId':'SAR_subsidence_niigata_2007.08.28-2009.09.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2006101020090902 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},6:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},7:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},8:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},9:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},10:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},11:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},12:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},13:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},14:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},15:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},16:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},17:{'dataId':'SAR_subsidence_niigata_2006.10.10-2009.09.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2008072120090423 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},6:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},7:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},8:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},9:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},10:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},11:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},12:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},13:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},14:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},15:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},16:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},17:{'dataId':'SAR_subsidence_niigata_2008.07.21-2009.04.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2006052520081130 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},6:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},7:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},8:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},9:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},10:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},11:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},12:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},13:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},14:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},15:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},16:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},17:{'dataId':'SAR_subsidence_niigata_2006.05.25-2008.11.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2007071920080721 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},6:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},7:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},8:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},9:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},10:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},11:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},12:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},13:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},14:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},15:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},16:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},17:{'dataId':'SAR_subsidence_niigata_2007.07.19-2008.07.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_niigata_2006101020070713 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},6:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},7:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},8:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},9:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},10:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},11:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},12:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},13:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},14:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},15:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},16:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},17:{'dataId':'SAR_subsidence_niigata_2006.10.10-2007.07.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_minamiuonuma_2007101920100727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},6:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},7:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},8:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},9:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},10:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},11:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},12:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},13:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},14:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},15:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},16:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},17:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_minamiuonuma_2007101920100611 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},6:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},7:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},8:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},9:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},10:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},11:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},12:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},13:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},14:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},15:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},16:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},17:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.19-2010.06.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_minamiuonuma_2007103020100507 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},6:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},7:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},8:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},9:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},10:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},11:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},12:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},13:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},14:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},15:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},16:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},17:{'dataId':'SAR_subsidence_minamiuonuma_2007.10.30-2010.05.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_minamiuonuma_2007091420100322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},6:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},7:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},8:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},9:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},10:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},11:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},12:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},13:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},14:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},15:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},16:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},17:{'dataId':'SAR_subsidence_minamiuonuma_2007.09.14-2010.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanazawa_2008040720110301 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},6:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},7:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},8:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},9:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},10:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},11:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},12:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},13:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},14:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},15:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},16:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},17:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2011.03.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanazawa_2008040720101014 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},6:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},7:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},8:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},9:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},10:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},11:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},12:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},13:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},14:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},15:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},16:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},17:{'dataId':'SAR_subsidence_kanazawa_2008.04.07-2010.10.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanazawa_2007081020100703 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},6:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},7:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},8:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},9:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},10:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},11:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},12:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},13:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},14:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},15:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},16:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},17:{'dataId':'SAR_subsidence_kanazawa_2007.08.10-2010.07.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanazawa_2007100620100413 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},6:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},7:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},8:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},9:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},10:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},11:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},12:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},13:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},14:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},15:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},16:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},17:{'dataId':'SAR_subsidence_kanazawa_2007.10.06-2010.04.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanazawa_2008070820090711 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},6:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},7:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},8:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},9:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},10:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},11:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},12:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},13:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},14:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},15:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},16:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},17:{'dataId':'SAR_subsidence_kanazawa_2008.07.08-2009.07.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanazawa_2006122320081228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},6:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},7:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},8:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},9:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},10:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},11:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},12:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},13:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},14:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},15:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},16:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},17:{'dataId':'SAR_subsidence_kanazawa_2006.12.23-2008.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_kanazawa_2007010320081123 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},6:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},7:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},8:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},9:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},10:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},11:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},12:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},13:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},14:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},15:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},16:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},17:{'dataId':'SAR_subsidence_kanazawa_2007.01.03-2008.11.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2010091020110126 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},6:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},7:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},8:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},9:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},10:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},11:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},12:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},13:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},14:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},15:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},16:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},17:{'dataId':'SAR_subsidence_shizuoka_2010.09.10-2011.01.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2008041920110126 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},6:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},7:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},8:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},9:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},10:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},11:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},12:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},13:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},14:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},15:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},16:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},17:{'dataId':'SAR_subsidence_shizuoka_2008.04.19-2011.01.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2008060520100911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},6:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},7:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},8:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},9:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},10:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},11:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},12:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},13:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},14:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},15:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},16:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},17:{'dataId':'SAR_subsidence_shizuoka_2008.06.05-2010.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2010042620100727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},6:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},7:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},8:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},9:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},10:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},11:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},12:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},13:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},14:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},15:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},16:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},17:{'dataId':'SAR_subsidence_shizuoka_2010.04.26-2010.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2007101920100611 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},6:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},7:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},8:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},9:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},10:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},11:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},12:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},13:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},14:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},15:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},16:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},17:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.06.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2007101920100426 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},6:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},7:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},8:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},9:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},10:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},11:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},12:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},13:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},14:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},15:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},16:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},17:{'dataId':'SAR_subsidence_shizuoka_2007.10.19-2010.04.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2009090820091024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},6:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},7:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},8:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},9:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},10:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},11:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},12:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},13:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},14:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},15:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},16:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},17:{'dataId':'SAR_subsidence_shizuoka_2009.09.08-2009.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2008072120090908 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},6:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},7:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},8:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},9:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},10:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},11:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},12:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},13:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},14:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},15:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},16:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},17:{'dataId':'SAR_subsidence_shizuoka_2008.07.21-2009.09.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2007011520090120 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},6:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},7:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},8:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},9:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},10:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},11:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},12:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},13:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},14:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},15:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},16:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},17:{'dataId':'SAR_subsidence_shizuoka_2007.01.15-2009.01.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_shizuoka_2007011620071204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},6:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},7:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},8:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},9:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},10:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},11:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},12:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},13:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},14:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},15:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},16:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},17:{'dataId':'SAR_subsidence_shizuoka_2007.01.16-2007.12.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2008040720110301 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},6:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},7:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},8:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},9:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},10:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},11:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},12:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},13:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},14:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},15:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},16:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},17:{'dataId':'SAR_subsidence_noubi_2008.04.07-2011.03.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2010082920101014 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},6:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},7:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},8:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},9:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},10:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},11:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},12:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},13:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},14:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},15:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},16:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},17:{'dataId':'SAR_subsidence_noubi_2010.08.29-2010.10.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2010022620101014 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},6:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},7:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},8:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},9:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},10:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},11:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},12:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},13:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},14:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},15:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},16:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},17:{'dataId':'SAR_subsidence_noubi_2010.02.26-2010.10.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2008012320100915 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},6:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},7:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},8:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},9:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},10:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},11:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},12:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},13:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},14:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},15:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},16:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},17:{'dataId':'SAR_subsidence_noubi_2008.01.23-2010.09.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2010011120100829 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},6:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},7:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},8:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},9:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},10:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},11:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},12:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},13:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},14:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},15:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},16:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},17:{'dataId':'SAR_subsidence_noubi_2010.01.11-2010.08.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2008022120100829 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},6:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},7:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},8:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},9:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},10:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},11:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},12:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},13:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},14:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},15:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},16:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},17:{'dataId':'SAR_subsidence_noubi_2008.02.21-2010.08.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2008010620100413 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},6:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},7:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},8:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},9:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},10:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},11:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},12:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},13:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},14:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},15:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},16:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},17:{'dataId':'SAR_subsidence_noubi_2008.01.06-2010.04.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2007112120100226 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},6:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},7:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},8:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},9:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},10:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},11:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},12:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},13:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},14:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},15:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},16:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},17:{'dataId':'SAR_subsidence_noubi_2007.11.21-2010.02.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2007102420091029 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},6:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},7:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},8:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},9:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},10:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},11:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},12:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},13:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},14:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},15:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},16:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},17:{'dataId':'SAR_subsidence_noubi_2007.10.24-2009.10.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2006120620090613 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},6:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},7:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},8:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},9:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},10:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},11:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},12:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},13:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},14:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},15:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},16:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},17:{'dataId':'SAR_subsidence_noubi_2006.12.06-2009.06.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2006120520090125 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},6:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},7:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},8:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},9:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},10:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},11:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},12:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},13:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},14:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},15:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},16:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},17:{'dataId':'SAR_subsidence_noubi_2006.12.05-2009.01.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2007010320090108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},6:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},7:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},8:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},9:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},10:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},11:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},12:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},13:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},14:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},15:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},16:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},17:{'dataId':'SAR_subsidence_noubi_2007.01.03-2009.01.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2007042320080425 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},6:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},7:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},8:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},9:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},10:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},11:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},12:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},13:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},14:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},15:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},16:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},17:{'dataId':'SAR_subsidence_noubi_2007.04.23-2008.04.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2006120520080123 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},6:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},7:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},8:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},9:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},10:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},11:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},12:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},13:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},14:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},15:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},16:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},17:{'dataId':'SAR_subsidence_noubi_2006.12.05-2008.01.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2007010320080106 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},6:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},7:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},8:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},9:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},10:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},11:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},12:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},13:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},14:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},15:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},16:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},17:{'dataId':'SAR_subsidence_noubi_2007.01.03-2008.01.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2006120520071208 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},6:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},7:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},8:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},9:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},10:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},11:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},12:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},13:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},14:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},15:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},16:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},17:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.12.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2006120620071024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},6:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},7:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},8:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},9:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},10:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},11:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},12:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},13:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},14:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},15:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},16:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},17:{'dataId':'SAR_subsidence_noubi_2006.12.06-2007.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_noubi_2006120520071023 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},6:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},7:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},8:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},9:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},10:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},11:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},12:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},13:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},14:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},15:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},16:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},17:{'dataId':'SAR_subsidence_noubi_2006.12.05-2007.10.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2008052920101020 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},6:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},7:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},8:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},9:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},10:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},11:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},12:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},13:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},14:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},15:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},16:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},17:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.10.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007010920101020 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},6:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},7:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},8:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},9:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},10:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},11:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},12:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},13:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},14:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},15:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},16:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},17:{'dataId':'SAR_subsidence_osaka_2007.01.09-2010.10.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2010030320101019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},6:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},7:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},8:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},9:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},10:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},11:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},12:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},13:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},14:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},15:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},16:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},17:{'dataId':'SAR_subsidence_osaka_2010.03.03-2010.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2008022620101019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},6:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},7:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},8:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},9:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},10:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},11:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},12:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},13:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},14:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},15:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},16:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},17:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2008052920100904 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},6:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},7:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},8:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},9:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},10:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},11:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},12:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},13:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},14:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},15:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},16:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},17:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.09.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2008022620100903 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},6:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},7:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},8:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},9:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},10:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},11:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},12:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},13:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},14:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},15:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},16:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},17:{'dataId':'SAR_subsidence_osaka_2008.02.26-2010.09.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2008052920100604 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},6:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},7:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},8:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},9:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},10:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},11:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},12:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},13:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},14:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},15:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},16:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},17:{'dataId':'SAR_subsidence_osaka_2008.05.29-2010.06.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2008011120100303 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},6:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},7:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},8:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},9:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},10:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},11:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},12:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},13:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},14:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},15:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},16:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},17:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.03.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2008011120100116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},6:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},7:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},8:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},9:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},10:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},11:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},12:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},13:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},14:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},15:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},16:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},17:{'dataId':'SAR_subsidence_osaka_2008.01.11-2010.01.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007010920091202 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},6:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},7:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},8:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},9:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},10:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},11:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},12:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},13:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},14:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},15:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},16:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},17:{'dataId':'SAR_subsidence_osaka_2007.01.09-2009.12.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007010820090113 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},6:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},7:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},8:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},9:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},10:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},11:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},12:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},13:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},14:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},15:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},16:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},17:{'dataId':'SAR_subsidence_osaka_2007.01.08-2009.01.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007052720080529 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},6:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},7:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},8:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},9:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},10:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},11:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},12:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},13:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},14:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},15:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},16:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},17:{'dataId':'SAR_subsidence_osaka_2007.05.27-2008.05.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007012620080430 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},6:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},7:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},8:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},9:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},10:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},11:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},12:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},13:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},14:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},15:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},16:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},17:{'dataId':'SAR_subsidence_osaka_2007.01.26-2008.04.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007010920080227 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},6:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},7:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},8:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},9:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},10:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},11:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},12:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},13:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},14:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},15:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},16:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},17:{'dataId':'SAR_subsidence_osaka_2007.01.09-2008.02.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007010920070827 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},6:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},7:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},8:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},9:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},10:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},11:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},12:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},13:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},14:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},15:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},16:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},17:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.08.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_osaka_2007010920070527 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},6:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},7:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},8:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},9:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},10:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},11:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},12:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},13:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},14:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},15:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},16:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},17:{'dataId':'SAR_subsidence_osaka_2007.01.09-2007.05.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2010031320101029 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},6:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},7:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},8:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},9:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},10:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},11:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},12:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},13:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},14:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},15:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},16:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},17:{'dataId':'SAR_subsidence_hiroshima_2010.03.13-2010.10.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2008030720101029 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},6:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},7:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},8:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},9:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},10:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},11:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},12:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},13:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},14:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},15:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},16:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},17:{'dataId':'SAR_subsidence_hiroshima_2008.03.07-2010.10.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2010042820100913 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},6:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},7:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},8:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},9:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},10:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},11:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},12:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},13:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},14:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},15:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},16:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},17:{'dataId':'SAR_subsidence_hiroshima_2010.04.28-2010.09.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2010012620100428 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},6:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},7:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},8:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},9:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},10:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},11:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},12:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},13:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},14:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},15:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},16:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},17:{'dataId':'SAR_subsidence_hiroshima_2010.01.26-2010.04.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2008012120100428 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},6:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},7:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},8:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},9:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},10:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},11:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},12:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},13:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},14:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},15:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},16:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},17:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.04.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2007120620100313 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},6:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},7:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},8:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},9:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},10:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},11:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},12:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},13:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},14:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},15:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},16:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},17:{'dataId':'SAR_subsidence_hiroshima_2007.12.06-2010.03.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2008012120100126 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},6:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},7:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},8:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},9:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},10:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},11:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},12:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},13:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},14:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},15:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},16:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},17:{'dataId':'SAR_subsidence_hiroshima_2008.01.21-2010.01.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2007011920091212 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},6:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},7:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},8:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},9:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},10:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},11:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},12:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},13:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},14:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},15:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},16:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},17:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2009.12.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2007011820090123 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},6:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},7:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},8:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},9:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},10:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},11:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},12:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},13:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},14:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},15:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},16:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},17:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2009.01.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2007011820080907 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},6:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},7:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},8:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},9:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},10:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},11:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},12:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},13:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},14:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},15:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},16:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},17:{'dataId':'SAR_subsidence_hiroshima_2007.01.18-2008.09.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2007011920080122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},6:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},7:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},8:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},9:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},10:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},11:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},12:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},13:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},14:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},15:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},16:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},17:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2008.01.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_hiroshima_2007011920071022 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},6:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},7:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},8:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},9:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},10:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},11:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},12:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},13:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},14:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},15:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},16:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},17:{'dataId':'SAR_subsidence_hiroshima_2007.01.19-2007.10.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008053120110309 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},6:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},7:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},8:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},9:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},10:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},11:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},12:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},13:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},14:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},15:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},16:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},17:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.03.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008051520110221 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},6:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},7:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},8:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},9:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},10:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},11:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},12:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},13:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},14:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},15:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},16:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},17:{'dataId':'SAR_subsidence_saga_2008.05.15-2011.02.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010112020110220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},6:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},7:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},8:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},9:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},10:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},11:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},12:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},13:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},14:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},15:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},16:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},17:{'dataId':'SAR_subsidence_saga_2010.11.20-2011.02.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008051420110220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},6:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},7:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},8:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},9:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},10:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},11:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},12:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},13:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},14:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},15:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},16:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},17:{'dataId':'SAR_subsidence_saga_2008.05.14-2011.02.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008053120110122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},6:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},7:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},8:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},9:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},10:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},11:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},12:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},13:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},14:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},15:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},16:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},17:{'dataId':'SAR_subsidence_saga_2008.05.31-2011.01.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010061920101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},6:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},7:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},8:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},9:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},10:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},11:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},12:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},13:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},14:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},15:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},16:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},17:{'dataId':'SAR_subsidence_saga_2010.06.19-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010021720101120 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},6:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},7:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},8:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},9:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},10:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},11:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},12:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},13:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},14:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},15:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},16:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},17:{'dataId':'SAR_subsidence_saga_2010.02.17-2010.11.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010010320100821 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},6:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},7:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},8:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},9:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},10:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},11:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},12:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},13:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},14:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},15:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},16:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},17:{'dataId':'SAR_subsidence_saga_2010.01.03-2010.08.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008021220100820 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},6:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},7:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},8:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},9:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},10:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},11:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},12:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},13:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},14:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},15:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},16:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},17:{'dataId':'SAR_subsidence_saga_2008.02.12-2010.08.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010042120100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},6:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},7:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},8:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},9:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},10:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},11:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},12:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},13:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},14:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},15:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},16:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},17:{'dataId':'SAR_subsidence_saga_2010.04.21-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010030620100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},6:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},7:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},8:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},9:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},10:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},11:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},12:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},13:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},14:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},15:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},16:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},17:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010011920100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},6:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},7:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},8:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},9:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},10:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},11:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},12:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},13:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},14:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},15:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},16:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},17:{'dataId':'SAR_subsidence_saga_2010.01.19-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008053120100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},6:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},7:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},8:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},9:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},10:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},11:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},12:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},13:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},14:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},15:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},16:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},17:{'dataId':'SAR_subsidence_saga_2008.05.31-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008022920100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},6:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},7:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},8:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},9:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},10:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},11:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},12:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},13:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},14:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},15:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},16:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},17:{'dataId':'SAR_subsidence_saga_2008.02.29-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008011420100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},6:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},7:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},8:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},9:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},10:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},11:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},12:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},13:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},14:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},15:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},16:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},17:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008042820100619 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},6:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},7:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},8:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},9:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},10:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},11:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},12:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},13:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},14:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},15:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},16:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},17:{'dataId':'SAR_subsidence_saga_2008.04.28-2010.06.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008032920100520 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},6:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},7:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},8:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},9:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},10:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},11:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},12:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},13:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},14:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},15:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},16:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},17:{'dataId':'SAR_subsidence_saga_2008.03.29-2010.05.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2009121720100504 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},6:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},7:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},8:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},9:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},10:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},11:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},12:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},13:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},14:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},15:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},16:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},17:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.05.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2010030620100421 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},6:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},7:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},8:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},9:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},10:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},11:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},12:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},13:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},14:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},15:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},16:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},17:{'dataId':'SAR_subsidence_saga_2010.03.06-2010.04.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2009121720100319 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},6:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},7:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},8:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},9:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},10:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},11:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},12:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},13:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},14:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},15:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},16:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},17:{'dataId':'SAR_subsidence_saga_2009.12.17-2010.03.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007121220100319 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},6:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},7:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},8:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},9:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},10:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},11:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},12:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},13:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},14:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},15:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},16:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},17:{'dataId':'SAR_subsidence_saga_2007.12.12-2010.03.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2008011420100306 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},6:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},7:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},8:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},9:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},10:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},11:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},12:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},13:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},14:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},15:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},16:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},17:{'dataId':'SAR_subsidence_saga_2008.01.14-2010.03.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007111320100103 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},6:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},7:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},8:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},9:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},10:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},11:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},12:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},13:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},14:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},15:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},16:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},17:{'dataId':'SAR_subsidence_saga_2007.11.13-2010.01.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007122820100102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},6:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},7:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},8:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},9:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},10:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},11:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},12:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},13:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},14:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},15:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},16:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},17:{'dataId':'SAR_subsidence_saga_2007.12.28-2010.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007121220091217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},6:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},7:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},8:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},9:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},10:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},11:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},12:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},13:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},14:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},15:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},16:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},17:{'dataId':'SAR_subsidence_saga_2007.12.12-2009.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2006112620090903 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},6:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},7:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},8:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},9:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},10:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},11:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},12:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},13:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},14:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},15:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},16:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},17:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.09.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007021020090818 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},6:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},7:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},8:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},9:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},10:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},11:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},12:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},13:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},14:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},15:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},16:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},17:{'dataId':'SAR_subsidence_saga_2007.02.10-2009.08.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007031120090801 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},6:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},7:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},8:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},9:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},10:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},11:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},12:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},13:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},14:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},15:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},16:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},17:{'dataId':'SAR_subsidence_saga_2007.03.11-2009.08.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2006112620090303 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},6:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},7:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},8:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},9:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},10:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},11:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},12:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},13:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},14:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},15:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},16:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},17:{'dataId':'SAR_subsidence_saga_2006.11.26-2009.03.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2006122520090214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},6:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},7:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},8:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},9:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},10:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},11:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},12:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},13:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},14:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},15:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},16:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},17:{'dataId':'SAR_subsidence_saga_2006.12.25-2009.02.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2006122520081230 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},6:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},7:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},8:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},9:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},10:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},11:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},12:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},13:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},14:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},15:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},16:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},17:{'dataId':'SAR_subsidence_saga_2006.12.25-2008.12.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007031120081214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},6:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},7:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},8:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},9:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},10:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},11:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},12:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},13:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},14:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},15:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},16:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},17:{'dataId':'SAR_subsidence_saga_2007.03.11-2008.12.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007042620080428 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},6:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},7:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},8:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},9:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},10:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},11:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},12:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},13:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},14:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},15:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},16:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},17:{'dataId':'SAR_subsidence_saga_2007.04.26-2008.04.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007111220071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},6:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},7:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},8:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},9:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},10:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},11:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},12:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},13:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},14:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},15:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},16:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},17:{'dataId':'SAR_subsidence_saga_2007.11.12-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007062720071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},6:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},7:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},8:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},9:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},10:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},11:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},12:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},13:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},14:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},15:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},16:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},17:{'dataId':'SAR_subsidence_saga_2007.06.27-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2006122520071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},6:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},7:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},8:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},9:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},10:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},11:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},12:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},13:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},14:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},15:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},16:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},17:{'dataId':'SAR_subsidence_saga_2006.12.25-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007061120071212 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},6:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},7:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},8:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},9:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},10:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},11:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},12:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},13:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},14:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},15:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},16:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},17:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.12.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007021020071113 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},6:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},7:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},8:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},9:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},10:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},11:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},12:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},13:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},14:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},15:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},16:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},17:{'dataId':'SAR_subsidence_saga_2007.02.10-2007.11.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_subsidence_saga_2007061120070911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},6:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},7:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},8:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},9:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},10:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},11:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},12:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},13:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},14:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},15:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},16:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},17:{'dataId':'SAR_subsidence_saga_2007.06.11-2007.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_moyorodake_2010070220101002 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},6:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},7:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},8:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},9:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},10:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},11:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},12:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},13:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},14:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},15:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},16:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},17:{'dataId':'SAR_volcano_moyorodake_2010.07.02-2010.10.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_moyorodake_2007092420100817 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},6:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},7:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},8:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},9:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},10:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},11:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},12:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},13:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},14:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},15:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},16:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},17:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.08.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_moyorodake_2007090820100616 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},6:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},7:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},8:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},9:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},10:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},11:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},12:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},13:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},14:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},15:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},16:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},17:{'dataId':'SAR_volcano_moyorodake_2007.09.08-2010.06.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_moyorodake_2007092420100517 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},6:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},7:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},8:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},9:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},10:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},11:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},12:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},13:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},14:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},15:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},16:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},17:{'dataId':'SAR_volcano_moyorodake_2007.09.24-2010.05.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_chirippuyama_2010060320101019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},6:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},7:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},8:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},9:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},10:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},11:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},12:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},13:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},14:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},15:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},16:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},17:{'dataId':'SAR_volcano_chirippuyama_2010.06.03-2010.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_chirippuyama_2007092520100703 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},6:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},7:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},8:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},9:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},10:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},11:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},12:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},13:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},14:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},15:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},16:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},17:{'dataId':'SAR_volcano_chirippuyama_2007.09.25-2010.07.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_etorofuatosadake_2010080620100921 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},6:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},7:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},8:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},9:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},10:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},11:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},12:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},13:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},14:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},15:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},16:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},17:{'dataId':'SAR_volcano_etorofuatosadake_2010.08.06-2010.09.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_etorofuatosadake_2007092920100522 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},6:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},7:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},8:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},9:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},10:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},11:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},12:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},13:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},14:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},15:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},16:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},17:{'dataId':'SAR_volcano_etorofuatosadake_2007.09.29-2010.05.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ruruidake_2010060820101024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},6:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},7:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},8:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},9:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},10:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},11:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},12:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},13:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},14:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},15:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},16:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},17:{'dataId':'SAR_volcano_ruruidake_2010.06.08-2010.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ruruidake_2010060920100725 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},6:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},7:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},8:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},9:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},10:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},11:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},12:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},13:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},14:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},15:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},16:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},17:{'dataId':'SAR_volcano_ruruidake_2010.06.09-2010.07.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ruruidake_2007101720100725 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},6:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},7:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},8:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},9:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},10:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},11:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},12:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},13:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},14:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},15:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},16:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},17:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.07.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ruruidake_2007090120100725 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},6:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},7:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},8:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},9:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},10:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},11:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},12:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},13:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},14:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},15:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},16:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},17:{'dataId':'SAR_volcano_ruruidake_2007.09.01-2010.07.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ruruidake_2007101720100609 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},6:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},7:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},8:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},9:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},10:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},11:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},12:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},13:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},14:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},15:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},16:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},17:{'dataId':'SAR_volcano_ruruidake_2007.10.17-2010.06.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ruruidake_2007101620100608 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},6:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},7:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},8:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},9:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},10:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},11:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},12:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},13:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},14:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},15:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},16:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},17:{'dataId':'SAR_volcano_ruruidake_2007.10.16-2010.06.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausuyama_2010051020100925 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},6:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},7:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},8:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},9:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},10:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},11:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},12:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},13:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},14:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},15:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},16:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},17:{'dataId':'SAR_volcano_rausuyama_2010.05.10-2010.09.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausuyama_2010062620100811 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},6:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},7:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},8:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},9:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},10:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},11:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},12:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},13:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},14:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},15:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},16:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},17:{'dataId':'SAR_volcano_rausuyama_2010.06.26-2010.08.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausuyama_2007091820100511 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},6:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},7:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},8:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},9:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},10:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},11:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},12:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},13:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},14:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},15:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},16:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},17:{'dataId':'SAR_volcano_rausuyama_2007.09.18-2010.05.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausuyama_2007110220100510 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},6:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},7:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},8:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},9:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},10:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},11:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},12:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},13:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},14:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},15:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},16:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},17:{'dataId':'SAR_volcano_rausuyama_2007.11.02-2010.05.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausuyama_2009092220091107 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},6:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},7:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},8:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},9:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},10:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},11:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},12:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},13:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},14:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},15:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},16:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},17:{'dataId':'SAR_volcano_rausuyama_2009.09.22-2009.11.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausuyama_2009050720091107 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},6:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},7:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},8:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},9:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},10:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},11:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},12:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},13:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},14:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},15:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},16:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},17:{'dataId':'SAR_volcano_rausuyama_2009.05.07-2009.11.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2010071220101012 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},6:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},7:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},8:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},9:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},10:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},11:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},12:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},13:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},14:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},15:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},16:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},17:{'dataId':'SAR_volcano_rausu_2010.07.12-2010.10.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2010052720100827 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},6:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},7:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},8:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},9:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},10:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},11:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},12:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},13:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},14:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},15:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},16:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},17:{'dataId':'SAR_volcano_rausu_2010.05.27-2010.08.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2007100420100527 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},6:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},7:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},8:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},9:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},10:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},11:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},12:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},13:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},14:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},15:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},16:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},17:{'dataId':'SAR_volcano_rausu_2007.10.04-2010.05.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2007081920091009 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},6:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},7:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},8:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},9:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},10:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},11:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},12:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},13:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},14:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},15:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},16:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},17:{'dataId':'SAR_volcano_rausu_2007.08.19-2009.10.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2008070720090825 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},6:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},7:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},8:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},9:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},10:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},11:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},12:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},13:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},14:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},15:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},16:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},17:{'dataId':'SAR_volcano_rausu_2008.07.07-2009.08.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2007070520080707 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},6:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},7:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},8:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},9:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},10:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},11:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},12:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},13:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},14:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},15:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},16:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},17:{'dataId':'SAR_volcano_rausu_2007.07.05-2008.07.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2007070520071005 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},6:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},7:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},8:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},9:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},10:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},11:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},12:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},13:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},14:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},15:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},16:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},17:{'dataId':'SAR_volcano_rausu_2007.07.05-2007.10.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_rausu_2007051920070819 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},6:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},7:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},8:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},9:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},10:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},11:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},12:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},13:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},14:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},15:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},16:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},17:{'dataId':'SAR_volcano_rausu_2007.05.19-2007.08.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2010093020101115 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},6:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},7:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},8:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},9:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},10:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},11:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},12:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},13:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},14:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},15:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},16:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},17:{'dataId':'SAR_volcano_meakandake_2010.09.30-2010.11.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008051020101001 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},6:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},7:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},8:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},9:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},10:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},11:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},12:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},13:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},14:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},15:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},16:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},17:{'dataId':'SAR_volcano_meakandake_2008.05.10-2010.10.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2010051620100816 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},6:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},7:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},8:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},9:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},10:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},11:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},12:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},13:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},14:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},15:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},16:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},17:{'dataId':'SAR_volcano_meakandake_2010.05.16-2010.08.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2010051520100815 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},6:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},7:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},8:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},9:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},10:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},11:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},12:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},13:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},14:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},15:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},16:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},17:{'dataId':'SAR_volcano_meakandake_2010.05.15-2010.08.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007092220100630 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},6:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},7:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},8:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},9:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},10:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},11:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},12:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},13:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},14:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},15:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},16:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},17:{'dataId':'SAR_volcano_meakandake_2007.09.22-2010.06.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007092320100516 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},6:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},7:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},8:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},9:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},10:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},11:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},12:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},13:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},14:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},15:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},16:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},17:{'dataId':'SAR_volcano_meakandake_2007.09.23-2010.05.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2009062820090928 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},6:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},7:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},8:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},9:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},10:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},11:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},12:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},13:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},14:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},15:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},16:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},17:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.09.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007092320090928 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},6:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},7:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},8:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},9:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},10:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},11:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},12:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},13:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},14:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},15:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},16:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},17:{'dataId':'SAR_volcano_meakandake_2007.09.23-2009.09.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2009062720090927 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},6:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},7:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},8:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},9:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},10:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},11:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},12:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},13:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},14:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},15:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},16:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},17:{'dataId':'SAR_volcano_meakandake_2009.06.27-2009.09.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007080720090927 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},6:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},7:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},8:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},9:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},10:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},11:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},12:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},13:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},14:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},15:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},16:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},17:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.09.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2009062820090813 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},6:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},7:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},8:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},9:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},10:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},11:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},12:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},13:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},14:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},15:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},16:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},17:{'dataId':'SAR_volcano_meakandake_2009.06.28-2009.08.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008062520090628 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},6:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},7:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},8:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},9:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},10:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},11:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},12:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},13:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},14:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},15:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},16:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},17:{'dataId':'SAR_volcano_meakandake_2008.06.25-2009.06.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008122520090627 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},6:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},7:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},8:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},9:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},10:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},11:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},12:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},13:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},14:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},15:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},16:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},17:{'dataId':'SAR_volcano_meakandake_2008.12.25-2009.06.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007080720090627 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},6:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},7:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},8:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},9:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},10:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},11:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},12:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},13:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},14:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},15:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},16:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},17:{'dataId':'SAR_volcano_meakandake_2007.08.07-2009.06.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2006122120090210 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},6:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},7:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},8:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},9:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},10:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},11:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},12:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},13:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},14:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},15:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},16:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},17:{'dataId':'SAR_volcano_meakandake_2006.12.21-2009.02.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008092520081226 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},6:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},7:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},8:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},9:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},10:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},11:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},12:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},13:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},14:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},15:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},16:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},17:{'dataId':'SAR_volcano_meakandake_2008.09.25-2008.12.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008092420081225 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},6:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},7:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},8:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},9:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},10:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},11:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},12:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},13:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},14:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},15:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},16:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},17:{'dataId':'SAR_volcano_meakandake_2008.09.24-2008.12.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008082720081012 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},6:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},7:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},8:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},9:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},10:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},11:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},12:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},13:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},14:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},15:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},16:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},17:{'dataId':'SAR_volcano_meakandake_2008.08.27-2008.10.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008081020080925 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},6:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},7:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},8:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},9:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},10:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},11:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},12:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},13:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},14:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},15:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},16:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},17:{'dataId':'SAR_volcano_meakandake_2008.08.10-2008.09.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007092320080625 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},6:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},7:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},8:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},9:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},10:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},11:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},12:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},13:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},14:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},15:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},16:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},17:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.06.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007080820080625 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},6:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},7:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},8:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},9:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},10:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},11:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},12:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},13:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},14:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},15:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},16:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},17:{'dataId':'SAR_volcano_meakandake_2007.08.08-2008.06.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2008032520080510 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},6:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},7:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},8:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},9:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},10:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},11:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},12:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},13:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},14:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},15:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},16:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},17:{'dataId':'SAR_volcano_meakandake_2008.03.25-2008.05.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007092320080325 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},6:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},7:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},8:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},9:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},10:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},11:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},12:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},13:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},14:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},15:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},16:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},17:{'dataId':'SAR_volcano_meakandake_2007.09.23-2008.03.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007080820070923 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},6:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},7:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},8:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},9:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},10:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},11:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},12:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},13:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},14:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},15:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},16:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},17:{'dataId':'SAR_volcano_meakandake_2007.08.08-2007.09.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_meakandake_2007080720070922 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},6:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},7:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},8:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},9:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},10:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},11:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},12:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},13:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},14:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},15:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},16:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},17:{'dataId':'SAR_volcano_meakandake_2007.08.07-2007.09.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2010070620101006 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},6:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},7:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},8:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},9:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},10:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},11:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},12:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},13:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},14:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},15:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},16:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},17:{'dataId':'SAR_volcano_tokachidake_2010.07.06-2010.10.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2010070520101005 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},6:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},7:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},8:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},9:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},10:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},11:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},12:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},13:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},14:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},15:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},16:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},17:{'dataId':'SAR_volcano_tokachidake_2010.07.05-2010.10.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2010052120100821 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},6:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},7:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},8:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},9:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},10:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},11:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},12:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},13:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},14:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},15:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},16:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},17:{'dataId':'SAR_volcano_tokachidake_2010.05.21-2010.08.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2010052020100820 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},6:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},7:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},8:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},9:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},10:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},11:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},12:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},13:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},14:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},15:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},16:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},17:{'dataId':'SAR_volcano_tokachidake_2010.05.20-2010.08.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2007092720100705 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},6:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},7:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},8:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},9:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},10:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},11:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},12:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},13:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},14:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},15:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},16:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},17:{'dataId':'SAR_volcano_tokachidake_2007.09.27-2010.07.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2009070320091003 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},6:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},7:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},8:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},9:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},10:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},11:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},12:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},13:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},14:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},15:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},16:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},17:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.10.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2009051720091002 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},6:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},7:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},8:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},9:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},10:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},11:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},12:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},13:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},14:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},15:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},16:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},17:{'dataId':'SAR_volcano_tokachidake_2009.05.17-2009.10.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2009070320090818 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},6:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},7:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},8:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},9:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},10:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},11:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},12:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},13:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},14:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},15:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},16:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},17:{'dataId':'SAR_volcano_tokachidake_2009.07.03-2009.08.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2008072820090731 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},6:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},7:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},8:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},9:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},10:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},11:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},12:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},13:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},14:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},15:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},16:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},17:{'dataId':'SAR_volcano_tokachidake_2008.07.28-2009.07.31'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2008063020090703 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},6:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},7:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},8:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},9:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},10:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},11:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},12:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},13:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},14:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},15:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},16:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},17:{'dataId':'SAR_volcano_tokachidake_2008.06.30-2009.07.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2008062920090517 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},6:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},7:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},8:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},9:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},10:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},11:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},12:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},13:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},14:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},15:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},16:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},17:{'dataId':'SAR_volcano_tokachidake_2008.06.29-2009.05.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tokachidake_2006092420080814 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},6:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},7:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},8:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},9:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},10:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},11:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},12:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},13:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},14:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},15:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},16:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},17:{'dataId':'SAR_volcano_tokachidake_2006.09.24-2008.08.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},6:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},7:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},8:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},9:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},10:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},11:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},12:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},13:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},14:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},15:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},16:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},17:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2008052020101011 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},6:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},7:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},8:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},9:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},10:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},11:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},12:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},13:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},14:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},15:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},16:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},17:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.10.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2010052620100826 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},6:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},7:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},8:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},9:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},10:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},11:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},12:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},13:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},14:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},15:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},16:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},17:{'dataId':'SAR_volcano_tarumae_2010.05.26-2010.08.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2008052020100826 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},6:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},7:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},8:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},9:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},10:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},11:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},12:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},13:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},14:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},15:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},16:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},17:{'dataId':'SAR_volcano_tarumae_2008.05.20-2010.08.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2010050820100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},6:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},7:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},8:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},9:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},10:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},11:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},12:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},13:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},14:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},15:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},16:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},17:{'dataId':'SAR_volcano_tarumae_2010.05.08-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2007091520100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},6:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},7:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},8:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},9:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},10:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},11:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},12:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},13:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},14:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},15:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},16:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},17:{'dataId':'SAR_volcano_tarumae_2007.09.15-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2007100320100526 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},6:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},7:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},8:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},9:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},10:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},11:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},12:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},13:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},14:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},15:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},16:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},17:{'dataId':'SAR_volcano_tarumae_2007.10.03-2010.05.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2008050220100508 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},6:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},7:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},8:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},9:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},10:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},11:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},12:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},13:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},14:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},15:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},16:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},17:{'dataId':'SAR_volcano_tarumae_2008.05.02-2010.05.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2009050520091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},6:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},7:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},8:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},9:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},10:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},11:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},12:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},13:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},14:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},15:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},16:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},17:{'dataId':'SAR_volcano_tarumae_2009.05.05-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2007091520091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},6:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},7:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},8:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},9:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},10:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},11:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},12:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},13:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},14:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},15:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},16:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},17:{'dataId':'SAR_volcano_tarumae_2007.09.15-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2007043020091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},6:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},7:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},8:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},9:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},10:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},11:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},12:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},13:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},14:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},15:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},16:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},17:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2006042720091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},6:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},7:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},8:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},9:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},10:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},11:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},12:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},13:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},14:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},15:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},16:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},17:{'dataId':'SAR_volcano_tarumae_2006.04.27-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2007081820091008 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},6:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},7:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},8:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},9:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},10:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},11:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},12:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},13:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},14:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},15:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},16:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},17:{'dataId':'SAR_volcano_tarumae_2007.08.18-2009.10.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2007043020090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},6:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},7:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},8:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},9:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},10:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},11:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},12:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},13:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},14:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},15:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},16:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},17:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2007043020090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},6:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},7:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},8:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},9:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},10:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},11:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},12:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},13:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},14:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},15:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},16:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},17:{'dataId':'SAR_volcano_tarumae_2007.04.30-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},6:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},7:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},8:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},9:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},10:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},11:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},12:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},13:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},14:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},15:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},16:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},17:{'dataId':'SAR_volcano_tarumae_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_tarumae_2006061220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},6:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},7:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},8:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},9:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},10:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},11:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},12:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},13:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},14:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},15:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},16:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},17:{'dataId':'SAR_volcano_tarumae_2006.06.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},6:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},7:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},8:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},9:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},10:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},11:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},12:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},13:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},14:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},15:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},16:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},17:{'dataId':'SAR_volcano_usu_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2010042720101028 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},6:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},7:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},8:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},9:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},10:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},11:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},12:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},13:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},14:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},15:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},16:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},17:{'dataId':'SAR_volcano_usu_2010.04.27-2010.10.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2008060620101028 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},6:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},7:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},8:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},9:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},10:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},11:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},12:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},13:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},14:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},15:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},16:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},17:{'dataId':'SAR_volcano_usu_2008.06.06-2010.10.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2010050820100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},6:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},7:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},8:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},9:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},10:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},11:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},12:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},13:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},14:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},15:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},16:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},17:{'dataId':'SAR_volcano_usu_2010.05.08-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2010042720100728 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},6:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},7:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},8:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},9:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},10:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},11:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},12:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},13:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},14:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},15:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},16:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},17:{'dataId':'SAR_volcano_usu_2010.04.27-2010.07.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2007102020100612 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},6:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},7:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},8:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},9:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},10:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},11:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},12:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},13:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},14:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},15:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},16:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},17:{'dataId':'SAR_volcano_usu_2007.10.20-2010.06.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2008050220100508 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},6:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},7:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},8:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},9:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},10:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},11:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},12:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},13:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},14:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},15:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},16:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},17:{'dataId':'SAR_volcano_usu_2008.05.02-2010.05.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2007043020090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},6:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},7:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},8:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},9:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},10:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},11:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},12:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},13:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},14:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},15:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},16:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},17:{'dataId':'SAR_volcano_usu_2007.04.30-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2008072220090909 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},6:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},7:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},8:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},9:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},10:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},11:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},12:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},13:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},14:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},15:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},16:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},17:{'dataId':'SAR_volcano_usu_2008.07.22-2009.09.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2007072020090909 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},6:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},7:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},8:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},9:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},10:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},11:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},12:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},13:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},14:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},15:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},16:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},17:{'dataId':'SAR_volcano_usu_2007.07.20-2009.09.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2006072820090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},6:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},7:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},8:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},9:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},10:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},11:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},12:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},13:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},14:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},15:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},16:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},17:{'dataId':'SAR_volcano_usu_2006.07.28-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2008091720081102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},6:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},7:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},8:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},9:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},10:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},11:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},12:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},13:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},14:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},15:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},16:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},17:{'dataId':'SAR_volcano_usu_2008.09.17-2008.11.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},6:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},7:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},8:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},9:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},10:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},11:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},12:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},13:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},14:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},15:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},16:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},17:{'dataId':'SAR_volcano_usu_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2007072020080722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},6:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},7:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},8:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},9:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},10:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},11:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},12:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},13:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},14:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},15:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},16:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},17:{'dataId':'SAR_volcano_usu_2007.07.20-2008.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2007072020071020 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},6:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},7:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},8:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},9:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},10:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},11:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},12:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},13:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},14:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},15:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},16:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},17:{'dataId':'SAR_volcano_usu_2007.07.20-2007.10.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_usu_2006042720070430 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},6:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},7:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},8:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},9:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},10:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},11:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},12:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},13:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},14:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},15:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},16:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},17:{'dataId':'SAR_volcano_usu_2006.04.27-2007.04.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},6:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},7:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},8:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},9:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},10:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},11:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},12:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},13:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},14:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},15:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},16:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},17:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2010042720101028 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},6:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},7:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},8:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},9:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},10:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},11:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},12:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},13:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},14:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},15:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},16:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},17:{'dataId':'SAR_volcano_komagatake_2010.04.27-2010.10.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2008060620101028 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},6:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},7:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},8:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},9:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},10:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},11:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},12:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},13:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},14:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},15:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},16:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},17:{'dataId':'SAR_volcano_komagatake_2008.06.06-2010.10.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2010050820100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},6:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},7:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},8:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},9:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},10:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},11:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},12:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},13:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},14:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},15:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},16:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},17:{'dataId':'SAR_volcano_komagatake_2010.05.08-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2007102020100612 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},6:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},7:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},8:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},9:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},10:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},11:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},12:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},13:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},14:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},15:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},16:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},17:{'dataId':'SAR_volcano_komagatake_2007.10.20-2010.06.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2008050220100508 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},6:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},7:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},8:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},9:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},10:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},11:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},12:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},13:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},14:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},15:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},16:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},17:{'dataId':'SAR_volcano_komagatake_2008.05.02-2010.05.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2007043020090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},6:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},7:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},8:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},9:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},10:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},11:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},12:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},13:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},14:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},15:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},16:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},17:{'dataId':'SAR_volcano_komagatake_2007.04.30-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2008072220090909 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},6:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},7:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},8:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},9:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},10:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},11:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},12:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},13:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},14:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},15:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},16:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},17:{'dataId':'SAR_volcano_komagatake_2008.07.22-2009.09.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_komagatake_2007072020090909 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},6:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},7:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},8:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},9:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},10:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},11:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},12:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},13:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},14:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},15:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},16:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},17:{'dataId':'SAR_volcano_komagatake_2007.07.20-2009.09.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwaki_2010052520101125 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},6:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},7:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},8:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},9:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},10:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},11:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},12:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},13:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},14:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},15:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},16:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},17:{'dataId':'SAR_volcano_iwaki_2010.05.25-2010.11.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwaki_2007100220100525 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},6:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},7:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},8:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},9:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},10:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},11:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},12:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},13:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},14:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},15:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},16:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},17:{'dataId':'SAR_volcano_iwaki_2007.10.02-2010.05.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwaki_2008062320100514 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},6:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},7:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},8:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},9:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},10:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},11:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},12:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},13:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},14:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},15:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},16:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},17:{'dataId':'SAR_volcano_iwaki_2008.06.23-2010.05.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwaki_2008062320090626 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},6:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},7:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},8:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},9:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},10:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},11:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},12:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},13:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},14:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},15:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},16:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},17:{'dataId':'SAR_volcano_iwaki_2008.06.23-2009.06.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwaki_2007062120080623 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},6:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},7:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},8:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},9:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},10:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},11:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},12:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},13:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},14:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},15:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},16:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},17:{'dataId':'SAR_volcano_iwaki_2007.06.21-2008.06.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwaki_2007122220080323 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},6:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},7:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},8:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},9:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},10:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},11:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},12:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},13:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},14:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},15:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},16:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},17:{'dataId':'SAR_volcano_iwaki_2007.12.22-2008.03.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwaki_2007062120070921 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},6:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},7:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},8:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},9:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},10:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},11:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},12:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},13:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},14:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},15:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},16:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},17:{'dataId':'SAR_volcano_iwaki_2007.06.21-2007.09.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwate_2010060620101022 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},6:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},7:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},8:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},9:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},10:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},11:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},12:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},13:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},14:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},15:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},16:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},17:{'dataId':'SAR_volcano_iwate_2010.06.06-2010.10.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwate_2007101420100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},6:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},7:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},8:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},9:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},10:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},11:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},12:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},13:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},14:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},15:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},16:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},17:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwate_2007101420100606 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},6:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},7:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},8:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},9:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},10:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},11:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},12:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},13:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},14:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},15:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},16:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},17:{'dataId':'SAR_volcano_iwate_2007.10.14-2010.06.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwate_2009060320090903 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},6:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},7:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},8:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},9:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},10:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},11:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},12:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},13:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},14:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},15:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},16:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},17:{'dataId':'SAR_volcano_iwate_2009.06.03-2009.09.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwate_2008071620090903 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},6:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},7:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},8:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},9:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},10:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},11:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},12:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},13:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},14:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},15:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},16:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},17:{'dataId':'SAR_volcano_iwate_2008.07.16-2009.09.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwate_2008062320090626 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},6:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},7:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},8:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},9:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},10:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},11:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},12:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},13:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},14:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},15:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},16:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},17:{'dataId':'SAR_volcano_iwate_2008.06.23-2009.06.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwate_2007092120080623 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},6:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},7:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},8:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},9:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},10:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},11:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},12:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},13:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},14:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},15:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},16:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},17:{'dataId':'SAR_volcano_iwate_2007.09.21-2008.06.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2010060620101022 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},6:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},7:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},8:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},9:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},10:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},11:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},12:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},13:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},14:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},15:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},16:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},17:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.10.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2010060620100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},6:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},7:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},8:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},9:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},10:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},11:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},12:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},13:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},14:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},15:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},16:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},17:{'dataId':'SAR_volcano_kurikoma_2010.06.06-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2009060320091019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},6:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},7:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},8:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},9:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},10:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},11:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},12:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},13:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},14:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},15:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},16:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},17:{'dataId':'SAR_volcano_kurikoma_2009.06.03-2009.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2009062620090926 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},6:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},7:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},8:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},9:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},10:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},11:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},12:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},13:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},14:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},15:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},16:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},17:{'dataId':'SAR_volcano_kurikoma_2009.06.26-2009.09.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2008071620090719 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},6:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},7:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},8:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},9:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},10:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},11:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},12:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},13:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},14:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},15:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},16:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},17:{'dataId':'SAR_volcano_kurikoma_2008.07.16-2009.07.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2008062320090626 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},6:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},7:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},8:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},9:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},10:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},11:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},12:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},13:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},14:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},15:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},16:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},17:{'dataId':'SAR_volcano_kurikoma_2008.06.23-2009.06.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2008062420081109 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},6:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},7:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},8:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},9:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},10:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},11:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},12:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},13:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},14:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},15:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},16:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},17:{'dataId':'SAR_volcano_kurikoma_2008.06.24-2008.11.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2008083120081016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},6:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},7:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},8:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},9:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},10:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},11:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},12:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},13:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},14:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},15:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},16:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},17:{'dataId':'SAR_volcano_kurikoma_2008.08.31-2008.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2008080820080923 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},6:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},7:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},8:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},9:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},10:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},11:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},12:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},13:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},14:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},15:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},16:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},17:{'dataId':'SAR_volcano_kurikoma_2008.08.08-2008.09.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kurikoma_2007062120070921 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},6:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},7:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},8:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},9:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},10:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},11:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},12:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},13:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},14:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},15:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},16:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},17:{'dataId':'SAR_volcano_kurikoma_2007.06.21-2007.09.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_zaou_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},6:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},7:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},8:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},9:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},10:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},11:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},12:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},13:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},14:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},15:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},16:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},17:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_zaou_2010071620101016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},6:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},7:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},8:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},9:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},10:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},11:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},12:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},13:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},14:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},15:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},16:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},17:{'dataId':'SAR_volcano_zaou_2010.07.16-2010.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_zaou_2008050220100508 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},6:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},7:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},8:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},9:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},10:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},11:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},12:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},13:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},14:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},15:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},16:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},17:{'dataId':'SAR_volcano_zaou_2008.05.02-2010.05.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_zaou_2008071020091013 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},6:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},7:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},8:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},9:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},10:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},11:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},12:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},13:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},14:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},15:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},16:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},17:{'dataId':'SAR_volcano_zaou_2008.07.10-2009.10.13'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_zaou_2007043020090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},6:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},7:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},8:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},9:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},10:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},11:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},12:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},13:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},14:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},15:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},16:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},17:{'dataId':'SAR_volcano_zaou_2007.04.30-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_zaou_2006042720070430 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},6:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},7:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},8:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},9:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},10:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},11:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},12:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},13:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},14:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},15:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},16:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},17:{'dataId':'SAR_volcano_zaou_2006.04.27-2007.04.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},6:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},7:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},8:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},9:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},10:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},11:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},12:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},13:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},14:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},15:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},16:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},17:{'dataId':'SAR_volcano_azuma_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2010061720101102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},6:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},7:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},8:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},9:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},10:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},11:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},12:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},13:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},14:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},15:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},16:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},17:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.11.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2010061720100802 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},6:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},7:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},8:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},9:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},10:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},11:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},12:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},13:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},14:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},15:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},16:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},17:{'dataId':'SAR_volcano_azuma_2010.06.17-2010.08.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2007102520100617 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},6:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},7:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},8:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},9:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},10:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},11:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},12:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},13:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},14:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},15:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},16:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},17:{'dataId':'SAR_volcano_azuma_2007.10.25-2010.06.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2009092020091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},6:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},7:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},8:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},9:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},10:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},11:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},12:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},13:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},14:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},15:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},16:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},17:{'dataId':'SAR_volcano_azuma_2009.09.20-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2007043020091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},6:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},7:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},8:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},9:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},10:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},11:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},12:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},13:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},14:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},15:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},16:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},17:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2007043020090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},6:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},7:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},8:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},9:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},10:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},11:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},12:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},13:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},14:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},15:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},16:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},17:{'dataId':'SAR_volcano_azuma_2007.04.30-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2009050520090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},6:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},7:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},8:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},9:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},10:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},11:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},12:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},13:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},14:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},15:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},16:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},17:{'dataId':'SAR_volcano_azuma_2009.05.05-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2008102720090730 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},6:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},7:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},8:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},9:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},10:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},11:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},12:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},13:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},14:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},15:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},16:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},17:{'dataId':'SAR_volcano_azuma_2008.10.27-2009.07.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2008091720081102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},6:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},7:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},8:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},9:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},10:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},11:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},12:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},13:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},14:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},15:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},16:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},17:{'dataId':'SAR_volcano_azuma_2008.09.17-2008.11.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2008091120081027 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},6:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},7:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},8:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},9:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},10:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},11:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},12:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},13:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},14:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},15:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},16:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},17:{'dataId':'SAR_volcano_azuma_2008.09.11-2008.10.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},6:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},7:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},8:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},9:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},10:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},11:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},12:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},13:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},14:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},15:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},16:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},17:{'dataId':'SAR_volcano_azuma_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_azuma_2006042720070430 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},6:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},7:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},8:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},9:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},10:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},11:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},12:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},13:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},14:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},15:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},16:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},17:{'dataId':'SAR_volcano_azuma_2006.04.27-2007.04.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kusatsu_2008051820101009 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},6:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},7:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},8:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},9:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},10:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},11:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},12:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},13:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},14:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},15:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},16:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},17:{'dataId':'SAR_volcano_kusatsu_2008.05.18-2010.10.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kusatsu_2008060520100911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},6:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},7:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},8:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},9:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},10:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},11:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},12:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},13:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},14:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},15:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},16:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},17:{'dataId':'SAR_volcano_kusatsu_2008.06.05-2010.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kusatsu_2010042620100727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},6:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},7:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},8:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},9:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},10:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},11:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},12:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},13:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},14:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},15:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},16:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},17:{'dataId':'SAR_volcano_kusatsu_2010.04.26-2010.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kusatsu_2007101920100611 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},6:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},7:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},8:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},9:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},10:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},11:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},12:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},13:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},14:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},15:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},16:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},17:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.06.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kusatsu_2007101920100426 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},6:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},7:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},8:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},9:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},10:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},11:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},12:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},13:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},14:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},15:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},16:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},17:{'dataId':'SAR_volcano_kusatsu_2007.10.19-2010.04.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kusatsu_2008072120090908 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},6:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},7:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},8:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},9:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},10:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},11:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},12:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},13:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},14:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},15:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},16:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},17:{'dataId':'SAR_volcano_kusatsu_2008.07.21-2009.09.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kusatsu_2007071920080721 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},6:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},7:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},8:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},9:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},10:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},11:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},12:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},13:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},14:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},15:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},16:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},17:{'dataId':'SAR_volcano_kusatsu_2007.07.19-2008.07.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2010061120101027 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},6:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},7:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},8:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},9:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},10:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},11:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},12:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},13:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},14:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},15:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},16:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},17:{'dataId':'SAR_volcano_asama_2010.06.11-2010.10.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2008060520100911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},6:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},7:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},8:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},9:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},10:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},11:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},12:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},13:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},14:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},15:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},16:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},17:{'dataId':'SAR_volcano_asama_2008.06.05-2010.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2010042620100727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},6:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},7:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},8:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},9:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},10:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},11:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},12:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},13:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},14:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},15:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},16:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},17:{'dataId':'SAR_volcano_asama_2010.04.26-2010.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2007101920100611 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},6:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},7:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},8:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},9:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},10:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},11:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},12:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},13:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},14:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},15:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},16:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},17:{'dataId':'SAR_volcano_asama_2007.10.19-2010.06.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2007101920100426 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},6:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},7:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},8:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},9:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},10:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},11:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},12:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},13:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},14:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},15:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},16:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},17:{'dataId':'SAR_volcano_asama_2007.10.19-2010.04.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2007071920091024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},6:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},7:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},8:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},9:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},10:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},11:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},12:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},13:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},14:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},15:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},16:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},17:{'dataId':'SAR_volcano_asama_2007.07.19-2009.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2008072120090908 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},6:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},7:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},8:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},9:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},10:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},11:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},12:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},13:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},14:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},15:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},16:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},17:{'dataId':'SAR_volcano_asama_2008.07.21-2009.09.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2008081820090706 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},6:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},7:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},8:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},9:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},10:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},11:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},12:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},13:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},14:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},15:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},16:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},17:{'dataId':'SAR_volcano_asama_2008.08.18-2009.07.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2008072120090423 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},6:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},7:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},8:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},9:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},10:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},11:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},12:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},13:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},14:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},15:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},16:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},17:{'dataId':'SAR_volcano_asama_2008.07.21-2009.04.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2009010320090218 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},6:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},7:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},8:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},9:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},10:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},11:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},12:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},13:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},14:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},15:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},16:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},17:{'dataId':'SAR_volcano_asama_2009.01.03-2009.02.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2008072120081021 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},6:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},7:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},8:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},9:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},10:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},11:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},12:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},13:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},14:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},15:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},16:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},17:{'dataId':'SAR_volcano_asama_2008.07.21-2008.10.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2007071920080721 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},6:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},7:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},8:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},9:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},10:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},11:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},12:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},13:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},14:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},15:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},16:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},17:{'dataId':'SAR_volcano_asama_2007.07.19-2008.07.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_asama_2007070120071116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},6:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},7:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},8:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},9:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},10:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},11:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},12:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},13:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},14:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},15:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},16:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},17:{'dataId':'SAR_volcano_asama_2007.07.01-2007.11.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ontake_2010062720101112 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},6:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},7:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},8:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},9:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},10:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},11:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},12:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},13:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},14:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},15:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},16:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},17:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.11.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ontake_2010062720100812 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},6:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},7:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},8:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},9:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},10:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},11:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},12:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},13:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},14:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},15:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},16:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},17:{'dataId':'SAR_volcano_ontake_2010.06.27-2010.08.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ontake_2007091920100327 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},6:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},7:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},8:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},9:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},10:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},11:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},12:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},13:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},14:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},15:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},16:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},17:{'dataId':'SAR_volcano_ontake_2007.09.19-2010.03.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ontake_2009092420091225 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},6:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},7:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},8:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},9:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},10:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},11:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},12:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},13:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},14:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},15:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},16:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},17:{'dataId':'SAR_volcano_ontake_2009.09.24-2009.12.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ontake_2007091920091225 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},6:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},7:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},8:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},9:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},10:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},11:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},12:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},13:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},14:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},15:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},16:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},17:{'dataId':'SAR_volcano_ontake_2007.09.19-2009.12.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_ontake_2007061920090924 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},6:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},7:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},8:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},9:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},10:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},11:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},12:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},13:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},14:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},15:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},16:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},17:{'dataId':'SAR_volcano_ontake_2007.06.19-2009.09.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2008040220110109 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},6:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},7:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},8:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},9:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},10:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},11:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},12:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},13:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},14:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},15:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},16:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},17:{'dataId':'SAR_volcano_fuji_2008.04.02-2011.01.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2008040220101009 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},6:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},7:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},8:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},9:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},10:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},11:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},12:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},13:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},14:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},15:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},16:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},17:{'dataId':'SAR_volcano_fuji_2008.04.02-2010.10.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2008060520100911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},6:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},7:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},8:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},9:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},10:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},11:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},12:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},13:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},14:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},15:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},16:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},17:{'dataId':'SAR_volcano_fuji_2008.06.05-2010.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2008051820100824 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},6:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},7:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},8:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},9:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},10:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},11:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},12:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},13:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},14:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},15:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},16:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},17:{'dataId':'SAR_volcano_fuji_2008.05.18-2010.08.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2007101920100611 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},6:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},7:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},8:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},9:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},10:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},11:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},12:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},13:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},14:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},15:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},16:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},17:{'dataId':'SAR_volcano_fuji_2007.10.19-2010.06.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2009090820091024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},6:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},7:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},8:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},9:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},10:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},11:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},12:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},13:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},14:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},15:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},16:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},17:{'dataId':'SAR_volcano_fuji_2009.09.08-2009.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2008072120090908 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},6:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},7:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},8:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},9:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},10:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},11:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},12:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},13:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},14:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},15:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},16:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},17:{'dataId':'SAR_volcano_fuji_2008.07.21-2009.09.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2008081820090706 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},6:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},7:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},8:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},9:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},10:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},11:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},12:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},13:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},14:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},15:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},16:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},17:{'dataId':'SAR_volcano_fuji_2008.08.18-2009.07.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2006122920081118 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},6:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},7:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},8:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},9:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},10:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},11:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},12:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},13:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},14:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},15:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},16:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},17:{'dataId':'SAR_volcano_fuji_2006.12.29-2008.11.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_fuji_2008090520081021 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},6:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},7:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},8:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},9:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},10:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},11:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},12:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},13:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},14:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},15:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},16:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},17:{'dataId':'SAR_volcano_fuji_2008.09.05-2008.10.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2010080720101223 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},6:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},7:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},8:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},9:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},10:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},11:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},12:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},13:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},14:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},15:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},16:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},17:{'dataId':'SAR_volcano_hakone_2010.08.07-2010.12.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2010020420100807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},6:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},7:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},8:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},9:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},10:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},11:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},12:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},13:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},14:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},15:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},16:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},17:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2010032220100507 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},6:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},7:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},8:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},9:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},10:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},11:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},12:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},13:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},14:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},15:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},16:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},17:{'dataId':'SAR_volcano_hakone_2010.03.22-2010.05.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2007103020100507 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},6:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},7:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},8:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},9:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},10:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},11:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},12:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},13:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},14:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},15:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},16:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},17:{'dataId':'SAR_volcano_hakone_2007.10.30-2010.05.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2010020420100322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},6:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},7:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},8:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},9:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},10:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},11:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},12:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},13:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},14:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},15:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},16:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},17:{'dataId':'SAR_volcano_hakone_2010.02.04-2010.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2007121520100204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},6:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},7:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},8:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},9:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},10:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},11:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},12:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},13:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},14:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},15:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},16:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},17:{'dataId':'SAR_volcano_hakone_2007.12.15-2010.02.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2007073020091220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},6:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},7:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},8:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},9:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},10:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},11:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},12:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},13:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},14:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},15:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},16:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},17:{'dataId':'SAR_volcano_hakone_2007.07.30-2009.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2009052220091122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},6:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},7:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},8:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},9:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},10:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},11:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},12:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},13:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},14:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},15:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},16:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},17:{'dataId':'SAR_volcano_hakone_2009.05.22-2009.11.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2006123020091122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},6:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},7:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},8:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},9:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},10:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},11:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},12:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},13:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},14:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},15:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},16:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},17:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.11.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2009020120090804 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},6:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},7:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},8:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},9:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},10:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},11:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},12:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},13:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},14:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},15:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},16:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},17:{'dataId':'SAR_volcano_hakone_2009.02.01-2009.08.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2006123020090522 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},6:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},7:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},8:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},9:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},10:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},11:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},12:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},13:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},14:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},15:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},16:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},17:{'dataId':'SAR_volcano_hakone_2006.12.30-2009.05.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_hakone_2006123020080102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},6:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},7:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},8:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},9:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},10:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},11:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},12:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},13:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},14:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},15:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},16:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},17:{'dataId':'SAR_volcano_hakone_2006.12.30-2008.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2010080720101223 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},6:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},7:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},8:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},9:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},10:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},11:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},12:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},13:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},14:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},15:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},16:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},17:{'dataId':'SAR_volcano_izutoubu_2010.08.07-2010.12.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2008010220100825 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},6:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},7:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},8:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},9:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},10:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},11:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},12:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},13:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},14:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},15:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},16:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},17:{'dataId':'SAR_volcano_izutoubu_2008.01.02-2010.08.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2010020420100807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},6:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},7:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},8:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},9:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},10:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},11:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},12:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},13:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},14:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},15:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},16:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},17:{'dataId':'SAR_volcano_izutoubu_2010.02.04-2010.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2007121520100204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},6:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},7:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},8:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},9:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},10:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},11:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},12:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},13:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},14:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},15:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},16:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},17:{'dataId':'SAR_volcano_izutoubu_2007.12.15-2010.02.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2009110520091221 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},6:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},7:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},8:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},9:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},10:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},11:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},12:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},13:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},14:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},15:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},16:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},17:{'dataId':'SAR_volcano_izutoubu_2009.11.05-2009.12.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2009061920091220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},6:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},7:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},8:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},9:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},10:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},11:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},12:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},13:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},14:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},15:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},16:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},17:{'dataId':'SAR_volcano_izutoubu_2009.06.19-2009.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2007073020091220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},6:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},7:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},8:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},9:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},10:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},11:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},12:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},13:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},14:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},15:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},16:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},17:{'dataId':'SAR_volcano_izutoubu_2007.07.30-2009.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2009052220091122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},6:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},7:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},8:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},9:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},10:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},11:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},12:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},13:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},14:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},15:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},16:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},17:{'dataId':'SAR_volcano_izutoubu_2009.05.22-2009.11.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2006123020091122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},6:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},7:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},8:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},9:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},10:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},11:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},12:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},13:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},14:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},15:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},16:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},17:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.11.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2009020120090804 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},6:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},7:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},8:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},9:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},10:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},11:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},12:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},13:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},14:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},15:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},16:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},17:{'dataId':'SAR_volcano_izutoubu_2009.02.01-2009.08.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2006123020090522 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},6:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},7:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},8:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},9:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},10:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},11:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},12:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},13:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},14:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},15:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},16:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},17:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2009.05.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2006072720080916 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},6:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},7:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},8:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},9:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},10:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},11:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},12:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},13:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},14:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},15:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},16:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},17:{'dataId':'SAR_volcano_izutoubu_2006.07.27-2008.09.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izutoubu_2006123020080102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},6:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},7:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},8:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},9:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},10:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},11:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},12:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},13:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},14:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},15:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},16:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},17:{'dataId':'SAR_volcano_izutoubu_2006.12.30-2008.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2010110820110208 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},6:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},7:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},8:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},9:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},10:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},11:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},12:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},13:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},14:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},15:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},16:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},17:{'dataId':'SAR_volcano_izuoshima_2010.11.08-2011.02.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2010122320110207 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},6:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},7:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},8:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},9:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},10:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},11:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},12:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},13:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},14:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},15:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},16:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},17:{'dataId':'SAR_volcano_izuoshima_2010.12.23-2011.02.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008050120110207 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},6:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},7:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},8:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},9:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},10:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},11:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},12:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},13:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},14:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},15:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},16:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},17:{'dataId':'SAR_volcano_izuoshima_2008.05.01-2011.02.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},6:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},7:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},8:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},9:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},10:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},11:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},12:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},13:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},14:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},15:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},16:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},17:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008050220100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},6:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},7:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},8:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},9:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},10:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},11:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},12:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},13:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},14:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},15:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},16:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},17:{'dataId':'SAR_volcano_izuoshima_2008.05.02-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2010032220100807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},6:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},7:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},8:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},9:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},10:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},11:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},12:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},13:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},14:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},15:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},16:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},17:{'dataId':'SAR_volcano_izuoshima_2010.03.22-2010.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008013120100323 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},6:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},7:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},8:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},9:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},10:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},11:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},12:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},13:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},14:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},15:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},16:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},17:{'dataId':'SAR_volcano_izuoshima_2008.01.31-2010.03.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2010020420100322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},6:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},7:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},8:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},9:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},10:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},11:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},12:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},13:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},14:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},15:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},16:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},17:{'dataId':'SAR_volcano_izuoshima_2010.02.04-2010.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2009080520091221 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},6:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},7:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},8:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},9:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},10:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},11:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},12:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},13:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},14:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},15:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},16:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},17:{'dataId':'SAR_volcano_izuoshima_2009.08.05-2009.12.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2009061920091220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},6:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},7:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},8:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},9:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},10:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},11:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},12:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},13:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},14:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},15:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},16:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},17:{'dataId':'SAR_volcano_izuoshima_2009.06.19-2009.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2009092020091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},6:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},7:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},8:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},9:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},10:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},11:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},12:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},13:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},14:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},15:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},16:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},17:{'dataId':'SAR_volcano_izuoshima_2009.09.20-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2009050520090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},6:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},7:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},8:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},9:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},10:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},11:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},12:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},13:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},14:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},15:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},16:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},17:{'dataId':'SAR_volcano_izuoshima_2009.05.05-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2007012820090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},6:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},7:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},8:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},9:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},10:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},11:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},12:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},13:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},14:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},15:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},16:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},17:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2009020120090804 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},6:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},7:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},8:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},9:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},10:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},11:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},12:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},13:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},14:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},15:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},16:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},17:{'dataId':'SAR_volcano_izuoshima_2009.02.01-2009.08.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008121820090202 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},6:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},7:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},8:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},9:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},10:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},11:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},12:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},13:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},14:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},15:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},16:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},17:{'dataId':'SAR_volcano_izuoshima_2008.12.18-2009.02.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008121720090201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},6:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},7:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},8:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},9:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},10:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},11:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},12:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},13:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},14:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},15:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},16:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},17:{'dataId':'SAR_volcano_izuoshima_2008.12.17-2009.02.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008091720081218 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},6:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},7:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},8:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},9:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},10:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},11:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},12:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},13:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},14:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},15:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},16:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},17:{'dataId':'SAR_volcano_izuoshima_2008.09.17-2008.12.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008091620081217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},6:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},7:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},8:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},9:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},10:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},11:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},12:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},13:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},14:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},15:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},16:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},17:{'dataId':'SAR_volcano_izuoshima_2008.09.16-2008.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},6:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},7:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},8:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},9:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},10:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},11:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},12:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},13:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},14:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},15:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},16:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},17:{'dataId':'SAR_volcano_izuoshima_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2006072720080916 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},6:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},7:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},8:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},9:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},10:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},11:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},12:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},13:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},14:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},15:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},16:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},17:{'dataId':'SAR_volcano_izuoshima_2006.07.27-2008.09.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008052120080706 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},6:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},7:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},8:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},9:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},10:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},11:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},12:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},13:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},14:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},15:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},16:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},17:{'dataId':'SAR_volcano_izuoshima_2008.05.21-2008.07.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008013020080501 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},6:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},7:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},8:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},9:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},10:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},11:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},12:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},13:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},14:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},15:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},16:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},17:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.05.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2008013020080316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},6:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},7:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},8:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},9:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},10:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},11:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},12:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},13:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},14:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},15:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},16:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},17:{'dataId':'SAR_volcano_izuoshima_2008.01.30-2008.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2007012820080131 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},6:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},7:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},8:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},9:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},10:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},11:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},12:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},13:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},14:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},15:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},16:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},17:{'dataId':'SAR_volcano_izuoshima_2007.01.28-2008.01.31'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_izuoshima_2006091120070614 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},6:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},7:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},8:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},9:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},10:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},11:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},12:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},13:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},14:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},15:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},16:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},17:{'dataId':'SAR_volcano_izuoshima_2006.09.11-2007.06.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2010110820110208 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},6:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},7:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},8:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},9:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},10:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},11:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},12:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},13:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},14:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},15:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},16:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},17:{'dataId':'SAR_volcano_nijima_2010.11.08-2011.02.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2008050220110208 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},6:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},7:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},8:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},9:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},10:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},11:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},12:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},13:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},14:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},15:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},16:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},17:{'dataId':'SAR_volcano_nijima_2008.05.02-2011.02.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2010122320110207 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},6:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},7:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},8:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},9:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},10:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},11:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},12:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},13:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},14:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},15:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},16:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},17:{'dataId':'SAR_volcano_nijima_2010.12.23-2011.02.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2008050220101224 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},6:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},7:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},8:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},9:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},10:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},11:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},12:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},13:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},14:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},15:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},16:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},17:{'dataId':'SAR_volcano_nijima_2008.05.02-2010.12.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2009122120100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},6:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},7:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},8:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},9:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},10:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},11:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},12:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},13:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},14:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},15:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},16:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},17:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2010032220100807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},6:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},7:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},8:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},9:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},10:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},11:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},12:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},13:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},14:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},15:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},16:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},17:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2008013020100807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},6:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},7:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},8:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},9:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},10:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},11:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},12:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},13:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},14:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},15:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},16:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},17:{'dataId':'SAR_volcano_nijima_2008.01.30-2010.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2010032220100507 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},6:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},7:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},8:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},9:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},10:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},11:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},12:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},13:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},14:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},15:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},16:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},17:{'dataId':'SAR_volcano_nijima_2010.03.22-2010.05.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2009122120100323 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},6:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},7:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},8:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},9:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},10:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},11:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},12:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},13:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},14:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},15:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},16:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},17:{'dataId':'SAR_volcano_nijima_2009.12.21-2010.03.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2007103020100322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},6:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},7:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},8:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},9:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},10:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},11:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},12:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},13:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},14:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},15:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},16:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},17:{'dataId':'SAR_volcano_nijima_2007.10.30-2010.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2009080520091221 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},6:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},7:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},8:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},9:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},10:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},11:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},12:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},13:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},14:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},15:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},16:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},17:{'dataId':'SAR_volcano_nijima_2009.08.05-2009.12.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2009061920091220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},6:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},7:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},8:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},9:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},10:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},11:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},12:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},13:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},14:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},15:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},16:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},17:{'dataId':'SAR_volcano_nijima_2009.06.19-2009.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2007012820090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},6:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},7:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},8:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},9:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},10:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},11:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},12:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},13:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},14:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},15:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},16:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},17:{'dataId':'SAR_volcano_nijima_2007.01.28-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},6:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},7:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},8:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},9:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},10:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},11:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},12:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},13:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},14:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},15:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},16:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},17:{'dataId':'SAR_volcano_nijima_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nijima_2006091120070614 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},6:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},7:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},8:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},9:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},10:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},11:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},12:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},13:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},14:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},15:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},16:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},17:{'dataId':'SAR_volcano_nijima_2006.09.11-2007.06.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2010080720101223 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},6:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},7:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},8:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},9:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},10:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},11:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},12:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},13:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},14:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},15:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},16:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},17:{'dataId':'SAR_volcano_miyake_2010.08.07-2010.12.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2010032220100807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},6:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},7:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},8:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},9:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},10:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},11:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},12:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},13:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},14:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},15:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},16:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},17:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2010032220100507 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},6:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},7:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},8:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},9:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},10:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},11:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},12:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},13:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},14:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},15:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},16:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},17:{'dataId':'SAR_volcano_miyake_2010.03.22-2010.05.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2010020420100322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},6:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},7:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},8:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},9:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},10:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},11:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},12:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},13:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},14:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},15:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},16:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},17:{'dataId':'SAR_volcano_miyake_2010.02.04-2010.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2009122120100323 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},6:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},7:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},8:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},9:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},10:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},11:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},12:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},13:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},14:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},15:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},16:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},17:{'dataId':'SAR_volcano_miyake_2009.12.21-2010.03.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2009080520091221 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},6:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},7:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},8:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},9:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},10:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},11:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},12:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},13:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},14:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},15:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},16:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},17:{'dataId':'SAR_volcano_miyake_2009.08.05-2009.12.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2009061920091220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},6:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},7:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},8:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},9:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},10:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},11:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},12:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},13:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},14:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},15:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},16:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},17:{'dataId':'SAR_volcano_miyake_2009.06.19-2009.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2009092020091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},6:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},7:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},8:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},9:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},10:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},11:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},12:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},13:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},14:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},15:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},16:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},17:{'dataId':'SAR_volcano_miyake_2009.09.20-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2009050520090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},6:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},7:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},8:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},9:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},10:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},11:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},12:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},13:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},14:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},15:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},16:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},17:{'dataId':'SAR_volcano_miyake_2009.05.05-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007012820090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},6:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},7:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},8:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},9:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},10:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},11:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},12:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},13:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},14:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},15:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},16:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},17:{'dataId':'SAR_volcano_miyake_2007.01.28-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2009020120090804 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},6:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},7:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},8:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},9:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},10:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},11:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},12:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},13:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},14:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},15:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},16:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},17:{'dataId':'SAR_volcano_miyake_2009.02.01-2009.08.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008121820090202 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},6:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},7:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},8:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},9:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},10:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},11:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},12:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},13:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},14:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},15:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},16:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},17:{'dataId':'SAR_volcano_miyake_2008.12.18-2009.02.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008121720090201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},6:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},7:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},8:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},9:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},10:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},11:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},12:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},13:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},14:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},15:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},16:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},17:{'dataId':'SAR_volcano_miyake_2008.12.17-2009.02.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008071620090116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},6:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},7:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},8:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},9:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},10:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},11:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},12:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},13:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},14:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},15:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},16:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},17:{'dataId':'SAR_volcano_miyake_2008.07.16-2009.01.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008091720081218 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},6:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},7:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},8:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},9:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},10:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},11:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},12:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},13:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},14:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},15:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},16:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},17:{'dataId':'SAR_volcano_miyake_2008.09.17-2008.12.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008091620081217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},6:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},7:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},8:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},9:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},10:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},11:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},12:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},13:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},14:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},15:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},16:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},17:{'dataId':'SAR_volcano_miyake_2008.09.16-2008.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008083120081016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},6:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},7:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},8:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},9:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},10:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},11:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},12:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},13:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},14:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},15:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},16:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},17:{'dataId':'SAR_volcano_miyake_2008.08.31-2008.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008053120080716 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},6:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},7:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},8:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},9:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},10:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},11:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},12:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},13:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},14:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},15:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},16:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},17:{'dataId':'SAR_volcano_miyake_2008.05.31-2008.07.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008013020080501 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},6:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},7:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},8:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},9:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},10:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},11:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},12:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},13:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},14:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},15:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},16:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},17:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.05.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008011420080415 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},6:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},7:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},8:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},9:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},10:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},11:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},12:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},13:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},14:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},15:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},16:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},17:{'dataId':'SAR_volcano_miyake_2008.01.14-2008.04.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2008013020080316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},6:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},7:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},8:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},9:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},10:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},11:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},12:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},13:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},14:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},15:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},16:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},17:{'dataId':'SAR_volcano_miyake_2008.01.30-2008.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007103020080316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},6:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},7:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},8:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},9:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},10:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},11:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},12:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},13:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},14:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},15:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},16:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},17:{'dataId':'SAR_volcano_miyake_2007.10.30-2008.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007082920080114 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},6:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},7:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},8:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},9:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},10:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},11:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},12:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},13:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},14:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},15:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},16:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},17:{'dataId':'SAR_volcano_miyake_2007.08.29-2008.01.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007011120080114 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},6:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},7:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},8:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},9:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},10:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},11:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},12:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},13:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},14:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},15:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},16:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},17:{'dataId':'SAR_volcano_miyake_2007.01.11-2008.01.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2006091120071215 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},6:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},7:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},8:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},9:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},10:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},11:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},12:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},13:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},14:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},15:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},16:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},17:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.12.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007091420071030 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},6:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},7:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},8:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},9:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},10:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},11:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},12:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},13:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},14:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},15:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},16:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},17:{'dataId':'SAR_volcano_miyake_2007.09.14-2007.10.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007073020070914 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},6:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},7:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},8:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},9:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},10:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},11:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},12:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},13:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},14:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},15:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},16:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},17:{'dataId':'SAR_volcano_miyake_2007.07.30-2007.09.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007071420070829 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},6:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},7:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},8:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},9:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},10:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},11:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},12:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},13:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},14:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},15:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},16:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},17:{'dataId':'SAR_volcano_miyake_2007.07.14-2007.08.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007061420070730 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},6:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},7:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},8:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},9:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},10:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},11:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},12:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},13:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},14:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},15:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},16:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},17:{'dataId':'SAR_volcano_miyake_2007.06.14-2007.07.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2007022620070714 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},6:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},7:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},8:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},9:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},10:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},11:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},12:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},13:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},14:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},15:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},16:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},17:{'dataId':'SAR_volcano_miyake_2007.02.26-2007.07.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2006091120070614 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},6:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},7:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},8:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},9:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},10:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},11:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},12:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},13:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},14:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},15:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},16:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},17:{'dataId':'SAR_volcano_miyake_2006.09.11-2007.06.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2006091220070128 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},6:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},7:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},8:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},9:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},10:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},11:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},12:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},13:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},14:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},15:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},16:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},17:{'dataId':'SAR_volcano_miyake_2006.09.12-2007.01.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2006042720070128 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},6:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},7:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},8:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},9:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},10:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},11:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},12:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},13:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},14:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},15:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},16:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},17:{'dataId':'SAR_volcano_miyake_2006.04.27-2007.01.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2006061220060912 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},6:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},7:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},8:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},9:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},10:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},11:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},12:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},13:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},14:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},15:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},16:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},17:{'dataId':'SAR_volcano_miyake_2006.06.12-2006.09.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_miyake_2006042720060612 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},6:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},7:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},8:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},9:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},10:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},11:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},12:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},13:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},14:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},15:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},16:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},17:{'dataId':'SAR_volcano_miyake_2006.04.27-2006.06.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2011022720110414 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},6:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},7:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},8:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},9:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},10:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},11:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},12:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},13:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},14:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},15:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},16:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},17:{'dataId':'SAR_volcano_iwo_2011.02.27-2011.04.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2011021020110328 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},6:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},7:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},8:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},9:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},10:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},11:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},12:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},13:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},14:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},15:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},16:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},17:{'dataId':'SAR_volcano_iwo_2011.02.10-2011.03.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2011011220110227 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},6:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},7:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},8:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},9:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},10:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},11:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},12:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},13:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},14:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},15:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},16:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},17:{'dataId':'SAR_volcano_iwo_2011.01.12-2011.02.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010111020110210 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},6:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},7:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},8:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},9:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},10:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},11:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},12:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},13:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},14:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},15:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},16:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},17:{'dataId':'SAR_volcano_iwo_2010.11.10-2011.02.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010112720110112 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},6:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},7:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},8:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},9:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},10:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},11:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},12:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},13:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},14:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},15:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},16:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},17:{'dataId':'SAR_volcano_iwo_2010.11.27-2011.01.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010082720110112 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},6:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},7:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},8:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},9:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},10:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},11:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},12:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},13:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},14:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},15:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},16:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},17:{'dataId':'SAR_volcano_iwo_2010.08.27-2011.01.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010080720101223 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},6:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},7:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},8:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},9:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},10:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},11:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},12:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},13:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},14:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},15:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},16:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},17:{'dataId':'SAR_volcano_iwo_2010.08.07-2010.12.23'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010092520101110 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},6:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},7:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},8:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},9:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},10:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},11:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},12:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},13:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},14:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},15:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},16:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},17:{'dataId':'SAR_volcano_iwo_2010.09.25-2010.11.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010081020100925 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},6:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},7:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},8:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},9:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},10:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},11:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},12:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},13:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},14:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},15:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},16:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},17:{'dataId':'SAR_volcano_iwo_2010.08.10-2010.09.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010062520100810 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},6:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},7:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},8:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},9:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},10:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},11:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},12:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},13:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},14:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},15:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},16:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},17:{'dataId':'SAR_volcano_iwo_2010.06.25-2010.08.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010050720100807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},6:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},7:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},8:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},9:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},10:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},11:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},12:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},13:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},14:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},15:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},16:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},17:{'dataId':'SAR_volcano_iwo_2010.05.07-2010.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010051020100625 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},6:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},7:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},8:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},9:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},10:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},11:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},12:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},13:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},14:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},15:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},16:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},17:{'dataId':'SAR_volcano_iwo_2010.05.10-2010.06.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010041120100527 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},6:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},7:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},8:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},9:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},10:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},11:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},12:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},13:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},14:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},15:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},16:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},17:{'dataId':'SAR_volcano_iwo_2010.04.11-2010.05.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010032520100510 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},6:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},7:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},8:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},9:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},10:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},11:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},12:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},13:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},14:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},15:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},16:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},17:{'dataId':'SAR_volcano_iwo_2010.03.25-2010.05.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010032220100507 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},6:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},7:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},8:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},9:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},10:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},11:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},12:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},13:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},14:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},15:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},16:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},17:{'dataId':'SAR_volcano_iwo_2010.03.22-2010.05.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009112420100411 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},6:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},7:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},8:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},9:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},10:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},11:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},12:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},13:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},14:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},15:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},16:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},17:{'dataId':'SAR_volcano_iwo_2009.11.24-2010.04.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010020720100325 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},6:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},7:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},8:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},9:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},10:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},11:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},12:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},13:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},14:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},15:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},16:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},17:{'dataId':'SAR_volcano_iwo_2010.02.07-2010.03.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2010020420100322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},6:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},7:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},8:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},9:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},10:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},11:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},12:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},13:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},14:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},15:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},16:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},17:{'dataId':'SAR_volcano_iwo_2010.02.04-2010.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009110720100207 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},6:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},7:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},8:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},9:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},10:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},11:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},12:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},13:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},14:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},15:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},16:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},17:{'dataId':'SAR_volcano_iwo_2009.11.07-2010.02.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009122020100204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},6:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},7:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},8:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},9:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},10:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},11:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},12:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},13:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},14:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},15:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},16:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},17:{'dataId':'SAR_volcano_iwo_2009.12.20-2010.02.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009080420091220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},6:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},7:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},8:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},9:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},10:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},11:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},12:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},13:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},14:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},15:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},16:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},17:{'dataId':'SAR_volcano_iwo_2009.08.04-2009.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009100920091124 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},6:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},7:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},8:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},9:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},10:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},11:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},12:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},13:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},14:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},15:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},16:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},17:{'dataId':'SAR_volcano_iwo_2009.10.09-2009.11.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009082420091124 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},6:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},7:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},8:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},9:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},10:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},11:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},12:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},13:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},14:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},15:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},16:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},17:{'dataId':'SAR_volcano_iwo_2009.08.24-2009.11.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009092220091107 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},6:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},7:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},8:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},9:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},10:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},11:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},12:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},13:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},14:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},15:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},16:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},17:{'dataId':'SAR_volcano_iwo_2009.09.22-2009.11.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009080720090922 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},6:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},7:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},8:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},9:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},10:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},11:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},12:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},13:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},14:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},15:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},16:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},17:{'dataId':'SAR_volcano_iwo_2009.08.07-2009.09.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009062220090807 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},6:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},7:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},8:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},9:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},10:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},11:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},12:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},13:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},14:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},15:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},16:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},17:{'dataId':'SAR_volcano_iwo_2009.06.22-2009.08.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009050720090622 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},6:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},7:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},8:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},9:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},10:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},11:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},12:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},13:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},14:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},15:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},16:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},17:{'dataId':'SAR_volcano_iwo_2009.05.07-2009.06.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009020120090619 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},6:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},7:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},8:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},9:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},10:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},11:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},12:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},13:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},14:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},15:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},16:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},17:{'dataId':'SAR_volcano_iwo_2009.02.01-2009.06.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009040820090524 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},6:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},7:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},8:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},9:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},10:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},11:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},12:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},13:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},14:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},15:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},16:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},17:{'dataId':'SAR_volcano_iwo_2009.04.08-2009.05.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2009022120090408 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},6:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},7:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},8:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},9:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},10:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},11:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},12:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},13:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},14:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},15:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},16:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},17:{'dataId':'SAR_volcano_iwo_2009.02.21-2009.04.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008112120090221 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},6:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},7:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},8:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},9:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},10:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},11:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},12:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},13:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},14:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},15:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},16:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},17:{'dataId':'SAR_volcano_iwo_2008.11.21-2009.02.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008122020090204 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},6:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},7:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},8:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},9:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},10:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},11:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},12:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},13:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},14:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},15:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},16:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},17:{'dataId':'SAR_volcano_iwo_2008.12.20-2009.02.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008121720090201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},6:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},7:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},8:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},9:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},10:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},11:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},12:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},13:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},14:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},15:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},16:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},17:{'dataId':'SAR_volcano_iwo_2008.12.17-2009.02.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008110420081220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},6:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},7:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},8:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},9:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},10:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},11:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},12:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},13:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},14:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},15:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},16:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},17:{'dataId':'SAR_volcano_iwo_2008.11.04-2008.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008091620081217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},6:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},7:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},8:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},9:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},10:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},11:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},12:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},13:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},14:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},15:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},16:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},17:{'dataId':'SAR_volcano_iwo_2008.09.16-2008.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008100620081121 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},6:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},7:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},8:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},9:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},10:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},11:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},12:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},13:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},14:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},15:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},16:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},17:{'dataId':'SAR_volcano_iwo_2008.10.06-2008.11.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008070620081006 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},6:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},7:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},8:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},9:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},10:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},11:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},12:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},13:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},14:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},15:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},16:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},17:{'dataId':'SAR_volcano_iwo_2008.07.06-2008.10.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008052120080706 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},6:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},7:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},8:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},9:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},10:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},11:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},12:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},13:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},14:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},15:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},16:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},17:{'dataId':'SAR_volcano_iwo_2008.05.21-2008.07.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2007111920080521 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},6:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},7:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},8:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},9:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},10:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},11:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},12:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},13:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},14:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},15:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},16:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},17:{'dataId':'SAR_volcano_iwo_2007.11.19-2008.05.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008031920080504 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},6:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},7:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},8:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},9:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},10:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},11:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},12:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},13:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},14:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},15:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},16:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},17:{'dataId':'SAR_volcano_iwo_2008.03.19-2008.05.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008031620080501 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},6:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},7:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},8:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},9:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},10:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},11:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},12:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},13:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},14:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},15:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},16:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},17:{'dataId':'SAR_volcano_iwo_2008.03.16-2008.05.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2008013020080316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},6:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},7:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},8:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},9:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},10:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},11:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},12:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},13:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},14:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},15:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},16:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},17:{'dataId':'SAR_volcano_iwo_2008.01.30-2008.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2007100420071119 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},6:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},7:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},8:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},9:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},10:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},11:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},12:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},13:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},14:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},15:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},16:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},17:{'dataId':'SAR_volcano_iwo_2007.10.04-2007.11.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2007021620070403 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},6:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},7:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},8:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},9:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},10:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},11:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},12:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},13:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},14:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},15:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},16:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},17:{'dataId':'SAR_volcano_iwo_2007.02.16-2007.04.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2006110120070201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},6:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},7:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},8:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},9:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},10:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},11:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},12:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},13:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},14:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},15:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},16:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},17:{'dataId':'SAR_volcano_iwo_2006.11.01-2007.02.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_iwo_2006111120061227 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},6:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},7:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},8:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},9:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},10:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},11:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},12:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},13:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},14:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},15:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},16:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},17:{'dataId':'SAR_volcano_iwo_2006.11.11-2006.12.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2008051020101116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},6:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},7:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},8:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},9:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},10:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},11:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},12:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},13:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},14:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},15:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},16:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},17:{'dataId':'SAR_volcano_kujyu_2008.05.10-2010.11.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2010041620101017 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},6:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},7:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},8:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},9:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},10:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},11:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},12:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},13:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},14:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},15:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},16:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},17:{'dataId':'SAR_volcano_kujyu_2010.04.16-2010.10.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2008022420101017 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},6:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},7:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},8:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},9:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},10:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},11:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},12:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},13:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},14:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},15:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},16:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},17:{'dataId':'SAR_volcano_kujyu_2008.02.24-2010.10.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2009112920100416 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},6:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},7:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},8:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},9:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},10:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},11:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},12:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},13:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},14:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},15:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},16:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},17:{'dataId':'SAR_volcano_kujyu_2009.11.29-2010.04.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2007112420100301 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},6:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},7:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},8:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},9:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},10:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},11:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},12:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},13:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},14:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},15:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},16:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},17:{'dataId':'SAR_volcano_kujyu_2007.11.24-2010.03.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2007110820091229 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},6:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},7:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},8:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},9:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},10:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},11:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},12:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},13:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},14:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},15:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},16:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},17:{'dataId':'SAR_volcano_kujyu_2007.11.08-2009.12.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2009071420091129 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},6:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},7:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},8:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},9:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},10:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},11:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},12:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},13:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},14:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},15:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},16:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},17:{'dataId':'SAR_volcano_kujyu_2009.07.14-2009.11.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2007112420091129 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},6:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},7:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},8:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},9:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},10:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},11:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},12:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},13:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},14:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},15:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},16:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},17:{'dataId':'SAR_volcano_kujyu_2007.11.24-2009.11.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2008111020090328 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},6:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},7:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},8:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},9:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},10:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},11:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},12:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},13:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},14:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},15:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},16:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},17:{'dataId':'SAR_volcano_kujyu_2008.11.10-2009.03.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2007010620081126 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},6:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},7:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},8:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},9:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},10:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},11:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},12:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},13:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},14:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},15:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},16:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},17:{'dataId':'SAR_volcano_kujyu_2007.01.06-2008.11.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2007020520081110 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},6:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},7:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},8:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},9:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},10:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},11:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},12:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},13:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},14:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},15:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},16:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},17:{'dataId':'SAR_volcano_kujyu_2007.02.05-2008.11.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kujyu_2007020520071108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},6:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},7:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},8:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},9:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},10:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},11:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},12:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},13:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},14:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},15:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},16:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},17:{'dataId':'SAR_volcano_kujyu_2007.02.05-2007.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2011030520110420 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},6:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},7:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},8:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},9:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},10:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},11:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},12:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},13:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},14:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},15:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},16:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},17:{'dataId':'SAR_volcano_aso_2011.03.05-2011.04.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2008052720110305 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},6:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},7:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},8:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},9:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},10:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},11:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},12:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},13:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},14:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},15:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},16:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},17:{'dataId':'SAR_volcano_aso_2008.05.27-2011.03.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2008012620101219 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},6:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},7:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},8:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},9:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},10:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},11:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},12:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},13:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},14:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},15:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},16:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},17:{'dataId':'SAR_volcano_aso_2008.01.26-2010.12.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2008052720101203 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},6:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},7:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},8:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},9:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},10:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},11:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},12:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},13:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},14:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},15:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},16:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},17:{'dataId':'SAR_volcano_aso_2008.05.27-2010.12.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2010050320100918 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},6:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},7:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},8:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},9:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},10:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},11:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},12:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},13:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},14:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},15:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},16:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},17:{'dataId':'SAR_volcano_aso_2010.05.03-2010.09.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2008012620100918 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},6:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},7:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},8:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},9:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},10:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},11:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},12:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},13:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},14:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},15:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},16:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},17:{'dataId':'SAR_volcano_aso_2008.01.26-2010.09.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2010031820100503 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},6:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},7:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},8:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},9:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},10:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},11:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},12:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},13:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},14:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},15:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},16:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},17:{'dataId':'SAR_volcano_aso_2010.03.18-2010.05.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2009121620100503 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},6:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},7:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},8:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},9:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},10:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},11:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},12:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},13:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},14:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},15:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},16:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},17:{'dataId':'SAR_volcano_aso_2009.12.16-2010.05.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2010030220100417 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},6:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},7:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},8:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},9:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},10:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},11:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},12:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},13:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},14:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},15:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},16:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},17:{'dataId':'SAR_volcano_aso_2010.03.02-2010.04.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2010013120100318 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},6:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},7:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},8:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},9:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},10:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},11:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},12:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},13:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},14:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},15:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},16:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},17:{'dataId':'SAR_volcano_aso_2010.01.31-2010.03.18'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2007102620100131 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},6:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},7:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},8:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},9:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},10:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},11:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},12:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},13:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},14:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},15:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},16:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},17:{'dataId':'SAR_volcano_aso_2007.10.26-2010.01.31'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2009113020100115 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},6:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},7:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},8:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},9:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},10:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},11:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},12:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},13:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},14:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},15:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},16:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},17:{'dataId':'SAR_volcano_aso_2009.11.30-2010.01.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2007102620091216 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},6:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},7:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},8:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},9:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},10:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},11:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},12:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},13:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},14:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},15:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},16:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},17:{'dataId':'SAR_volcano_aso_2007.10.26-2009.12.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2007112520091130 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},6:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},7:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},8:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},9:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},10:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},11:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},12:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},13:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},14:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},15:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},16:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},17:{'dataId':'SAR_volcano_aso_2007.11.25-2009.11.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2009053020091015 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},6:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},7:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},8:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},9:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},10:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},11:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},12:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},13:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},14:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},15:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},16:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},17:{'dataId':'SAR_volcano_aso_2009.05.30-2009.10.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2008071220091015 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},6:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},7:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},8:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},9:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},10:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},11:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},12:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},13:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},14:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},15:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},16:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},17:{'dataId':'SAR_volcano_aso_2008.07.12-2009.10.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2009061520090915 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},6:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},7:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},8:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},9:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},10:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},11:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},12:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},13:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},14:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},15:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},16:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},17:{'dataId':'SAR_volcano_aso_2009.06.15-2009.09.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2007072620090915 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},6:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},7:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},8:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},9:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},10:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},11:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},12:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},13:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},14:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},15:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},16:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},17:{'dataId':'SAR_volcano_aso_2007.07.26-2009.09.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2007072620080728 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},6:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},7:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},8:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},9:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},10:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},11:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},12:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},13:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},14:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},15:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},16:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},17:{'dataId':'SAR_volcano_aso_2007.07.26-2008.07.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2008011020080527 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},6:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},7:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},8:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},9:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},10:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},11:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},12:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},13:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},14:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},15:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},16:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},17:{'dataId':'SAR_volcano_aso_2008.01.10-2008.05.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_aso_2007010720080110 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},6:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},7:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},8:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},9:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},10:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},11:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},12:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},13:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},14:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},15:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},16:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},17:{'dataId':'SAR_volcano_aso_2007.01.07-2008.01.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010082020110407 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},6:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},7:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},8:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},9:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},10:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},11:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},12:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},13:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},14:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},15:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},16:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},17:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.04.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010080420110322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},6:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},7:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},8:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},9:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},10:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},11:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},12:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},13:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},14:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},15:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},16:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},17:{'dataId':'SAR_volcano_unzen_2010.08.04-2011.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010061920110322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},6:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},7:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},8:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},9:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},10:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},11:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},12:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},13:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},14:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},15:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},16:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},17:{'dataId':'SAR_volcano_unzen_2010.06.19-2011.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010050420110322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},6:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},7:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},8:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},9:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},10:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},11:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},12:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},13:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},14:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},15:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},16:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},17:{'dataId':'SAR_volcano_unzen_2010.05.04-2011.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010072220110309 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},6:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},7:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},8:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},9:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},10:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},11:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},12:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},13:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},14:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},15:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},16:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},17:{'dataId':'SAR_volcano_unzen_2010.07.22-2011.03.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010082020110220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},6:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},7:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},8:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},9:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},10:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},11:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},12:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},13:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},14:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},15:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},16:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},17:{'dataId':'SAR_volcano_unzen_2010.08.20-2011.02.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010070520110220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},6:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},7:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},8:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},9:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},10:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},11:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},12:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},13:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},14:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},15:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},16:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},17:{'dataId':'SAR_volcano_unzen_2010.07.05-2011.02.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010110420101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},6:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},7:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},8:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},9:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},10:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},11:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},12:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},13:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},14:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},15:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},16:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},17:{'dataId':'SAR_volcano_unzen_2010.11.04-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010070520101120 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},6:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},7:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},8:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},9:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},10:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},11:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},12:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},13:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},14:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},15:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},16:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},17:{'dataId':'SAR_volcano_unzen_2010.07.05-2010.11.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010042120100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},6:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},7:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},8:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},9:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},10:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},11:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},12:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},13:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},14:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},15:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},16:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},17:{'dataId':'SAR_volcano_unzen_2010.04.21-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2008012720100619 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},6:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},7:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},8:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},9:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},10:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},11:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},12:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},13:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},14:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},15:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},16:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},17:{'dataId':'SAR_volcano_unzen_2008.01.27-2010.06.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010021720100520 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},6:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},7:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},8:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},9:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},10:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},11:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},12:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},13:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},14:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},15:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},16:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},17:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.05.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2008032920100520 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},6:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},7:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},8:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},9:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},10:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},11:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},12:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},13:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},14:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},15:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},16:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},17:{'dataId':'SAR_volcano_unzen_2008.03.29-2010.05.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010030620100421 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},6:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},7:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},8:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},9:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},10:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},11:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},12:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},13:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},14:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},15:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},16:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},17:{'dataId':'SAR_volcano_unzen_2010.03.06-2010.04.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2010021720100404 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},6:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},7:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},8:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},9:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},10:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},11:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},12:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},13:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},14:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},15:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},16:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},17:{'dataId':'SAR_volcano_unzen_2010.02.17-2010.04.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007121220100319 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},6:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},7:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},8:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},9:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},10:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},11:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},12:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},13:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},14:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},15:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},16:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},17:{'dataId':'SAR_volcano_unzen_2007.12.12-2010.03.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007122820100217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},6:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},7:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},8:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},9:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},10:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},11:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},12:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},13:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},14:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},15:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},16:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},17:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.02.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2009121720100201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},6:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},7:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},8:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},9:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},10:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},11:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},12:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},13:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},14:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},15:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},16:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},17:{'dataId':'SAR_volcano_unzen_2009.12.17-2010.02.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007122820100102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},6:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},7:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},8:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},9:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},10:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},11:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},12:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},13:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},14:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},15:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},16:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},17:{'dataId':'SAR_volcano_unzen_2007.12.28-2010.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007121220091217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},6:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},7:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},8:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},9:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},10:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},11:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},12:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},13:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},14:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},15:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},16:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},17:{'dataId':'SAR_volcano_unzen_2007.12.12-2009.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2006112620090903 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},6:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},7:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},8:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},9:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},10:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},11:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},12:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},13:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},14:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},15:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},16:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},17:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.09.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007031120090801 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},6:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},7:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},8:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},9:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},10:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},11:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},12:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},13:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},14:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},15:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},16:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},17:{'dataId':'SAR_volcano_unzen_2007.03.11-2009.08.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2006112620090303 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},6:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},7:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},8:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},9:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},10:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},11:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},12:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},13:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},14:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},15:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},16:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},17:{'dataId':'SAR_volcano_unzen_2006.11.26-2009.03.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2006122520090214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},6:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},7:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},8:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},9:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},10:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},11:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},12:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},13:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},14:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},15:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},16:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},17:{'dataId':'SAR_volcano_unzen_2006.12.25-2009.02.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2006122520081230 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},6:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},7:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},8:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},9:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},10:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},11:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},12:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},13:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},14:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},15:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},16:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},17:{'dataId':'SAR_volcano_unzen_2006.12.25-2008.12.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007031120081214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},6:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},7:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},8:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},9:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},10:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},11:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},12:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},13:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},14:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},15:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},16:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},17:{'dataId':'SAR_volcano_unzen_2007.03.11-2008.12.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007042620080428 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},6:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},7:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},8:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},9:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},10:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},11:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},12:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},13:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},14:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},15:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},16:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},17:{'dataId':'SAR_volcano_unzen_2007.04.26-2008.04.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007111220071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},6:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},7:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},8:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},9:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},10:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},11:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},12:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},13:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},14:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},15:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},16:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},17:{'dataId':'SAR_volcano_unzen_2007.11.12-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007081220071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},6:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},7:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},8:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},9:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},10:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},11:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},12:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},13:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},14:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},15:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},16:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},17:{'dataId':'SAR_volcano_unzen_2007.08.12-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007062720071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},6:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},7:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},8:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},9:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},10:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},11:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},12:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},13:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},14:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},15:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},16:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},17:{'dataId':'SAR_volcano_unzen_2007.06.27-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007061120071212 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},6:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},7:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},8:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},9:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},10:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},11:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},12:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},13:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},14:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},15:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},16:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},17:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.12.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007072720071027 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},6:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},7:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},8:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},9:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},10:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},11:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},12:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},13:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},14:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},15:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},16:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},17:{'dataId':'SAR_volcano_unzen_2007.07.27-2007.10.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007061120070911 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},6:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},7:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},8:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},9:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},10:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},11:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},12:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},13:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},14:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},15:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},16:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},17:{'dataId':'SAR_volcano_unzen_2007.06.11-2007.09.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_unzen_2007031120070727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},6:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},7:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},8:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},9:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},10:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},11:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},12:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},13:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},14:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},15:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},16:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},17:{'dataId':'SAR_volcano_unzen_2007.03.11-2007.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2011030520110420 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},6:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},7:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},8:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},9:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},10:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},11:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},12:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},13:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},14:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},15:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},16:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},17:{'dataId':'SAR_volcano_kirishima_2011.03.05-2011.04.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2011022020110407 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},6:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},7:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},8:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},9:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},10:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},11:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},12:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},13:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},14:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},15:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},16:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},17:{'dataId':'SAR_volcano_kirishima_2011.02.20-2011.04.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2011011820110305 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},6:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},7:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},8:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},9:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},10:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},11:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},12:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},13:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},14:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},15:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},16:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},17:{'dataId':'SAR_volcano_kirishima_2011.01.18-2011.03.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2010112020110220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},6:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},7:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},8:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},9:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},10:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},11:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},12:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},13:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},14:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},15:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},16:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},17:{'dataId':'SAR_volcano_kirishima_2010.11.20-2011.02.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2010021720101120 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},6:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},7:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},8:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},9:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},10:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},11:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},12:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},13:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},14:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},15:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},16:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},17:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.11.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008021220101120 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},6:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},7:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},8:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},9:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},10:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},11:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},12:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},13:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},14:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},15:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},16:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},17:{'dataId':'SAR_volcano_kirishima_2008.02.12-2010.11.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007111220100705 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},6:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},7:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},8:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},9:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},10:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},11:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},12:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},13:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},14:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},15:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},16:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},17:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.07.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2010021720100404 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},6:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},7:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},8:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},9:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},10:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},11:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},12:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},13:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},14:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},15:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},16:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},17:{'dataId':'SAR_volcano_kirishima_2010.02.17-2010.04.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2010010220100404 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},6:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},7:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},8:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},9:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},10:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},11:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},12:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},13:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},14:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},15:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},16:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},17:{'dataId':'SAR_volcano_kirishima_2010.01.02-2010.04.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007111220100404 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},6:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},7:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},8:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},9:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},10:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},11:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},12:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},13:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},14:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},15:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},16:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},17:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.04.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2010011520100302 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},6:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},7:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},8:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},9:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},10:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},11:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},12:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},13:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},14:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},15:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},16:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},17:{'dataId':'SAR_volcano_kirishima_2010.01.15-2010.03.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007122820100217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},6:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},7:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},8:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},9:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},10:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},11:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},12:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},13:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},14:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},15:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},16:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},17:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.02.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007111220100217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},6:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},7:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},8:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},9:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},10:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},11:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},12:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},13:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},14:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},15:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},16:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},17:{'dataId':'SAR_volcano_kirishima_2007.11.12-2010.02.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2009113020100115 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},6:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},7:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},8:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},9:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},10:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},11:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},12:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},13:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},14:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},15:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},16:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},17:{'dataId':'SAR_volcano_kirishima_2009.11.30-2010.01.15'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2009021420100102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},6:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},7:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},8:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},9:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},10:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},11:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},12:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},13:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},14:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},15:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},16:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},17:{'dataId':'SAR_volcano_kirishima_2009.02.14-2010.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007122820100102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},6:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},7:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},8:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},9:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},10:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},11:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},12:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},13:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},14:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},15:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},16:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},17:{'dataId':'SAR_volcano_kirishima_2007.12.28-2010.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007112520091130 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},6:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},7:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},8:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},9:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},10:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},11:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},12:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},13:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},14:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},15:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},16:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},17:{'dataId':'SAR_volcano_kirishima_2007.11.25-2009.11.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2006092420090817 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},6:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},7:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},8:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},9:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},10:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},11:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},12:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},13:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},14:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},15:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},16:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},17:{'dataId':'SAR_volcano_kirishima_2006.09.24-2009.08.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008071220090530 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},6:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},7:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},8:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},9:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},10:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},11:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},12:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},13:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},14:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},15:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},16:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},17:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.05.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008071220090414 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},6:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},7:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},8:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},9:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},10:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},11:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},12:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},13:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},14:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},15:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},16:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},17:{'dataId':'SAR_volcano_kirishima_2008.07.12-2009.04.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008062920090214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},6:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},7:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},8:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},9:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},10:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},11:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},12:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},13:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},14:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},15:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},16:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},17:{'dataId':'SAR_volcano_kirishima_2008.06.29-2009.02.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2006122520090214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},6:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},7:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},8:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},9:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},10:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},11:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},12:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},13:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},14:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},15:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},16:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},17:{'dataId':'SAR_volcano_kirishima_2006.12.25-2009.02.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2006122520081230 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},6:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},7:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},8:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},9:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},10:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},11:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},12:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},13:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},14:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},15:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},16:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},17:{'dataId':'SAR_volcano_kirishima_2006.12.25-2008.12.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008041120080527 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},6:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},7:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},8:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},9:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},10:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},11:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},12:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},13:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},14:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},15:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},16:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},17:{'dataId':'SAR_volcano_kirishima_2008.04.11-2008.05.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008022520080527 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},6:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},7:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},8:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},9:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},10:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},11:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},12:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},13:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},14:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},15:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},16:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},17:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.05.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008032920080514 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},6:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},7:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},8:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},9:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},10:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},11:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},12:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},13:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},14:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},15:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},16:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},17:{'dataId':'SAR_volcano_kirishima_2008.03.29-2008.05.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008022520080411 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},6:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},7:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},8:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},9:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},10:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},11:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},12:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},13:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},14:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},15:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},16:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},17:{'dataId':'SAR_volcano_kirishima_2008.02.25-2008.04.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2008011020080411 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},6:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},7:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},8:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},9:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},10:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},11:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},12:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},13:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},14:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},15:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},16:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},17:{'dataId':'SAR_volcano_kirishima_2008.01.10-2008.04.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007122820080329 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},6:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},7:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},8:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},9:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},10:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},11:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},12:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},13:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},14:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},15:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},16:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},17:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.03.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007122820080212 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},6:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},7:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},8:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},9:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},10:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},11:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},12:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},13:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},14:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},15:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},16:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},17:{'dataId':'SAR_volcano_kirishima_2007.12.28-2008.02.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007081220071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},6:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},7:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},8:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},9:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},10:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},11:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},12:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},13:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},14:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},15:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},16:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},17:{'dataId':'SAR_volcano_kirishima_2007.08.12-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2007010720071125 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},6:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},7:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},8:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},9:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},10:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},11:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},12:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},13:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},14:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},15:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},16:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},17:{'dataId':'SAR_volcano_kirishima_2007.01.07-2007.11.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kirishima_2006092420061225 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},6:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},7:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},8:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},9:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},10:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},11:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},12:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},13:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},14:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},15:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},16:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},17:{'dataId':'SAR_volcano_kirishima_2006.09.24-2006.12.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2011030520110420 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},6:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},7:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},8:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},9:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},10:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},11:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},12:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},13:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},14:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},15:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},16:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},17:{'dataId':'SAR_volcano_sakurajima_2011.03.05-2011.04.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2011022020110407 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},6:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},7:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},8:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},9:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},10:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},11:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},12:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},13:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},14:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},15:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},16:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},17:{'dataId':'SAR_volcano_sakurajima_2011.02.20-2011.04.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008051420110407 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},6:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},7:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},8:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},9:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},10:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},11:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},12:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},13:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},14:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},15:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},16:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},17:{'dataId':'SAR_volcano_sakurajima_2008.05.14-2011.04.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2010021720101120 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},6:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},7:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},8:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},9:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},10:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},11:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},12:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},13:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},14:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},15:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},16:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},17:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.11.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008021220101120 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},6:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},7:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},8:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},9:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},10:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},11:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},12:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},13:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},14:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},15:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},16:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},17:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2010.11.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2010052020100820 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},6:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},7:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},8:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},9:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},10:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},11:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},12:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},13:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},14:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},15:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},16:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},17:{'dataId':'SAR_volcano_sakurajima_2010.05.20-2010.08.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2010040420100820 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},6:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},7:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},8:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},9:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},10:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},11:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},12:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},13:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},14:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},15:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},16:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},17:{'dataId':'SAR_volcano_sakurajima_2010.04.04-2010.08.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2010021720100404 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},6:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},7:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},8:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},9:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},10:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},11:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},12:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},13:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},14:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},15:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},16:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},17:{'dataId':'SAR_volcano_sakurajima_2010.02.17-2010.04.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2010010220100404 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},6:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},7:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},8:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},9:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},10:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},11:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},12:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},13:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},14:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},15:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},16:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},17:{'dataId':'SAR_volcano_sakurajima_2010.01.02-2010.04.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2009113020100302 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},6:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},7:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},8:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},9:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},10:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},11:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},12:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},13:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},14:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},15:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},16:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},17:{'dataId':'SAR_volcano_sakurajima_2009.11.30-2010.03.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2009101520100302 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},6:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},7:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},8:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},9:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},10:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},11:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},12:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},13:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},14:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},15:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},16:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},17:{'dataId':'SAR_volcano_sakurajima_2009.10.15-2010.03.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007122820100217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},6:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},7:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},8:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},9:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},10:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},11:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},12:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},13:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},14:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},15:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},16:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},17:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.02.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007111220100217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},6:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},7:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},8:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},9:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},10:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},11:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},12:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},13:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},14:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},15:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},16:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},17:{'dataId':'SAR_volcano_sakurajima_2007.11.12-2010.02.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2009021420100102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},6:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},7:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},8:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},9:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},10:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},11:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},12:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},13:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},14:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},15:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},16:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},17:{'dataId':'SAR_volcano_sakurajima_2009.02.14-2010.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007122820100102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},6:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},7:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},8:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},9:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},10:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},11:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},12:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},13:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},14:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},15:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},16:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},17:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2010.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007112520091130 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},6:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},7:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},8:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},9:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},10:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},11:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},12:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},13:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},14:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},15:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},16:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},17:{'dataId':'SAR_volcano_sakurajima_2007.11.25-2009.11.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2006092420090817 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},6:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},7:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},8:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},9:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},10:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},11:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},12:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},13:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},14:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},15:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},16:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},17:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2009.08.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008071220090414 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},6:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},7:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},8:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},9:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},10:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},11:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},12:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},13:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},14:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},15:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},16:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},17:{'dataId':'SAR_volcano_sakurajima_2008.07.12-2009.04.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2006122520090214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},6:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},7:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},8:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},9:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},10:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},11:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},12:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},13:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},14:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},15:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},16:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},17:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2009.02.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2006122520081230 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},6:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},7:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},8:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},9:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},10:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},11:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},12:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},13:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},14:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},15:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},16:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},17:{'dataId':'SAR_volcano_sakurajima_2006.12.25-2008.12.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007062720080629 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},6:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},7:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},8:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},9:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},10:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},11:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},12:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},13:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},14:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},15:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},16:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},17:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2008.06.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008022520080527 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},6:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},7:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},8:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},9:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},10:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},11:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},12:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},13:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},14:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},15:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},16:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},17:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.05.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008032920080514 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},6:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},7:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},8:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},9:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},10:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},11:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},12:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},13:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},14:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},15:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},16:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},17:{'dataId':'SAR_volcano_sakurajima_2008.03.29-2008.05.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008022520080411 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},6:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},7:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},8:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},9:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},10:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},11:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},12:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},13:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},14:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},15:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},16:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},17:{'dataId':'SAR_volcano_sakurajima_2008.02.25-2008.04.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008011020080411 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},6:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},7:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},8:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},9:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},10:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},11:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},12:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},13:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},14:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},15:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},16:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},17:{'dataId':'SAR_volcano_sakurajima_2008.01.10-2008.04.11'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2008021220080329 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},6:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},7:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},8:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},9:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},10:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},11:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},12:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},13:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},14:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},15:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},16:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},17:{'dataId':'SAR_volcano_sakurajima_2008.02.12-2008.03.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007122820080212 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},6:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},7:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},8:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},9:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},10:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},11:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},12:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},13:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},14:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},15:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},16:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},17:{'dataId':'SAR_volcano_sakurajima_2007.12.28-2008.02.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007081220071228 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},6:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},7:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},8:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},9:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},10:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},11:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},12:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},13:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},14:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},15:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},16:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},17:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.12.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007010720071125 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},6:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},7:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},8:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},9:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},10:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},11:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},12:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},13:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},14:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},15:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},16:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},17:{'dataId':'SAR_volcano_sakurajima_2007.01.07-2007.11.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007081220071112 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},6:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},7:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},8:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},9:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},10:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},11:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},12:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},13:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},14:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},15:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},16:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},17:{'dataId':'SAR_volcano_sakurajima_2007.08.12-2007.11.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2007062720070812 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},6:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},7:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},8:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},9:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},10:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},11:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},12:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},13:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},14:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},15:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},16:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},17:{'dataId':'SAR_volcano_sakurajima_2007.06.27-2007.08.12'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_sakurajima_2006092420061225 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},6:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},7:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},8:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},9:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},10:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},11:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},12:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},13:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},14:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},15:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},16:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},17:{'dataId':'SAR_volcano_sakurajima_2006.09.24-2006.12.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010110420110322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.11.04-2011.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2011012220110309 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},6:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},7:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},8:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},9:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},10:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},11:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},12:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},13:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},14:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},15:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},16:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},17:{'dataId':'SAR_volcano_satsumaiwo_2011.01.22-2011.03.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008022920110122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.02.29-2011.01.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010091920101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.09.19-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008042820101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010042120100906 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.09.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010050420100804 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.05.04-2010.08.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010042120100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009101920100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010042120100606 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.04.21-2010.06.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008053120100606 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.05.31-2010.06.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010020120100504 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.02.01-2010.05.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009091620100504 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.05.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008042820100504 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.04.28-2010.05.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2010030620100421 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},6:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},7:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},8:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},9:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},10:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},11:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},12:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},13:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},14:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},15:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},16:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},17:{'dataId':'SAR_volcano_satsumaiwo_2010.03.06-2010.04.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009091620100201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.09.16-2010.02.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009101920100119 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.10.19-2010.01.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009061620091217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.06.16-2009.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2007101420091019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},6:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},7:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},8:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},9:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},10:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},11:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},12:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},13:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},14:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},15:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},16:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},17:{'dataId':'SAR_volcano_satsumaiwo_2007.10.14-2009.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008072920090916 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.07.29-2009.09.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009031620090801 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.03.16-2009.08.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009030320090719 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.03.03-2009.07.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008121420090316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.12.14-2009.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2009011620090303 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},6:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},7:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},8:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},9:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},10:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},11:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},12:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},13:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},14:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},15:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},16:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},17:{'dataId':'SAR_volcano_satsumaiwo_2009.01.16-2009.03.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008101620090116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.10.16-2009.01.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2008091320081214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},6:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},7:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},8:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},9:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},10:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},11:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},12:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},13:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},14:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},15:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},16:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},17:{'dataId':'SAR_volcano_satsumaiwo_2008.09.13-2008.12.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2007011120081016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},6:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},7:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},8:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},9:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},10:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},11:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},12:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},13:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},14:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},15:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},16:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},17:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2007011120080831 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},6:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},7:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},8:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},9:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},10:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},11:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},12:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},13:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},14:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},15:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},16:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},17:{'dataId':'SAR_volcano_satsumaiwo_2007.01.11-2008.08.31'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2007072720080729 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},6:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},7:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},8:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},9:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},10:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},11:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},12:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},13:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},14:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},15:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},16:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},17:{'dataId':'SAR_volcano_satsumaiwo_2007.07.27-2008.07.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_satsumaiwo_2007031120070727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},6:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},7:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},8:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},9:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},10:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},11:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},12:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},13:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},14:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},15:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},16:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},17:{'dataId':'SAR_volcano_satsumaiwo_2007.03.11-2007.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2010110420110322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},6:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},7:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},8:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},9:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},10:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},11:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},12:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},13:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},14:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},15:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},16:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},17:{'dataId':'SAR_volcano_kuchinoerabu_2010.11.04-2011.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2011012220110309 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},6:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},7:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},8:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},9:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},10:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},11:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},12:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},13:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},14:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},15:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},16:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},17:{'dataId':'SAR_volcano_kuchinoerabu_2011.01.22-2011.03.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2008022920110122 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},6:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},7:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},8:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},9:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},10:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},11:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},12:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},13:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},14:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},15:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},16:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},17:{'dataId':'SAR_volcano_kuchinoerabu_2008.02.29-2011.01.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2010091920101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},6:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},7:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},8:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},9:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},10:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},11:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},12:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},13:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},14:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},15:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},16:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},17:{'dataId':'SAR_volcano_kuchinoerabu_2010.09.19-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2010042120100906 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},6:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},7:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},8:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},9:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},10:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},11:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},12:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},13:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},14:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},15:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},16:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},17:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.09.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2010042120100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},6:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},7:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},8:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},9:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},10:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},11:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},12:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},13:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},14:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},15:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},16:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},17:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2009101920100722 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},6:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},7:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},8:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},9:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},10:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},11:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},12:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},13:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},14:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},15:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},16:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},17:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.07.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2010042120100606 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},6:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},7:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},8:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},9:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},10:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},11:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},12:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},13:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},14:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},15:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},16:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},17:{'dataId':'SAR_volcano_kuchinoerabu_2010.04.21-2010.06.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2009101920100606 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},6:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},7:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},8:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},9:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},10:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},11:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},12:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},13:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},14:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},15:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},16:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},17:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.06.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2010030620100421 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},6:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},7:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},8:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},9:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},10:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},11:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},12:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},13:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},14:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},15:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},16:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},17:{'dataId':'SAR_volcano_kuchinoerabu_2010.03.06-2010.04.21'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2010011920100306 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},6:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},7:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},8:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},9:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},10:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},11:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},12:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},13:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},14:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},15:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},16:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},17:{'dataId':'SAR_volcano_kuchinoerabu_2010.01.19-2010.03.06'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2009101920100119 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},6:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},7:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},8:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},9:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},10:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},11:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},12:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},13:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},14:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},15:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},16:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},17:{'dataId':'SAR_volcano_kuchinoerabu_2009.10.19-2010.01.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2009061620091217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},6:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},7:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},8:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},9:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},10:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},11:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},12:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},13:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},14:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},15:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},16:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},17:{'dataId':'SAR_volcano_kuchinoerabu_2009.06.16-2009.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2007101420091019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},6:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},7:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},8:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},9:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},10:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},11:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},12:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},13:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},14:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},15:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},16:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},17:{'dataId':'SAR_volcano_kuchinoerabu_2007.10.14-2009.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2009031620090801 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},6:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},7:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},8:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},9:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},10:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},11:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},12:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},13:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},14:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},15:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},16:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},17:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.16-2009.08.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2009030320090719 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},6:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},7:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},8:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},9:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},10:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},11:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},12:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},13:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},14:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},15:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},16:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},17:{'dataId':'SAR_volcano_kuchinoerabu_2009.03.03-2009.07.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2008121420090316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},6:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},7:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},8:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},9:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},10:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},11:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},12:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},13:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},14:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},15:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},16:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},17:{'dataId':'SAR_volcano_kuchinoerabu_2008.12.14-2009.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2009011620090303 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},6:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},7:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},8:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},9:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},10:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},11:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},12:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},13:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},14:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},15:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},16:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},17:{'dataId':'SAR_volcano_kuchinoerabu_2009.01.16-2009.03.03'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2008101620090116 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},6:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},7:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},8:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},9:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},10:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},11:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},12:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},13:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},14:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},15:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},16:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},17:{'dataId':'SAR_volcano_kuchinoerabu_2008.10.16-2009.01.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2008091320081214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},6:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},7:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},8:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},9:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},10:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},11:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},12:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},13:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},14:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},15:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},16:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},17:{'dataId':'SAR_volcano_kuchinoerabu_2008.09.13-2008.12.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2007011120081016 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},6:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},7:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},8:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},9:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},10:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},11:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},12:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},13:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},14:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},15:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},16:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},17:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.10.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2007011120080831 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},6:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},7:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},8:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},9:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},10:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},11:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},12:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},13:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},14:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},15:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},16:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},17:{'dataId':'SAR_volcano_kuchinoerabu_2007.01.11-2008.08.31'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2007072720080729 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},6:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},7:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},8:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},9:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},10:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},11:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},12:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},13:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},14:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},15:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},16:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},17:{'dataId':'SAR_volcano_kuchinoerabu_2007.07.27-2008.07.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_kuchinoerabu_2007031120070727 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},6:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},7:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},8:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},9:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},10:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},11:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},12:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},13:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},14:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},15:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},16:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},17:{'dataId':'SAR_volcano_kuchinoerabu_2007.03.11-2007.07.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2010091920101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},6:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},7:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},8:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},9:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},10:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},11:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},12:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},13:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},14:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},15:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},16:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},17:{'dataId':'SAR_volcano_nakanoshima_2010.09.19-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2008042820101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},6:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},7:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},8:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},9:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},10:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},11:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},12:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},13:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},14:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},15:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},16:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},17:{'dataId':'SAR_volcano_nakanoshima_2008.04.28-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2010022220101010 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},6:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},7:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},8:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},9:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},10:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},11:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},12:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},13:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},14:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},15:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},16:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},17:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.10.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2010040920100825 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},6:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},7:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},8:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},9:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},10:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},11:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},12:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},13:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},14:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},15:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},16:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},17:{'dataId':'SAR_volcano_nakanoshima_2010.04.09-2010.08.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2010050420100804 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},6:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},7:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},8:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},9:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},10:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},11:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},12:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},13:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},14:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},15:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},16:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},17:{'dataId':'SAR_volcano_nakanoshima_2010.05.04-2010.08.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2010022220100525 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},6:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},7:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},8:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},9:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},10:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},11:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},12:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},13:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},14:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},15:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},16:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},17:{'dataId':'SAR_volcano_nakanoshima_2010.02.22-2010.05.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2009121720100201 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},6:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},7:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},8:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},9:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},10:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},11:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},12:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},13:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},14:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},15:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},16:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},17:{'dataId':'SAR_volcano_nakanoshima_2009.12.17-2010.02.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2008010220100107 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},6:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},7:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},8:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},9:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},10:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},11:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},12:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},13:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},14:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},15:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},16:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},17:{'dataId':'SAR_volcano_nakanoshima_2008.01.02-2010.01.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2007121220091217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},6:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},7:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},8:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},9:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},10:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},11:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},12:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},13:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},14:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},15:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},16:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},17:{'dataId':'SAR_volcano_nakanoshima_2007.12.12-2009.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2007100220091007 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},6:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},7:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},8:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},9:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},10:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},11:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},12:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},13:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},14:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},15:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},16:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},17:{'dataId':'SAR_volcano_nakanoshima_2007.10.02-2009.10.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2009021920090822 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},6:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},7:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},8:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},9:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},10:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},11:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},12:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},13:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},14:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},15:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},16:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},17:{'dataId':'SAR_volcano_nakanoshima_2009.02.19-2009.08.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2007081720090822 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},6:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},7:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},8:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},9:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},10:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},11:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},12:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},13:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},14:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},15:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},16:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},17:{'dataId':'SAR_volcano_nakanoshima_2007.08.17-2009.08.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2008072920090801 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},6:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},7:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},8:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},9:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},10:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},11:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},12:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},13:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},14:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},15:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},16:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},17:{'dataId':'SAR_volcano_nakanoshima_2008.07.29-2009.08.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2008121420090316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},6:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},7:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},8:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},9:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},10:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},11:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},12:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},13:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},14:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},15:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},16:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},17:{'dataId':'SAR_volcano_nakanoshima_2008.12.14-2009.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2009010420090219 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},6:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},7:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},8:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},9:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},10:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},11:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},12:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},13:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},14:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},15:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},16:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},17:{'dataId':'SAR_volcano_nakanoshima_2009.01.04-2009.02.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2006123020090104 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},6:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},7:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},8:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},9:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},10:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},11:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},12:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},13:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},14:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},15:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},16:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},17:{'dataId':'SAR_volcano_nakanoshima_2006.12.30-2009.01.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2007031120080729 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},6:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},7:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},8:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},9:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},10:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},11:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},12:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},13:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},14:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},15:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},16:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},17:{'dataId':'SAR_volcano_nakanoshima_2007.03.11-2008.07.29'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2007070220080704 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},6:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},7:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},8:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},9:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},10:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},11:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},12:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},13:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},14:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},15:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},16:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},17:{'dataId':'SAR_volcano_nakanoshima_2007.07.02-2008.07.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2007042620080428 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},6:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},7:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},8:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},9:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},10:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},11:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},12:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},13:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},14:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},15:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},16:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},17:{'dataId':'SAR_volcano_nakanoshima_2007.04.26-2008.04.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_nakanoshima_2007111720080102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},6:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},7:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},8:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},9:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},10:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},11:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},12:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},13:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},14:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},15:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},16:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},17:{'dataId':'SAR_volcano_nakanoshima_2007.11.17-2008.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2010110420110322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},6:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},7:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},8:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},9:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},10:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},11:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},12:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},13:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},14:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},15:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},16:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},17:{'dataId':'SAR_volcano_suwanose_2010.11.04-2011.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008042820110322 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},6:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},7:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},8:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},9:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},10:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},11:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},12:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},13:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},14:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},15:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},16:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},17:{'dataId':'SAR_volcano_suwanose_2008.04.28-2011.03.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008042820101220 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},6:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},7:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},8:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},9:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},10:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},11:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},12:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},13:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},14:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},15:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},16:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},17:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.12.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2010022220101010 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},6:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},7:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},8:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},9:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},10:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},11:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},12:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},13:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},14:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},15:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},16:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},17:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.10.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2010040920100825 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},6:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},7:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},8:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},9:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},10:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},11:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},12:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},13:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},14:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},15:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},16:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},17:{'dataId':'SAR_volcano_suwanose_2010.04.09-2010.08.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008021720100825 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},6:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},7:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},8:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},9:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},10:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},11:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},12:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},13:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},14:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},15:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},16:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},17:{'dataId':'SAR_volcano_suwanose_2008.02.17-2010.08.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2010050420100804 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},6:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},7:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},8:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},9:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},10:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},11:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},12:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},13:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},14:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},15:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},16:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},17:{'dataId':'SAR_volcano_suwanose_2010.05.04-2010.08.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2010022220100525 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},6:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},7:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},8:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},9:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},10:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},11:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},12:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},13:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},14:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},15:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},16:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},17:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.05.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008010220100525 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},6:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},7:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},8:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},9:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},10:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},11:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},12:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},13:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},14:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},15:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},16:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},17:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.05.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2010020120100504 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},6:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},7:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},8:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},9:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},10:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},11:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},12:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},13:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},14:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},15:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},16:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},17:{'dataId':'SAR_volcano_suwanose_2010.02.01-2010.05.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008042820100504 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},6:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},7:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},8:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},9:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},10:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},11:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},12:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},13:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},14:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},15:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},16:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},17:{'dataId':'SAR_volcano_suwanose_2008.04.28-2010.05.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2010022220100409 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},6:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},7:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},8:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},9:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},10:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},11:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},12:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},13:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},14:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},15:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},16:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},17:{'dataId':'SAR_volcano_suwanose_2010.02.22-2010.04.09'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008010220100107 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},6:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},7:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},8:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},9:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},10:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},11:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},12:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},13:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},14:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},15:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},16:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},17:{'dataId':'SAR_volcano_suwanose_2008.01.02-2010.01.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2007121220091217 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},6:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},7:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},8:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},9:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},10:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},11:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},12:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},13:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},14:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},15:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},16:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},17:{'dataId':'SAR_volcano_suwanose_2007.12.12-2009.12.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2007100220091007 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},6:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},7:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},8:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},9:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},10:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},11:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},12:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},13:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},14:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},15:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},16:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},17:{'dataId':'SAR_volcano_suwanose_2007.10.02-2009.10.07'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2009021920090822 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},6:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},7:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},8:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},9:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},10:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},11:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},12:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},13:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},14:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},15:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},16:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},17:{'dataId':'SAR_volcano_suwanose_2009.02.19-2009.08.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2007081720090822 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},6:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},7:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},8:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},9:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},10:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},11:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},12:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},13:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},14:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},15:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},16:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},17:{'dataId':'SAR_volcano_suwanose_2007.08.17-2009.08.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008072920090801 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},6:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},7:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},8:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},9:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},10:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},11:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},12:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},13:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},14:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},15:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},16:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},17:{'dataId':'SAR_volcano_suwanose_2008.07.29-2009.08.01'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2008121420090316 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},6:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},7:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},8:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},9:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},10:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},11:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},12:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},13:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},14:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},15:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},16:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},17:{'dataId':'SAR_volcano_suwanose_2008.12.14-2009.03.16'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2009010420090219 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},6:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},7:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},8:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},9:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},10:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},11:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},12:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},13:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},14:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},15:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},16:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},17:{'dataId':'SAR_volcano_suwanose_2009.01.04-2009.02.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2006123020090104 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},6:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},7:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},8:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},9:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},10:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},11:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},12:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},13:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},14:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},15:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},16:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},17:{'dataId':'SAR_volcano_suwanose_2006.12.30-2009.01.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2007031120081214 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},6:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},7:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},8:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},9:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},10:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},11:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},12:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},13:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},14:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},15:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},16:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},17:{'dataId':'SAR_volcano_suwanose_2007.03.11-2008.12.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2007070220080704 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},6:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},7:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},8:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},9:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},10:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},11:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},12:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},13:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},14:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},15:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},16:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},17:{'dataId':'SAR_volcano_suwanose_2007.07.02-2008.07.04'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2007042620080428 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},6:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},7:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},8:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},9:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},10:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},11:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},12:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},13:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},14:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},15:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},16:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},17:{'dataId':'SAR_volcano_suwanose_2007.04.26-2008.04.28'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_volcano_suwanose_2007111720080102 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},6:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},7:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},8:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},9:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},10:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},11:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},12:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},13:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},14:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},15:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},16:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},17:{'dataId':'SAR_volcano_suwanose_2007.11.17-2008.01.02'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_higashinaruse_2010060620101022 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},6:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},7:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},8:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},9:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},10:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},11:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},12:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},13:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},14:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},15:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},16:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},17:{'dataId':'SAR_landslide_higashinaruse_2010.06.06-2010.10.22'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_higashinaruse_2010062920100814 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},6:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},7:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},8:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},9:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},10:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},11:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},12:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},13:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},14:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},15:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},16:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},17:{'dataId':'SAR_landslide_higashinaruse_2010.06.29-2010.08.14'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_higashinaruse_2009060320091019 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},6:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},7:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},8:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},9:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},10:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},11:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},12:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},13:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},14:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},15:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},16:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},17:{'dataId':'SAR_landslide_higashinaruse_2009.06.03-2009.10.19'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_higashinaruse_2009062620090926 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},6:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},7:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},8:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},9:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},10:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},11:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},12:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},13:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},14:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},15:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},16:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},17:{'dataId':'SAR_landslide_higashinaruse_2009.06.26-2009.09.26'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_higashinaruse_2006042720070430 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},6:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},7:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},8:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},9:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},10:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},11:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},12:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},13:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},14:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},15:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},16:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},17:{'dataId':'SAR_landslide_higashinaruse_2006.04.27-2007.04.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2008050220101108 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},6:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},7:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},8:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},9:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},10:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},11:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},12:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},13:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},14:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},15:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},16:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},17:{'dataId':'SAR_landslide_gassan_2008.05.02-2010.11.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2010032320100808 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},6:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},7:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},8:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},9:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},10:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},11:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},12:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},13:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},14:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},15:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},16:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},17:{'dataId':'SAR_landslide_gassan_2010.03.23-2010.08.08'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2009050520091105 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},6:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},7:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},8:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},9:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},10:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},11:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},12:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},13:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},14:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},15:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},16:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},17:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.11.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2009061420091030 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},6:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},7:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},8:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},9:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},10:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},11:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},12:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},13:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},14:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},15:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},16:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},17:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.10.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2009080520090920 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},6:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},7:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},8:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},9:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},10:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},11:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},12:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},13:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},14:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},15:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},16:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},17:{'dataId':'SAR_landslide_gassan_2009.08.05-2009.09.20'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2009050520090805 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},6:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},7:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},8:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},9:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},10:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},11:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},12:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},13:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},14:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},15:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},16:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},17:{'dataId':'SAR_landslide_gassan_2009.05.05-2009.08.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2009061420090730 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},6:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},7:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},8:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},9:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},10:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},11:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},12:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},13:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},14:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},15:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},16:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},17:{'dataId':'SAR_landslide_gassan_2009.06.14-2009.07.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2009032020090505 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},6:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},7:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},8:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},9:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},10:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},11:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},12:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},13:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},14:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},15:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},16:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},17:{'dataId':'SAR_landslide_gassan_2009.03.20-2009.05.05'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2006060620081027 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},6:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},7:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},8:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},9:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},10:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},11:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},12:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},13:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},14:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},15:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},16:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},17:{'dataId':'SAR_landslide_gassan_2006.06.06-2008.10.27'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2006091220080917 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},6:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},7:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},8:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},9:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},10:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},11:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},12:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},13:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},14:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},15:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},16:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},17:{'dataId':'SAR_landslide_gassan_2006.09.12-2008.09.17'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_gassan_2006042720070430 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},6:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},7:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},8:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},9:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},10:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},11:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},12:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},13:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},14:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},15:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},16:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},17:{'dataId':'SAR_landslide_gassan_2006.04.27-2007.04.30'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_akakuzure_2008011820100910 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},6:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},7:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},8:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},9:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},10:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},11:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},12:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},13:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},14:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},15:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},16:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},17:{'dataId':'SAR_landslide_akakuzure_2008.01.18-2010.09.10'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_akakuzure_2007101820100425 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},6:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},7:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},8:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},9:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},10:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},11:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},12:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},13:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},14:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},15:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},16:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},17:{'dataId':'SAR_landslide_akakuzure_2007.10.18-2010.04.25'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_akakuzure_2009090820091024 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},6:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},7:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},8:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},9:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},10:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},11:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},12:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},13:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},14:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},15:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},16:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},17:{'dataId':'SAR_landslide_akakuzure_2009.09.08-2009.10.24'},18:{'dataId':'TRANSPARENT'}};
dataSetObj.dataSetOverlay_SAR_landslide_akakuzure_2008090520081021 ={0:{'dataId':'TRANSPARENT'},1:{'dataId':'TRANSPARENT'},2:{'dataId':'TRANSPARENT'},3:{'dataId':'TRANSPARENT'},4:{'dataId':'TRANSPARENT'},5:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},6:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},7:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},8:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},9:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},10:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},11:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},12:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},13:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},14:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},15:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},16:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},17:{'dataId':'SAR_landslide_akakuzure_2008.09.05-2008.10.21'},18:{'dataId':'TRANSPARENT'}};

//干渉SAR　地震
//dataSetObj.dataSetOverlay_eq20070621 = {
//	0: { "dataId" : "TRANSPARENT" },
//	1: { "dataId" : "TRANSPARENT" },
//	2: { "dataId" : "TRANSPARENT" },
//	3: { "dataId" : "TRANSPARENT" },
//	4: { "dataId" : "TRANSPARENT" },
//	5: { "dataId" : "eq20070621" },
//	6: { "dataId" : "eq20070621" },
//	7: { "dataId" : "eq20070621" },
//	8: { "dataId" : "eq20070621" },
//	9: { "dataId" : "eq20070621" },
//	10: { "dataId" : "eq20070621" },
//	11: { "dataId" : "eq20070621" },
//	12: { "dataId" : "eq20070621" },
//	13: { "dataId" : "eq20070621" },
//	14: { "dataId" : "eq20070621" },
//	15: { "dataId" : "eq20070621" },
//	16: { "dataId" : "eq20070621" },
//	17: { "dataId" : "eq20070621" },
//	18: { "dataId" : "eq20070621" }
//};
//
//dataSetObj.dataSetOverlay_eq20070806 = {
//	0: { "dataId" : "TRANSPARENT" },
//	1: { "dataId" : "TRANSPARENT" },
//	2: { "dataId" : "TRANSPARENT" },
//	3: { "dataId" : "TRANSPARENT" },
//	4: { "dataId" : "TRANSPARENT" },
//	5: { "dataId" : "eq20070806" },
//	6: { "dataId" : "eq20070806" },
//	7: { "dataId" : "eq20070806" },
//	8: { "dataId" : "eq20070806" },
//	9: { "dataId" : "eq20070806" },
//	10: { "dataId" : "eq20070806" },
//	11: { "dataId" : "eq20070806" },
//	12: { "dataId" : "eq20070806" },
//	13: { "dataId" : "eq20070806" },
//	14: { "dataId" : "eq20070806" },
//	15: { "dataId" : "eq20070806" },
//	16: { "dataId" : "eq20070806" },
//	17: { "dataId" : "eq20070806" },
//	18: { "dataId" : "eq20070806" }
//};
//
//dataSetObj.dataSetOverlay_eq20090603 = {
//	0: { "dataId" : "TRANSPARENT" },
//	1: { "dataId" : "TRANSPARENT" },
//	2: { "dataId" : "TRANSPARENT" },
//	3: { "dataId" : "TRANSPARENT" },
//	4: { "dataId" : "TRANSPARENT" },
//	5: { "dataId" : "eq20090603" },
//	6: { "dataId" : "eq20090603" },
//	7: { "dataId" : "eq20090603" },
//	8: { "dataId" : "eq20090603" },
//	9: { "dataId" : "eq20090603" },
//	10: { "dataId" : "eq20090603" },
//	11: { "dataId" : "eq20090603" },
//	12: { "dataId" : "eq20090603" },
//	13: { "dataId" : "eq20090603" },
//	14: { "dataId" : "eq20090603" },
//	15: { "dataId" : "eq20090603" },
//	16: { "dataId" : "eq20090603" },
//	17: { "dataId" : "eq20090603" },
//	18: { "dataId" : "eq20090603" }
//};
//
//dataSetObj.dataSetOverlay_eq20100514 = {
//	0: { "dataId" : "TRANSPARENT" },
//	1: { "dataId" : "TRANSPARENT" },
//	2: { "dataId" : "TRANSPARENT" },
//	3: { "dataId" : "TRANSPARENT" },
//	4: { "dataId" : "TRANSPARENT" },
//	5: { "dataId" : "eq20100514" },
//	6: { "dataId" : "eq20100514" },
//	7: { "dataId" : "eq20100514" },
//	8: { "dataId" : "eq20100514" },
//	9: { "dataId" : "eq20100514" },
//	10: { "dataId" : "eq20100514" },
//	11: { "dataId" : "eq20100514" },
//	12: { "dataId" : "eq20100514" },
//	13: { "dataId" : "eq20100514" },
//	14: { "dataId" : "eq20100514" },
//	15: { "dataId" : "eq20100514" },
//	16: { "dataId" : "eq20100514" },
//	17: { "dataId" : "eq20100514" },
//	18: { "dataId" : "eq20100514" }
//};

//////////////////////////////////////////////////////////////////////////////////////////////////////

dataSetObj.dataSetOverlay_IMI_2010_07_22_2010_10_22 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.10.22__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2010_06_29_2010_09_29 = {
		0: { "dataId" : "TRANSPARENT__png" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.29-2010.09.29__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};

dataSetObj.dataSetOverlay_IMI_2010_05_14_2010_09_29 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.09.29__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2010_07_22_2010_09_06 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.07.22-2010.09.06__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2010_06_06_2010_07_22 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.06.06-2010.07.22__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2010_05_14_2010_06_29 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2010.05.14-2010.06.29__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2008_06_23_2009_09_26 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.09.26__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2009_06_03_2009_09_03 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2009.06.03-2009.09.03__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2008_07_16_2009_09_03 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.07.16-2009.09.03__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2008_06_23_2009_06_26 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2008.06.23-2009.06.26__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2007_08_29_2008_07_16 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.29-2008.07.16__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};



dataSetObj.dataSetOverlay_IMI_2007_08_06_2008_06_23 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2008.06.23__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2007_08_06_2007_09_21 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.08.06-2007.09.21__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};


dataSetObj.dataSetOverlay_IMI_2007_06_21_2007_09_21 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		6: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		7: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		8: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		9: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		10: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		11: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		12: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		13: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		14: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		15: { "dataId" : "BUILD_IMI__http://cyberjapandata.gsi.go.jp/xyz/SAR/eathquake/20080614_iwate-miyagi/2007.06.21-2007.09.21__png" },
		16: { "dataId" : "TRANSPARENT" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};
//
// @source = librarySaigaiOverlay.js
//
// 2013年7月31日 山口地方須佐地区 正射画像
dataSetObj.dataSetOverlay_seisya1307yamaguchi = {
	0: { "dataId" : "20130717dol" },
	1: { "dataId" : "20130717dol" },
	2: { "dataId" : "20130717dol" },
	3: { "dataId" : "20130717dol" },
	4: { "dataId" : "20130717dol" },
	5: { "dataId" : "20130717dol" },
	6: { "dataId" : "20130717dol" },
	7: { "dataId" : "20130717dol" },
	8: { "dataId" : "20130717dol" },
	9: { "dataId" : "20130717dol" },
	10: { "dataId" : "20130717dol" },
	11: { "dataId" : "20130717dol" },
	12: { "dataId" : "20130717dol" },
	13: { "dataId" : "20130717dol" },
	14: { "dataId" : "20130717dol" },
	15: { "dataId" : "20130717dol" },
	16: { "dataId" : "20130717dol" },
	17: { "dataId" : "20130717dol" },
	18: { "dataId" : "20130717dol" }
};

// 2013年8月7日 山口地方須佐地区 正射画像
dataSetObj.dataSetOverlay_seisya1307yamaguchi2 = {
	0: { "dataId" : "20130717dol2" },
	1: { "dataId" : "20130717dol2" },
	2: { "dataId" : "20130717dol2" },
	3: { "dataId" : "20130717dol2" },
	4: { "dataId" : "20130717dol2" },
	5: { "dataId" : "20130717dol2" },
	6: { "dataId" : "20130717dol2" },
	7: { "dataId" : "20130717dol2" },
	8: { "dataId" : "20130717dol2" },
	9: { "dataId" : "20130717dol2" },
	10: { "dataId" : "20130717dol2" },
	11: { "dataId" : "20130717dol2" },
	12: { "dataId" : "20130717dol2" },
	13: { "dataId" : "20130717dol2" },
	14: { "dataId" : "20130717dol2" },
	15: { "dataId" : "20130717dol2" },
	16: { "dataId" : "20130717dol2" },
	17: { "dataId" : "20130717dol2" },
	18: { "dataId" : "20130717dol2" }
};

//9月2日の突風の80cm解像度オルソ
dataSetObj.dataSetOverlay_seisyaH1309saitama = {
	0: { "dataId" : "20130902dol" },
	1: { "dataId" : "20130902dol" },
	2: { "dataId" : "20130902dol" },
	3: { "dataId" : "20130902dol" },
	4: { "dataId" : "20130902dol" },
	5: { "dataId" : "20130902dol" },
	6: { "dataId" : "20130902dol" },
	7: { "dataId" : "20130902dol" },
	8: { "dataId" : "20130902dol" },
	9: { "dataId" : "20130902dol" },
	10: { "dataId" : "20130902dol" },
	11: { "dataId" : "20130902dol" },
	12: { "dataId" : "20130902dol" },
	13: { "dataId" : "20130902dol" },
	14: { "dataId" : "20130902dol" },
	15: { "dataId" : "20130902dol" },
	16: { "dataId" : "20130902dol" },
	17: { "dataId" : "20130902dol" },
	18: { "dataId" : "20130902dol" }
};


// 台風26号　伊豆大島(火山基本図)透過
dataSetObj.dataSetOverlay_izuoshima_kihon2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "vbm2_izuoshima_chocolate" },
	9: { "dataId" : "vbm2_izuoshima_chocolate" },
	10: { "dataId" : "vbm2_izuoshima_chocolate" },
	11: { "dataId" : "vbm2_izuoshima_chocolate" },
	12: { "dataId" : "vbm2_izuoshima_chocolate" },
	13: { "dataId" : "vbm2_izuoshima_chocolate" },
	14: { "dataId" : "vbm2_izuoshima_chocolate" },
	15: { "dataId" : "vbm2_izuoshima_chocolate" },
	16: { "dataId" : "vbm2_izuoshima_chocolate" },
	17: { "dataId" : "vbm2_izuoshima_chocolate" },
	18: { "dataId" : "vbm2_izuoshima_chocolate" }
};

// 台風26号　伊豆大島正射画像(H24.4)
dataSetObj.dataSetOverlay_laserortho1204 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "laserortho" },
	9: { "dataId" : "laserortho" },
	10: { "dataId" : "laserortho" },
	11: { "dataId" : "laserortho" },
	12: { "dataId" : "laserortho" },
	13: { "dataId" : "laserortho" },
	14: { "dataId" : "laserortho" },
	15: { "dataId" : "laserortho" },
	16: { "dataId" : "laserortho" },
	17: { "dataId" : "laserortho" },
	18: { "dataId" : "laserortho" }
};

// 台風26号　伊豆大島正射画像(10/17)
dataSetObj.dataSetOverlay_seisya1310typhoon26 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20131017dol" },
	11: { "dataId" : "20131017dol" },
	12: { "dataId" : "20131017dol" },
	13: { "dataId" : "20131017dol" },
	14: { "dataId" : "20131017dol" },
	15: { "dataId" : "20131017dol" },
	16: { "dataId" : "20131017dol" },
	17: { "dataId" : "20131017dol" },
	18: { "dataId" : "20131017dol" }
};

// 台風27号　伊豆大島正射画像(10/28)
dataSetObj.dataSetOverlay_seisya1310typhoon27 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20131017dol2" },
	11: { "dataId" : "20131017dol2" },
	12: { "dataId" : "20131017dol2" },
	13: { "dataId" : "20131017dol2" },
	14: { "dataId" : "20131017dol2" },
	15: { "dataId" : "20131017dol2" },
	16: { "dataId" : "20131017dol2" },
	17: { "dataId" : "20131017dol2" },
	18: { "dataId" : "20131017dol2" }
};

// 西之島　正射画像(H25/12/4)
dataSetObj.dataSetOverlay_seisya1311nishinoshima = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20131204doh" },
	11: { "dataId" : "20131204doh" },
	12: { "dataId" : "20131204doh" },
	13: { "dataId" : "20131204doh" },
	14: { "dataId" : "20131204doh" },
	15: { "dataId" : "20131204doh" },
	16: { "dataId" : "20131204doh" },
	17: { "dataId" : "20131204doh" },
	18: { "dataId" : "20131204doh" }
};

// 西之島　地形判読図(H25/12/4)
dataSetObj.dataSetOverlay_handoku1311nishinoshima = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20131204doh2" },
	11: { "dataId" : "20131204doh2" },
	12: { "dataId" : "20131204doh2" },
	13: { "dataId" : "20131204doh2" },
	14: { "dataId" : "20131204doh2" },
	15: { "dataId" : "20131204doh2" },
	16: { "dataId" : "20131204doh2" },
	17: { "dataId" : "20131204doh2" },
	18: { "dataId" : "20131204doh2" }
};

// 西之島　正射画像(H25/12/17)
dataSetObj.dataSetOverlay_seisya1311nishinoshima2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20131217doh" },
	11: { "dataId" : "20131217doh" },
	12: { "dataId" : "20131217doh" },
	13: { "dataId" : "20131217doh" },
	14: { "dataId" : "20131217doh" },
	15: { "dataId" : "20131217doh" },
	16: { "dataId" : "20131217doh" },
	17: { "dataId" : "20131217doh" },
	18: { "dataId" : "20131217doh" }
};

// 西之島　地形判読図(H25/12/17)
dataSetObj.dataSetOverlay_handoku1311nishinoshima2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "20131217doh2" },
	16: { "dataId" : "20131217doh2" },
	17: { "dataId" : "20131217doh2" },
	18: { "dataId" : "20131217doh2" }
};

// 西之島　衛星画像(H25/12/24)
dataSetObj.dataSetOverlay_lsi1311nishinoshima = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20131224lsi" },
	14: { "dataId" : "20131224lsi" },
	15: { "dataId" : "20131224lsi" },
	16: { "dataId" : "20131224lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 西之島　正射画像(H26/2/16)
dataSetObj.dataSetOverlay_seisya1311nishinoshima3 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140216doh" },
	11: { "dataId" : "20140216doh" },
	12: { "dataId" : "20140216doh" },
	13: { "dataId" : "20140216doh" },
	14: { "dataId" : "20140216doh" },
	15: { "dataId" : "20140216doh" },
	16: { "dataId" : "20140216doh" },
	17: { "dataId" : "20140216doh" },
	18: { "dataId" : "20140216doh" }
};

// 西之島　地形判読図(H26/2/16)
dataSetObj.dataSetOverlay_handoku1311nishinoshima3 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "20140216doh2" },
	16: { "dataId" : "20140216doh2" },
	17: { "dataId" : "20140216doh2" },
	18: { "dataId" : "20140216doh2" }
};

// 西之島　衛星画像(H26/2/26)
dataSetObj.dataSetOverlay_lsi1311nishinoshima2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20140226lsi" },
	14: { "dataId" : "20140226lsi" },
	15: { "dataId" : "20140226lsi" },
	16: { "dataId" : "20140226lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 西之島　衛星画像(H26/3/30)
dataSetObj.dataSetOverlay_lsi1311nishinoshima3 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20140330lsi" },
	14: { "dataId" : "20140330lsi" },
	15: { "dataId" : "20140330lsi" },
	16: { "dataId" : "20140330lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};



// 西之島　正射画像(H26/3/22)
dataSetObj.dataSetOverlay_seisya1311nishinoshima4 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140322dol" },
	11: { "dataId" : "20140322dol" },
	12: { "dataId" : "20140322dol" },
	13: { "dataId" : "20140322dol" },
	14: { "dataId" : "20140322dol" },
	15: { "dataId" : "20140322dol" },
	16: { "dataId" : "20140322dol" },
	17: { "dataId" : "20140322dol" },
	18: { "dataId" : "20140322dol" }
};

// 西之島　地形判読図(H26/3/22)
dataSetObj.dataSetOverlay_handoku1311nishinoshima4 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "TRANSPARENT" },
	15: { "dataId" : "20140322dol2" },
	16: { "dataId" : "20140322dol2" },
	17: { "dataId" : "20140322dol2" },
	18: { "dataId" : "20140322dol2" }
};


// 西之島　衛星画像(H26/5/17)
dataSetObj.dataSetOverlay_lsi1311nishinoshima4 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20140517lsi" },
	14: { "dataId" : "20140517lsi" },
	15: { "dataId" : "20140517lsi" },
	16: { "dataId" : "20140517lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 西之島　衛星画像(H25/9/3)
dataSetObj.dataSetOverlay_lsi1311nishinoshima5 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20130903lsi" },
	14: { "dataId" : "20130903lsi" },
	15: { "dataId" : "20130903lsi" },
	16: { "dataId" : "20130903lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

// 西之島　衛星画像(H26/6/2)
dataSetObj.dataSetOverlay_lsi1311nishinoshima6 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20140602lsi" },
	14: { "dataId" : "20140602lsi" },
	15: { "dataId" : "20140602lsi" },
	16: { "dataId" : "20140602lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//西之島　衛星画像(H26/7/4)
dataSetObj.dataSetOverlay_lsi1311nishinoshima7 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20140704lsi" },
	14: { "dataId" : "20140704lsi" },
	15: { "dataId" : "20140704lsi" },
	16: { "dataId" : "20140704lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//	台風第8号等による大雨 正射画像（7/11)
dataSetObj.DS_20140711dol = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "TRANSPARENT" },
		6: { "dataId" : "TRANSPARENT" },
		7: { "dataId" : "TRANSPARENT" },
		8: { "dataId" : "20140711dol" },
		9: { "dataId" : "20140711dol" },
		10: { "dataId" : "20140711dol" },
		11: { "dataId" : "20140711dol" },
		12: { "dataId" : "20140711dol" },
		13: { "dataId" : "20140711dol" },
		14: { "dataId" : "20140711dol" },
		15: { "dataId" : "20140711dol" },
		16: { "dataId" : "20140711dol" },
		17: { "dataId" : "20140711dol" },
		18: { "dataId" : "20140711dol" }
	};

//	+西之島付近噴火活動+正射画像2014.7.4(無人航空機(UAV)撮影)
dataSetObj.dataSetOverlay_20140704dol = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "20140704dol" },
	9: { "dataId" : "20140704dol" },
	10: { "dataId" : "20140704dol" },
	11: { "dataId" : "20140704dol" },
	12: { "dataId" : "20140704dol" },
	13: { "dataId" : "20140704dol" },
	14: { "dataId" : "20140704dol" },
	15: { "dataId" : "20140704dol" },
	16: { "dataId" : "20140704dol" },
	17: { "dataId" : "20140704dol" },
	18: { "dataId" : "20140704dol" }
};

//西之島　地形判読図(H26/3/22)
dataSetObj.DS_nishinoshima_20140704dol2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "TRANSPARENT" },
	14: { "dataId" : "20140704dol2" },
	15: { "dataId" : "20140704dol2" },
	16: { "dataId" : "20140704dol2" },
	17: { "dataId" : "20140704dol2" },
	18: { "dataId" : "20140704dol2" }
};

dataSetObj.dataSetOverlay_20140813dol = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140813dol" },
	11: { "dataId" : "20140813dol" },
	12: { "dataId" : "20140813dol" },
	13: { "dataId" : "20140813dol" },
	14: { "dataId" : "20140813dol" },
	15: { "dataId" : "20140813dol" },
	16: { "dataId" : "20140813dol" },
	17: { "dataId" : "20140813dol" },
	18: { "dataId" : "20140813dol" }
};

//【丹波市島地区】正射画像(8/19) 8月16日から続く大雨等（丹波市市島地区） 20140819doh ⇒　20140819dol
dataSetObj.dataSetOverlay_20140819dol = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140819dol" },
	11: { "dataId" : "20140819dol" },
	12: { "dataId" : "20140819dol" },
	13: { "dataId" : "20140819dol" },
	14: { "dataId" : "20140819dol" },
	15: { "dataId" : "20140819dol" },
	16: { "dataId" : "20140819dol" },
	17: { "dataId" : "20140819dol" },
	18: { "dataId" : "20140819dol" }
};

//【丹波市島地区】斜め写真による正射画像(8/20) 8月16日から続く大雨等（広島市内 斜め写真による正射画像(8/20)） 20140819dol ⇒　20140820dol
dataSetObj.dataSetOverlay_20140820dol = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140820dol" },
	11: { "dataId" : "20140820dol" },
	12: { "dataId" : "20140820dol" },
	13: { "dataId" : "20140820dol" },
	14: { "dataId" : "20140820dol" },
	15: { "dataId" : "20140820dol" },
	16: { "dataId" : "20140820dol" },
	17: { "dataId" : "20140820dol" },
	18: { "dataId" : "20140820dol" }
};

dataSetObj.dataSetOverlay_20140820dol2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140820dol2" },
	11: { "dataId" : "20140820dol2" },
	12: { "dataId" : "20140820dol2" },
	13: { "dataId" : "20140820dol2" },
	14: { "dataId" : "20140820dol2" },
	15: { "dataId" : "20140820dol2" },
	16: { "dataId" : "20140820dol2" },
	17: { "dataId" : "20140820dol2" },
	18: { "dataId" : "20140820dol2" }
};

dataSetObj.dataSetOverlay_20140820dol3 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140820dol3" },
	11: { "dataId" : "20140820dol3" },
	12: { "dataId" : "20140820dol3" },
	13: { "dataId" : "20140820dol3" },
	14: { "dataId" : "20140820dol3" },
	15: { "dataId" : "20140820dol3" },
	16: { "dataId" : "20140820dol3" },
	17: { "dataId" : "20140820dol3" },
	18: { "dataId" : "20140820dol3" }
};

//西之島　衛星画像(H26/7/4)
dataSetObj.dataSetOverlay_20140821lsi = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20140821lsi" },
	14: { "dataId" : "20140821lsi" },
	15: { "dataId" : "20140821lsi" },
	16: { "dataId" : "20140821lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//8月16日からの大雨	広島市内	過去の正射画像(1947～1948年)
dataSetObj.dataSetOverlay_19480000dol = {
0: { "dataId" : "TRANSPARENT" },
1: { "dataId" : "TRANSPARENT" },
2: { "dataId" : "TRANSPARENT" },
3: { "dataId" : "TRANSPARENT" },
4: { "dataId" : "TRANSPARENT" },
5: { "dataId" : "TRANSPARENT" },
6: { "dataId" : "TRANSPARENT" },
7: { "dataId" : "TRANSPARENT" },
8: { "dataId" : "TRANSPARENT" },
9: { "dataId" : "TRANSPARENT" },
10: { "dataId" : "19480000dol" },
11: { "dataId" : "19480000dol" },
12: { "dataId" : "19480000dol" },
13: { "dataId" : "19480000dol" },
14: { "dataId" : "19480000dol" },
15: { "dataId" : "19480000dol" },
16: { "dataId" : "19480000dol" },
17: { "dataId" : "19480000dol" },
18: { "dataId" : "19480000dol" }
};

//8月16日からの大雨	広島市内	過去の正射画像(1947～1948年)
dataSetObj.dataSetOverlay_19620000dol = {
0: { "dataId" : "TRANSPARENT" },
1: { "dataId" : "TRANSPARENT" },
2: { "dataId" : "TRANSPARENT" },
3: { "dataId" : "TRANSPARENT" },
4: { "dataId" : "TRANSPARENT" },
5: { "dataId" : "TRANSPARENT" },
6: { "dataId" : "TRANSPARENT" },
7: { "dataId" : "TRANSPARENT" },
8: { "dataId" : "TRANSPARENT" },
9: { "dataId" : "TRANSPARENT" },
10: { "dataId" : "19620000dol" },
11: { "dataId" : "19620000dol" },
12: { "dataId" : "19620000dol" },
13: { "dataId" : "19620000dol" },
14: { "dataId" : "19620000dol" },
15: { "dataId" : "19620000dol" },
16: { "dataId" : "19620000dol" },
17: { "dataId" : "19620000dol" },
18: { "dataId" : "19620000dol" }
};

//8月16日からの大雨	広島市内	正射画像(20140828)
dataSetObj.dataSetOverlay_20140828dol = {
0: { "dataId" : "TRANSPARENT" },
1: { "dataId" : "TRANSPARENT" },
2: { "dataId" : "TRANSPARENT" },
3: { "dataId" : "TRANSPARENT" },
4: { "dataId" : "TRANSPARENT" },
5: { "dataId" : "TRANSPARENT" },
6: { "dataId" : "TRANSPARENT" },
7: { "dataId" : "TRANSPARENT" },
8: { "dataId" : "TRANSPARENT" },
9: { "dataId" : "TRANSPARENT" },
10: { "dataId" : "20140828dol" },
11: { "dataId" : "20140828dol" },
12: { "dataId" : "20140828dol" },
13: { "dataId" : "20140828dol" },
14: { "dataId" : "20140828dol" },
15: { "dataId" : "20140828dol" },
16: { "dataId" : "20140828dol" },
17: { "dataId" : "20140828dol" },
18: { "dataId" : "20140828dol" }
};

//8月16日からの大雨	広島市内	正射画像(20140830)
dataSetObj.dataSetOverlay_20140830dol = {
0: { "dataId" : "TRANSPARENT" },
1: { "dataId" : "TRANSPARENT" },
2: { "dataId" : "TRANSPARENT" },
3: { "dataId" : "TRANSPARENT" },
4: { "dataId" : "TRANSPARENT" },
5: { "dataId" : "TRANSPARENT" },
6: { "dataId" : "TRANSPARENT" },
7: { "dataId" : "TRANSPARENT" },
8: { "dataId" : "TRANSPARENT" },
9: { "dataId" : "TRANSPARENT" },
10: { "dataId" : "20140830dol" },
11: { "dataId" : "20140830dol" },
12: { "dataId" : "20140830dol" },
13: { "dataId" : "20140830dol" },
14: { "dataId" : "20140830dol" },
15: { "dataId" : "20140830dol" },
16: { "dataId" : "20140830dol" },
17: { "dataId" : "20140830dol" },
18: { "dataId" : "20140830dol" }
};

//8月16日からの大雨	広島市内	正射画像(20140830・31)
dataSetObj.dataSetOverlay_20140831dol = {
0: { "dataId" : "TRANSPARENT" },
1: { "dataId" : "TRANSPARENT" },
2: { "dataId" : "TRANSPARENT" },
3: { "dataId" : "TRANSPARENT" },
4: { "dataId" : "TRANSPARENT" },
5: { "dataId" : "TRANSPARENT" },
6: { "dataId" : "TRANSPARENT" },
7: { "dataId" : "TRANSPARENT" },
8: { "dataId" : "TRANSPARENT" },
9: { "dataId" : "TRANSPARENT" },
10: { "dataId" : "20140831dol" },
11: { "dataId" : "20140831dol" },
12: { "dataId" : "20140831dol" },
13: { "dataId" : "20140831dol" },
14: { "dataId" : "20140831dol" },
15: { "dataId" : "20140831dol" },
16: { "dataId" : "20140831dol" },
17: { "dataId" : "20140831dol" },
18: { "dataId" : "20140831dol" }
};

//西之島　衛星画像(H26/9/6)
dataSetObj.dataSetOverlay_20140906lsi = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20140906lsi" },
	14: { "dataId" : "20140906lsi" },
	15: { "dataId" : "20140906lsi" },
	16: { "dataId" : "20140906lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};

//御嶽山噴火活動　正射画像(H26/9/28)
dataSetObj.dataSetOverlay_20140928dol = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140928dol" },
	11: { "dataId" : "20140928dol" },
	12: { "dataId" : "20140928dol" },
	13: { "dataId" : "20140928dol" },
	14: { "dataId" : "20140928dol" },
	15: { "dataId" : "20140928dol" },
	16: { "dataId" : "20140928dol" },
	17: { "dataId" : "20140928dol" },
	18: { "dataId" : "20140928dol" }
};

//御嶽山噴火活動　火山基本図(透過)
dataSetObj.dataSetOverlay_vbmtouka1409ontake = {
	0: { "dataId" : "20140927d_vlcd_t_ontake" },
	1: { "dataId" : "20140927d_vlcd_t_ontake" },
	2: { "dataId" : "20140927d_vlcd_t_ontake" },
	3: { "dataId" : "20140927d_vlcd_t_ontake" },
	4: { "dataId" : "20140927d_vlcd_t_ontake" },
	5: { "dataId" : "20140927d_vlcd_t_ontake" },
	6: { "dataId" : "20140927d_vlcd_t_ontake" },
	7: { "dataId" : "20140927d_vlcd_t_ontake" },
	8: { "dataId" : "20140927d_vlcd_t_ontake" },
	9: { "dataId" : "20140927d_vlcd_t_ontake" },
	10: { "dataId" : "20140927d_vlcd_t_ontake" },
	11: { "dataId" : "20140927d_vlcd_t_ontake" },
	12: { "dataId" : "20140927d_vlcd_t_ontake" },
	13: { "dataId" : "20140927d_vlcd_t_ontake" },
	14: { "dataId" : "20140927d_vlcd_t_ontake" },
	15: { "dataId" : "20140927d_vlcd_t_ontake" },
	16: { "dataId" : "20140927d_vlcd_t_ontake" },
	17: { "dataId" : "20140927d_vlcd_t_ontake" },
	18: { "dataId" : "20140927d_vlcd_t_ontake" }
};

//御嶽山噴火活動　正射画像(H26/9/29)
dataSetObj.dataSetOverlay_20140929dol = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140929dol" },
	11: { "dataId" : "20140929dol" },
	12: { "dataId" : "20140929dol" },
	13: { "dataId" : "20140929dol" },
	14: { "dataId" : "20140929dol" },
	15: { "dataId" : "20140929dol" },
	16: { "dataId" : "20140929dol" },
	17: { "dataId" : "20140929dol" },
	18: { "dataId" : "20140929dol" }
};


//御嶽山噴火活動　SAR画像(H26/9/29)
dataSetObj.dataSetOverlay_20140929dol2 = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140929dol2" },
	11: { "dataId" : "20140929dol2" },
	12: { "dataId" : "20140929dol2" },
	13: { "dataId" : "20140929dol2" },
	14: { "dataId" : "20140929dol2" },
	15: { "dataId" : "20140929dol2" },
	16: { "dataId" : "20140929dol2" },
	17: { "dataId" : "20140929dol2" },
	18: { "dataId" : "20140929dol2" }
};

//御嶽山噴火活動　SAR画像(H26/9/30)
dataSetObj.dataSetOverlay_20140930dol = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "20140930dol" },
	11: { "dataId" : "20140930dol" },
	12: { "dataId" : "20140930dol" },
	13: { "dataId" : "20140930dol" },
	14: { "dataId" : "20140930dol" },
	15: { "dataId" : "20140930dol" },
	16: { "dataId" : "20140930dol" },
	17: { "dataId" : "20140930dol" },
	18: { "dataId" : "20140930dol" }
};

//御嶽山噴火活動　干渉SAR画像(8/18-9/29)
dataSetObj.dataSetOverlay_201408180929sar1409ontake = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "20140818-0929d_sar_ontake" },
	6: { "dataId" : "20140818-0929d_sar_ontake" },
	7: { "dataId" : "20140818-0929d_sar_ontake" },
	8: { "dataId" : "20140818-0929d_sar_ontake" },
	9: { "dataId" : "20140818-0929d_sar_ontake" },
	10: { "dataId" : "20140818-0929d_sar_ontake" },
	11: { "dataId" : "20140818-0929d_sar_ontake" },
	12: { "dataId" : "20140818-0929d_sar_ontake" },
	13: { "dataId" : "20140818-0929d_sar_ontake" },
	14: { "dataId" : "20140818-0929d_sar_ontake" },
	15: { "dataId" : "20140818-0929d_sar_ontake" },
	16: { "dataId" : "20140818-0929d_sar_ontake" },
	17: { "dataId" : "20140818-0929d_sar_ontake" },
	18: { "dataId" : "20140818-0929d_sar_ontake" }
};

//御嶽山噴火活動　衛星SAR画像強度（8/18）
dataSetObj.dataSetOverlay_20140818d_mag_ontake = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "20140818d_mag_ontake" },
	6: { "dataId" : "20140818d_mag_ontake" },
	7: { "dataId" : "20140818d_mag_ontake" },
	8: { "dataId" : "20140818d_mag_ontake" },
	9: { "dataId" : "20140818d_mag_ontake" },
	10: { "dataId" : "20140818d_mag_ontake" },
	11: { "dataId" : "20140818d_mag_ontake" },
	12: { "dataId" : "20140818d_mag_ontake" },
	13: { "dataId" : "20140818d_mag_ontake" },
	14: { "dataId" : "20140818d_mag_ontake" },
	15: { "dataId" : "20140818d_mag_ontake" },
	16: { "dataId" : "20140818d_mag_ontake" },
	17: { "dataId" : "20140818d_mag_ontake" },
	18: { "dataId" : "20140818d_mag_ontake" }
};

//御嶽山噴火活動　衛星SAR画像強度（9/29）
dataSetObj.dataSetOverlay_20140929d_mag_ontake = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "20140929d_mag_ontake" },
	6: { "dataId" : "20140929d_mag_ontake" },
	7: { "dataId" : "20140929d_mag_ontake" },
	8: { "dataId" : "20140929d_mag_ontake" },
	9: { "dataId" : "20140929d_mag_ontake" },
	10: { "dataId" : "20140929d_mag_ontake" },
	11: { "dataId" : "20140929d_mag_ontake" },
	12: { "dataId" : "20140929d_mag_ontake" },
	13: { "dataId" : "20140929d_mag_ontake" },
	14: { "dataId" : "20140929d_mag_ontake" },
	15: { "dataId" : "20140929d_mag_ontake" },
	16: { "dataId" : "20140929d_mag_ontake" },
	17: { "dataId" : "20140929d_mag_ontake" },
	18: { "dataId" : "20140929d_mag_ontake" }
};

//御嶽山噴火活動　干渉SAR画像(8/22-10/3)
dataSetObj.dataSetOverlay_201408221003sar1409ontake = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "20140822_1003d_sar_ontake" },
	6: { "dataId" : "20140822_1003d_sar_ontake" },
	7: { "dataId" : "20140822_1003d_sar_ontake" },
	8: { "dataId" : "20140822_1003d_sar_ontake" },
	9: { "dataId" : "20140822_1003d_sar_ontake" },
	10: { "dataId" : "20140822_1003d_sar_ontake" },
	11: { "dataId" : "20140822_1003d_sar_ontake" },
	12: { "dataId" : "20140822_1003d_sar_ontake" },
	13: { "dataId" : "20140822_1003d_sar_ontake" },
	14: { "dataId" : "20140822_1003d_sar_ontake" },
	15: { "dataId" : "20140822_1003d_sar_ontake" },
	16: { "dataId" : "20140822_1003d_sar_ontake" },
	17: { "dataId" : "20140822_1003d_sar_ontake" },
	18: { "dataId" : "20140822_1003d_sar_ontake" }
};

//西之島　衛星画像(H26/10/8)
dataSetObj.dataSetOverlay_20141008lsi = {
	0: { "dataId" : "TRANSPARENT" },
	1: { "dataId" : "TRANSPARENT" },
	2: { "dataId" : "TRANSPARENT" },
	3: { "dataId" : "TRANSPARENT" },
	4: { "dataId" : "TRANSPARENT" },
	5: { "dataId" : "TRANSPARENT" },
	6: { "dataId" : "TRANSPARENT" },
	7: { "dataId" : "TRANSPARENT" },
	8: { "dataId" : "TRANSPARENT" },
	9: { "dataId" : "TRANSPARENT" },
	10: { "dataId" : "TRANSPARENT" },
	11: { "dataId" : "TRANSPARENT" },
	12: { "dataId" : "TRANSPARENT" },
	13: { "dataId" : "20141008lsi" },
	14: { "dataId" : "20141008lsi" },
	15: { "dataId" : "20141008lsi" },
	16: { "dataId" : "20141008lsi" },
	17: { "dataId" : "TRANSPARENT" },
	18: { "dataId" : "TRANSPARENT" }
};




//西之島付近噴火活動_衛星画像 2014_10_24
dataSetObj.dataSetOverlay_NISHINOSHIMA_2014_10_24 = {
		0: { "dataId" : "TRANSPARENT" },
		1: { "dataId" : "TRANSPARENT" },
		2: { "dataId" : "TRANSPARENT" },
		3: { "dataId" : "TRANSPARENT" },
		4: { "dataId" : "TRANSPARENT" },
		5: { "dataId" : "TRANSPARENT" },
		6: { "dataId" : "TRANSPARENT" },
		7: { "dataId" : "TRANSPARENT" },
		8: { "dataId" : "TRANSPARENT" },
		9: { "dataId" : "TRANSPARENT" },
		10: { "dataId" : "TRANSPARENT" },
		11: { "dataId" : "TRANSPARENT" },
		12: { "dataId" : "TRANSPARENT" },
		13: { "dataId" : "BUILD_NISHINOSHIMA_2014_10_24__http://cyberjapandata.gsi.go.jp/xyz/20141024lsi__png" },
		14: { "dataId" : "BUILD_NISHINOSHIMA_2014_10_24__http://cyberjapandata.gsi.go.jp/xyz/20141024lsi__png" },
		15: { "dataId" : "BUILD_NISHINOSHIMA_2014_10_24__http://cyberjapandata.gsi.go.jp/xyz/20141024lsi__png" },
		16: { "dataId" : "BUILD_NISHINOSHIMA_2014_10_24__http://cyberjapandata.gsi.go.jp/xyz/20141024lsi__png" },
		17: { "dataId" : "TRANSPARENT" },
		18: { "dataId" : "TRANSPARENT" }
		};
